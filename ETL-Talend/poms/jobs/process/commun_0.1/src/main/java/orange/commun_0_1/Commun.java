// ============================================================================
//
// Copyright (c) 2006-2015, Talend SA
//
// Ce code source a été automatiquement généré par_Talend Open Studio for Data Integration
// / Soumis à la Licence Apache, Version 2.0 (la "Licence") ;
// votre utilisation de ce fichier doit respecter les termes de la Licence.
// Vous pouvez obtenir une copie de la Licence sur
// http://www.apache.org/licenses/LICENSE-2.0
// 
// Sauf lorsqu'explicitement prévu par la loi en vigueur ou accepté par écrit, le logiciel
// distribué sous la Licence est distribué "TEL QUEL",
// SANS GARANTIE OU CONDITION D'AUCUNE SORTE, expresse ou implicite.
// Consultez la Licence pour connaître la terminologie spécifique régissant les autorisations et
// les limites prévues par la Licence.

package orange.commun_0_1;

import routines.Numeric;
import routines.DataOperation;
import routines.TalendDataGenerator;
import routines.TalendStringUtil;
import routines.TalendString;
import routines.StringHandling;
import routines.Relational;
import routines.TalendDate;
import routines.Mathematical;
import routines.system.*;
import routines.system.api.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.math.BigDecimal;
import java.io.ByteArrayOutputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.ObjectOutputStream;
import java.io.ObjectInputStream;
import java.io.IOException;
import java.util.Comparator;

@SuppressWarnings("unused")

/**
 * Job: Commun Purpose: <br>
 * Description: <br>
 * 
 * @author user@talend.com
 * @version 8.0.1.20211109_1610
 * @status
 */
public class Commun implements TalendJob {

	protected static void logIgnoredError(String message, Throwable cause) {
		System.err.println(message);
		if (cause != null) {
			cause.printStackTrace();
		}

	}

	public final Object obj = new Object();

	// for transmiting parameters purpose
	private Object valueObject = null;

	public Object getValueObject() {
		return this.valueObject;
	}

	public void setValueObject(Object valueObject) {
		this.valueObject = valueObject;
	}

	private final static String defaultCharset = java.nio.charset.Charset.defaultCharset().name();

	private final static String utf8Charset = "UTF-8";

	// contains type for every context property
	public class PropertiesWithType extends java.util.Properties {
		private static final long serialVersionUID = 1L;
		private java.util.Map<String, String> propertyTypes = new java.util.HashMap<>();

		public PropertiesWithType(java.util.Properties properties) {
			super(properties);
		}

		public PropertiesWithType() {
			super();
		}

		public void setContextType(String key, String type) {
			propertyTypes.put(key, type);
		}

		public String getContextType(String key) {
			return propertyTypes.get(key);
		}
	}

	// create and load default properties
	private java.util.Properties defaultProps = new java.util.Properties();

	// create application properties with default
	public class ContextProperties extends PropertiesWithType {

		private static final long serialVersionUID = 1L;

		public ContextProperties(java.util.Properties properties) {
			super(properties);
		}

		public ContextProperties() {
			super();
		}

		public void synchronizeContext() {

		}

		// if the stored or passed value is "<TALEND_NULL>" string, it mean null
		public String getStringValue(String key) {
			String origin_value = this.getProperty(key);
			if (NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY.equals(origin_value)) {
				return null;
			}
			return origin_value;
		}

	}

	protected ContextProperties context = new ContextProperties(); // will be instanciated by MS.

	public ContextProperties getContext() {
		return this.context;
	}

	private final String jobVersion = "0.1";
	private final String jobName = "Commun";
	private final String projectName = "ORANGE";
	public Integer errorCode = null;
	private String currentComponent = "";

	private final java.util.Map<String, Object> globalMap = new java.util.HashMap<String, Object>();
	private final static java.util.Map<String, Object> junitGlobalMap = new java.util.HashMap<String, Object>();

	private final java.util.Map<String, Long> start_Hash = new java.util.HashMap<String, Long>();
	private final java.util.Map<String, Long> end_Hash = new java.util.HashMap<String, Long>();
	private final java.util.Map<String, Boolean> ok_Hash = new java.util.HashMap<String, Boolean>();
	public final java.util.List<String[]> globalBuffer = new java.util.ArrayList<String[]>();

	private RunStat runStat = new RunStat();

	// OSGi DataSource
	private final static String KEY_DB_DATASOURCES = "KEY_DB_DATASOURCES";

	private final static String KEY_DB_DATASOURCES_RAW = "KEY_DB_DATASOURCES_RAW";

	public void setDataSources(java.util.Map<String, javax.sql.DataSource> dataSources) {
		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		for (java.util.Map.Entry<String, javax.sql.DataSource> dataSourceEntry : dataSources.entrySet()) {
			talendDataSources.put(dataSourceEntry.getKey(),
					new routines.system.TalendDataSource(dataSourceEntry.getValue()));
		}
		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}

	public void setDataSourceReferences(List serviceReferences) throws Exception {

		java.util.Map<String, routines.system.TalendDataSource> talendDataSources = new java.util.HashMap<String, routines.system.TalendDataSource>();
		java.util.Map<String, javax.sql.DataSource> dataSources = new java.util.HashMap<String, javax.sql.DataSource>();

		for (java.util.Map.Entry<String, javax.sql.DataSource> entry : BundleUtils
				.getServices(serviceReferences, javax.sql.DataSource.class).entrySet()) {
			dataSources.put(entry.getKey(), entry.getValue());
			talendDataSources.put(entry.getKey(), new routines.system.TalendDataSource(entry.getValue()));
		}

		globalMap.put(KEY_DB_DATASOURCES, talendDataSources);
		globalMap.put(KEY_DB_DATASOURCES_RAW, new java.util.HashMap<String, javax.sql.DataSource>(dataSources));
	}

	private final java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();
	private final java.io.PrintStream errorMessagePS = new java.io.PrintStream(new java.io.BufferedOutputStream(baos));

	public String getExceptionStackTrace() {
		if ("failure".equals(this.getStatus())) {
			errorMessagePS.flush();
			return baos.toString();
		}
		return null;
	}

	private Exception exception;

	public Exception getException() {
		if ("failure".equals(this.getStatus())) {
			return this.exception;
		}
		return null;
	}

	private class TalendException extends Exception {

		private static final long serialVersionUID = 1L;

		private java.util.Map<String, Object> globalMap = null;
		private Exception e = null;
		private String currentComponent = null;
		private String virtualComponentName = null;

		public void setVirtualComponentName(String virtualComponentName) {
			this.virtualComponentName = virtualComponentName;
		}

		private TalendException(Exception e, String errorComponent, final java.util.Map<String, Object> globalMap) {
			this.currentComponent = errorComponent;
			this.globalMap = globalMap;
			this.e = e;
		}

		public Exception getException() {
			return this.e;
		}

		public String getCurrentComponent() {
			return this.currentComponent;
		}

		public String getExceptionCauseMessage(Exception e) {
			Throwable cause = e;
			String message = null;
			int i = 10;
			while (null != cause && 0 < i--) {
				message = cause.getMessage();
				if (null == message) {
					cause = cause.getCause();
				} else {
					break;
				}
			}
			if (null == message) {
				message = e.getClass().getName();
			}
			return message;
		}

		@Override
		public void printStackTrace() {
			if (!(e instanceof TalendException || e instanceof TDieException)) {
				if (virtualComponentName != null && currentComponent.indexOf(virtualComponentName + "_") == 0) {
					globalMap.put(virtualComponentName + "_ERROR_MESSAGE", getExceptionCauseMessage(e));
				}
				globalMap.put(currentComponent + "_ERROR_MESSAGE", getExceptionCauseMessage(e));
				System.err.println("Exception in component " + currentComponent + " (" + jobName + ")");
			}
			if (!(e instanceof TDieException)) {
				if (e instanceof TalendException) {
					e.printStackTrace();
				} else {
					e.printStackTrace();
					e.printStackTrace(errorMessagePS);
					Commun.this.exception = e;
				}
			}
			if (!(e instanceof TalendException)) {
				try {
					for (java.lang.reflect.Method m : this.getClass().getEnclosingClass().getMethods()) {
						if (m.getName().compareTo(currentComponent + "_error") == 0) {
							m.invoke(Commun.this, new Object[] { e, currentComponent, globalMap });
							break;
						}
					}

					if (!(e instanceof TDieException)) {
					}
				} catch (Exception e) {
					this.e.printStackTrace();
				}
			}
		}
	}

	public void tDBInput_1_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_1_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tUniqRow_2_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBOutput_1_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBInput_2_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_14_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_7_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_14_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tUniqRow_6_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_14_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBOutput_3_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_14_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBInput_3_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_17_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_8_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_17_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tUniqRow_5_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_17_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBOutput_8_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_17_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBInput_4_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_25_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_9_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_25_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tUniqRow_9_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_25_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBOutput_2_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_25_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBInput_5_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_21_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_10_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_21_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tUniqRow_7_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_21_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBOutput_4_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_21_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBInput_6_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_6_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_16_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_6_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBOutput_6_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_6_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBInput_7_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_15_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_39_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_15_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tUniqRow_3_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_15_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBOutput_9_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_15_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBInput_8_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_23_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_40_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_23_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tUniqRow_8_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_23_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBOutput_5_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_23_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBInput_9_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_20_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_41_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_20_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tUniqRow_10_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_20_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBOutput_10_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_20_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBInput_10_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_36_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_42_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_36_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tUniqRow_11_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_36_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBOutput_12_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_36_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBInput_12_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_8_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_44_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_8_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tUniqRow_4_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_8_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBOutput_11_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_8_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBInput_13_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_9_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_46_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_9_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tUniqRow_12_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_9_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBOutput_13_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_9_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBInput_14_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_9_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_47_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_9_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tUniqRow_13_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_9_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBOutput_14_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_9_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBInput_15_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_9_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_48_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_9_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tUniqRow_14_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_9_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBOutput_15_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_9_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBInput_16_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_9_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_49_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_9_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tUniqRow_15_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_9_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBOutput_16_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_9_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBInput_17_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_9_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_50_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_9_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tUniqRow_16_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_9_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBOutput_17_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_9_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBInput_18_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_10_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_52_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_10_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tUniqRow_17_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_10_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBOutput_18_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_10_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBInput_19_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_12_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_54_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_12_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tUniqRow_18_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_12_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBOutput_19_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_12_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBInput_20_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_13_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_56_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_13_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tUniqRow_19_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_13_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tDBOutput_20_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_13_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_1_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_2_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tUnite_1_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_2_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_4_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_3_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_3_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_4_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_5_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_5_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_6_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_6_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_6_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_12_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_6_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tUnite_2_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_6_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_7_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_6_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_15_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_6_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_8_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_8_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_38_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_8_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_9_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_9_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_45_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_9_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_10_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_10_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_51_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_10_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_11_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_11_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_12_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_12_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_53_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_12_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_13_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_13_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_55_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_13_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_14_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_14_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_19_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_14_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tUnite_6_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_14_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_15_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_15_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_13_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_15_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tUnite_3_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_15_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_16_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_15_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_14_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_15_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_17_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_17_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_17_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_17_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tUnite_5_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_17_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_18_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_17_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_18_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_17_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_19_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_14_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_20_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_14_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_20_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_20_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_33_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_20_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tUnite_11_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_20_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_21_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_21_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_21_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_21_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tUnite_7_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_21_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_22_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_21_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_22_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_21_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_23_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_23_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_23_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_23_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tUnite_8_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_23_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_24_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_23_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_24_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_23_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_25_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_25_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_25_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_25_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tUnite_9_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_25_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_26_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_14_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_26_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_14_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_27_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_14_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_27_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_14_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_28_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_14_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_28_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_14_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_29_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_25_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_29_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_25_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_30_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_25_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_30_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_25_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_31_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_25_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_31_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_25_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_32_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_25_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_32_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_25_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_33_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_36_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_37_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_36_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tUnite_10_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_36_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_34_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_20_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_34_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_20_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_35_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_17_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_35_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_17_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_36_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_36_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tMap_36_error(Exception exception, String errorComponent, final java.util.Map<String, Object> globalMap)
			throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_36_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tAdvancedHash_row8_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_1_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tAdvancedHash_row10_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_14_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tAdvancedHash_row12_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_17_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tAdvancedHash_row50_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_25_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tAdvancedHash_row47_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_21_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tAdvancedHash_row38_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_6_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tAdvancedHash_row40_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_15_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tAdvancedHash_row34_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_23_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tAdvancedHash_row14_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_20_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tAdvancedHash_row56_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_36_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tAdvancedHash_row60_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_8_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tAdvancedHash_row63_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_9_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tAdvancedHash_row65_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_9_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tAdvancedHash_row67_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_9_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tAdvancedHash_row69_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_9_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tAdvancedHash_row72_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_9_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tAdvancedHash_row74_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_10_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tAdvancedHash_row77_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_12_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tAdvancedHash_row80_error(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		end_Hash.put(errorComponent, System.currentTimeMillis());

		status = "failure";

		tFileInputExcel_13_onSubJobError(exception, errorComponent, globalMap);
	}

	public void tFileInputExcel_1_onSubJobError(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public void tFileInputExcel_6_onSubJobError(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public void tFileInputExcel_8_onSubJobError(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public void tFileInputExcel_9_onSubJobError(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public void tFileInputExcel_10_onSubJobError(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public void tFileInputExcel_12_onSubJobError(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public void tFileInputExcel_13_onSubJobError(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public void tFileInputExcel_14_onSubJobError(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public void tFileInputExcel_15_onSubJobError(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public void tFileInputExcel_17_onSubJobError(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public void tFileInputExcel_20_onSubJobError(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public void tFileInputExcel_21_onSubJobError(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public void tFileInputExcel_23_onSubJobError(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public void tFileInputExcel_25_onSubJobError(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public void tFileInputExcel_36_onSubJobError(Exception exception, String errorComponent,
			final java.util.Map<String, Object> globalMap) throws TalendException {

		resumeUtil.addLog("SYSTEM_LOG", "NODE:" + errorComponent, "", Thread.currentThread().getId() + "", "FATAL", "",
				exception.getMessage(), ResumeUtil.getExceptionStackTrace(exception), "");

	}

	public static class row8Struct implements routines.system.IPersistableComparableLookupRow<row8Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];
		protected static final int DEFAULT_HASHCODE = 1;
		protected static final int PRIME = 31;
		protected int hashCode = DEFAULT_HASHCODE;
		public boolean hashCodeDirty = true;

		public String loopKey;

		public int membre_equipe_id;

		public int getMembre_equipe_id() {
			return this.membre_equipe_id;
		}

		public String Account_Manager__Client_Prospect;

		public String getAccount_Manager__Client_Prospect() {
			return this.Account_Manager__Client_Prospect;
		}

		@Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;

				result = prime * result + ((this.Account_Manager__Client_Prospect == null) ? 0
						: this.Account_Manager__Client_Prospect.hashCode());

				this.hashCode = result;
				this.hashCodeDirty = false;
			}
			return this.hashCode;
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			final row8Struct other = (row8Struct) obj;

			if (this.Account_Manager__Client_Prospect == null) {
				if (other.Account_Manager__Client_Prospect != null)
					return false;

			} else if (!this.Account_Manager__Client_Prospect.equals(other.Account_Manager__Client_Prospect))

				return false;

			return true;
		}

		public void copyDataTo(row8Struct other) {

			other.membre_equipe_id = this.membre_equipe_id;
			other.Account_Manager__Client_Prospect = this.Account_Manager__Client_Prospect;

		}

		public void copyKeysDataTo(row8Struct other) {

			other.Account_Manager__Client_Prospect = this.Account_Manager__Client_Prospect;

		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readKeysData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Account_Manager__Client_Prospect = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Account_Manager__Client_Prospect = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeKeysData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		/**
		 * Fill Values data by reading ObjectInputStream.
		 */
		public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
			try {

				int length = 0;

				this.membre_equipe_id = dis.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
			try {
				int length = 0;

				this.membre_equipe_id = objectIn.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		/**
		 * Return a byte array which represents Values data.
		 */
		public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
			try {

				dos.writeInt(this.membre_equipe_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut) {
			try {

				objectOut.writeInt(this.membre_equipe_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}
		}

		public boolean supportMarshaller() {
			return true;
		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("membre_equipe_id=" + String.valueOf(membre_equipe_id));
			sb.append(",Account_Manager__Client_Prospect=" + Account_Manager__Client_Prospect);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row8Struct other) {

			int returnValue = -1;

			returnValue = checkNullsAndCompare(this.Account_Manager__Client_Prospect,
					other.Account_Manager__Client_Prospect);
			if (returnValue != 0) {
				return returnValue;
			}

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tDBInput_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tDBInput_1_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				row8Struct row8 = new row8Struct();

				/**
				 * [tAdvancedHash_row8 begin ] start
				 */

				ok_Hash.put("tAdvancedHash_row8", false);
				start_Hash.put("tAdvancedHash_row8", System.currentTimeMillis());

				currentComponent = "tAdvancedHash_row8";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row8");
				}

				int tos_count_tAdvancedHash_row8 = 0;

				// connection name:row8
				// source node:tDBInput_1 - inputs:(after_tFileInputExcel_1) outputs:(row8,row8)
				// | target node:tAdvancedHash_row8 - inputs:(row8) outputs:()
				// linked node: tMap_1 - inputs:(row8,row3) outputs:(j)

				org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row8 = org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row8Struct> tHash_Lookup_row8 = org.talend.designer.components.lookup.memory.AdvancedMemoryLookup
						.<row8Struct>getLookup(matchingModeEnum_row8);

				globalMap.put("tHash_Lookup_row8", tHash_Lookup_row8);

				/**
				 * [tAdvancedHash_row8 begin ] stop
				 */

				/**
				 * [tDBInput_1 begin ] start
				 */

				ok_Hash.put("tDBInput_1", false);
				start_Hash.put("tDBInput_1", System.currentTimeMillis());

				currentComponent = "tDBInput_1";

				int tos_count_tDBInput_1 = 0;

				org.talend.designer.components.util.mssql.MSSqlGenerateTimestampUtil mssqlGTU_tDBInput_1 = org.talend.designer.components.util.mssql.MSSqlUtilFactory
						.getMSSqlGenerateTimestampUtil();

				java.util.List<String> talendToDBList_tDBInput_1 = new java.util.ArrayList();
				String[] talendToDBArray_tDBInput_1 = new String[] { "FLOAT", "NUMERIC", "NUMERIC IDENTITY", "DECIMAL",
						"DECIMAL IDENTITY", "REAL" };
				java.util.Collections.addAll(talendToDBList_tDBInput_1, talendToDBArray_tDBInput_1);
				int nb_line_tDBInput_1 = 0;
				java.sql.Connection conn_tDBInput_1 = null;
				String driverClass_tDBInput_1 = "net.sourceforge.jtds.jdbc.Driver";
				java.lang.Class jdbcclazz_tDBInput_1 = java.lang.Class.forName(driverClass_tDBInput_1);
				String dbUser_tDBInput_1 = "sa";

				final String decryptedPassword_tDBInput_1 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:rFKOZ1ir3dK9a/EMFpaTfsu3rjBhmxf37NVNZIOR3WucBo5nBx0=");

				String dbPwd_tDBInput_1 = decryptedPassword_tDBInput_1;

				String port_tDBInput_1 = "1433";
				String dbname_tDBInput_1 = "orange_DW__";
				String url_tDBInput_1 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBInput_1)) {
					url_tDBInput_1 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBInput_1)) {
					url_tDBInput_1 += "//" + "orange_DW__";
				}
				url_tDBInput_1 += ";appName=" + projectName + ";" + "";
				String dbschema_tDBInput_1 = "dbo";

				conn_tDBInput_1 = java.sql.DriverManager.getConnection(url_tDBInput_1, dbUser_tDBInput_1,
						dbPwd_tDBInput_1);

				java.sql.Statement stmt_tDBInput_1 = conn_tDBInput_1.createStatement();

				String dbquery_tDBInput_1 = "SELECT dbo.Dim_membre.\"membre_équipe_id\",\n		dbo.Dim_membre.Account_Manager__Client_Prospect\nFROM	dbo.Dim_membre";

				globalMap.put("tDBInput_1_QUERY", dbquery_tDBInput_1);
				java.sql.ResultSet rs_tDBInput_1 = null;

				try {
					rs_tDBInput_1 = stmt_tDBInput_1.executeQuery(dbquery_tDBInput_1);
					java.sql.ResultSetMetaData rsmd_tDBInput_1 = rs_tDBInput_1.getMetaData();
					int colQtyInRs_tDBInput_1 = rsmd_tDBInput_1.getColumnCount();

					String tmpContent_tDBInput_1 = null;

					while (rs_tDBInput_1.next()) {
						nb_line_tDBInput_1++;

						if (colQtyInRs_tDBInput_1 < 1) {
							row8.membre_equipe_id = 0;
						} else {

							row8.membre_equipe_id = rs_tDBInput_1.getInt(1);
							if (rs_tDBInput_1.wasNull()) {
								throw new RuntimeException("Null value in non-Nullable column");
							}
						}
						if (colQtyInRs_tDBInput_1 < 2) {
							row8.Account_Manager__Client_Prospect = null;
						} else {

							tmpContent_tDBInput_1 = rs_tDBInput_1.getString(2);
							if (tmpContent_tDBInput_1 != null) {
								if (talendToDBList_tDBInput_1.contains(
										rsmd_tDBInput_1.getColumnTypeName(2).toUpperCase(java.util.Locale.ENGLISH))) {
									row8.Account_Manager__Client_Prospect = FormatterUtils
											.formatUnwithE(tmpContent_tDBInput_1);
								} else {
									row8.Account_Manager__Client_Prospect = tmpContent_tDBInput_1;
								}
							} else {
								row8.Account_Manager__Client_Prospect = null;
							}
						}

						/**
						 * [tDBInput_1 begin ] stop
						 */

						/**
						 * [tDBInput_1 main ] start
						 */

						currentComponent = "tDBInput_1";

						tos_count_tDBInput_1++;

						/**
						 * [tDBInput_1 main ] stop
						 */

						/**
						 * [tDBInput_1 process_data_begin ] start
						 */

						currentComponent = "tDBInput_1";

						/**
						 * [tDBInput_1 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row8 main ] start
						 */

						currentComponent = "tAdvancedHash_row8";

						if (execStat) {
							runStat.updateStatOnConnection(iterateId, 1, 1

									, "row8"

							);
						}

						row8Struct row8_HashRow = new row8Struct();

						row8_HashRow.membre_equipe_id = row8.membre_equipe_id;

						row8_HashRow.Account_Manager__Client_Prospect = row8.Account_Manager__Client_Prospect;

						tHash_Lookup_row8.put(row8_HashRow);

						tos_count_tAdvancedHash_row8++;

						/**
						 * [tAdvancedHash_row8 main ] stop
						 */

						/**
						 * [tAdvancedHash_row8 process_data_begin ] start
						 */

						currentComponent = "tAdvancedHash_row8";

						/**
						 * [tAdvancedHash_row8 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row8 process_data_end ] start
						 */

						currentComponent = "tAdvancedHash_row8";

						/**
						 * [tAdvancedHash_row8 process_data_end ] stop
						 */

						/**
						 * [tDBInput_1 process_data_end ] start
						 */

						currentComponent = "tDBInput_1";

						/**
						 * [tDBInput_1 process_data_end ] stop
						 */

						/**
						 * [tDBInput_1 end ] start
						 */

						currentComponent = "tDBInput_1";

					}
				} finally {
					if (rs_tDBInput_1 != null) {
						rs_tDBInput_1.close();
					}
					if (stmt_tDBInput_1 != null) {
						stmt_tDBInput_1.close();
					}
					if (conn_tDBInput_1 != null && !conn_tDBInput_1.isClosed()) {

						conn_tDBInput_1.close();

						if ("com.mysql.cj.jdbc.Driver".equals((String) globalMap.get("driverClass_"))
								&& routines.system.BundleUtils.inOSGi()) {
							Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread")
									.getMethod("checkedShutdown").invoke(null, (Object[]) null);
						}

					}
				}
				globalMap.put("tDBInput_1_NB_LINE", nb_line_tDBInput_1);

				ok_Hash.put("tDBInput_1", true);
				end_Hash.put("tDBInput_1", System.currentTimeMillis());

				/**
				 * [tDBInput_1 end ] stop
				 */

				/**
				 * [tAdvancedHash_row8 end ] start
				 */

				currentComponent = "tAdvancedHash_row8";

				tHash_Lookup_row8.endPut();

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row8");
				}

				ok_Hash.put("tAdvancedHash_row8", true);
				end_Hash.put("tAdvancedHash_row8", System.currentTimeMillis());

				/**
				 * [tAdvancedHash_row8 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tDBInput_1 finally ] start
				 */

				currentComponent = "tDBInput_1";

				/**
				 * [tDBInput_1 finally ] stop
				 */

				/**
				 * [tAdvancedHash_row8 finally ] start
				 */

				currentComponent = "tAdvancedHash_row8";

				/**
				 * [tAdvancedHash_row8 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tDBInput_1_SUBPROCESS_STATE", 1);
	}

	public static class row10Struct implements routines.system.IPersistableComparableLookupRow<row10Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];
		protected static final int DEFAULT_HASHCODE = 1;
		protected static final int PRIME = 31;
		protected int hashCode = DEFAULT_HASHCODE;
		public boolean hashCodeDirty = true;

		public String loopKey;

		public int Client_Prospect_id;

		public int getClient_Prospect_id() {
			return this.Client_Prospect_id;
		}

		public String Client_Prospect;

		public String getClient_Prospect() {
			return this.Client_Prospect;
		}

		@Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;

				result = prime * result + ((this.Client_Prospect == null) ? 0 : this.Client_Prospect.hashCode());

				this.hashCode = result;
				this.hashCodeDirty = false;
			}
			return this.hashCode;
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			final row10Struct other = (row10Struct) obj;

			if (this.Client_Prospect == null) {
				if (other.Client_Prospect != null)
					return false;

			} else if (!this.Client_Prospect.equals(other.Client_Prospect))

				return false;

			return true;
		}

		public void copyDataTo(row10Struct other) {

			other.Client_Prospect_id = this.Client_Prospect_id;
			other.Client_Prospect = this.Client_Prospect;

		}

		public void copyKeysDataTo(row10Struct other) {

			other.Client_Prospect = this.Client_Prospect;

		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readKeysData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeKeysData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		/**
		 * Fill Values data by reading ObjectInputStream.
		 */
		public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
			try {

				int length = 0;

				this.Client_Prospect_id = dis.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
			try {
				int length = 0;

				this.Client_Prospect_id = objectIn.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		/**
		 * Return a byte array which represents Values data.
		 */
		public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
			try {

				dos.writeInt(this.Client_Prospect_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut) {
			try {

				objectOut.writeInt(this.Client_Prospect_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}
		}

		public boolean supportMarshaller() {
			return true;
		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Client_Prospect_id=" + String.valueOf(Client_Prospect_id));
			sb.append(",Client_Prospect=" + Client_Prospect);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row10Struct other) {

			int returnValue = -1;

			returnValue = checkNullsAndCompare(this.Client_Prospect, other.Client_Prospect);
			if (returnValue != 0) {
				return returnValue;
			}

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tDBInput_2Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tDBInput_2_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				row10Struct row10 = new row10Struct();

				/**
				 * [tAdvancedHash_row10 begin ] start
				 */

				ok_Hash.put("tAdvancedHash_row10", false);
				start_Hash.put("tAdvancedHash_row10", System.currentTimeMillis());

				currentComponent = "tAdvancedHash_row10";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row10");
				}

				int tos_count_tAdvancedHash_row10 = 0;

				// connection name:row10
				// source node:tDBInput_2 - inputs:(after_tFileInputExcel_14)
				// outputs:(row10,row10) | target node:tAdvancedHash_row10 - inputs:(row10)
				// outputs:()
				// linked node: tMap_7 - inputs:(row10,row9) outputs:(k)

				org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row10 = org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row10Struct> tHash_Lookup_row10 = org.talend.designer.components.lookup.memory.AdvancedMemoryLookup
						.<row10Struct>getLookup(matchingModeEnum_row10);

				globalMap.put("tHash_Lookup_row10", tHash_Lookup_row10);

				/**
				 * [tAdvancedHash_row10 begin ] stop
				 */

				/**
				 * [tDBInput_2 begin ] start
				 */

				ok_Hash.put("tDBInput_2", false);
				start_Hash.put("tDBInput_2", System.currentTimeMillis());

				currentComponent = "tDBInput_2";

				int tos_count_tDBInput_2 = 0;

				org.talend.designer.components.util.mssql.MSSqlGenerateTimestampUtil mssqlGTU_tDBInput_2 = org.talend.designer.components.util.mssql.MSSqlUtilFactory
						.getMSSqlGenerateTimestampUtil();

				java.util.List<String> talendToDBList_tDBInput_2 = new java.util.ArrayList();
				String[] talendToDBArray_tDBInput_2 = new String[] { "FLOAT", "NUMERIC", "NUMERIC IDENTITY", "DECIMAL",
						"DECIMAL IDENTITY", "REAL" };
				java.util.Collections.addAll(talendToDBList_tDBInput_2, talendToDBArray_tDBInput_2);
				int nb_line_tDBInput_2 = 0;
				java.sql.Connection conn_tDBInput_2 = null;
				String driverClass_tDBInput_2 = "net.sourceforge.jtds.jdbc.Driver";
				java.lang.Class jdbcclazz_tDBInput_2 = java.lang.Class.forName(driverClass_tDBInput_2);
				String dbUser_tDBInput_2 = "sa";

				final String decryptedPassword_tDBInput_2 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:EtbR5Oaec5wNuCbjfMwWFIzDTBFpwYnW2HMBvKbJaJXZ/WPf+5E=");

				String dbPwd_tDBInput_2 = decryptedPassword_tDBInput_2;

				String port_tDBInput_2 = "1433";
				String dbname_tDBInput_2 = "orange_DW__";
				String url_tDBInput_2 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBInput_2)) {
					url_tDBInput_2 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBInput_2)) {
					url_tDBInput_2 += "//" + "orange_DW__";
				}
				url_tDBInput_2 += ";appName=" + projectName + ";" + "";
				String dbschema_tDBInput_2 = "dbo";

				conn_tDBInput_2 = java.sql.DriverManager.getConnection(url_tDBInput_2, dbUser_tDBInput_2,
						dbPwd_tDBInput_2);

				java.sql.Statement stmt_tDBInput_2 = conn_tDBInput_2.createStatement();

				String dbquery_tDBInput_2 = "SELECT dbo.Dim_Raison_sociale.Client_Prospect_id,\n		dbo.Dim_Raison_sociale.Client_Prospect\nFROM	dbo.Dim_Raison_sociale";

				globalMap.put("tDBInput_2_QUERY", dbquery_tDBInput_2);
				java.sql.ResultSet rs_tDBInput_2 = null;

				try {
					rs_tDBInput_2 = stmt_tDBInput_2.executeQuery(dbquery_tDBInput_2);
					java.sql.ResultSetMetaData rsmd_tDBInput_2 = rs_tDBInput_2.getMetaData();
					int colQtyInRs_tDBInput_2 = rsmd_tDBInput_2.getColumnCount();

					String tmpContent_tDBInput_2 = null;

					while (rs_tDBInput_2.next()) {
						nb_line_tDBInput_2++;

						if (colQtyInRs_tDBInput_2 < 1) {
							row10.Client_Prospect_id = 0;
						} else {

							row10.Client_Prospect_id = rs_tDBInput_2.getInt(1);
							if (rs_tDBInput_2.wasNull()) {
								throw new RuntimeException("Null value in non-Nullable column");
							}
						}
						if (colQtyInRs_tDBInput_2 < 2) {
							row10.Client_Prospect = null;
						} else {

							tmpContent_tDBInput_2 = rs_tDBInput_2.getString(2);
							if (tmpContent_tDBInput_2 != null) {
								if (talendToDBList_tDBInput_2.contains(
										rsmd_tDBInput_2.getColumnTypeName(2).toUpperCase(java.util.Locale.ENGLISH))) {
									row10.Client_Prospect = FormatterUtils.formatUnwithE(tmpContent_tDBInput_2);
								} else {
									row10.Client_Prospect = tmpContent_tDBInput_2;
								}
							} else {
								row10.Client_Prospect = null;
							}
						}

						/**
						 * [tDBInput_2 begin ] stop
						 */

						/**
						 * [tDBInput_2 main ] start
						 */

						currentComponent = "tDBInput_2";

						tos_count_tDBInput_2++;

						/**
						 * [tDBInput_2 main ] stop
						 */

						/**
						 * [tDBInput_2 process_data_begin ] start
						 */

						currentComponent = "tDBInput_2";

						/**
						 * [tDBInput_2 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row10 main ] start
						 */

						currentComponent = "tAdvancedHash_row10";

						if (execStat) {
							runStat.updateStatOnConnection(iterateId, 1, 1

									, "row10"

							);
						}

						row10Struct row10_HashRow = new row10Struct();

						row10_HashRow.Client_Prospect_id = row10.Client_Prospect_id;

						row10_HashRow.Client_Prospect = row10.Client_Prospect;

						tHash_Lookup_row10.put(row10_HashRow);

						tos_count_tAdvancedHash_row10++;

						/**
						 * [tAdvancedHash_row10 main ] stop
						 */

						/**
						 * [tAdvancedHash_row10 process_data_begin ] start
						 */

						currentComponent = "tAdvancedHash_row10";

						/**
						 * [tAdvancedHash_row10 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row10 process_data_end ] start
						 */

						currentComponent = "tAdvancedHash_row10";

						/**
						 * [tAdvancedHash_row10 process_data_end ] stop
						 */

						/**
						 * [tDBInput_2 process_data_end ] start
						 */

						currentComponent = "tDBInput_2";

						/**
						 * [tDBInput_2 process_data_end ] stop
						 */

						/**
						 * [tDBInput_2 end ] start
						 */

						currentComponent = "tDBInput_2";

					}
				} finally {
					if (rs_tDBInput_2 != null) {
						rs_tDBInput_2.close();
					}
					if (stmt_tDBInput_2 != null) {
						stmt_tDBInput_2.close();
					}
					if (conn_tDBInput_2 != null && !conn_tDBInput_2.isClosed()) {

						conn_tDBInput_2.close();

						if ("com.mysql.cj.jdbc.Driver".equals((String) globalMap.get("driverClass_"))
								&& routines.system.BundleUtils.inOSGi()) {
							Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread")
									.getMethod("checkedShutdown").invoke(null, (Object[]) null);
						}

					}
				}
				globalMap.put("tDBInput_2_NB_LINE", nb_line_tDBInput_2);

				ok_Hash.put("tDBInput_2", true);
				end_Hash.put("tDBInput_2", System.currentTimeMillis());

				/**
				 * [tDBInput_2 end ] stop
				 */

				/**
				 * [tAdvancedHash_row10 end ] start
				 */

				currentComponent = "tAdvancedHash_row10";

				tHash_Lookup_row10.endPut();

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row10");
				}

				ok_Hash.put("tAdvancedHash_row10", true);
				end_Hash.put("tAdvancedHash_row10", System.currentTimeMillis());

				/**
				 * [tAdvancedHash_row10 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tDBInput_2 finally ] start
				 */

				currentComponent = "tDBInput_2";

				/**
				 * [tDBInput_2 finally ] stop
				 */

				/**
				 * [tAdvancedHash_row10 finally ] start
				 */

				currentComponent = "tAdvancedHash_row10";

				/**
				 * [tAdvancedHash_row10 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tDBInput_2_SUBPROCESS_STATE", 1);
	}

	public static class row12Struct implements routines.system.IPersistableComparableLookupRow<row12Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];
		protected static final int DEFAULT_HASHCODE = 1;
		protected static final int PRIME = 31;
		protected int hashCode = DEFAULT_HASHCODE;
		public boolean hashCodeDirty = true;

		public String loopKey;

		public int statu_final_id;

		public int getStatu_final_id() {
			return this.statu_final_id;
		}

		public String Staut_Final;

		public String getStaut_Final() {
			return this.Staut_Final;
		}

		@Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;

				result = prime * result + ((this.Staut_Final == null) ? 0 : this.Staut_Final.hashCode());

				this.hashCode = result;
				this.hashCodeDirty = false;
			}
			return this.hashCode;
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			final row12Struct other = (row12Struct) obj;

			if (this.Staut_Final == null) {
				if (other.Staut_Final != null)
					return false;

			} else if (!this.Staut_Final.equals(other.Staut_Final))

				return false;

			return true;
		}

		public void copyDataTo(row12Struct other) {

			other.statu_final_id = this.statu_final_id;
			other.Staut_Final = this.Staut_Final;

		}

		public void copyKeysDataTo(row12Struct other) {

			other.Staut_Final = this.Staut_Final;

		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readKeysData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Staut_Final = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Staut_Final = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeKeysData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Staut_Final, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Staut_Final, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		/**
		 * Fill Values data by reading ObjectInputStream.
		 */
		public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
			try {

				int length = 0;

				this.statu_final_id = dis.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
			try {
				int length = 0;

				this.statu_final_id = objectIn.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		/**
		 * Return a byte array which represents Values data.
		 */
		public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
			try {

				dos.writeInt(this.statu_final_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut) {
			try {

				objectOut.writeInt(this.statu_final_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}
		}

		public boolean supportMarshaller() {
			return true;
		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("statu_final_id=" + String.valueOf(statu_final_id));
			sb.append(",Staut_Final=" + Staut_Final);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row12Struct other) {

			int returnValue = -1;

			returnValue = checkNullsAndCompare(this.Staut_Final, other.Staut_Final);
			if (returnValue != 0) {
				return returnValue;
			}

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tDBInput_3Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tDBInput_3_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				row12Struct row12 = new row12Struct();

				/**
				 * [tAdvancedHash_row12 begin ] start
				 */

				ok_Hash.put("tAdvancedHash_row12", false);
				start_Hash.put("tAdvancedHash_row12", System.currentTimeMillis());

				currentComponent = "tAdvancedHash_row12";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row12");
				}

				int tos_count_tAdvancedHash_row12 = 0;

				// connection name:row12
				// source node:tDBInput_3 - inputs:(after_tFileInputExcel_17)
				// outputs:(row12,row12) | target node:tAdvancedHash_row12 - inputs:(row12)
				// outputs:()
				// linked node: tMap_8 - inputs:(row12,row11) outputs:(l)

				org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row12 = org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row12Struct> tHash_Lookup_row12 = org.talend.designer.components.lookup.memory.AdvancedMemoryLookup
						.<row12Struct>getLookup(matchingModeEnum_row12);

				globalMap.put("tHash_Lookup_row12", tHash_Lookup_row12);

				/**
				 * [tAdvancedHash_row12 begin ] stop
				 */

				/**
				 * [tDBInput_3 begin ] start
				 */

				ok_Hash.put("tDBInput_3", false);
				start_Hash.put("tDBInput_3", System.currentTimeMillis());

				currentComponent = "tDBInput_3";

				int tos_count_tDBInput_3 = 0;

				org.talend.designer.components.util.mssql.MSSqlGenerateTimestampUtil mssqlGTU_tDBInput_3 = org.talend.designer.components.util.mssql.MSSqlUtilFactory
						.getMSSqlGenerateTimestampUtil();

				java.util.List<String> talendToDBList_tDBInput_3 = new java.util.ArrayList();
				String[] talendToDBArray_tDBInput_3 = new String[] { "FLOAT", "NUMERIC", "NUMERIC IDENTITY", "DECIMAL",
						"DECIMAL IDENTITY", "REAL" };
				java.util.Collections.addAll(talendToDBList_tDBInput_3, talendToDBArray_tDBInput_3);
				int nb_line_tDBInput_3 = 0;
				java.sql.Connection conn_tDBInput_3 = null;
				String driverClass_tDBInput_3 = "net.sourceforge.jtds.jdbc.Driver";
				java.lang.Class jdbcclazz_tDBInput_3 = java.lang.Class.forName(driverClass_tDBInput_3);
				String dbUser_tDBInput_3 = "sa";

				final String decryptedPassword_tDBInput_3 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:2YTaImp8Uz6zE/zCOXL4DwHejqHQjselOUAT1uXyIbHdGBifRI4=");

				String dbPwd_tDBInput_3 = decryptedPassword_tDBInput_3;

				String port_tDBInput_3 = "1433";
				String dbname_tDBInput_3 = "orange_DW__";
				String url_tDBInput_3 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBInput_3)) {
					url_tDBInput_3 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBInput_3)) {
					url_tDBInput_3 += "//" + "orange_DW__";
				}
				url_tDBInput_3 += ";appName=" + projectName + ";" + "";
				String dbschema_tDBInput_3 = "dbo";

				conn_tDBInput_3 = java.sql.DriverManager.getConnection(url_tDBInput_3, dbUser_tDBInput_3,
						dbPwd_tDBInput_3);

				java.sql.Statement stmt_tDBInput_3 = conn_tDBInput_3.createStatement();

				String dbquery_tDBInput_3 = "SELECT dbo.Dim_statu_final.statu_final_id,\n		dbo.Dim_statu_final.Staut_Final\nFROM	dbo.Dim_statu_final";

				globalMap.put("tDBInput_3_QUERY", dbquery_tDBInput_3);
				java.sql.ResultSet rs_tDBInput_3 = null;

				try {
					rs_tDBInput_3 = stmt_tDBInput_3.executeQuery(dbquery_tDBInput_3);
					java.sql.ResultSetMetaData rsmd_tDBInput_3 = rs_tDBInput_3.getMetaData();
					int colQtyInRs_tDBInput_3 = rsmd_tDBInput_3.getColumnCount();

					String tmpContent_tDBInput_3 = null;

					while (rs_tDBInput_3.next()) {
						nb_line_tDBInput_3++;

						if (colQtyInRs_tDBInput_3 < 1) {
							row12.statu_final_id = 0;
						} else {

							row12.statu_final_id = rs_tDBInput_3.getInt(1);
							if (rs_tDBInput_3.wasNull()) {
								throw new RuntimeException("Null value in non-Nullable column");
							}
						}
						if (colQtyInRs_tDBInput_3 < 2) {
							row12.Staut_Final = null;
						} else {

							tmpContent_tDBInput_3 = rs_tDBInput_3.getString(2);
							if (tmpContent_tDBInput_3 != null) {
								if (talendToDBList_tDBInput_3.contains(
										rsmd_tDBInput_3.getColumnTypeName(2).toUpperCase(java.util.Locale.ENGLISH))) {
									row12.Staut_Final = FormatterUtils.formatUnwithE(tmpContent_tDBInput_3);
								} else {
									row12.Staut_Final = tmpContent_tDBInput_3;
								}
							} else {
								row12.Staut_Final = null;
							}
						}

						/**
						 * [tDBInput_3 begin ] stop
						 */

						/**
						 * [tDBInput_3 main ] start
						 */

						currentComponent = "tDBInput_3";

						tos_count_tDBInput_3++;

						/**
						 * [tDBInput_3 main ] stop
						 */

						/**
						 * [tDBInput_3 process_data_begin ] start
						 */

						currentComponent = "tDBInput_3";

						/**
						 * [tDBInput_3 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row12 main ] start
						 */

						currentComponent = "tAdvancedHash_row12";

						if (execStat) {
							runStat.updateStatOnConnection(iterateId, 1, 1

									, "row12"

							);
						}

						row12Struct row12_HashRow = new row12Struct();

						row12_HashRow.statu_final_id = row12.statu_final_id;

						row12_HashRow.Staut_Final = row12.Staut_Final;

						tHash_Lookup_row12.put(row12_HashRow);

						tos_count_tAdvancedHash_row12++;

						/**
						 * [tAdvancedHash_row12 main ] stop
						 */

						/**
						 * [tAdvancedHash_row12 process_data_begin ] start
						 */

						currentComponent = "tAdvancedHash_row12";

						/**
						 * [tAdvancedHash_row12 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row12 process_data_end ] start
						 */

						currentComponent = "tAdvancedHash_row12";

						/**
						 * [tAdvancedHash_row12 process_data_end ] stop
						 */

						/**
						 * [tDBInput_3 process_data_end ] start
						 */

						currentComponent = "tDBInput_3";

						/**
						 * [tDBInput_3 process_data_end ] stop
						 */

						/**
						 * [tDBInput_3 end ] start
						 */

						currentComponent = "tDBInput_3";

					}
				} finally {
					if (rs_tDBInput_3 != null) {
						rs_tDBInput_3.close();
					}
					if (stmt_tDBInput_3 != null) {
						stmt_tDBInput_3.close();
					}
					if (conn_tDBInput_3 != null && !conn_tDBInput_3.isClosed()) {

						conn_tDBInput_3.close();

						if ("com.mysql.cj.jdbc.Driver".equals((String) globalMap.get("driverClass_"))
								&& routines.system.BundleUtils.inOSGi()) {
							Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread")
									.getMethod("checkedShutdown").invoke(null, (Object[]) null);
						}

					}
				}
				globalMap.put("tDBInput_3_NB_LINE", nb_line_tDBInput_3);

				ok_Hash.put("tDBInput_3", true);
				end_Hash.put("tDBInput_3", System.currentTimeMillis());

				/**
				 * [tDBInput_3 end ] stop
				 */

				/**
				 * [tAdvancedHash_row12 end ] start
				 */

				currentComponent = "tAdvancedHash_row12";

				tHash_Lookup_row12.endPut();

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row12");
				}

				ok_Hash.put("tAdvancedHash_row12", true);
				end_Hash.put("tAdvancedHash_row12", System.currentTimeMillis());

				/**
				 * [tAdvancedHash_row12 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tDBInput_3 finally ] start
				 */

				currentComponent = "tDBInput_3";

				/**
				 * [tDBInput_3 finally ] stop
				 */

				/**
				 * [tAdvancedHash_row12 finally ] start
				 */

				currentComponent = "tAdvancedHash_row12";

				/**
				 * [tAdvancedHash_row12 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tDBInput_3_SUBPROCESS_STATE", 1);
	}

	public static class row50Struct implements routines.system.IPersistableComparableLookupRow<row50Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];
		protected static final int DEFAULT_HASHCODE = 1;
		protected static final int PRIME = 31;
		protected int hashCode = DEFAULT_HASHCODE;
		public boolean hashCodeDirty = true;

		public String loopKey;

		public int equipe_id;

		public int getEquipe_id() {
			return this.equipe_id;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		@Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;

				result = prime * result + ((this.Equipe == null) ? 0 : this.Equipe.hashCode());

				this.hashCode = result;
				this.hashCodeDirty = false;
			}
			return this.hashCode;
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			final row50Struct other = (row50Struct) obj;

			if (this.Equipe == null) {
				if (other.Equipe != null)
					return false;

			} else if (!this.Equipe.equals(other.Equipe))

				return false;

			return true;
		}

		public void copyDataTo(row50Struct other) {

			other.equipe_id = this.equipe_id;
			other.Equipe = this.Equipe;

		}

		public void copyKeysDataTo(row50Struct other) {

			other.Equipe = this.Equipe;

		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readKeysData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Equipe = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Equipe = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeKeysData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Equipe, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Equipe, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		/**
		 * Fill Values data by reading ObjectInputStream.
		 */
		public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
			try {

				int length = 0;

				this.equipe_id = dis.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
			try {
				int length = 0;

				this.equipe_id = objectIn.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		/**
		 * Return a byte array which represents Values data.
		 */
		public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
			try {

				dos.writeInt(this.equipe_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut) {
			try {

				objectOut.writeInt(this.equipe_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}
		}

		public boolean supportMarshaller() {
			return true;
		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("equipe_id=" + String.valueOf(equipe_id));
			sb.append(",Equipe=" + Equipe);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row50Struct other) {

			int returnValue = -1;

			returnValue = checkNullsAndCompare(this.Equipe, other.Equipe);
			if (returnValue != 0) {
				return returnValue;
			}

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tDBInput_4Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tDBInput_4_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				row50Struct row50 = new row50Struct();

				/**
				 * [tAdvancedHash_row50 begin ] start
				 */

				ok_Hash.put("tAdvancedHash_row50", false);
				start_Hash.put("tAdvancedHash_row50", System.currentTimeMillis());

				currentComponent = "tAdvancedHash_row50";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row50");
				}

				int tos_count_tAdvancedHash_row50 = 0;

				// connection name:row50
				// source node:tDBInput_4 - inputs:(after_tFileInputExcel_25)
				// outputs:(row50,row50) | target node:tAdvancedHash_row50 - inputs:(row50)
				// outputs:()
				// linked node: tMap_9 - inputs:(row50,row49) outputs:(p)

				org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row50 = org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row50Struct> tHash_Lookup_row50 = org.talend.designer.components.lookup.memory.AdvancedMemoryLookup
						.<row50Struct>getLookup(matchingModeEnum_row50);

				globalMap.put("tHash_Lookup_row50", tHash_Lookup_row50);

				/**
				 * [tAdvancedHash_row50 begin ] stop
				 */

				/**
				 * [tDBInput_4 begin ] start
				 */

				ok_Hash.put("tDBInput_4", false);
				start_Hash.put("tDBInput_4", System.currentTimeMillis());

				currentComponent = "tDBInput_4";

				int tos_count_tDBInput_4 = 0;

				org.talend.designer.components.util.mssql.MSSqlGenerateTimestampUtil mssqlGTU_tDBInput_4 = org.talend.designer.components.util.mssql.MSSqlUtilFactory
						.getMSSqlGenerateTimestampUtil();

				java.util.List<String> talendToDBList_tDBInput_4 = new java.util.ArrayList();
				String[] talendToDBArray_tDBInput_4 = new String[] { "FLOAT", "NUMERIC", "NUMERIC IDENTITY", "DECIMAL",
						"DECIMAL IDENTITY", "REAL" };
				java.util.Collections.addAll(talendToDBList_tDBInput_4, talendToDBArray_tDBInput_4);
				int nb_line_tDBInput_4 = 0;
				java.sql.Connection conn_tDBInput_4 = null;
				String driverClass_tDBInput_4 = "net.sourceforge.jtds.jdbc.Driver";
				java.lang.Class jdbcclazz_tDBInput_4 = java.lang.Class.forName(driverClass_tDBInput_4);
				String dbUser_tDBInput_4 = "sa";

				final String decryptedPassword_tDBInput_4 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:jcsUTRfWZMe8/78xyuGh+m+dnYEugya+Hv07lEOZIf9rteOQN2k=");

				String dbPwd_tDBInput_4 = decryptedPassword_tDBInput_4;

				String port_tDBInput_4 = "1433";
				String dbname_tDBInput_4 = "orange_DW__";
				String url_tDBInput_4 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBInput_4)) {
					url_tDBInput_4 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBInput_4)) {
					url_tDBInput_4 += "//" + "orange_DW__";
				}
				url_tDBInput_4 += ";appName=" + projectName + ";" + "";
				String dbschema_tDBInput_4 = "dbo";

				conn_tDBInput_4 = java.sql.DriverManager.getConnection(url_tDBInput_4, dbUser_tDBInput_4,
						dbPwd_tDBInput_4);

				java.sql.Statement stmt_tDBInput_4 = conn_tDBInput_4.createStatement();

				String dbquery_tDBInput_4 = "SELECT dbo.Dim_equipe.equipe_id,\n		dbo.Dim_equipe.Equipe\nFROM	dbo.Dim_equipe";

				globalMap.put("tDBInput_4_QUERY", dbquery_tDBInput_4);
				java.sql.ResultSet rs_tDBInput_4 = null;

				try {
					rs_tDBInput_4 = stmt_tDBInput_4.executeQuery(dbquery_tDBInput_4);
					java.sql.ResultSetMetaData rsmd_tDBInput_4 = rs_tDBInput_4.getMetaData();
					int colQtyInRs_tDBInput_4 = rsmd_tDBInput_4.getColumnCount();

					String tmpContent_tDBInput_4 = null;

					while (rs_tDBInput_4.next()) {
						nb_line_tDBInput_4++;

						if (colQtyInRs_tDBInput_4 < 1) {
							row50.equipe_id = 0;
						} else {

							row50.equipe_id = rs_tDBInput_4.getInt(1);
							if (rs_tDBInput_4.wasNull()) {
								throw new RuntimeException("Null value in non-Nullable column");
							}
						}
						if (colQtyInRs_tDBInput_4 < 2) {
							row50.Equipe = null;
						} else {

							tmpContent_tDBInput_4 = rs_tDBInput_4.getString(2);
							if (tmpContent_tDBInput_4 != null) {
								if (talendToDBList_tDBInput_4.contains(
										rsmd_tDBInput_4.getColumnTypeName(2).toUpperCase(java.util.Locale.ENGLISH))) {
									row50.Equipe = FormatterUtils.formatUnwithE(tmpContent_tDBInput_4);
								} else {
									row50.Equipe = tmpContent_tDBInput_4;
								}
							} else {
								row50.Equipe = null;
							}
						}

						/**
						 * [tDBInput_4 begin ] stop
						 */

						/**
						 * [tDBInput_4 main ] start
						 */

						currentComponent = "tDBInput_4";

						tos_count_tDBInput_4++;

						/**
						 * [tDBInput_4 main ] stop
						 */

						/**
						 * [tDBInput_4 process_data_begin ] start
						 */

						currentComponent = "tDBInput_4";

						/**
						 * [tDBInput_4 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row50 main ] start
						 */

						currentComponent = "tAdvancedHash_row50";

						if (execStat) {
							runStat.updateStatOnConnection(iterateId, 1, 1

									, "row50"

							);
						}

						row50Struct row50_HashRow = new row50Struct();

						row50_HashRow.equipe_id = row50.equipe_id;

						row50_HashRow.Equipe = row50.Equipe;

						tHash_Lookup_row50.put(row50_HashRow);

						tos_count_tAdvancedHash_row50++;

						/**
						 * [tAdvancedHash_row50 main ] stop
						 */

						/**
						 * [tAdvancedHash_row50 process_data_begin ] start
						 */

						currentComponent = "tAdvancedHash_row50";

						/**
						 * [tAdvancedHash_row50 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row50 process_data_end ] start
						 */

						currentComponent = "tAdvancedHash_row50";

						/**
						 * [tAdvancedHash_row50 process_data_end ] stop
						 */

						/**
						 * [tDBInput_4 process_data_end ] start
						 */

						currentComponent = "tDBInput_4";

						/**
						 * [tDBInput_4 process_data_end ] stop
						 */

						/**
						 * [tDBInput_4 end ] start
						 */

						currentComponent = "tDBInput_4";

					}
				} finally {
					if (rs_tDBInput_4 != null) {
						rs_tDBInput_4.close();
					}
					if (stmt_tDBInput_4 != null) {
						stmt_tDBInput_4.close();
					}
					if (conn_tDBInput_4 != null && !conn_tDBInput_4.isClosed()) {

						conn_tDBInput_4.close();

						if ("com.mysql.cj.jdbc.Driver".equals((String) globalMap.get("driverClass_"))
								&& routines.system.BundleUtils.inOSGi()) {
							Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread")
									.getMethod("checkedShutdown").invoke(null, (Object[]) null);
						}

					}
				}
				globalMap.put("tDBInput_4_NB_LINE", nb_line_tDBInput_4);

				ok_Hash.put("tDBInput_4", true);
				end_Hash.put("tDBInput_4", System.currentTimeMillis());

				/**
				 * [tDBInput_4 end ] stop
				 */

				/**
				 * [tAdvancedHash_row50 end ] start
				 */

				currentComponent = "tAdvancedHash_row50";

				tHash_Lookup_row50.endPut();

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row50");
				}

				ok_Hash.put("tAdvancedHash_row50", true);
				end_Hash.put("tAdvancedHash_row50", System.currentTimeMillis());

				/**
				 * [tAdvancedHash_row50 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tDBInput_4 finally ] start
				 */

				currentComponent = "tDBInput_4";

				/**
				 * [tDBInput_4 finally ] stop
				 */

				/**
				 * [tAdvancedHash_row50 finally ] start
				 */

				currentComponent = "tAdvancedHash_row50";

				/**
				 * [tAdvancedHash_row50 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tDBInput_4_SUBPROCESS_STATE", 1);
	}

	public static class row47Struct implements routines.system.IPersistableComparableLookupRow<row47Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];
		protected static final int DEFAULT_HASHCODE = 1;
		protected static final int PRIME = 31;
		protected int hashCode = DEFAULT_HASHCODE;
		public boolean hashCodeDirty = true;

		public String loopKey;

		public int groupe_client_id;

		public int getGroupe_client_id() {
			return this.groupe_client_id;
		}

		public String Groupe_Client;

		public String getGroupe_Client() {
			return this.Groupe_Client;
		}

		@Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;

				result = prime * result + ((this.Groupe_Client == null) ? 0 : this.Groupe_Client.hashCode());

				this.hashCode = result;
				this.hashCodeDirty = false;
			}
			return this.hashCode;
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			final row47Struct other = (row47Struct) obj;

			if (this.Groupe_Client == null) {
				if (other.Groupe_Client != null)
					return false;

			} else if (!this.Groupe_Client.equals(other.Groupe_Client))

				return false;

			return true;
		}

		public void copyDataTo(row47Struct other) {

			other.groupe_client_id = this.groupe_client_id;
			other.Groupe_Client = this.Groupe_Client;

		}

		public void copyKeysDataTo(row47Struct other) {

			other.Groupe_Client = this.Groupe_Client;

		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readKeysData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Groupe_Client = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Groupe_Client = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeKeysData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Groupe_Client, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Groupe_Client, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		/**
		 * Fill Values data by reading ObjectInputStream.
		 */
		public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
			try {

				int length = 0;

				this.groupe_client_id = dis.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
			try {
				int length = 0;

				this.groupe_client_id = objectIn.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		/**
		 * Return a byte array which represents Values data.
		 */
		public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
			try {

				dos.writeInt(this.groupe_client_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut) {
			try {

				objectOut.writeInt(this.groupe_client_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}
		}

		public boolean supportMarshaller() {
			return true;
		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("groupe_client_id=" + String.valueOf(groupe_client_id));
			sb.append(",Groupe_Client=" + Groupe_Client);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row47Struct other) {

			int returnValue = -1;

			returnValue = checkNullsAndCompare(this.Groupe_Client, other.Groupe_Client);
			if (returnValue != 0) {
				return returnValue;
			}

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tDBInput_5Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tDBInput_5_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				row47Struct row47 = new row47Struct();

				/**
				 * [tAdvancedHash_row47 begin ] start
				 */

				ok_Hash.put("tAdvancedHash_row47", false);
				start_Hash.put("tAdvancedHash_row47", System.currentTimeMillis());

				currentComponent = "tAdvancedHash_row47";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row47");
				}

				int tos_count_tAdvancedHash_row47 = 0;

				// connection name:row47
				// source node:tDBInput_5 - inputs:(after_tFileInputExcel_21)
				// outputs:(row47,row47) | target node:tAdvancedHash_row47 - inputs:(row47)
				// outputs:()
				// linked node: tMap_10 - inputs:(row47,row31) outputs:(o)

				org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row47 = org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row47Struct> tHash_Lookup_row47 = org.talend.designer.components.lookup.memory.AdvancedMemoryLookup
						.<row47Struct>getLookup(matchingModeEnum_row47);

				globalMap.put("tHash_Lookup_row47", tHash_Lookup_row47);

				/**
				 * [tAdvancedHash_row47 begin ] stop
				 */

				/**
				 * [tDBInput_5 begin ] start
				 */

				ok_Hash.put("tDBInput_5", false);
				start_Hash.put("tDBInput_5", System.currentTimeMillis());

				currentComponent = "tDBInput_5";

				int tos_count_tDBInput_5 = 0;

				org.talend.designer.components.util.mssql.MSSqlGenerateTimestampUtil mssqlGTU_tDBInput_5 = org.talend.designer.components.util.mssql.MSSqlUtilFactory
						.getMSSqlGenerateTimestampUtil();

				java.util.List<String> talendToDBList_tDBInput_5 = new java.util.ArrayList();
				String[] talendToDBArray_tDBInput_5 = new String[] { "FLOAT", "NUMERIC", "NUMERIC IDENTITY", "DECIMAL",
						"DECIMAL IDENTITY", "REAL" };
				java.util.Collections.addAll(talendToDBList_tDBInput_5, talendToDBArray_tDBInput_5);
				int nb_line_tDBInput_5 = 0;
				java.sql.Connection conn_tDBInput_5 = null;
				String driverClass_tDBInput_5 = "net.sourceforge.jtds.jdbc.Driver";
				java.lang.Class jdbcclazz_tDBInput_5 = java.lang.Class.forName(driverClass_tDBInput_5);
				String dbUser_tDBInput_5 = "sa";

				final String decryptedPassword_tDBInput_5 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:KWbmkev/AdB+LI6+uUgODqPmRX8kTmbzJG2Qsd0lOL6Wktti5EQ=");

				String dbPwd_tDBInput_5 = decryptedPassword_tDBInput_5;

				String port_tDBInput_5 = "1433";
				String dbname_tDBInput_5 = "orange_DW__";
				String url_tDBInput_5 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBInput_5)) {
					url_tDBInput_5 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBInput_5)) {
					url_tDBInput_5 += "//" + "orange_DW__";
				}
				url_tDBInput_5 += ";appName=" + projectName + ";" + "";
				String dbschema_tDBInput_5 = "dbo";

				conn_tDBInput_5 = java.sql.DriverManager.getConnection(url_tDBInput_5, dbUser_tDBInput_5,
						dbPwd_tDBInput_5);

				java.sql.Statement stmt_tDBInput_5 = conn_tDBInput_5.createStatement();

				String dbquery_tDBInput_5 = "SELECT dbo.Dim_groupe_client.groupe_client_id,\n		dbo.Dim_groupe_client.Groupe_Client\nFROM	dbo.Dim_groupe_client";

				globalMap.put("tDBInput_5_QUERY", dbquery_tDBInput_5);
				java.sql.ResultSet rs_tDBInput_5 = null;

				try {
					rs_tDBInput_5 = stmt_tDBInput_5.executeQuery(dbquery_tDBInput_5);
					java.sql.ResultSetMetaData rsmd_tDBInput_5 = rs_tDBInput_5.getMetaData();
					int colQtyInRs_tDBInput_5 = rsmd_tDBInput_5.getColumnCount();

					String tmpContent_tDBInput_5 = null;

					while (rs_tDBInput_5.next()) {
						nb_line_tDBInput_5++;

						if (colQtyInRs_tDBInput_5 < 1) {
							row47.groupe_client_id = 0;
						} else {

							row47.groupe_client_id = rs_tDBInput_5.getInt(1);
							if (rs_tDBInput_5.wasNull()) {
								throw new RuntimeException("Null value in non-Nullable column");
							}
						}
						if (colQtyInRs_tDBInput_5 < 2) {
							row47.Groupe_Client = null;
						} else {

							tmpContent_tDBInput_5 = rs_tDBInput_5.getString(2);
							if (tmpContent_tDBInput_5 != null) {
								if (talendToDBList_tDBInput_5.contains(
										rsmd_tDBInput_5.getColumnTypeName(2).toUpperCase(java.util.Locale.ENGLISH))) {
									row47.Groupe_Client = FormatterUtils.formatUnwithE(tmpContent_tDBInput_5);
								} else {
									row47.Groupe_Client = tmpContent_tDBInput_5;
								}
							} else {
								row47.Groupe_Client = null;
							}
						}

						/**
						 * [tDBInput_5 begin ] stop
						 */

						/**
						 * [tDBInput_5 main ] start
						 */

						currentComponent = "tDBInput_5";

						tos_count_tDBInput_5++;

						/**
						 * [tDBInput_5 main ] stop
						 */

						/**
						 * [tDBInput_5 process_data_begin ] start
						 */

						currentComponent = "tDBInput_5";

						/**
						 * [tDBInput_5 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row47 main ] start
						 */

						currentComponent = "tAdvancedHash_row47";

						if (execStat) {
							runStat.updateStatOnConnection(iterateId, 1, 1

									, "row47"

							);
						}

						row47Struct row47_HashRow = new row47Struct();

						row47_HashRow.groupe_client_id = row47.groupe_client_id;

						row47_HashRow.Groupe_Client = row47.Groupe_Client;

						tHash_Lookup_row47.put(row47_HashRow);

						tos_count_tAdvancedHash_row47++;

						/**
						 * [tAdvancedHash_row47 main ] stop
						 */

						/**
						 * [tAdvancedHash_row47 process_data_begin ] start
						 */

						currentComponent = "tAdvancedHash_row47";

						/**
						 * [tAdvancedHash_row47 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row47 process_data_end ] start
						 */

						currentComponent = "tAdvancedHash_row47";

						/**
						 * [tAdvancedHash_row47 process_data_end ] stop
						 */

						/**
						 * [tDBInput_5 process_data_end ] start
						 */

						currentComponent = "tDBInput_5";

						/**
						 * [tDBInput_5 process_data_end ] stop
						 */

						/**
						 * [tDBInput_5 end ] start
						 */

						currentComponent = "tDBInput_5";

					}
				} finally {
					if (rs_tDBInput_5 != null) {
						rs_tDBInput_5.close();
					}
					if (stmt_tDBInput_5 != null) {
						stmt_tDBInput_5.close();
					}
					if (conn_tDBInput_5 != null && !conn_tDBInput_5.isClosed()) {

						conn_tDBInput_5.close();

						if ("com.mysql.cj.jdbc.Driver".equals((String) globalMap.get("driverClass_"))
								&& routines.system.BundleUtils.inOSGi()) {
							Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread")
									.getMethod("checkedShutdown").invoke(null, (Object[]) null);
						}

					}
				}
				globalMap.put("tDBInput_5_NB_LINE", nb_line_tDBInput_5);

				ok_Hash.put("tDBInput_5", true);
				end_Hash.put("tDBInput_5", System.currentTimeMillis());

				/**
				 * [tDBInput_5 end ] stop
				 */

				/**
				 * [tAdvancedHash_row47 end ] start
				 */

				currentComponent = "tAdvancedHash_row47";

				tHash_Lookup_row47.endPut();

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row47");
				}

				ok_Hash.put("tAdvancedHash_row47", true);
				end_Hash.put("tAdvancedHash_row47", System.currentTimeMillis());

				/**
				 * [tAdvancedHash_row47 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tDBInput_5 finally ] start
				 */

				currentComponent = "tDBInput_5";

				/**
				 * [tDBInput_5 finally ] stop
				 */

				/**
				 * [tAdvancedHash_row47 finally ] start
				 */

				currentComponent = "tAdvancedHash_row47";

				/**
				 * [tAdvancedHash_row47 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tDBInput_5_SUBPROCESS_STATE", 1);
	}

	public static class row38Struct implements routines.system.IPersistableComparableLookupRow<row38Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];
		protected static final int DEFAULT_HASHCODE = 1;
		protected static final int PRIME = 31;
		protected int hashCode = DEFAULT_HASHCODE;
		public boolean hashCodeDirty = true;

		public String loopKey;

		public int type_resiliation_id;

		public int getType_resiliation_id() {
			return this.type_resiliation_id;
		}

		public String Type_Resiliation;

		public String getType_Resiliation() {
			return this.Type_Resiliation;
		}

		@Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;

				result = prime * result + ((this.Type_Resiliation == null) ? 0 : this.Type_Resiliation.hashCode());

				this.hashCode = result;
				this.hashCodeDirty = false;
			}
			return this.hashCode;
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			final row38Struct other = (row38Struct) obj;

			if (this.Type_Resiliation == null) {
				if (other.Type_Resiliation != null)
					return false;

			} else if (!this.Type_Resiliation.equals(other.Type_Resiliation))

				return false;

			return true;
		}

		public void copyDataTo(row38Struct other) {

			other.type_resiliation_id = this.type_resiliation_id;
			other.Type_Resiliation = this.Type_Resiliation;

		}

		public void copyKeysDataTo(row38Struct other) {

			other.Type_Resiliation = this.Type_Resiliation;

		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readKeysData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_Resiliation = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_Resiliation = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeKeysData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Type_Resiliation, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Type_Resiliation, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		/**
		 * Fill Values data by reading ObjectInputStream.
		 */
		public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
			try {

				int length = 0;

				this.type_resiliation_id = dis.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
			try {
				int length = 0;

				this.type_resiliation_id = objectIn.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		/**
		 * Return a byte array which represents Values data.
		 */
		public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
			try {

				dos.writeInt(this.type_resiliation_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut) {
			try {

				objectOut.writeInt(this.type_resiliation_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}
		}

		public boolean supportMarshaller() {
			return true;
		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("type_resiliation_id=" + String.valueOf(type_resiliation_id));
			sb.append(",Type_Resiliation=" + Type_Resiliation);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row38Struct other) {

			int returnValue = -1;

			returnValue = checkNullsAndCompare(this.Type_Resiliation, other.Type_Resiliation);
			if (returnValue != 0) {
				return returnValue;
			}

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tDBInput_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tDBInput_6_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				row38Struct row38 = new row38Struct();

				/**
				 * [tAdvancedHash_row38 begin ] start
				 */

				ok_Hash.put("tAdvancedHash_row38", false);
				start_Hash.put("tAdvancedHash_row38", System.currentTimeMillis());

				currentComponent = "tAdvancedHash_row38";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row38");
				}

				int tos_count_tAdvancedHash_row38 = 0;

				// connection name:row38
				// source node:tDBInput_6 - inputs:(after_tFileInputExcel_6)
				// outputs:(row38,row38) | target node:tAdvancedHash_row38 - inputs:(row38)
				// outputs:()
				// linked node: tMap_16 - inputs:(row38,row18) outputs:(llll)

				org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row38 = org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row38Struct> tHash_Lookup_row38 = org.talend.designer.components.lookup.memory.AdvancedMemoryLookup
						.<row38Struct>getLookup(matchingModeEnum_row38);

				globalMap.put("tHash_Lookup_row38", tHash_Lookup_row38);

				/**
				 * [tAdvancedHash_row38 begin ] stop
				 */

				/**
				 * [tDBInput_6 begin ] start
				 */

				ok_Hash.put("tDBInput_6", false);
				start_Hash.put("tDBInput_6", System.currentTimeMillis());

				currentComponent = "tDBInput_6";

				int tos_count_tDBInput_6 = 0;

				org.talend.designer.components.util.mssql.MSSqlGenerateTimestampUtil mssqlGTU_tDBInput_6 = org.talend.designer.components.util.mssql.MSSqlUtilFactory
						.getMSSqlGenerateTimestampUtil();

				java.util.List<String> talendToDBList_tDBInput_6 = new java.util.ArrayList();
				String[] talendToDBArray_tDBInput_6 = new String[] { "FLOAT", "NUMERIC", "NUMERIC IDENTITY", "DECIMAL",
						"DECIMAL IDENTITY", "REAL" };
				java.util.Collections.addAll(talendToDBList_tDBInput_6, talendToDBArray_tDBInput_6);
				int nb_line_tDBInput_6 = 0;
				java.sql.Connection conn_tDBInput_6 = null;
				String driverClass_tDBInput_6 = "net.sourceforge.jtds.jdbc.Driver";
				java.lang.Class jdbcclazz_tDBInput_6 = java.lang.Class.forName(driverClass_tDBInput_6);
				String dbUser_tDBInput_6 = "sa";

				final String decryptedPassword_tDBInput_6 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:oW4Edofw8Wul81DCWyVbOn+wRPCCx/NMUFTWH754eLQ3CQWbxBE=");

				String dbPwd_tDBInput_6 = decryptedPassword_tDBInput_6;

				String port_tDBInput_6 = "1433";
				String dbname_tDBInput_6 = "orange_DW__";
				String url_tDBInput_6 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBInput_6)) {
					url_tDBInput_6 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBInput_6)) {
					url_tDBInput_6 += "//" + "orange_DW__";
				}
				url_tDBInput_6 += ";appName=" + projectName + ";" + "";
				String dbschema_tDBInput_6 = "dbo";

				conn_tDBInput_6 = java.sql.DriverManager.getConnection(url_tDBInput_6, dbUser_tDBInput_6,
						dbPwd_tDBInput_6);

				java.sql.Statement stmt_tDBInput_6 = conn_tDBInput_6.createStatement();

				String dbquery_tDBInput_6 = "SELECT dbo.Dim_type.\"type_résiliation_id\",\n		dbo.Dim_type.Type_Resiliation\nFROM	dbo.Dim_type";

				globalMap.put("tDBInput_6_QUERY", dbquery_tDBInput_6);
				java.sql.ResultSet rs_tDBInput_6 = null;

				try {
					rs_tDBInput_6 = stmt_tDBInput_6.executeQuery(dbquery_tDBInput_6);
					java.sql.ResultSetMetaData rsmd_tDBInput_6 = rs_tDBInput_6.getMetaData();
					int colQtyInRs_tDBInput_6 = rsmd_tDBInput_6.getColumnCount();

					String tmpContent_tDBInput_6 = null;

					while (rs_tDBInput_6.next()) {
						nb_line_tDBInput_6++;

						if (colQtyInRs_tDBInput_6 < 1) {
							row38.type_resiliation_id = 0;
						} else {

							row38.type_resiliation_id = rs_tDBInput_6.getInt(1);
							if (rs_tDBInput_6.wasNull()) {
								throw new RuntimeException("Null value in non-Nullable column");
							}
						}
						if (colQtyInRs_tDBInput_6 < 2) {
							row38.Type_Resiliation = null;
						} else {

							tmpContent_tDBInput_6 = rs_tDBInput_6.getString(2);
							if (tmpContent_tDBInput_6 != null) {
								if (talendToDBList_tDBInput_6.contains(
										rsmd_tDBInput_6.getColumnTypeName(2).toUpperCase(java.util.Locale.ENGLISH))) {
									row38.Type_Resiliation = FormatterUtils.formatUnwithE(tmpContent_tDBInput_6);
								} else {
									row38.Type_Resiliation = tmpContent_tDBInput_6;
								}
							} else {
								row38.Type_Resiliation = null;
							}
						}

						/**
						 * [tDBInput_6 begin ] stop
						 */

						/**
						 * [tDBInput_6 main ] start
						 */

						currentComponent = "tDBInput_6";

						tos_count_tDBInput_6++;

						/**
						 * [tDBInput_6 main ] stop
						 */

						/**
						 * [tDBInput_6 process_data_begin ] start
						 */

						currentComponent = "tDBInput_6";

						/**
						 * [tDBInput_6 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row38 main ] start
						 */

						currentComponent = "tAdvancedHash_row38";

						if (execStat) {
							runStat.updateStatOnConnection(iterateId, 1, 1

									, "row38"

							);
						}

						row38Struct row38_HashRow = new row38Struct();

						row38_HashRow.type_resiliation_id = row38.type_resiliation_id;

						row38_HashRow.Type_Resiliation = row38.Type_Resiliation;

						tHash_Lookup_row38.put(row38_HashRow);

						tos_count_tAdvancedHash_row38++;

						/**
						 * [tAdvancedHash_row38 main ] stop
						 */

						/**
						 * [tAdvancedHash_row38 process_data_begin ] start
						 */

						currentComponent = "tAdvancedHash_row38";

						/**
						 * [tAdvancedHash_row38 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row38 process_data_end ] start
						 */

						currentComponent = "tAdvancedHash_row38";

						/**
						 * [tAdvancedHash_row38 process_data_end ] stop
						 */

						/**
						 * [tDBInput_6 process_data_end ] start
						 */

						currentComponent = "tDBInput_6";

						/**
						 * [tDBInput_6 process_data_end ] stop
						 */

						/**
						 * [tDBInput_6 end ] start
						 */

						currentComponent = "tDBInput_6";

					}
				} finally {
					if (rs_tDBInput_6 != null) {
						rs_tDBInput_6.close();
					}
					if (stmt_tDBInput_6 != null) {
						stmt_tDBInput_6.close();
					}
					if (conn_tDBInput_6 != null && !conn_tDBInput_6.isClosed()) {

						conn_tDBInput_6.close();

						if ("com.mysql.cj.jdbc.Driver".equals((String) globalMap.get("driverClass_"))
								&& routines.system.BundleUtils.inOSGi()) {
							Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread")
									.getMethod("checkedShutdown").invoke(null, (Object[]) null);
						}

					}
				}
				globalMap.put("tDBInput_6_NB_LINE", nb_line_tDBInput_6);

				ok_Hash.put("tDBInput_6", true);
				end_Hash.put("tDBInput_6", System.currentTimeMillis());

				/**
				 * [tDBInput_6 end ] stop
				 */

				/**
				 * [tAdvancedHash_row38 end ] start
				 */

				currentComponent = "tAdvancedHash_row38";

				tHash_Lookup_row38.endPut();

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row38");
				}

				ok_Hash.put("tAdvancedHash_row38", true);
				end_Hash.put("tAdvancedHash_row38", System.currentTimeMillis());

				/**
				 * [tAdvancedHash_row38 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tDBInput_6 finally ] start
				 */

				currentComponent = "tDBInput_6";

				/**
				 * [tDBInput_6 finally ] stop
				 */

				/**
				 * [tAdvancedHash_row38 finally ] start
				 */

				currentComponent = "tAdvancedHash_row38";

				/**
				 * [tAdvancedHash_row38 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tDBInput_6_SUBPROCESS_STATE", 1);
	}

	public static class row40Struct implements routines.system.IPersistableComparableLookupRow<row40Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];
		protected static final int DEFAULT_HASHCODE = 1;
		protected static final int PRIME = 31;
		protected int hashCode = DEFAULT_HASHCODE;
		public boolean hashCodeDirty = true;

		public String loopKey;

		public int Engage_id;

		public int getEngage_id() {
			return this.Engage_id;
		}

		public String Engage_Oui_Non;

		public String getEngage_Oui_Non() {
			return this.Engage_Oui_Non;
		}

		@Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;

				result = prime * result + ((this.Engage_Oui_Non == null) ? 0 : this.Engage_Oui_Non.hashCode());

				this.hashCode = result;
				this.hashCodeDirty = false;
			}
			return this.hashCode;
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			final row40Struct other = (row40Struct) obj;

			if (this.Engage_Oui_Non == null) {
				if (other.Engage_Oui_Non != null)
					return false;

			} else if (!this.Engage_Oui_Non.equals(other.Engage_Oui_Non))

				return false;

			return true;
		}

		public void copyDataTo(row40Struct other) {

			other.Engage_id = this.Engage_id;
			other.Engage_Oui_Non = this.Engage_Oui_Non;

		}

		public void copyKeysDataTo(row40Struct other) {

			other.Engage_Oui_Non = this.Engage_Oui_Non;

		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readKeysData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Engage_Oui_Non = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Engage_Oui_Non = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeKeysData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Engage_Oui_Non, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Engage_Oui_Non, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		/**
		 * Fill Values data by reading ObjectInputStream.
		 */
		public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
			try {

				int length = 0;

				this.Engage_id = dis.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
			try {
				int length = 0;

				this.Engage_id = objectIn.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		/**
		 * Return a byte array which represents Values data.
		 */
		public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
			try {

				dos.writeInt(this.Engage_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut) {
			try {

				objectOut.writeInt(this.Engage_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}
		}

		public boolean supportMarshaller() {
			return true;
		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Engage_id=" + String.valueOf(Engage_id));
			sb.append(",Engage_Oui_Non=" + Engage_Oui_Non);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row40Struct other) {

			int returnValue = -1;

			returnValue = checkNullsAndCompare(this.Engage_Oui_Non, other.Engage_Oui_Non);
			if (returnValue != 0) {
				return returnValue;
			}

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tDBInput_7Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tDBInput_7_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				row40Struct row40 = new row40Struct();

				/**
				 * [tAdvancedHash_row40 begin ] start
				 */

				ok_Hash.put("tAdvancedHash_row40", false);
				start_Hash.put("tAdvancedHash_row40", System.currentTimeMillis());

				currentComponent = "tAdvancedHash_row40";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row40");
				}

				int tos_count_tAdvancedHash_row40 = 0;

				// connection name:row40
				// source node:tDBInput_7 - inputs:(after_tFileInputExcel_15)
				// outputs:(row40,row40) | target node:tAdvancedHash_row40 - inputs:(row40)
				// outputs:()
				// linked node: tMap_39 - inputs:(row40,row22) outputs:(u)

				org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row40 = org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row40Struct> tHash_Lookup_row40 = org.talend.designer.components.lookup.memory.AdvancedMemoryLookup
						.<row40Struct>getLookup(matchingModeEnum_row40);

				globalMap.put("tHash_Lookup_row40", tHash_Lookup_row40);

				/**
				 * [tAdvancedHash_row40 begin ] stop
				 */

				/**
				 * [tDBInput_7 begin ] start
				 */

				ok_Hash.put("tDBInput_7", false);
				start_Hash.put("tDBInput_7", System.currentTimeMillis());

				currentComponent = "tDBInput_7";

				int tos_count_tDBInput_7 = 0;

				org.talend.designer.components.util.mssql.MSSqlGenerateTimestampUtil mssqlGTU_tDBInput_7 = org.talend.designer.components.util.mssql.MSSqlUtilFactory
						.getMSSqlGenerateTimestampUtil();

				java.util.List<String> talendToDBList_tDBInput_7 = new java.util.ArrayList();
				String[] talendToDBArray_tDBInput_7 = new String[] { "FLOAT", "NUMERIC", "NUMERIC IDENTITY", "DECIMAL",
						"DECIMAL IDENTITY", "REAL" };
				java.util.Collections.addAll(talendToDBList_tDBInput_7, talendToDBArray_tDBInput_7);
				int nb_line_tDBInput_7 = 0;
				java.sql.Connection conn_tDBInput_7 = null;
				String driverClass_tDBInput_7 = "net.sourceforge.jtds.jdbc.Driver";
				java.lang.Class jdbcclazz_tDBInput_7 = java.lang.Class.forName(driverClass_tDBInput_7);
				String dbUser_tDBInput_7 = "sa";

				final String decryptedPassword_tDBInput_7 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:2DxWN9NGa2NITFUUi5IO3R1cXgOKLpqKIlGWc+kfnCVkklMaiHo=");

				String dbPwd_tDBInput_7 = decryptedPassword_tDBInput_7;

				String port_tDBInput_7 = "1433";
				String dbname_tDBInput_7 = "orange_DW__";
				String url_tDBInput_7 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBInput_7)) {
					url_tDBInput_7 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBInput_7)) {
					url_tDBInput_7 += "//" + "orange_DW__";
				}
				url_tDBInput_7 += ";appName=" + projectName + ";" + "";
				String dbschema_tDBInput_7 = "dbo";

				conn_tDBInput_7 = java.sql.DriverManager.getConnection(url_tDBInput_7, dbUser_tDBInput_7,
						dbPwd_tDBInput_7);

				java.sql.Statement stmt_tDBInput_7 = conn_tDBInput_7.createStatement();

				String dbquery_tDBInput_7 = "SELECT dbo.Dim_Engage.Engage_id,\n		dbo.Dim_Engage.Engage_Oui_Non\nFROM	dbo.Dim_Engage";

				globalMap.put("tDBInput_7_QUERY", dbquery_tDBInput_7);
				java.sql.ResultSet rs_tDBInput_7 = null;

				try {
					rs_tDBInput_7 = stmt_tDBInput_7.executeQuery(dbquery_tDBInput_7);
					java.sql.ResultSetMetaData rsmd_tDBInput_7 = rs_tDBInput_7.getMetaData();
					int colQtyInRs_tDBInput_7 = rsmd_tDBInput_7.getColumnCount();

					String tmpContent_tDBInput_7 = null;

					while (rs_tDBInput_7.next()) {
						nb_line_tDBInput_7++;

						if (colQtyInRs_tDBInput_7 < 1) {
							row40.Engage_id = 0;
						} else {

							row40.Engage_id = rs_tDBInput_7.getInt(1);
							if (rs_tDBInput_7.wasNull()) {
								throw new RuntimeException("Null value in non-Nullable column");
							}
						}
						if (colQtyInRs_tDBInput_7 < 2) {
							row40.Engage_Oui_Non = null;
						} else {

							tmpContent_tDBInput_7 = rs_tDBInput_7.getString(2);
							if (tmpContent_tDBInput_7 != null) {
								if (talendToDBList_tDBInput_7.contains(
										rsmd_tDBInput_7.getColumnTypeName(2).toUpperCase(java.util.Locale.ENGLISH))) {
									row40.Engage_Oui_Non = FormatterUtils.formatUnwithE(tmpContent_tDBInput_7);
								} else {
									row40.Engage_Oui_Non = tmpContent_tDBInput_7;
								}
							} else {
								row40.Engage_Oui_Non = null;
							}
						}

						/**
						 * [tDBInput_7 begin ] stop
						 */

						/**
						 * [tDBInput_7 main ] start
						 */

						currentComponent = "tDBInput_7";

						tos_count_tDBInput_7++;

						/**
						 * [tDBInput_7 main ] stop
						 */

						/**
						 * [tDBInput_7 process_data_begin ] start
						 */

						currentComponent = "tDBInput_7";

						/**
						 * [tDBInput_7 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row40 main ] start
						 */

						currentComponent = "tAdvancedHash_row40";

						if (execStat) {
							runStat.updateStatOnConnection(iterateId, 1, 1

									, "row40"

							);
						}

						row40Struct row40_HashRow = new row40Struct();

						row40_HashRow.Engage_id = row40.Engage_id;

						row40_HashRow.Engage_Oui_Non = row40.Engage_Oui_Non;

						tHash_Lookup_row40.put(row40_HashRow);

						tos_count_tAdvancedHash_row40++;

						/**
						 * [tAdvancedHash_row40 main ] stop
						 */

						/**
						 * [tAdvancedHash_row40 process_data_begin ] start
						 */

						currentComponent = "tAdvancedHash_row40";

						/**
						 * [tAdvancedHash_row40 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row40 process_data_end ] start
						 */

						currentComponent = "tAdvancedHash_row40";

						/**
						 * [tAdvancedHash_row40 process_data_end ] stop
						 */

						/**
						 * [tDBInput_7 process_data_end ] start
						 */

						currentComponent = "tDBInput_7";

						/**
						 * [tDBInput_7 process_data_end ] stop
						 */

						/**
						 * [tDBInput_7 end ] start
						 */

						currentComponent = "tDBInput_7";

					}
				} finally {
					if (rs_tDBInput_7 != null) {
						rs_tDBInput_7.close();
					}
					if (stmt_tDBInput_7 != null) {
						stmt_tDBInput_7.close();
					}
					if (conn_tDBInput_7 != null && !conn_tDBInput_7.isClosed()) {

						conn_tDBInput_7.close();

						if ("com.mysql.cj.jdbc.Driver".equals((String) globalMap.get("driverClass_"))
								&& routines.system.BundleUtils.inOSGi()) {
							Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread")
									.getMethod("checkedShutdown").invoke(null, (Object[]) null);
						}

					}
				}
				globalMap.put("tDBInput_7_NB_LINE", nb_line_tDBInput_7);

				ok_Hash.put("tDBInput_7", true);
				end_Hash.put("tDBInput_7", System.currentTimeMillis());

				/**
				 * [tDBInput_7 end ] stop
				 */

				/**
				 * [tAdvancedHash_row40 end ] start
				 */

				currentComponent = "tAdvancedHash_row40";

				tHash_Lookup_row40.endPut();

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row40");
				}

				ok_Hash.put("tAdvancedHash_row40", true);
				end_Hash.put("tAdvancedHash_row40", System.currentTimeMillis());

				/**
				 * [tAdvancedHash_row40 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tDBInput_7 finally ] start
				 */

				currentComponent = "tDBInput_7";

				/**
				 * [tDBInput_7 finally ] stop
				 */

				/**
				 * [tAdvancedHash_row40 finally ] start
				 */

				currentComponent = "tAdvancedHash_row40";

				/**
				 * [tAdvancedHash_row40 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tDBInput_7_SUBPROCESS_STATE", 1);
	}

	public static class row34Struct implements routines.system.IPersistableComparableLookupRow<row34Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];
		protected static final int DEFAULT_HASHCODE = 1;
		protected static final int PRIME = 31;
		protected int hashCode = DEFAULT_HASHCODE;
		public boolean hashCodeDirty = true;

		public String loopKey;

		public int Motif_id;

		public int getMotif_id() {
			return this.Motif_id;
		}

		public String Motif;

		public String getMotif() {
			return this.Motif;
		}

		@Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;

				result = prime * result + ((this.Motif == null) ? 0 : this.Motif.hashCode());

				this.hashCode = result;
				this.hashCodeDirty = false;
			}
			return this.hashCode;
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			final row34Struct other = (row34Struct) obj;

			if (this.Motif == null) {
				if (other.Motif != null)
					return false;

			} else if (!this.Motif.equals(other.Motif))

				return false;

			return true;
		}

		public void copyDataTo(row34Struct other) {

			other.Motif_id = this.Motif_id;
			other.Motif = this.Motif;

		}

		public void copyKeysDataTo(row34Struct other) {

			other.Motif = this.Motif;

		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readKeysData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Motif = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Motif = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeKeysData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Motif, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Motif, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		/**
		 * Fill Values data by reading ObjectInputStream.
		 */
		public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
			try {

				int length = 0;

				this.Motif_id = dis.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
			try {
				int length = 0;

				this.Motif_id = objectIn.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		/**
		 * Return a byte array which represents Values data.
		 */
		public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
			try {

				dos.writeInt(this.Motif_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut) {
			try {

				objectOut.writeInt(this.Motif_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}
		}

		public boolean supportMarshaller() {
			return true;
		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Motif_id=" + String.valueOf(Motif_id));
			sb.append(",Motif=" + Motif);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row34Struct other) {

			int returnValue = -1;

			returnValue = checkNullsAndCompare(this.Motif, other.Motif);
			if (returnValue != 0) {
				return returnValue;
			}

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tDBInput_8Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tDBInput_8_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				row34Struct row34 = new row34Struct();

				/**
				 * [tAdvancedHash_row34 begin ] start
				 */

				ok_Hash.put("tAdvancedHash_row34", false);
				start_Hash.put("tAdvancedHash_row34", System.currentTimeMillis());

				currentComponent = "tAdvancedHash_row34";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row34");
				}

				int tos_count_tAdvancedHash_row34 = 0;

				// connection name:row34
				// source node:tDBInput_8 - inputs:(after_tFileInputExcel_23)
				// outputs:(row34,row34) | target node:tAdvancedHash_row34 - inputs:(row34)
				// outputs:()
				// linked node: tMap_40 - inputs:(row34,row16) outputs:(z)

				org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row34 = org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row34Struct> tHash_Lookup_row34 = org.talend.designer.components.lookup.memory.AdvancedMemoryLookup
						.<row34Struct>getLookup(matchingModeEnum_row34);

				globalMap.put("tHash_Lookup_row34", tHash_Lookup_row34);

				/**
				 * [tAdvancedHash_row34 begin ] stop
				 */

				/**
				 * [tDBInput_8 begin ] start
				 */

				ok_Hash.put("tDBInput_8", false);
				start_Hash.put("tDBInput_8", System.currentTimeMillis());

				currentComponent = "tDBInput_8";

				int tos_count_tDBInput_8 = 0;

				org.talend.designer.components.util.mssql.MSSqlGenerateTimestampUtil mssqlGTU_tDBInput_8 = org.talend.designer.components.util.mssql.MSSqlUtilFactory
						.getMSSqlGenerateTimestampUtil();

				java.util.List<String> talendToDBList_tDBInput_8 = new java.util.ArrayList();
				String[] talendToDBArray_tDBInput_8 = new String[] { "FLOAT", "NUMERIC", "NUMERIC IDENTITY", "DECIMAL",
						"DECIMAL IDENTITY", "REAL" };
				java.util.Collections.addAll(talendToDBList_tDBInput_8, talendToDBArray_tDBInput_8);
				int nb_line_tDBInput_8 = 0;
				java.sql.Connection conn_tDBInput_8 = null;
				String driverClass_tDBInput_8 = "net.sourceforge.jtds.jdbc.Driver";
				java.lang.Class jdbcclazz_tDBInput_8 = java.lang.Class.forName(driverClass_tDBInput_8);
				String dbUser_tDBInput_8 = "sa";

				final String decryptedPassword_tDBInput_8 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:nw083kGRBBpQ1RNL/GX6b64UVmwcGZyvswxUMfkDjWq04YhjxvU=");

				String dbPwd_tDBInput_8 = decryptedPassword_tDBInput_8;

				String port_tDBInput_8 = "1433";
				String dbname_tDBInput_8 = "orange_DW__";
				String url_tDBInput_8 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBInput_8)) {
					url_tDBInput_8 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBInput_8)) {
					url_tDBInput_8 += "//" + "orange_DW__";
				}
				url_tDBInput_8 += ";appName=" + projectName + ";" + "";
				String dbschema_tDBInput_8 = "dbo";

				conn_tDBInput_8 = java.sql.DriverManager.getConnection(url_tDBInput_8, dbUser_tDBInput_8,
						dbPwd_tDBInput_8);

				java.sql.Statement stmt_tDBInput_8 = conn_tDBInput_8.createStatement();

				String dbquery_tDBInput_8 = "SELECT dbo.Dim_Motif.Motif_id,\n		dbo.Dim_Motif.Motif\nFROM	dbo.Dim_Motif";

				globalMap.put("tDBInput_8_QUERY", dbquery_tDBInput_8);
				java.sql.ResultSet rs_tDBInput_8 = null;

				try {
					rs_tDBInput_8 = stmt_tDBInput_8.executeQuery(dbquery_tDBInput_8);
					java.sql.ResultSetMetaData rsmd_tDBInput_8 = rs_tDBInput_8.getMetaData();
					int colQtyInRs_tDBInput_8 = rsmd_tDBInput_8.getColumnCount();

					String tmpContent_tDBInput_8 = null;

					while (rs_tDBInput_8.next()) {
						nb_line_tDBInput_8++;

						if (colQtyInRs_tDBInput_8 < 1) {
							row34.Motif_id = 0;
						} else {

							row34.Motif_id = rs_tDBInput_8.getInt(1);
							if (rs_tDBInput_8.wasNull()) {
								throw new RuntimeException("Null value in non-Nullable column");
							}
						}
						if (colQtyInRs_tDBInput_8 < 2) {
							row34.Motif = null;
						} else {

							tmpContent_tDBInput_8 = rs_tDBInput_8.getString(2);
							if (tmpContent_tDBInput_8 != null) {
								if (talendToDBList_tDBInput_8.contains(
										rsmd_tDBInput_8.getColumnTypeName(2).toUpperCase(java.util.Locale.ENGLISH))) {
									row34.Motif = FormatterUtils.formatUnwithE(tmpContent_tDBInput_8);
								} else {
									row34.Motif = tmpContent_tDBInput_8;
								}
							} else {
								row34.Motif = null;
							}
						}

						/**
						 * [tDBInput_8 begin ] stop
						 */

						/**
						 * [tDBInput_8 main ] start
						 */

						currentComponent = "tDBInput_8";

						tos_count_tDBInput_8++;

						/**
						 * [tDBInput_8 main ] stop
						 */

						/**
						 * [tDBInput_8 process_data_begin ] start
						 */

						currentComponent = "tDBInput_8";

						/**
						 * [tDBInput_8 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row34 main ] start
						 */

						currentComponent = "tAdvancedHash_row34";

						if (execStat) {
							runStat.updateStatOnConnection(iterateId, 1, 1

									, "row34"

							);
						}

						row34Struct row34_HashRow = new row34Struct();

						row34_HashRow.Motif_id = row34.Motif_id;

						row34_HashRow.Motif = row34.Motif;

						tHash_Lookup_row34.put(row34_HashRow);

						tos_count_tAdvancedHash_row34++;

						/**
						 * [tAdvancedHash_row34 main ] stop
						 */

						/**
						 * [tAdvancedHash_row34 process_data_begin ] start
						 */

						currentComponent = "tAdvancedHash_row34";

						/**
						 * [tAdvancedHash_row34 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row34 process_data_end ] start
						 */

						currentComponent = "tAdvancedHash_row34";

						/**
						 * [tAdvancedHash_row34 process_data_end ] stop
						 */

						/**
						 * [tDBInput_8 process_data_end ] start
						 */

						currentComponent = "tDBInput_8";

						/**
						 * [tDBInput_8 process_data_end ] stop
						 */

						/**
						 * [tDBInput_8 end ] start
						 */

						currentComponent = "tDBInput_8";

					}
				} finally {
					if (rs_tDBInput_8 != null) {
						rs_tDBInput_8.close();
					}
					if (stmt_tDBInput_8 != null) {
						stmt_tDBInput_8.close();
					}
					if (conn_tDBInput_8 != null && !conn_tDBInput_8.isClosed()) {

						conn_tDBInput_8.close();

						if ("com.mysql.cj.jdbc.Driver".equals((String) globalMap.get("driverClass_"))
								&& routines.system.BundleUtils.inOSGi()) {
							Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread")
									.getMethod("checkedShutdown").invoke(null, (Object[]) null);
						}

					}
				}
				globalMap.put("tDBInput_8_NB_LINE", nb_line_tDBInput_8);

				ok_Hash.put("tDBInput_8", true);
				end_Hash.put("tDBInput_8", System.currentTimeMillis());

				/**
				 * [tDBInput_8 end ] stop
				 */

				/**
				 * [tAdvancedHash_row34 end ] start
				 */

				currentComponent = "tAdvancedHash_row34";

				tHash_Lookup_row34.endPut();

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row34");
				}

				ok_Hash.put("tAdvancedHash_row34", true);
				end_Hash.put("tAdvancedHash_row34", System.currentTimeMillis());

				/**
				 * [tAdvancedHash_row34 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tDBInput_8 finally ] start
				 */

				currentComponent = "tDBInput_8";

				/**
				 * [tDBInput_8 finally ] stop
				 */

				/**
				 * [tAdvancedHash_row34 finally ] start
				 */

				currentComponent = "tAdvancedHash_row34";

				/**
				 * [tAdvancedHash_row34 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tDBInput_8_SUBPROCESS_STATE", 1);
	}

	public static class row14Struct implements routines.system.IPersistableComparableLookupRow<row14Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];
		protected static final int DEFAULT_HASHCODE = 1;
		protected static final int PRIME = 31;
		protected int hashCode = DEFAULT_HASHCODE;
		public boolean hashCodeDirty = true;

		public String loopKey;

		public int gouvernorat_id;

		public int getGouvernorat_id() {
			return this.gouvernorat_id;
		}

		public String Gouvernorat;

		public String getGouvernorat() {
			return this.Gouvernorat;
		}

		@Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;

				result = prime * result + ((this.Gouvernorat == null) ? 0 : this.Gouvernorat.hashCode());

				this.hashCode = result;
				this.hashCodeDirty = false;
			}
			return this.hashCode;
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			final row14Struct other = (row14Struct) obj;

			if (this.Gouvernorat == null) {
				if (other.Gouvernorat != null)
					return false;

			} else if (!this.Gouvernorat.equals(other.Gouvernorat))

				return false;

			return true;
		}

		public void copyDataTo(row14Struct other) {

			other.gouvernorat_id = this.gouvernorat_id;
			other.Gouvernorat = this.Gouvernorat;

		}

		public void copyKeysDataTo(row14Struct other) {

			other.Gouvernorat = this.Gouvernorat;

		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readKeysData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Gouvernorat = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Gouvernorat = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeKeysData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Gouvernorat, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Gouvernorat, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		/**
		 * Fill Values data by reading ObjectInputStream.
		 */
		public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
			try {

				int length = 0;

				this.gouvernorat_id = dis.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
			try {
				int length = 0;

				this.gouvernorat_id = objectIn.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		/**
		 * Return a byte array which represents Values data.
		 */
		public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
			try {

				dos.writeInt(this.gouvernorat_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut) {
			try {

				objectOut.writeInt(this.gouvernorat_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}
		}

		public boolean supportMarshaller() {
			return true;
		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("gouvernorat_id=" + String.valueOf(gouvernorat_id));
			sb.append(",Gouvernorat=" + Gouvernorat);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row14Struct other) {

			int returnValue = -1;

			returnValue = checkNullsAndCompare(this.Gouvernorat, other.Gouvernorat);
			if (returnValue != 0) {
				return returnValue;
			}

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tDBInput_9Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tDBInput_9_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				row14Struct row14 = new row14Struct();

				/**
				 * [tAdvancedHash_row14 begin ] start
				 */

				ok_Hash.put("tAdvancedHash_row14", false);
				start_Hash.put("tAdvancedHash_row14", System.currentTimeMillis());

				currentComponent = "tAdvancedHash_row14";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row14");
				}

				int tos_count_tAdvancedHash_row14 = 0;

				// connection name:row14
				// source node:tDBInput_9 - inputs:(after_tFileInputExcel_20)
				// outputs:(row14,row14) | target node:tAdvancedHash_row14 - inputs:(row14)
				// outputs:()
				// linked node: tMap_41 - inputs:(row14,row13) outputs:(a)

				org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row14 = org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row14Struct> tHash_Lookup_row14 = org.talend.designer.components.lookup.memory.AdvancedMemoryLookup
						.<row14Struct>getLookup(matchingModeEnum_row14);

				globalMap.put("tHash_Lookup_row14", tHash_Lookup_row14);

				/**
				 * [tAdvancedHash_row14 begin ] stop
				 */

				/**
				 * [tDBInput_9 begin ] start
				 */

				ok_Hash.put("tDBInput_9", false);
				start_Hash.put("tDBInput_9", System.currentTimeMillis());

				currentComponent = "tDBInput_9";

				int tos_count_tDBInput_9 = 0;

				org.talend.designer.components.util.mssql.MSSqlGenerateTimestampUtil mssqlGTU_tDBInput_9 = org.talend.designer.components.util.mssql.MSSqlUtilFactory
						.getMSSqlGenerateTimestampUtil();

				java.util.List<String> talendToDBList_tDBInput_9 = new java.util.ArrayList();
				String[] talendToDBArray_tDBInput_9 = new String[] { "FLOAT", "NUMERIC", "NUMERIC IDENTITY", "DECIMAL",
						"DECIMAL IDENTITY", "REAL" };
				java.util.Collections.addAll(talendToDBList_tDBInput_9, talendToDBArray_tDBInput_9);
				int nb_line_tDBInput_9 = 0;
				java.sql.Connection conn_tDBInput_9 = null;
				String driverClass_tDBInput_9 = "net.sourceforge.jtds.jdbc.Driver";
				java.lang.Class jdbcclazz_tDBInput_9 = java.lang.Class.forName(driverClass_tDBInput_9);
				String dbUser_tDBInput_9 = "sa";

				final String decryptedPassword_tDBInput_9 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:v6GO+qdunqder3UoUIx05G3ny+1mNnVVdbQfl4dVXjvu36Efc8E=");

				String dbPwd_tDBInput_9 = decryptedPassword_tDBInput_9;

				String port_tDBInput_9 = "1433";
				String dbname_tDBInput_9 = "orange_DW__";
				String url_tDBInput_9 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBInput_9)) {
					url_tDBInput_9 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBInput_9)) {
					url_tDBInput_9 += "//" + "orange_DW__";
				}
				url_tDBInput_9 += ";appName=" + projectName + ";" + "";
				String dbschema_tDBInput_9 = "dbo";

				conn_tDBInput_9 = java.sql.DriverManager.getConnection(url_tDBInput_9, dbUser_tDBInput_9,
						dbPwd_tDBInput_9);

				java.sql.Statement stmt_tDBInput_9 = conn_tDBInput_9.createStatement();

				String dbquery_tDBInput_9 = "SELECT dbo.Dim_gouvernorat.gouvernorat_id,\n		dbo.Dim_gouvernorat.Gouvernorat\nFROM	dbo.Dim_gouvernorat";

				globalMap.put("tDBInput_9_QUERY", dbquery_tDBInput_9);
				java.sql.ResultSet rs_tDBInput_9 = null;

				try {
					rs_tDBInput_9 = stmt_tDBInput_9.executeQuery(dbquery_tDBInput_9);
					java.sql.ResultSetMetaData rsmd_tDBInput_9 = rs_tDBInput_9.getMetaData();
					int colQtyInRs_tDBInput_9 = rsmd_tDBInput_9.getColumnCount();

					String tmpContent_tDBInput_9 = null;

					while (rs_tDBInput_9.next()) {
						nb_line_tDBInput_9++;

						if (colQtyInRs_tDBInput_9 < 1) {
							row14.gouvernorat_id = 0;
						} else {

							row14.gouvernorat_id = rs_tDBInput_9.getInt(1);
							if (rs_tDBInput_9.wasNull()) {
								throw new RuntimeException("Null value in non-Nullable column");
							}
						}
						if (colQtyInRs_tDBInput_9 < 2) {
							row14.Gouvernorat = null;
						} else {

							tmpContent_tDBInput_9 = rs_tDBInput_9.getString(2);
							if (tmpContent_tDBInput_9 != null) {
								if (talendToDBList_tDBInput_9.contains(
										rsmd_tDBInput_9.getColumnTypeName(2).toUpperCase(java.util.Locale.ENGLISH))) {
									row14.Gouvernorat = FormatterUtils.formatUnwithE(tmpContent_tDBInput_9);
								} else {
									row14.Gouvernorat = tmpContent_tDBInput_9;
								}
							} else {
								row14.Gouvernorat = null;
							}
						}

						/**
						 * [tDBInput_9 begin ] stop
						 */

						/**
						 * [tDBInput_9 main ] start
						 */

						currentComponent = "tDBInput_9";

						tos_count_tDBInput_9++;

						/**
						 * [tDBInput_9 main ] stop
						 */

						/**
						 * [tDBInput_9 process_data_begin ] start
						 */

						currentComponent = "tDBInput_9";

						/**
						 * [tDBInput_9 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row14 main ] start
						 */

						currentComponent = "tAdvancedHash_row14";

						if (execStat) {
							runStat.updateStatOnConnection(iterateId, 1, 1

									, "row14"

							);
						}

						row14Struct row14_HashRow = new row14Struct();

						row14_HashRow.gouvernorat_id = row14.gouvernorat_id;

						row14_HashRow.Gouvernorat = row14.Gouvernorat;

						tHash_Lookup_row14.put(row14_HashRow);

						tos_count_tAdvancedHash_row14++;

						/**
						 * [tAdvancedHash_row14 main ] stop
						 */

						/**
						 * [tAdvancedHash_row14 process_data_begin ] start
						 */

						currentComponent = "tAdvancedHash_row14";

						/**
						 * [tAdvancedHash_row14 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row14 process_data_end ] start
						 */

						currentComponent = "tAdvancedHash_row14";

						/**
						 * [tAdvancedHash_row14 process_data_end ] stop
						 */

						/**
						 * [tDBInput_9 process_data_end ] start
						 */

						currentComponent = "tDBInput_9";

						/**
						 * [tDBInput_9 process_data_end ] stop
						 */

						/**
						 * [tDBInput_9 end ] start
						 */

						currentComponent = "tDBInput_9";

					}
				} finally {
					if (rs_tDBInput_9 != null) {
						rs_tDBInput_9.close();
					}
					if (stmt_tDBInput_9 != null) {
						stmt_tDBInput_9.close();
					}
					if (conn_tDBInput_9 != null && !conn_tDBInput_9.isClosed()) {

						conn_tDBInput_9.close();

						if ("com.mysql.cj.jdbc.Driver".equals((String) globalMap.get("driverClass_"))
								&& routines.system.BundleUtils.inOSGi()) {
							Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread")
									.getMethod("checkedShutdown").invoke(null, (Object[]) null);
						}

					}
				}
				globalMap.put("tDBInput_9_NB_LINE", nb_line_tDBInput_9);

				ok_Hash.put("tDBInput_9", true);
				end_Hash.put("tDBInput_9", System.currentTimeMillis());

				/**
				 * [tDBInput_9 end ] stop
				 */

				/**
				 * [tAdvancedHash_row14 end ] start
				 */

				currentComponent = "tAdvancedHash_row14";

				tHash_Lookup_row14.endPut();

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row14");
				}

				ok_Hash.put("tAdvancedHash_row14", true);
				end_Hash.put("tAdvancedHash_row14", System.currentTimeMillis());

				/**
				 * [tAdvancedHash_row14 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tDBInput_9 finally ] start
				 */

				currentComponent = "tDBInput_9";

				/**
				 * [tDBInput_9 finally ] stop
				 */

				/**
				 * [tAdvancedHash_row14 finally ] start
				 */

				currentComponent = "tAdvancedHash_row14";

				/**
				 * [tAdvancedHash_row14 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tDBInput_9_SUBPROCESS_STATE", 1);
	}

	public static class row56Struct implements routines.system.IPersistableComparableLookupRow<row56Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];
		protected static final int DEFAULT_HASHCODE = 1;
		protected static final int PRIME = 31;
		protected int hashCode = DEFAULT_HASHCODE;
		public boolean hashCodeDirty = true;

		public String loopKey;

		public int phase_de_l_opportunite_id;

		public int getPhase_de_l_opportunite_id() {
			return this.phase_de_l_opportunite_id;
		}

		public String Phase_de_l_opportunite;

		public String getPhase_de_l_opportunite() {
			return this.Phase_de_l_opportunite;
		}

		@Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;

				result = prime * result
						+ ((this.Phase_de_l_opportunite == null) ? 0 : this.Phase_de_l_opportunite.hashCode());

				this.hashCode = result;
				this.hashCodeDirty = false;
			}
			return this.hashCode;
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			final row56Struct other = (row56Struct) obj;

			if (this.Phase_de_l_opportunite == null) {
				if (other.Phase_de_l_opportunite != null)
					return false;

			} else if (!this.Phase_de_l_opportunite.equals(other.Phase_de_l_opportunite))

				return false;

			return true;
		}

		public void copyDataTo(row56Struct other) {

			other.phase_de_l_opportunite_id = this.phase_de_l_opportunite_id;
			other.Phase_de_l_opportunite = this.Phase_de_l_opportunite;

		}

		public void copyKeysDataTo(row56Struct other) {

			other.Phase_de_l_opportunite = this.Phase_de_l_opportunite;

		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readKeysData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Phase_de_l_opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Phase_de_l_opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeKeysData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Phase_de_l_opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Phase_de_l_opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		/**
		 * Fill Values data by reading ObjectInputStream.
		 */
		public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
			try {

				int length = 0;

				this.phase_de_l_opportunite_id = dis.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
			try {
				int length = 0;

				this.phase_de_l_opportunite_id = objectIn.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		/**
		 * Return a byte array which represents Values data.
		 */
		public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
			try {

				dos.writeInt(this.phase_de_l_opportunite_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut) {
			try {

				objectOut.writeInt(this.phase_de_l_opportunite_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}
		}

		public boolean supportMarshaller() {
			return true;
		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("phase_de_l_opportunite_id=" + String.valueOf(phase_de_l_opportunite_id));
			sb.append(",Phase_de_l_opportunite=" + Phase_de_l_opportunite);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row56Struct other) {

			int returnValue = -1;

			returnValue = checkNullsAndCompare(this.Phase_de_l_opportunite, other.Phase_de_l_opportunite);
			if (returnValue != 0) {
				return returnValue;
			}

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tDBInput_10Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tDBInput_10_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				row56Struct row56 = new row56Struct();

				/**
				 * [tAdvancedHash_row56 begin ] start
				 */

				ok_Hash.put("tAdvancedHash_row56", false);
				start_Hash.put("tAdvancedHash_row56", System.currentTimeMillis());

				currentComponent = "tAdvancedHash_row56";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row56");
				}

				int tos_count_tAdvancedHash_row56 = 0;

				// connection name:row56
				// source node:tDBInput_10 - inputs:(after_tFileInputExcel_36)
				// outputs:(row56,row56) | target node:tAdvancedHash_row56 - inputs:(row56)
				// outputs:()
				// linked node: tMap_42 - inputs:(row56,row52) outputs:(ww)

				org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row56 = org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row56Struct> tHash_Lookup_row56 = org.talend.designer.components.lookup.memory.AdvancedMemoryLookup
						.<row56Struct>getLookup(matchingModeEnum_row56);

				globalMap.put("tHash_Lookup_row56", tHash_Lookup_row56);

				/**
				 * [tAdvancedHash_row56 begin ] stop
				 */

				/**
				 * [tDBInput_10 begin ] start
				 */

				ok_Hash.put("tDBInput_10", false);
				start_Hash.put("tDBInput_10", System.currentTimeMillis());

				currentComponent = "tDBInput_10";

				int tos_count_tDBInput_10 = 0;

				org.talend.designer.components.util.mssql.MSSqlGenerateTimestampUtil mssqlGTU_tDBInput_10 = org.talend.designer.components.util.mssql.MSSqlUtilFactory
						.getMSSqlGenerateTimestampUtil();

				java.util.List<String> talendToDBList_tDBInput_10 = new java.util.ArrayList();
				String[] talendToDBArray_tDBInput_10 = new String[] { "FLOAT", "NUMERIC", "NUMERIC IDENTITY", "DECIMAL",
						"DECIMAL IDENTITY", "REAL" };
				java.util.Collections.addAll(talendToDBList_tDBInput_10, talendToDBArray_tDBInput_10);
				int nb_line_tDBInput_10 = 0;
				java.sql.Connection conn_tDBInput_10 = null;
				String driverClass_tDBInput_10 = "net.sourceforge.jtds.jdbc.Driver";
				java.lang.Class jdbcclazz_tDBInput_10 = java.lang.Class.forName(driverClass_tDBInput_10);
				String dbUser_tDBInput_10 = "sa";

				final String decryptedPassword_tDBInput_10 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:f9PjNmq5BBRo9xGRBm5+pKZqpGNZL2vcL90zLf6STURWqwqDn4E=");

				String dbPwd_tDBInput_10 = decryptedPassword_tDBInput_10;

				String port_tDBInput_10 = "1433";
				String dbname_tDBInput_10 = "orange_DW__";
				String url_tDBInput_10 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBInput_10)) {
					url_tDBInput_10 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBInput_10)) {
					url_tDBInput_10 += "//" + "orange_DW__";
				}
				url_tDBInput_10 += ";appName=" + projectName + ";" + "";
				String dbschema_tDBInput_10 = "dbo";

				conn_tDBInput_10 = java.sql.DriverManager.getConnection(url_tDBInput_10, dbUser_tDBInput_10,
						dbPwd_tDBInput_10);

				java.sql.Statement stmt_tDBInput_10 = conn_tDBInput_10.createStatement();

				String dbquery_tDBInput_10 = "SELECT dbo.Dim_phase_de_l_opportunite.\"phase_de_l_opportunité_id\",\n		dbo.Dim_phase_de_l_opportunite.Phase_de_l_opport"
						+ "unite\nFROM	dbo.Dim_phase_de_l_opportunite";

				globalMap.put("tDBInput_10_QUERY", dbquery_tDBInput_10);
				java.sql.ResultSet rs_tDBInput_10 = null;

				try {
					rs_tDBInput_10 = stmt_tDBInput_10.executeQuery(dbquery_tDBInput_10);
					java.sql.ResultSetMetaData rsmd_tDBInput_10 = rs_tDBInput_10.getMetaData();
					int colQtyInRs_tDBInput_10 = rsmd_tDBInput_10.getColumnCount();

					String tmpContent_tDBInput_10 = null;

					while (rs_tDBInput_10.next()) {
						nb_line_tDBInput_10++;

						if (colQtyInRs_tDBInput_10 < 1) {
							row56.phase_de_l_opportunite_id = 0;
						} else {

							row56.phase_de_l_opportunite_id = rs_tDBInput_10.getInt(1);
							if (rs_tDBInput_10.wasNull()) {
								throw new RuntimeException("Null value in non-Nullable column");
							}
						}
						if (colQtyInRs_tDBInput_10 < 2) {
							row56.Phase_de_l_opportunite = null;
						} else {

							tmpContent_tDBInput_10 = rs_tDBInput_10.getString(2);
							if (tmpContent_tDBInput_10 != null) {
								if (talendToDBList_tDBInput_10.contains(
										rsmd_tDBInput_10.getColumnTypeName(2).toUpperCase(java.util.Locale.ENGLISH))) {
									row56.Phase_de_l_opportunite = FormatterUtils.formatUnwithE(tmpContent_tDBInput_10);
								} else {
									row56.Phase_de_l_opportunite = tmpContent_tDBInput_10;
								}
							} else {
								row56.Phase_de_l_opportunite = null;
							}
						}

						/**
						 * [tDBInput_10 begin ] stop
						 */

						/**
						 * [tDBInput_10 main ] start
						 */

						currentComponent = "tDBInput_10";

						tos_count_tDBInput_10++;

						/**
						 * [tDBInput_10 main ] stop
						 */

						/**
						 * [tDBInput_10 process_data_begin ] start
						 */

						currentComponent = "tDBInput_10";

						/**
						 * [tDBInput_10 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row56 main ] start
						 */

						currentComponent = "tAdvancedHash_row56";

						if (execStat) {
							runStat.updateStatOnConnection(iterateId, 1, 1

									, "row56"

							);
						}

						row56Struct row56_HashRow = new row56Struct();

						row56_HashRow.phase_de_l_opportunite_id = row56.phase_de_l_opportunite_id;

						row56_HashRow.Phase_de_l_opportunite = row56.Phase_de_l_opportunite;

						tHash_Lookup_row56.put(row56_HashRow);

						tos_count_tAdvancedHash_row56++;

						/**
						 * [tAdvancedHash_row56 main ] stop
						 */

						/**
						 * [tAdvancedHash_row56 process_data_begin ] start
						 */

						currentComponent = "tAdvancedHash_row56";

						/**
						 * [tAdvancedHash_row56 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row56 process_data_end ] start
						 */

						currentComponent = "tAdvancedHash_row56";

						/**
						 * [tAdvancedHash_row56 process_data_end ] stop
						 */

						/**
						 * [tDBInput_10 process_data_end ] start
						 */

						currentComponent = "tDBInput_10";

						/**
						 * [tDBInput_10 process_data_end ] stop
						 */

						/**
						 * [tDBInput_10 end ] start
						 */

						currentComponent = "tDBInput_10";

					}
				} finally {
					if (rs_tDBInput_10 != null) {
						rs_tDBInput_10.close();
					}
					if (stmt_tDBInput_10 != null) {
						stmt_tDBInput_10.close();
					}
					if (conn_tDBInput_10 != null && !conn_tDBInput_10.isClosed()) {

						conn_tDBInput_10.close();

						if ("com.mysql.cj.jdbc.Driver".equals((String) globalMap.get("driverClass_"))
								&& routines.system.BundleUtils.inOSGi()) {
							Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread")
									.getMethod("checkedShutdown").invoke(null, (Object[]) null);
						}

					}
				}
				globalMap.put("tDBInput_10_NB_LINE", nb_line_tDBInput_10);

				ok_Hash.put("tDBInput_10", true);
				end_Hash.put("tDBInput_10", System.currentTimeMillis());

				/**
				 * [tDBInput_10 end ] stop
				 */

				/**
				 * [tAdvancedHash_row56 end ] start
				 */

				currentComponent = "tAdvancedHash_row56";

				tHash_Lookup_row56.endPut();

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row56");
				}

				ok_Hash.put("tAdvancedHash_row56", true);
				end_Hash.put("tAdvancedHash_row56", System.currentTimeMillis());

				/**
				 * [tAdvancedHash_row56 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tDBInput_10 finally ] start
				 */

				currentComponent = "tDBInput_10";

				/**
				 * [tDBInput_10 finally ] stop
				 */

				/**
				 * [tAdvancedHash_row56 finally ] start
				 */

				currentComponent = "tAdvancedHash_row56";

				/**
				 * [tAdvancedHash_row56 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tDBInput_10_SUBPROCESS_STATE", 1);
	}

	public static class row60Struct implements routines.system.IPersistableComparableLookupRow<row60Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];
		protected static final int DEFAULT_HASHCODE = 1;
		protected static final int PRIME = 31;
		protected int hashCode = DEFAULT_HASHCODE;
		public boolean hashCodeDirty = true;

		public String loopKey;

		public int Categorie_id;

		public int getCategorie_id() {
			return this.Categorie_id;
		}

		public String Categorie;

		public String getCategorie() {
			return this.Categorie;
		}

		@Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;

				result = prime * result + ((this.Categorie == null) ? 0 : this.Categorie.hashCode());

				this.hashCode = result;
				this.hashCodeDirty = false;
			}
			return this.hashCode;
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			final row60Struct other = (row60Struct) obj;

			if (this.Categorie == null) {
				if (other.Categorie != null)
					return false;

			} else if (!this.Categorie.equals(other.Categorie))

				return false;

			return true;
		}

		public void copyDataTo(row60Struct other) {

			other.Categorie_id = this.Categorie_id;
			other.Categorie = this.Categorie;

		}

		public void copyKeysDataTo(row60Struct other) {

			other.Categorie = this.Categorie;

		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readKeysData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Categorie = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Categorie = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeKeysData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Categorie, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Categorie, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		/**
		 * Fill Values data by reading ObjectInputStream.
		 */
		public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
			try {

				int length = 0;

				this.Categorie_id = dis.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
			try {
				int length = 0;

				this.Categorie_id = objectIn.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		/**
		 * Return a byte array which represents Values data.
		 */
		public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
			try {

				dos.writeInt(this.Categorie_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut) {
			try {

				objectOut.writeInt(this.Categorie_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}
		}

		public boolean supportMarshaller() {
			return true;
		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Categorie_id=" + String.valueOf(Categorie_id));
			sb.append(",Categorie=" + Categorie);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row60Struct other) {

			int returnValue = -1;

			returnValue = checkNullsAndCompare(this.Categorie, other.Categorie);
			if (returnValue != 0) {
				return returnValue;
			}

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tDBInput_12Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tDBInput_12_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				row60Struct row60 = new row60Struct();

				/**
				 * [tAdvancedHash_row60 begin ] start
				 */

				ok_Hash.put("tAdvancedHash_row60", false);
				start_Hash.put("tAdvancedHash_row60", System.currentTimeMillis());

				currentComponent = "tAdvancedHash_row60";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row60");
				}

				int tos_count_tAdvancedHash_row60 = 0;

				// connection name:row60
				// source node:tDBInput_12 - inputs:(after_tFileInputExcel_8)
				// outputs:(row60,row60) | target node:tAdvancedHash_row60 - inputs:(row60)
				// outputs:()
				// linked node: tMap_44 - inputs:(row60,Dim_Categorie_rdv) outputs:(g)

				org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row60 = org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row60Struct> tHash_Lookup_row60 = org.talend.designer.components.lookup.memory.AdvancedMemoryLookup
						.<row60Struct>getLookup(matchingModeEnum_row60);

				globalMap.put("tHash_Lookup_row60", tHash_Lookup_row60);

				/**
				 * [tAdvancedHash_row60 begin ] stop
				 */

				/**
				 * [tDBInput_12 begin ] start
				 */

				ok_Hash.put("tDBInput_12", false);
				start_Hash.put("tDBInput_12", System.currentTimeMillis());

				currentComponent = "tDBInput_12";

				int tos_count_tDBInput_12 = 0;

				org.talend.designer.components.util.mssql.MSSqlGenerateTimestampUtil mssqlGTU_tDBInput_12 = org.talend.designer.components.util.mssql.MSSqlUtilFactory
						.getMSSqlGenerateTimestampUtil();

				java.util.List<String> talendToDBList_tDBInput_12 = new java.util.ArrayList();
				String[] talendToDBArray_tDBInput_12 = new String[] { "FLOAT", "NUMERIC", "NUMERIC IDENTITY", "DECIMAL",
						"DECIMAL IDENTITY", "REAL" };
				java.util.Collections.addAll(talendToDBList_tDBInput_12, talendToDBArray_tDBInput_12);
				int nb_line_tDBInput_12 = 0;
				java.sql.Connection conn_tDBInput_12 = null;
				String driverClass_tDBInput_12 = "net.sourceforge.jtds.jdbc.Driver";
				java.lang.Class jdbcclazz_tDBInput_12 = java.lang.Class.forName(driverClass_tDBInput_12);
				String dbUser_tDBInput_12 = "sa";

				final String decryptedPassword_tDBInput_12 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:2hLNuCv9cvyI1yaqnSUOVTgRg+rTmqdcbgEis8DWEPvY4+Zvgb4=");

				String dbPwd_tDBInput_12 = decryptedPassword_tDBInput_12;

				String port_tDBInput_12 = "1433";
				String dbname_tDBInput_12 = "orange_DW__";
				String url_tDBInput_12 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBInput_12)) {
					url_tDBInput_12 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBInput_12)) {
					url_tDBInput_12 += "//" + "orange_DW__";
				}
				url_tDBInput_12 += ";appName=" + projectName + ";" + "";
				String dbschema_tDBInput_12 = "dbo";

				conn_tDBInput_12 = java.sql.DriverManager.getConnection(url_tDBInput_12, dbUser_tDBInput_12,
						dbPwd_tDBInput_12);

				java.sql.Statement stmt_tDBInput_12 = conn_tDBInput_12.createStatement();

				String dbquery_tDBInput_12 = "SELECT dbo.\"Dim_Catégorie_rdv\".\"Catégorie_id\",\n		dbo.\"Dim_Catégorie_rdv\".Categorie\nFROM	dbo.\"Dim_Catégorie_rdv\""
						+ "";

				globalMap.put("tDBInput_12_QUERY", dbquery_tDBInput_12);
				java.sql.ResultSet rs_tDBInput_12 = null;

				try {
					rs_tDBInput_12 = stmt_tDBInput_12.executeQuery(dbquery_tDBInput_12);
					java.sql.ResultSetMetaData rsmd_tDBInput_12 = rs_tDBInput_12.getMetaData();
					int colQtyInRs_tDBInput_12 = rsmd_tDBInput_12.getColumnCount();

					String tmpContent_tDBInput_12 = null;

					while (rs_tDBInput_12.next()) {
						nb_line_tDBInput_12++;

						if (colQtyInRs_tDBInput_12 < 1) {
							row60.Categorie_id = 0;
						} else {

							row60.Categorie_id = rs_tDBInput_12.getInt(1);
							if (rs_tDBInput_12.wasNull()) {
								throw new RuntimeException("Null value in non-Nullable column");
							}
						}
						if (colQtyInRs_tDBInput_12 < 2) {
							row60.Categorie = null;
						} else {

							tmpContent_tDBInput_12 = rs_tDBInput_12.getString(2);
							if (tmpContent_tDBInput_12 != null) {
								if (talendToDBList_tDBInput_12.contains(
										rsmd_tDBInput_12.getColumnTypeName(2).toUpperCase(java.util.Locale.ENGLISH))) {
									row60.Categorie = FormatterUtils.formatUnwithE(tmpContent_tDBInput_12);
								} else {
									row60.Categorie = tmpContent_tDBInput_12;
								}
							} else {
								row60.Categorie = null;
							}
						}

						/**
						 * [tDBInput_12 begin ] stop
						 */

						/**
						 * [tDBInput_12 main ] start
						 */

						currentComponent = "tDBInput_12";

						tos_count_tDBInput_12++;

						/**
						 * [tDBInput_12 main ] stop
						 */

						/**
						 * [tDBInput_12 process_data_begin ] start
						 */

						currentComponent = "tDBInput_12";

						/**
						 * [tDBInput_12 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row60 main ] start
						 */

						currentComponent = "tAdvancedHash_row60";

						if (execStat) {
							runStat.updateStatOnConnection(iterateId, 1, 1

									, "row60"

							);
						}

						row60Struct row60_HashRow = new row60Struct();

						row60_HashRow.Categorie_id = row60.Categorie_id;

						row60_HashRow.Categorie = row60.Categorie;

						tHash_Lookup_row60.put(row60_HashRow);

						tos_count_tAdvancedHash_row60++;

						/**
						 * [tAdvancedHash_row60 main ] stop
						 */

						/**
						 * [tAdvancedHash_row60 process_data_begin ] start
						 */

						currentComponent = "tAdvancedHash_row60";

						/**
						 * [tAdvancedHash_row60 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row60 process_data_end ] start
						 */

						currentComponent = "tAdvancedHash_row60";

						/**
						 * [tAdvancedHash_row60 process_data_end ] stop
						 */

						/**
						 * [tDBInput_12 process_data_end ] start
						 */

						currentComponent = "tDBInput_12";

						/**
						 * [tDBInput_12 process_data_end ] stop
						 */

						/**
						 * [tDBInput_12 end ] start
						 */

						currentComponent = "tDBInput_12";

					}
				} finally {
					if (rs_tDBInput_12 != null) {
						rs_tDBInput_12.close();
					}
					if (stmt_tDBInput_12 != null) {
						stmt_tDBInput_12.close();
					}
					if (conn_tDBInput_12 != null && !conn_tDBInput_12.isClosed()) {

						conn_tDBInput_12.close();

						if ("com.mysql.cj.jdbc.Driver".equals((String) globalMap.get("driverClass_"))
								&& routines.system.BundleUtils.inOSGi()) {
							Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread")
									.getMethod("checkedShutdown").invoke(null, (Object[]) null);
						}

					}
				}
				globalMap.put("tDBInput_12_NB_LINE", nb_line_tDBInput_12);

				ok_Hash.put("tDBInput_12", true);
				end_Hash.put("tDBInput_12", System.currentTimeMillis());

				/**
				 * [tDBInput_12 end ] stop
				 */

				/**
				 * [tAdvancedHash_row60 end ] start
				 */

				currentComponent = "tAdvancedHash_row60";

				tHash_Lookup_row60.endPut();

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row60");
				}

				ok_Hash.put("tAdvancedHash_row60", true);
				end_Hash.put("tAdvancedHash_row60", System.currentTimeMillis());

				/**
				 * [tAdvancedHash_row60 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tDBInput_12 finally ] start
				 */

				currentComponent = "tDBInput_12";

				/**
				 * [tDBInput_12 finally ] stop
				 */

				/**
				 * [tAdvancedHash_row60 finally ] start
				 */

				currentComponent = "tAdvancedHash_row60";

				/**
				 * [tAdvancedHash_row60 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tDBInput_12_SUBPROCESS_STATE", 1);
	}

	public static class row63Struct implements routines.system.IPersistableComparableLookupRow<row63Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];
		protected static final int DEFAULT_HASHCODE = 1;
		protected static final int PRIME = 31;
		protected int hashCode = DEFAULT_HASHCODE;
		public boolean hashCodeDirty = true;

		public String loopKey;

		public int offre_id;

		public int getOffre_id() {
			return this.offre_id;
		}

		public String Offre;

		public String getOffre() {
			return this.Offre;
		}

		@Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;

				result = prime * result + ((this.Offre == null) ? 0 : this.Offre.hashCode());

				this.hashCode = result;
				this.hashCodeDirty = false;
			}
			return this.hashCode;
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			final row63Struct other = (row63Struct) obj;

			if (this.Offre == null) {
				if (other.Offre != null)
					return false;

			} else if (!this.Offre.equals(other.Offre))

				return false;

			return true;
		}

		public void copyDataTo(row63Struct other) {

			other.offre_id = this.offre_id;
			other.Offre = this.Offre;

		}

		public void copyKeysDataTo(row63Struct other) {

			other.Offre = this.Offre;

		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readKeysData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Offre = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Offre = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeKeysData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Offre, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Offre, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		/**
		 * Fill Values data by reading ObjectInputStream.
		 */
		public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
			try {

				int length = 0;

				this.offre_id = dis.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
			try {
				int length = 0;

				this.offre_id = objectIn.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		/**
		 * Return a byte array which represents Values data.
		 */
		public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
			try {

				dos.writeInt(this.offre_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut) {
			try {

				objectOut.writeInt(this.offre_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}
		}

		public boolean supportMarshaller() {
			return true;
		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("offre_id=" + String.valueOf(offre_id));
			sb.append(",Offre=" + Offre);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row63Struct other) {

			int returnValue = -1;

			returnValue = checkNullsAndCompare(this.Offre, other.Offre);
			if (returnValue != 0) {
				return returnValue;
			}

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tDBInput_13Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tDBInput_13_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				row63Struct row63 = new row63Struct();

				/**
				 * [tAdvancedHash_row63 begin ] start
				 */

				ok_Hash.put("tAdvancedHash_row63", false);
				start_Hash.put("tAdvancedHash_row63", System.currentTimeMillis());

				currentComponent = "tAdvancedHash_row63";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row63");
				}

				int tos_count_tAdvancedHash_row63 = 0;

				// connection name:row63
				// source node:tDBInput_13 - inputs:(after_tFileInputExcel_9)
				// outputs:(row63,row63) | target node:tAdvancedHash_row63 - inputs:(row63)
				// outputs:()
				// linked node: tMap_46 - inputs:(row63,Dim_offre_mobile) outputs:(c)

				org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row63 = org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row63Struct> tHash_Lookup_row63 = org.talend.designer.components.lookup.memory.AdvancedMemoryLookup
						.<row63Struct>getLookup(matchingModeEnum_row63);

				globalMap.put("tHash_Lookup_row63", tHash_Lookup_row63);

				/**
				 * [tAdvancedHash_row63 begin ] stop
				 */

				/**
				 * [tDBInput_13 begin ] start
				 */

				ok_Hash.put("tDBInput_13", false);
				start_Hash.put("tDBInput_13", System.currentTimeMillis());

				currentComponent = "tDBInput_13";

				int tos_count_tDBInput_13 = 0;

				org.talend.designer.components.util.mssql.MSSqlGenerateTimestampUtil mssqlGTU_tDBInput_13 = org.talend.designer.components.util.mssql.MSSqlUtilFactory
						.getMSSqlGenerateTimestampUtil();

				java.util.List<String> talendToDBList_tDBInput_13 = new java.util.ArrayList();
				String[] talendToDBArray_tDBInput_13 = new String[] { "FLOAT", "NUMERIC", "NUMERIC IDENTITY", "DECIMAL",
						"DECIMAL IDENTITY", "REAL" };
				java.util.Collections.addAll(talendToDBList_tDBInput_13, talendToDBArray_tDBInput_13);
				int nb_line_tDBInput_13 = 0;
				java.sql.Connection conn_tDBInput_13 = null;
				String driverClass_tDBInput_13 = "net.sourceforge.jtds.jdbc.Driver";
				java.lang.Class jdbcclazz_tDBInput_13 = java.lang.Class.forName(driverClass_tDBInput_13);
				String dbUser_tDBInput_13 = "sa";

				final String decryptedPassword_tDBInput_13 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:PeZfwohqCHe2h6ZReUml5jt8iHlXHbxRVR1z9NE0qey+CdJZd8A=");

				String dbPwd_tDBInput_13 = decryptedPassword_tDBInput_13;

				String port_tDBInput_13 = "1433";
				String dbname_tDBInput_13 = "orange_DW__";
				String url_tDBInput_13 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBInput_13)) {
					url_tDBInput_13 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBInput_13)) {
					url_tDBInput_13 += "//" + "orange_DW__";
				}
				url_tDBInput_13 += ";appName=" + projectName + ";" + "";
				String dbschema_tDBInput_13 = "dbo";

				conn_tDBInput_13 = java.sql.DriverManager.getConnection(url_tDBInput_13, dbUser_tDBInput_13,
						dbPwd_tDBInput_13);

				java.sql.Statement stmt_tDBInput_13 = conn_tDBInput_13.createStatement();

				String dbquery_tDBInput_13 = "SELECT dbo.Dim_offre.offre_id,\n		dbo.Dim_offre.Offre\nFROM	dbo.Dim_offre";

				globalMap.put("tDBInput_13_QUERY", dbquery_tDBInput_13);
				java.sql.ResultSet rs_tDBInput_13 = null;

				try {
					rs_tDBInput_13 = stmt_tDBInput_13.executeQuery(dbquery_tDBInput_13);
					java.sql.ResultSetMetaData rsmd_tDBInput_13 = rs_tDBInput_13.getMetaData();
					int colQtyInRs_tDBInput_13 = rsmd_tDBInput_13.getColumnCount();

					String tmpContent_tDBInput_13 = null;

					while (rs_tDBInput_13.next()) {
						nb_line_tDBInput_13++;

						if (colQtyInRs_tDBInput_13 < 1) {
							row63.offre_id = 0;
						} else {

							row63.offre_id = rs_tDBInput_13.getInt(1);
							if (rs_tDBInput_13.wasNull()) {
								throw new RuntimeException("Null value in non-Nullable column");
							}
						}
						if (colQtyInRs_tDBInput_13 < 2) {
							row63.Offre = null;
						} else {

							tmpContent_tDBInput_13 = rs_tDBInput_13.getString(2);
							if (tmpContent_tDBInput_13 != null) {
								if (talendToDBList_tDBInput_13.contains(
										rsmd_tDBInput_13.getColumnTypeName(2).toUpperCase(java.util.Locale.ENGLISH))) {
									row63.Offre = FormatterUtils.formatUnwithE(tmpContent_tDBInput_13);
								} else {
									row63.Offre = tmpContent_tDBInput_13;
								}
							} else {
								row63.Offre = null;
							}
						}

						/**
						 * [tDBInput_13 begin ] stop
						 */

						/**
						 * [tDBInput_13 main ] start
						 */

						currentComponent = "tDBInput_13";

						tos_count_tDBInput_13++;

						/**
						 * [tDBInput_13 main ] stop
						 */

						/**
						 * [tDBInput_13 process_data_begin ] start
						 */

						currentComponent = "tDBInput_13";

						/**
						 * [tDBInput_13 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row63 main ] start
						 */

						currentComponent = "tAdvancedHash_row63";

						if (execStat) {
							runStat.updateStatOnConnection(iterateId, 1, 1

									, "row63"

							);
						}

						row63Struct row63_HashRow = new row63Struct();

						row63_HashRow.offre_id = row63.offre_id;

						row63_HashRow.Offre = row63.Offre;

						tHash_Lookup_row63.put(row63_HashRow);

						tos_count_tAdvancedHash_row63++;

						/**
						 * [tAdvancedHash_row63 main ] stop
						 */

						/**
						 * [tAdvancedHash_row63 process_data_begin ] start
						 */

						currentComponent = "tAdvancedHash_row63";

						/**
						 * [tAdvancedHash_row63 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row63 process_data_end ] start
						 */

						currentComponent = "tAdvancedHash_row63";

						/**
						 * [tAdvancedHash_row63 process_data_end ] stop
						 */

						/**
						 * [tDBInput_13 process_data_end ] start
						 */

						currentComponent = "tDBInput_13";

						/**
						 * [tDBInput_13 process_data_end ] stop
						 */

						/**
						 * [tDBInput_13 end ] start
						 */

						currentComponent = "tDBInput_13";

					}
				} finally {
					if (rs_tDBInput_13 != null) {
						rs_tDBInput_13.close();
					}
					if (stmt_tDBInput_13 != null) {
						stmt_tDBInput_13.close();
					}
					if (conn_tDBInput_13 != null && !conn_tDBInput_13.isClosed()) {

						conn_tDBInput_13.close();

						if ("com.mysql.cj.jdbc.Driver".equals((String) globalMap.get("driverClass_"))
								&& routines.system.BundleUtils.inOSGi()) {
							Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread")
									.getMethod("checkedShutdown").invoke(null, (Object[]) null);
						}

					}
				}
				globalMap.put("tDBInput_13_NB_LINE", nb_line_tDBInput_13);

				ok_Hash.put("tDBInput_13", true);
				end_Hash.put("tDBInput_13", System.currentTimeMillis());

				/**
				 * [tDBInput_13 end ] stop
				 */

				/**
				 * [tAdvancedHash_row63 end ] start
				 */

				currentComponent = "tAdvancedHash_row63";

				tHash_Lookup_row63.endPut();

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row63");
				}

				ok_Hash.put("tAdvancedHash_row63", true);
				end_Hash.put("tAdvancedHash_row63", System.currentTimeMillis());

				/**
				 * [tAdvancedHash_row63 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tDBInput_13 finally ] start
				 */

				currentComponent = "tDBInput_13";

				/**
				 * [tDBInput_13 finally ] stop
				 */

				/**
				 * [tAdvancedHash_row63 finally ] start
				 */

				currentComponent = "tAdvancedHash_row63";

				/**
				 * [tAdvancedHash_row63 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tDBInput_13_SUBPROCESS_STATE", 1);
	}

	public static class row65Struct implements routines.system.IPersistableComparableLookupRow<row65Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];
		protected static final int DEFAULT_HASHCODE = 1;
		protected static final int PRIME = 31;
		protected int hashCode = DEFAULT_HASHCODE;
		public boolean hashCodeDirty = true;

		public String loopKey;

		public int nature_offre_id;

		public int getNature_offre_id() {
			return this.nature_offre_id;
		}

		public String Nature_Offre;

		public String getNature_Offre() {
			return this.Nature_Offre;
		}

		@Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;

				result = prime * result + ((this.Nature_Offre == null) ? 0 : this.Nature_Offre.hashCode());

				this.hashCode = result;
				this.hashCodeDirty = false;
			}
			return this.hashCode;
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			final row65Struct other = (row65Struct) obj;

			if (this.Nature_Offre == null) {
				if (other.Nature_Offre != null)
					return false;

			} else if (!this.Nature_Offre.equals(other.Nature_Offre))

				return false;

			return true;
		}

		public void copyDataTo(row65Struct other) {

			other.nature_offre_id = this.nature_offre_id;
			other.Nature_Offre = this.Nature_Offre;

		}

		public void copyKeysDataTo(row65Struct other) {

			other.Nature_Offre = this.Nature_Offre;

		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readKeysData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Nature_Offre = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Nature_Offre = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeKeysData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Nature_Offre, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Nature_Offre, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		/**
		 * Fill Values data by reading ObjectInputStream.
		 */
		public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
			try {

				int length = 0;

				this.nature_offre_id = dis.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
			try {
				int length = 0;

				this.nature_offre_id = objectIn.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		/**
		 * Return a byte array which represents Values data.
		 */
		public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
			try {

				dos.writeInt(this.nature_offre_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut) {
			try {

				objectOut.writeInt(this.nature_offre_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}
		}

		public boolean supportMarshaller() {
			return true;
		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("nature_offre_id=" + String.valueOf(nature_offre_id));
			sb.append(",Nature_Offre=" + Nature_Offre);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row65Struct other) {

			int returnValue = -1;

			returnValue = checkNullsAndCompare(this.Nature_Offre, other.Nature_Offre);
			if (returnValue != 0) {
				return returnValue;
			}

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tDBInput_14Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tDBInput_14_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				row65Struct row65 = new row65Struct();

				/**
				 * [tAdvancedHash_row65 begin ] start
				 */

				ok_Hash.put("tAdvancedHash_row65", false);
				start_Hash.put("tAdvancedHash_row65", System.currentTimeMillis());

				currentComponent = "tAdvancedHash_row65";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row65");
				}

				int tos_count_tAdvancedHash_row65 = 0;

				// connection name:row65
				// source node:tDBInput_14 - inputs:(after_tFileInputExcel_9)
				// outputs:(row65,row65) | target node:tAdvancedHash_row65 - inputs:(row65)
				// outputs:()
				// linked node: tMap_47 - inputs:(row65,Dim_nature_offre_mobile) outputs:(v)

				org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row65 = org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row65Struct> tHash_Lookup_row65 = org.talend.designer.components.lookup.memory.AdvancedMemoryLookup
						.<row65Struct>getLookup(matchingModeEnum_row65);

				globalMap.put("tHash_Lookup_row65", tHash_Lookup_row65);

				/**
				 * [tAdvancedHash_row65 begin ] stop
				 */

				/**
				 * [tDBInput_14 begin ] start
				 */

				ok_Hash.put("tDBInput_14", false);
				start_Hash.put("tDBInput_14", System.currentTimeMillis());

				currentComponent = "tDBInput_14";

				int tos_count_tDBInput_14 = 0;

				org.talend.designer.components.util.mssql.MSSqlGenerateTimestampUtil mssqlGTU_tDBInput_14 = org.talend.designer.components.util.mssql.MSSqlUtilFactory
						.getMSSqlGenerateTimestampUtil();

				java.util.List<String> talendToDBList_tDBInput_14 = new java.util.ArrayList();
				String[] talendToDBArray_tDBInput_14 = new String[] { "FLOAT", "NUMERIC", "NUMERIC IDENTITY", "DECIMAL",
						"DECIMAL IDENTITY", "REAL" };
				java.util.Collections.addAll(talendToDBList_tDBInput_14, talendToDBArray_tDBInput_14);
				int nb_line_tDBInput_14 = 0;
				java.sql.Connection conn_tDBInput_14 = null;
				String driverClass_tDBInput_14 = "net.sourceforge.jtds.jdbc.Driver";
				java.lang.Class jdbcclazz_tDBInput_14 = java.lang.Class.forName(driverClass_tDBInput_14);
				String dbUser_tDBInput_14 = "sa";

				final String decryptedPassword_tDBInput_14 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:r+4F5CvF/I9YwmigPPg+pPv1YbhuMf4V3lAvp3M87CxWKH5buYE=");

				String dbPwd_tDBInput_14 = decryptedPassword_tDBInput_14;

				String port_tDBInput_14 = "1433";
				String dbname_tDBInput_14 = "orange_DW__";
				String url_tDBInput_14 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBInput_14)) {
					url_tDBInput_14 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBInput_14)) {
					url_tDBInput_14 += "//" + "orange_DW__";
				}
				url_tDBInput_14 += ";appName=" + projectName + ";" + "";
				String dbschema_tDBInput_14 = "dbo";

				conn_tDBInput_14 = java.sql.DriverManager.getConnection(url_tDBInput_14, dbUser_tDBInput_14,
						dbPwd_tDBInput_14);

				java.sql.Statement stmt_tDBInput_14 = conn_tDBInput_14.createStatement();

				String dbquery_tDBInput_14 = "SELECT dbo.Dim_nature_offre.nature_offre_id,\n		dbo.Dim_nature_offre.Nature_Offre\nFROM	dbo.Dim_nature_offre";

				globalMap.put("tDBInput_14_QUERY", dbquery_tDBInput_14);
				java.sql.ResultSet rs_tDBInput_14 = null;

				try {
					rs_tDBInput_14 = stmt_tDBInput_14.executeQuery(dbquery_tDBInput_14);
					java.sql.ResultSetMetaData rsmd_tDBInput_14 = rs_tDBInput_14.getMetaData();
					int colQtyInRs_tDBInput_14 = rsmd_tDBInput_14.getColumnCount();

					String tmpContent_tDBInput_14 = null;

					while (rs_tDBInput_14.next()) {
						nb_line_tDBInput_14++;

						if (colQtyInRs_tDBInput_14 < 1) {
							row65.nature_offre_id = 0;
						} else {

							row65.nature_offre_id = rs_tDBInput_14.getInt(1);
							if (rs_tDBInput_14.wasNull()) {
								throw new RuntimeException("Null value in non-Nullable column");
							}
						}
						if (colQtyInRs_tDBInput_14 < 2) {
							row65.Nature_Offre = null;
						} else {

							tmpContent_tDBInput_14 = rs_tDBInput_14.getString(2);
							if (tmpContent_tDBInput_14 != null) {
								if (talendToDBList_tDBInput_14.contains(
										rsmd_tDBInput_14.getColumnTypeName(2).toUpperCase(java.util.Locale.ENGLISH))) {
									row65.Nature_Offre = FormatterUtils.formatUnwithE(tmpContent_tDBInput_14);
								} else {
									row65.Nature_Offre = tmpContent_tDBInput_14;
								}
							} else {
								row65.Nature_Offre = null;
							}
						}

						/**
						 * [tDBInput_14 begin ] stop
						 */

						/**
						 * [tDBInput_14 main ] start
						 */

						currentComponent = "tDBInput_14";

						tos_count_tDBInput_14++;

						/**
						 * [tDBInput_14 main ] stop
						 */

						/**
						 * [tDBInput_14 process_data_begin ] start
						 */

						currentComponent = "tDBInput_14";

						/**
						 * [tDBInput_14 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row65 main ] start
						 */

						currentComponent = "tAdvancedHash_row65";

						if (execStat) {
							runStat.updateStatOnConnection(iterateId, 1, 1

									, "row65"

							);
						}

						row65Struct row65_HashRow = new row65Struct();

						row65_HashRow.nature_offre_id = row65.nature_offre_id;

						row65_HashRow.Nature_Offre = row65.Nature_Offre;

						tHash_Lookup_row65.put(row65_HashRow);

						tos_count_tAdvancedHash_row65++;

						/**
						 * [tAdvancedHash_row65 main ] stop
						 */

						/**
						 * [tAdvancedHash_row65 process_data_begin ] start
						 */

						currentComponent = "tAdvancedHash_row65";

						/**
						 * [tAdvancedHash_row65 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row65 process_data_end ] start
						 */

						currentComponent = "tAdvancedHash_row65";

						/**
						 * [tAdvancedHash_row65 process_data_end ] stop
						 */

						/**
						 * [tDBInput_14 process_data_end ] start
						 */

						currentComponent = "tDBInput_14";

						/**
						 * [tDBInput_14 process_data_end ] stop
						 */

						/**
						 * [tDBInput_14 end ] start
						 */

						currentComponent = "tDBInput_14";

					}
				} finally {
					if (rs_tDBInput_14 != null) {
						rs_tDBInput_14.close();
					}
					if (stmt_tDBInput_14 != null) {
						stmt_tDBInput_14.close();
					}
					if (conn_tDBInput_14 != null && !conn_tDBInput_14.isClosed()) {

						conn_tDBInput_14.close();

						if ("com.mysql.cj.jdbc.Driver".equals((String) globalMap.get("driverClass_"))
								&& routines.system.BundleUtils.inOSGi()) {
							Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread")
									.getMethod("checkedShutdown").invoke(null, (Object[]) null);
						}

					}
				}
				globalMap.put("tDBInput_14_NB_LINE", nb_line_tDBInput_14);

				ok_Hash.put("tDBInput_14", true);
				end_Hash.put("tDBInput_14", System.currentTimeMillis());

				/**
				 * [tDBInput_14 end ] stop
				 */

				/**
				 * [tAdvancedHash_row65 end ] start
				 */

				currentComponent = "tAdvancedHash_row65";

				tHash_Lookup_row65.endPut();

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row65");
				}

				ok_Hash.put("tAdvancedHash_row65", true);
				end_Hash.put("tAdvancedHash_row65", System.currentTimeMillis());

				/**
				 * [tAdvancedHash_row65 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tDBInput_14 finally ] start
				 */

				currentComponent = "tDBInput_14";

				/**
				 * [tDBInput_14 finally ] stop
				 */

				/**
				 * [tAdvancedHash_row65 finally ] start
				 */

				currentComponent = "tAdvancedHash_row65";

				/**
				 * [tAdvancedHash_row65 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tDBInput_14_SUBPROCESS_STATE", 1);
	}

	public static class row67Struct implements routines.system.IPersistableComparableLookupRow<row67Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];
		protected static final int DEFAULT_HASHCODE = 1;
		protected static final int PRIME = 31;
		protected int hashCode = DEFAULT_HASHCODE;
		public boolean hashCodeDirty = true;

		public String loopKey;

		public int Dim_Reference_OSM_Opportunite_id;

		public int getDim_Reference_OSM_Opportunite_id() {
			return this.Dim_Reference_OSM_Opportunite_id;
		}

		public String Reference_OSM__Opportunite;

		public String getReference_OSM__Opportunite() {
			return this.Reference_OSM__Opportunite;
		}

		@Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;

				result = prime * result
						+ ((this.Reference_OSM__Opportunite == null) ? 0 : this.Reference_OSM__Opportunite.hashCode());

				this.hashCode = result;
				this.hashCodeDirty = false;
			}
			return this.hashCode;
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			final row67Struct other = (row67Struct) obj;

			if (this.Reference_OSM__Opportunite == null) {
				if (other.Reference_OSM__Opportunite != null)
					return false;

			} else if (!this.Reference_OSM__Opportunite.equals(other.Reference_OSM__Opportunite))

				return false;

			return true;
		}

		public void copyDataTo(row67Struct other) {

			other.Dim_Reference_OSM_Opportunite_id = this.Dim_Reference_OSM_Opportunite_id;
			other.Reference_OSM__Opportunite = this.Reference_OSM__Opportunite;

		}

		public void copyKeysDataTo(row67Struct other) {

			other.Reference_OSM__Opportunite = this.Reference_OSM__Opportunite;

		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readKeysData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Reference_OSM__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Reference_OSM__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeKeysData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Reference_OSM__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Reference_OSM__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		/**
		 * Fill Values data by reading ObjectInputStream.
		 */
		public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
			try {

				int length = 0;

				this.Dim_Reference_OSM_Opportunite_id = dis.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
			try {
				int length = 0;

				this.Dim_Reference_OSM_Opportunite_id = objectIn.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		/**
		 * Return a byte array which represents Values data.
		 */
		public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
			try {

				dos.writeInt(this.Dim_Reference_OSM_Opportunite_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut) {
			try {

				objectOut.writeInt(this.Dim_Reference_OSM_Opportunite_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}
		}

		public boolean supportMarshaller() {
			return true;
		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Dim_Reference_OSM_Opportunite_id=" + String.valueOf(Dim_Reference_OSM_Opportunite_id));
			sb.append(",Reference_OSM__Opportunite=" + Reference_OSM__Opportunite);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row67Struct other) {

			int returnValue = -1;

			returnValue = checkNullsAndCompare(this.Reference_OSM__Opportunite, other.Reference_OSM__Opportunite);
			if (returnValue != 0) {
				return returnValue;
			}

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tDBInput_15Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tDBInput_15_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				row67Struct row67 = new row67Struct();

				/**
				 * [tAdvancedHash_row67 begin ] start
				 */

				ok_Hash.put("tAdvancedHash_row67", false);
				start_Hash.put("tAdvancedHash_row67", System.currentTimeMillis());

				currentComponent = "tAdvancedHash_row67";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row67");
				}

				int tos_count_tAdvancedHash_row67 = 0;

				// connection name:row67
				// source node:tDBInput_15 - inputs:(after_tFileInputExcel_9)
				// outputs:(row67,row67) | target node:tAdvancedHash_row67 - inputs:(row67)
				// outputs:()
				// linked node: tMap_48 - inputs:(row67,Dim_Reference_OSM_Opportunite_mobile)
				// outputs:(b)

				org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row67 = org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row67Struct> tHash_Lookup_row67 = org.talend.designer.components.lookup.memory.AdvancedMemoryLookup
						.<row67Struct>getLookup(matchingModeEnum_row67);

				globalMap.put("tHash_Lookup_row67", tHash_Lookup_row67);

				/**
				 * [tAdvancedHash_row67 begin ] stop
				 */

				/**
				 * [tDBInput_15 begin ] start
				 */

				ok_Hash.put("tDBInput_15", false);
				start_Hash.put("tDBInput_15", System.currentTimeMillis());

				currentComponent = "tDBInput_15";

				int tos_count_tDBInput_15 = 0;

				org.talend.designer.components.util.mssql.MSSqlGenerateTimestampUtil mssqlGTU_tDBInput_15 = org.talend.designer.components.util.mssql.MSSqlUtilFactory
						.getMSSqlGenerateTimestampUtil();

				java.util.List<String> talendToDBList_tDBInput_15 = new java.util.ArrayList();
				String[] talendToDBArray_tDBInput_15 = new String[] { "FLOAT", "NUMERIC", "NUMERIC IDENTITY", "DECIMAL",
						"DECIMAL IDENTITY", "REAL" };
				java.util.Collections.addAll(talendToDBList_tDBInput_15, talendToDBArray_tDBInput_15);
				int nb_line_tDBInput_15 = 0;
				java.sql.Connection conn_tDBInput_15 = null;
				String driverClass_tDBInput_15 = "net.sourceforge.jtds.jdbc.Driver";
				java.lang.Class jdbcclazz_tDBInput_15 = java.lang.Class.forName(driverClass_tDBInput_15);
				String dbUser_tDBInput_15 = "sa";

				final String decryptedPassword_tDBInput_15 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:NnjpbKD3jltldkbYxreinBSV7TMZDrpW3VhKuM5owWpPvR4loB4=");

				String dbPwd_tDBInput_15 = decryptedPassword_tDBInput_15;

				String port_tDBInput_15 = "1433";
				String dbname_tDBInput_15 = "orange_DW__";
				String url_tDBInput_15 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBInput_15)) {
					url_tDBInput_15 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBInput_15)) {
					url_tDBInput_15 += "//" + "orange_DW__";
				}
				url_tDBInput_15 += ";appName=" + projectName + ";" + "";
				String dbschema_tDBInput_15 = "dbo";

				conn_tDBInput_15 = java.sql.DriverManager.getConnection(url_tDBInput_15, dbUser_tDBInput_15,
						dbPwd_tDBInput_15);

				java.sql.Statement stmt_tDBInput_15 = conn_tDBInput_15.createStatement();

				String dbquery_tDBInput_15 = "SELECT dbo.Dim_Reference_OSM.Dim_Reference_OSM_Opportunite_id,\n		dbo.Dim_Reference_OSM.Reference_OSM__Opportunite\nFROM	"
						+ "dbo.Dim_Reference_OSM";

				globalMap.put("tDBInput_15_QUERY", dbquery_tDBInput_15);
				java.sql.ResultSet rs_tDBInput_15 = null;

				try {
					rs_tDBInput_15 = stmt_tDBInput_15.executeQuery(dbquery_tDBInput_15);
					java.sql.ResultSetMetaData rsmd_tDBInput_15 = rs_tDBInput_15.getMetaData();
					int colQtyInRs_tDBInput_15 = rsmd_tDBInput_15.getColumnCount();

					String tmpContent_tDBInput_15 = null;

					while (rs_tDBInput_15.next()) {
						nb_line_tDBInput_15++;

						if (colQtyInRs_tDBInput_15 < 1) {
							row67.Dim_Reference_OSM_Opportunite_id = 0;
						} else {

							row67.Dim_Reference_OSM_Opportunite_id = rs_tDBInput_15.getInt(1);
							if (rs_tDBInput_15.wasNull()) {
								throw new RuntimeException("Null value in non-Nullable column");
							}
						}
						if (colQtyInRs_tDBInput_15 < 2) {
							row67.Reference_OSM__Opportunite = null;
						} else {

							tmpContent_tDBInput_15 = rs_tDBInput_15.getString(2);
							if (tmpContent_tDBInput_15 != null) {
								if (talendToDBList_tDBInput_15.contains(
										rsmd_tDBInput_15.getColumnTypeName(2).toUpperCase(java.util.Locale.ENGLISH))) {
									row67.Reference_OSM__Opportunite = FormatterUtils
											.formatUnwithE(tmpContent_tDBInput_15);
								} else {
									row67.Reference_OSM__Opportunite = tmpContent_tDBInput_15;
								}
							} else {
								row67.Reference_OSM__Opportunite = null;
							}
						}

						/**
						 * [tDBInput_15 begin ] stop
						 */

						/**
						 * [tDBInput_15 main ] start
						 */

						currentComponent = "tDBInput_15";

						tos_count_tDBInput_15++;

						/**
						 * [tDBInput_15 main ] stop
						 */

						/**
						 * [tDBInput_15 process_data_begin ] start
						 */

						currentComponent = "tDBInput_15";

						/**
						 * [tDBInput_15 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row67 main ] start
						 */

						currentComponent = "tAdvancedHash_row67";

						if (execStat) {
							runStat.updateStatOnConnection(iterateId, 1, 1

									, "row67"

							);
						}

						row67Struct row67_HashRow = new row67Struct();

						row67_HashRow.Dim_Reference_OSM_Opportunite_id = row67.Dim_Reference_OSM_Opportunite_id;

						row67_HashRow.Reference_OSM__Opportunite = row67.Reference_OSM__Opportunite;

						tHash_Lookup_row67.put(row67_HashRow);

						tos_count_tAdvancedHash_row67++;

						/**
						 * [tAdvancedHash_row67 main ] stop
						 */

						/**
						 * [tAdvancedHash_row67 process_data_begin ] start
						 */

						currentComponent = "tAdvancedHash_row67";

						/**
						 * [tAdvancedHash_row67 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row67 process_data_end ] start
						 */

						currentComponent = "tAdvancedHash_row67";

						/**
						 * [tAdvancedHash_row67 process_data_end ] stop
						 */

						/**
						 * [tDBInput_15 process_data_end ] start
						 */

						currentComponent = "tDBInput_15";

						/**
						 * [tDBInput_15 process_data_end ] stop
						 */

						/**
						 * [tDBInput_15 end ] start
						 */

						currentComponent = "tDBInput_15";

					}
				} finally {
					if (rs_tDBInput_15 != null) {
						rs_tDBInput_15.close();
					}
					if (stmt_tDBInput_15 != null) {
						stmt_tDBInput_15.close();
					}
					if (conn_tDBInput_15 != null && !conn_tDBInput_15.isClosed()) {

						conn_tDBInput_15.close();

						if ("com.mysql.cj.jdbc.Driver".equals((String) globalMap.get("driverClass_"))
								&& routines.system.BundleUtils.inOSGi()) {
							Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread")
									.getMethod("checkedShutdown").invoke(null, (Object[]) null);
						}

					}
				}
				globalMap.put("tDBInput_15_NB_LINE", nb_line_tDBInput_15);

				ok_Hash.put("tDBInput_15", true);
				end_Hash.put("tDBInput_15", System.currentTimeMillis());

				/**
				 * [tDBInput_15 end ] stop
				 */

				/**
				 * [tAdvancedHash_row67 end ] start
				 */

				currentComponent = "tAdvancedHash_row67";

				tHash_Lookup_row67.endPut();

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row67");
				}

				ok_Hash.put("tAdvancedHash_row67", true);
				end_Hash.put("tAdvancedHash_row67", System.currentTimeMillis());

				/**
				 * [tAdvancedHash_row67 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tDBInput_15 finally ] start
				 */

				currentComponent = "tDBInput_15";

				/**
				 * [tDBInput_15 finally ] stop
				 */

				/**
				 * [tAdvancedHash_row67 finally ] start
				 */

				currentComponent = "tAdvancedHash_row67";

				/**
				 * [tAdvancedHash_row67 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tDBInput_15_SUBPROCESS_STATE", 1);
	}

	public static class row69Struct implements routines.system.IPersistableComparableLookupRow<row69Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];
		protected static final int DEFAULT_HASHCODE = 1;
		protected static final int PRIME = 31;
		protected int hashCode = DEFAULT_HASHCODE;
		public boolean hashCodeDirty = true;

		public String loopKey;

		public int type_engagement_id;

		public int getType_engagement_id() {
			return this.type_engagement_id;
		}

		public String Type_d_engagement__Opportunite;

		public String getType_d_engagement__Opportunite() {
			return this.Type_d_engagement__Opportunite;
		}

		@Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;

				result = prime * result + ((this.Type_d_engagement__Opportunite == null) ? 0
						: this.Type_d_engagement__Opportunite.hashCode());

				this.hashCode = result;
				this.hashCodeDirty = false;
			}
			return this.hashCode;
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			final row69Struct other = (row69Struct) obj;

			if (this.Type_d_engagement__Opportunite == null) {
				if (other.Type_d_engagement__Opportunite != null)
					return false;

			} else if (!this.Type_d_engagement__Opportunite.equals(other.Type_d_engagement__Opportunite))

				return false;

			return true;
		}

		public void copyDataTo(row69Struct other) {

			other.type_engagement_id = this.type_engagement_id;
			other.Type_d_engagement__Opportunite = this.Type_d_engagement__Opportunite;

		}

		public void copyKeysDataTo(row69Struct other) {

			other.Type_d_engagement__Opportunite = this.Type_d_engagement__Opportunite;

		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readKeysData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_d_engagement__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_d_engagement__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeKeysData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Type_d_engagement__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Type_d_engagement__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		/**
		 * Fill Values data by reading ObjectInputStream.
		 */
		public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
			try {

				int length = 0;

				this.type_engagement_id = dis.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
			try {
				int length = 0;

				this.type_engagement_id = objectIn.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		/**
		 * Return a byte array which represents Values data.
		 */
		public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
			try {

				dos.writeInt(this.type_engagement_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut) {
			try {

				objectOut.writeInt(this.type_engagement_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}
		}

		public boolean supportMarshaller() {
			return true;
		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("type_engagement_id=" + String.valueOf(type_engagement_id));
			sb.append(",Type_d_engagement__Opportunite=" + Type_d_engagement__Opportunite);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row69Struct other) {

			int returnValue = -1;

			returnValue = checkNullsAndCompare(this.Type_d_engagement__Opportunite,
					other.Type_d_engagement__Opportunite);
			if (returnValue != 0) {
				return returnValue;
			}

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tDBInput_16Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tDBInput_16_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				row69Struct row69 = new row69Struct();

				/**
				 * [tAdvancedHash_row69 begin ] start
				 */

				ok_Hash.put("tAdvancedHash_row69", false);
				start_Hash.put("tAdvancedHash_row69", System.currentTimeMillis());

				currentComponent = "tAdvancedHash_row69";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row69");
				}

				int tos_count_tAdvancedHash_row69 = 0;

				// connection name:row69
				// source node:tDBInput_16 - inputs:(after_tFileInputExcel_9)
				// outputs:(row69,row69) | target node:tAdvancedHash_row69 - inputs:(row69)
				// outputs:()
				// linked node: tMap_49 - inputs:(row69,Dim_type_engagement_mobile) outputs:(n)

				org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row69 = org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row69Struct> tHash_Lookup_row69 = org.talend.designer.components.lookup.memory.AdvancedMemoryLookup
						.<row69Struct>getLookup(matchingModeEnum_row69);

				globalMap.put("tHash_Lookup_row69", tHash_Lookup_row69);

				/**
				 * [tAdvancedHash_row69 begin ] stop
				 */

				/**
				 * [tDBInput_16 begin ] start
				 */

				ok_Hash.put("tDBInput_16", false);
				start_Hash.put("tDBInput_16", System.currentTimeMillis());

				currentComponent = "tDBInput_16";

				int tos_count_tDBInput_16 = 0;

				org.talend.designer.components.util.mssql.MSSqlGenerateTimestampUtil mssqlGTU_tDBInput_16 = org.talend.designer.components.util.mssql.MSSqlUtilFactory
						.getMSSqlGenerateTimestampUtil();

				java.util.List<String> talendToDBList_tDBInput_16 = new java.util.ArrayList();
				String[] talendToDBArray_tDBInput_16 = new String[] { "FLOAT", "NUMERIC", "NUMERIC IDENTITY", "DECIMAL",
						"DECIMAL IDENTITY", "REAL" };
				java.util.Collections.addAll(talendToDBList_tDBInput_16, talendToDBArray_tDBInput_16);
				int nb_line_tDBInput_16 = 0;
				java.sql.Connection conn_tDBInput_16 = null;
				String driverClass_tDBInput_16 = "net.sourceforge.jtds.jdbc.Driver";
				java.lang.Class jdbcclazz_tDBInput_16 = java.lang.Class.forName(driverClass_tDBInput_16);
				String dbUser_tDBInput_16 = "sa";

				final String decryptedPassword_tDBInput_16 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:YsXuIXauv346jBLABGPv1q4DYIx6eya+v9a0jR+7HGB/AKTYgiU=");

				String dbPwd_tDBInput_16 = decryptedPassword_tDBInput_16;

				String port_tDBInput_16 = "1433";
				String dbname_tDBInput_16 = "orange_DW__";
				String url_tDBInput_16 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBInput_16)) {
					url_tDBInput_16 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBInput_16)) {
					url_tDBInput_16 += "//" + "orange_DW__";
				}
				url_tDBInput_16 += ";appName=" + projectName + ";" + "";
				String dbschema_tDBInput_16 = "dbo";

				conn_tDBInput_16 = java.sql.DriverManager.getConnection(url_tDBInput_16, dbUser_tDBInput_16,
						dbPwd_tDBInput_16);

				java.sql.Statement stmt_tDBInput_16 = conn_tDBInput_16.createStatement();

				String dbquery_tDBInput_16 = "SELECT dbo.Dim_type_engagement.type_engagement_id,\n		dbo.Dim_type_engagement.Type_d_engagement__Opportunite\nFROM	dbo.Di"
						+ "m_type_engagement";

				globalMap.put("tDBInput_16_QUERY", dbquery_tDBInput_16);
				java.sql.ResultSet rs_tDBInput_16 = null;

				try {
					rs_tDBInput_16 = stmt_tDBInput_16.executeQuery(dbquery_tDBInput_16);
					java.sql.ResultSetMetaData rsmd_tDBInput_16 = rs_tDBInput_16.getMetaData();
					int colQtyInRs_tDBInput_16 = rsmd_tDBInput_16.getColumnCount();

					String tmpContent_tDBInput_16 = null;

					while (rs_tDBInput_16.next()) {
						nb_line_tDBInput_16++;

						if (colQtyInRs_tDBInput_16 < 1) {
							row69.type_engagement_id = 0;
						} else {

							row69.type_engagement_id = rs_tDBInput_16.getInt(1);
							if (rs_tDBInput_16.wasNull()) {
								throw new RuntimeException("Null value in non-Nullable column");
							}
						}
						if (colQtyInRs_tDBInput_16 < 2) {
							row69.Type_d_engagement__Opportunite = null;
						} else {

							tmpContent_tDBInput_16 = rs_tDBInput_16.getString(2);
							if (tmpContent_tDBInput_16 != null) {
								if (talendToDBList_tDBInput_16.contains(
										rsmd_tDBInput_16.getColumnTypeName(2).toUpperCase(java.util.Locale.ENGLISH))) {
									row69.Type_d_engagement__Opportunite = FormatterUtils
											.formatUnwithE(tmpContent_tDBInput_16);
								} else {
									row69.Type_d_engagement__Opportunite = tmpContent_tDBInput_16;
								}
							} else {
								row69.Type_d_engagement__Opportunite = null;
							}
						}

						/**
						 * [tDBInput_16 begin ] stop
						 */

						/**
						 * [tDBInput_16 main ] start
						 */

						currentComponent = "tDBInput_16";

						tos_count_tDBInput_16++;

						/**
						 * [tDBInput_16 main ] stop
						 */

						/**
						 * [tDBInput_16 process_data_begin ] start
						 */

						currentComponent = "tDBInput_16";

						/**
						 * [tDBInput_16 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row69 main ] start
						 */

						currentComponent = "tAdvancedHash_row69";

						if (execStat) {
							runStat.updateStatOnConnection(iterateId, 1, 1

									, "row69"

							);
						}

						row69Struct row69_HashRow = new row69Struct();

						row69_HashRow.type_engagement_id = row69.type_engagement_id;

						row69_HashRow.Type_d_engagement__Opportunite = row69.Type_d_engagement__Opportunite;

						tHash_Lookup_row69.put(row69_HashRow);

						tos_count_tAdvancedHash_row69++;

						/**
						 * [tAdvancedHash_row69 main ] stop
						 */

						/**
						 * [tAdvancedHash_row69 process_data_begin ] start
						 */

						currentComponent = "tAdvancedHash_row69";

						/**
						 * [tAdvancedHash_row69 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row69 process_data_end ] start
						 */

						currentComponent = "tAdvancedHash_row69";

						/**
						 * [tAdvancedHash_row69 process_data_end ] stop
						 */

						/**
						 * [tDBInput_16 process_data_end ] start
						 */

						currentComponent = "tDBInput_16";

						/**
						 * [tDBInput_16 process_data_end ] stop
						 */

						/**
						 * [tDBInput_16 end ] start
						 */

						currentComponent = "tDBInput_16";

					}
				} finally {
					if (rs_tDBInput_16 != null) {
						rs_tDBInput_16.close();
					}
					if (stmt_tDBInput_16 != null) {
						stmt_tDBInput_16.close();
					}
					if (conn_tDBInput_16 != null && !conn_tDBInput_16.isClosed()) {

						conn_tDBInput_16.close();

						if ("com.mysql.cj.jdbc.Driver".equals((String) globalMap.get("driverClass_"))
								&& routines.system.BundleUtils.inOSGi()) {
							Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread")
									.getMethod("checkedShutdown").invoke(null, (Object[]) null);
						}

					}
				}
				globalMap.put("tDBInput_16_NB_LINE", nb_line_tDBInput_16);

				ok_Hash.put("tDBInput_16", true);
				end_Hash.put("tDBInput_16", System.currentTimeMillis());

				/**
				 * [tDBInput_16 end ] stop
				 */

				/**
				 * [tAdvancedHash_row69 end ] start
				 */

				currentComponent = "tAdvancedHash_row69";

				tHash_Lookup_row69.endPut();

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row69");
				}

				ok_Hash.put("tAdvancedHash_row69", true);
				end_Hash.put("tAdvancedHash_row69", System.currentTimeMillis());

				/**
				 * [tAdvancedHash_row69 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tDBInput_16 finally ] start
				 */

				currentComponent = "tDBInput_16";

				/**
				 * [tDBInput_16 finally ] stop
				 */

				/**
				 * [tAdvancedHash_row69 finally ] start
				 */

				currentComponent = "tAdvancedHash_row69";

				/**
				 * [tAdvancedHash_row69 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tDBInput_16_SUBPROCESS_STATE", 1);
	}

	public static class row72Struct implements routines.system.IPersistableComparableLookupRow<row72Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];
		protected static final int DEFAULT_HASHCODE = 1;
		protected static final int PRIME = 31;
		protected int hashCode = DEFAULT_HASHCODE;
		public boolean hashCodeDirty = true;

		public String loopKey;

		public int Extension_id;

		public int getExtension_id() {
			return this.Extension_id;
		}

		public String Extension__Opportunite;

		public String getExtension__Opportunite() {
			return this.Extension__Opportunite;
		}

		@Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;

				result = prime * result
						+ ((this.Extension__Opportunite == null) ? 0 : this.Extension__Opportunite.hashCode());

				this.hashCode = result;
				this.hashCodeDirty = false;
			}
			return this.hashCode;
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			final row72Struct other = (row72Struct) obj;

			if (this.Extension__Opportunite == null) {
				if (other.Extension__Opportunite != null)
					return false;

			} else if (!this.Extension__Opportunite.equals(other.Extension__Opportunite))

				return false;

			return true;
		}

		public void copyDataTo(row72Struct other) {

			other.Extension_id = this.Extension_id;
			other.Extension__Opportunite = this.Extension__Opportunite;

		}

		public void copyKeysDataTo(row72Struct other) {

			other.Extension__Opportunite = this.Extension__Opportunite;

		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readKeysData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Extension__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Extension__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeKeysData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Extension__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Extension__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		/**
		 * Fill Values data by reading ObjectInputStream.
		 */
		public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
			try {

				int length = 0;

				this.Extension_id = dis.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
			try {
				int length = 0;

				this.Extension_id = objectIn.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		/**
		 * Return a byte array which represents Values data.
		 */
		public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
			try {

				dos.writeInt(this.Extension_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut) {
			try {

				objectOut.writeInt(this.Extension_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}
		}

		public boolean supportMarshaller() {
			return true;
		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Extension_id=" + String.valueOf(Extension_id));
			sb.append(",Extension__Opportunite=" + Extension__Opportunite);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row72Struct other) {

			int returnValue = -1;

			returnValue = checkNullsAndCompare(this.Extension__Opportunite, other.Extension__Opportunite);
			if (returnValue != 0) {
				return returnValue;
			}

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tDBInput_17Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tDBInput_17_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				row72Struct row72 = new row72Struct();

				/**
				 * [tAdvancedHash_row72 begin ] start
				 */

				ok_Hash.put("tAdvancedHash_row72", false);
				start_Hash.put("tAdvancedHash_row72", System.currentTimeMillis());

				currentComponent = "tAdvancedHash_row72";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row72");
				}

				int tos_count_tAdvancedHash_row72 = 0;

				// connection name:row72
				// source node:tDBInput_17 - inputs:(after_tFileInputExcel_9)
				// outputs:(row72,row72) | target node:tAdvancedHash_row72 - inputs:(row72)
				// outputs:()
				// linked node: tMap_50 - inputs:(row72,Extension_id) outputs:(q)

				org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row72 = org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row72Struct> tHash_Lookup_row72 = org.talend.designer.components.lookup.memory.AdvancedMemoryLookup
						.<row72Struct>getLookup(matchingModeEnum_row72);

				globalMap.put("tHash_Lookup_row72", tHash_Lookup_row72);

				/**
				 * [tAdvancedHash_row72 begin ] stop
				 */

				/**
				 * [tDBInput_17 begin ] start
				 */

				ok_Hash.put("tDBInput_17", false);
				start_Hash.put("tDBInput_17", System.currentTimeMillis());

				currentComponent = "tDBInput_17";

				int tos_count_tDBInput_17 = 0;

				org.talend.designer.components.util.mssql.MSSqlGenerateTimestampUtil mssqlGTU_tDBInput_17 = org.talend.designer.components.util.mssql.MSSqlUtilFactory
						.getMSSqlGenerateTimestampUtil();

				java.util.List<String> talendToDBList_tDBInput_17 = new java.util.ArrayList();
				String[] talendToDBArray_tDBInput_17 = new String[] { "FLOAT", "NUMERIC", "NUMERIC IDENTITY", "DECIMAL",
						"DECIMAL IDENTITY", "REAL" };
				java.util.Collections.addAll(talendToDBList_tDBInput_17, talendToDBArray_tDBInput_17);
				int nb_line_tDBInput_17 = 0;
				java.sql.Connection conn_tDBInput_17 = null;
				String driverClass_tDBInput_17 = "net.sourceforge.jtds.jdbc.Driver";
				java.lang.Class jdbcclazz_tDBInput_17 = java.lang.Class.forName(driverClass_tDBInput_17);
				String dbUser_tDBInput_17 = "sa";

				final String decryptedPassword_tDBInput_17 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:TN0psxSh+Q+8EGx/XU6hmxkw829Dn4hTALVbvr0DiE84NqjKvNE=");

				String dbPwd_tDBInput_17 = decryptedPassword_tDBInput_17;

				String port_tDBInput_17 = "1433";
				String dbname_tDBInput_17 = "orange_DW__";
				String url_tDBInput_17 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBInput_17)) {
					url_tDBInput_17 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBInput_17)) {
					url_tDBInput_17 += "//" + "orange_DW__";
				}
				url_tDBInput_17 += ";appName=" + projectName + ";" + "";
				String dbschema_tDBInput_17 = "dbo";

				conn_tDBInput_17 = java.sql.DriverManager.getConnection(url_tDBInput_17, dbUser_tDBInput_17,
						dbPwd_tDBInput_17);

				java.sql.Statement stmt_tDBInput_17 = conn_tDBInput_17.createStatement();

				String dbquery_tDBInput_17 = "SELECT dbo.Dim_Extension_mobile.Extension_id,\n		dbo.Dim_Extension_mobile.Extension__Opportunite\nFROM	dbo.Dim_Extension_"
						+ "mobile";

				globalMap.put("tDBInput_17_QUERY", dbquery_tDBInput_17);
				java.sql.ResultSet rs_tDBInput_17 = null;

				try {
					rs_tDBInput_17 = stmt_tDBInput_17.executeQuery(dbquery_tDBInput_17);
					java.sql.ResultSetMetaData rsmd_tDBInput_17 = rs_tDBInput_17.getMetaData();
					int colQtyInRs_tDBInput_17 = rsmd_tDBInput_17.getColumnCount();

					String tmpContent_tDBInput_17 = null;

					while (rs_tDBInput_17.next()) {
						nb_line_tDBInput_17++;

						if (colQtyInRs_tDBInput_17 < 1) {
							row72.Extension_id = 0;
						} else {

							row72.Extension_id = rs_tDBInput_17.getInt(1);
							if (rs_tDBInput_17.wasNull()) {
								throw new RuntimeException("Null value in non-Nullable column");
							}
						}
						if (colQtyInRs_tDBInput_17 < 2) {
							row72.Extension__Opportunite = null;
						} else {

							tmpContent_tDBInput_17 = rs_tDBInput_17.getString(2);
							if (tmpContent_tDBInput_17 != null) {
								if (talendToDBList_tDBInput_17.contains(
										rsmd_tDBInput_17.getColumnTypeName(2).toUpperCase(java.util.Locale.ENGLISH))) {
									row72.Extension__Opportunite = FormatterUtils.formatUnwithE(tmpContent_tDBInput_17);
								} else {
									row72.Extension__Opportunite = tmpContent_tDBInput_17;
								}
							} else {
								row72.Extension__Opportunite = null;
							}
						}

						/**
						 * [tDBInput_17 begin ] stop
						 */

						/**
						 * [tDBInput_17 main ] start
						 */

						currentComponent = "tDBInput_17";

						tos_count_tDBInput_17++;

						/**
						 * [tDBInput_17 main ] stop
						 */

						/**
						 * [tDBInput_17 process_data_begin ] start
						 */

						currentComponent = "tDBInput_17";

						/**
						 * [tDBInput_17 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row72 main ] start
						 */

						currentComponent = "tAdvancedHash_row72";

						if (execStat) {
							runStat.updateStatOnConnection(iterateId, 1, 1

									, "row72"

							);
						}

						row72Struct row72_HashRow = new row72Struct();

						row72_HashRow.Extension_id = row72.Extension_id;

						row72_HashRow.Extension__Opportunite = row72.Extension__Opportunite;

						tHash_Lookup_row72.put(row72_HashRow);

						tos_count_tAdvancedHash_row72++;

						/**
						 * [tAdvancedHash_row72 main ] stop
						 */

						/**
						 * [tAdvancedHash_row72 process_data_begin ] start
						 */

						currentComponent = "tAdvancedHash_row72";

						/**
						 * [tAdvancedHash_row72 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row72 process_data_end ] start
						 */

						currentComponent = "tAdvancedHash_row72";

						/**
						 * [tAdvancedHash_row72 process_data_end ] stop
						 */

						/**
						 * [tDBInput_17 process_data_end ] start
						 */

						currentComponent = "tDBInput_17";

						/**
						 * [tDBInput_17 process_data_end ] stop
						 */

						/**
						 * [tDBInput_17 end ] start
						 */

						currentComponent = "tDBInput_17";

					}
				} finally {
					if (rs_tDBInput_17 != null) {
						rs_tDBInput_17.close();
					}
					if (stmt_tDBInput_17 != null) {
						stmt_tDBInput_17.close();
					}
					if (conn_tDBInput_17 != null && !conn_tDBInput_17.isClosed()) {

						conn_tDBInput_17.close();

						if ("com.mysql.cj.jdbc.Driver".equals((String) globalMap.get("driverClass_"))
								&& routines.system.BundleUtils.inOSGi()) {
							Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread")
									.getMethod("checkedShutdown").invoke(null, (Object[]) null);
						}

					}
				}
				globalMap.put("tDBInput_17_NB_LINE", nb_line_tDBInput_17);

				ok_Hash.put("tDBInput_17", true);
				end_Hash.put("tDBInput_17", System.currentTimeMillis());

				/**
				 * [tDBInput_17 end ] stop
				 */

				/**
				 * [tAdvancedHash_row72 end ] start
				 */

				currentComponent = "tAdvancedHash_row72";

				tHash_Lookup_row72.endPut();

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row72");
				}

				ok_Hash.put("tAdvancedHash_row72", true);
				end_Hash.put("tAdvancedHash_row72", System.currentTimeMillis());

				/**
				 * [tAdvancedHash_row72 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tDBInput_17 finally ] start
				 */

				currentComponent = "tDBInput_17";

				/**
				 * [tDBInput_17 finally ] stop
				 */

				/**
				 * [tAdvancedHash_row72 finally ] start
				 */

				currentComponent = "tAdvancedHash_row72";

				/**
				 * [tAdvancedHash_row72 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tDBInput_17_SUBPROCESS_STATE", 1);
	}

	public static class row74Struct implements routines.system.IPersistableComparableLookupRow<row74Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];
		protected static final int DEFAULT_HASHCODE = 1;
		protected static final int PRIME = 31;
		protected int hashCode = DEFAULT_HASHCODE;
		public boolean hashCodeDirty = true;

		public String loopKey;

		public int type_acces_id;

		public int getType_acces_id() {
			return this.type_acces_id;
		}

		public String Type_d_acces;

		public String getType_d_acces() {
			return this.Type_d_acces;
		}

		@Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;

				result = prime * result + ((this.Type_d_acces == null) ? 0 : this.Type_d_acces.hashCode());

				this.hashCode = result;
				this.hashCodeDirty = false;
			}
			return this.hashCode;
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			final row74Struct other = (row74Struct) obj;

			if (this.Type_d_acces == null) {
				if (other.Type_d_acces != null)
					return false;

			} else if (!this.Type_d_acces.equals(other.Type_d_acces))

				return false;

			return true;
		}

		public void copyDataTo(row74Struct other) {

			other.type_acces_id = this.type_acces_id;
			other.Type_d_acces = this.Type_d_acces;

		}

		public void copyKeysDataTo(row74Struct other) {

			other.Type_d_acces = this.Type_d_acces;

		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readKeysData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_d_acces = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_d_acces = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeKeysData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Type_d_acces, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Type_d_acces, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		/**
		 * Fill Values data by reading ObjectInputStream.
		 */
		public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
			try {

				int length = 0;

				this.type_acces_id = dis.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
			try {
				int length = 0;

				this.type_acces_id = objectIn.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		/**
		 * Return a byte array which represents Values data.
		 */
		public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
			try {

				dos.writeInt(this.type_acces_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut) {
			try {

				objectOut.writeInt(this.type_acces_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}
		}

		public boolean supportMarshaller() {
			return true;
		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("type_acces_id=" + String.valueOf(type_acces_id));
			sb.append(",Type_d_acces=" + Type_d_acces);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row74Struct other) {

			int returnValue = -1;

			returnValue = checkNullsAndCompare(this.Type_d_acces, other.Type_d_acces);
			if (returnValue != 0) {
				return returnValue;
			}

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tDBInput_18Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tDBInput_18_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				row74Struct row74 = new row74Struct();

				/**
				 * [tAdvancedHash_row74 begin ] start
				 */

				ok_Hash.put("tAdvancedHash_row74", false);
				start_Hash.put("tAdvancedHash_row74", System.currentTimeMillis());

				currentComponent = "tAdvancedHash_row74";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row74");
				}

				int tos_count_tAdvancedHash_row74 = 0;

				// connection name:row74
				// source node:tDBInput_18 - inputs:(after_tFileInputExcel_10)
				// outputs:(row74,row74) | target node:tAdvancedHash_row74 - inputs:(row74)
				// outputs:()
				// linked node: tMap_52 - inputs:(row74,Dim_type_d_acces_data) outputs:(x)

				org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row74 = org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row74Struct> tHash_Lookup_row74 = org.talend.designer.components.lookup.memory.AdvancedMemoryLookup
						.<row74Struct>getLookup(matchingModeEnum_row74);

				globalMap.put("tHash_Lookup_row74", tHash_Lookup_row74);

				/**
				 * [tAdvancedHash_row74 begin ] stop
				 */

				/**
				 * [tDBInput_18 begin ] start
				 */

				ok_Hash.put("tDBInput_18", false);
				start_Hash.put("tDBInput_18", System.currentTimeMillis());

				currentComponent = "tDBInput_18";

				int tos_count_tDBInput_18 = 0;

				org.talend.designer.components.util.mssql.MSSqlGenerateTimestampUtil mssqlGTU_tDBInput_18 = org.talend.designer.components.util.mssql.MSSqlUtilFactory
						.getMSSqlGenerateTimestampUtil();

				java.util.List<String> talendToDBList_tDBInput_18 = new java.util.ArrayList();
				String[] talendToDBArray_tDBInput_18 = new String[] { "FLOAT", "NUMERIC", "NUMERIC IDENTITY", "DECIMAL",
						"DECIMAL IDENTITY", "REAL" };
				java.util.Collections.addAll(talendToDBList_tDBInput_18, talendToDBArray_tDBInput_18);
				int nb_line_tDBInput_18 = 0;
				java.sql.Connection conn_tDBInput_18 = null;
				String driverClass_tDBInput_18 = "net.sourceforge.jtds.jdbc.Driver";
				java.lang.Class jdbcclazz_tDBInput_18 = java.lang.Class.forName(driverClass_tDBInput_18);
				String dbUser_tDBInput_18 = "sa";

				final String decryptedPassword_tDBInput_18 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:/P8jXh+ga7BsESukh5ib5Rc489XIYNkp1LdvaJYzrGoRWNi7Q0Q=");

				String dbPwd_tDBInput_18 = decryptedPassword_tDBInput_18;

				String port_tDBInput_18 = "1433";
				String dbname_tDBInput_18 = "orange_DW__";
				String url_tDBInput_18 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBInput_18)) {
					url_tDBInput_18 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBInput_18)) {
					url_tDBInput_18 += "//" + "orange_DW__";
				}
				url_tDBInput_18 += ";appName=" + projectName + ";" + "";
				String dbschema_tDBInput_18 = "dbo";

				conn_tDBInput_18 = java.sql.DriverManager.getConnection(url_tDBInput_18, dbUser_tDBInput_18,
						dbPwd_tDBInput_18);

				java.sql.Statement stmt_tDBInput_18 = conn_tDBInput_18.createStatement();

				String dbquery_tDBInput_18 = "SELECT dbo.Dim_type_acces.\"type_accés_id\",\n		dbo.Dim_type_acces.Type_d_acces\nFROM	dbo.Dim_type_acces";

				globalMap.put("tDBInput_18_QUERY", dbquery_tDBInput_18);
				java.sql.ResultSet rs_tDBInput_18 = null;

				try {
					rs_tDBInput_18 = stmt_tDBInput_18.executeQuery(dbquery_tDBInput_18);
					java.sql.ResultSetMetaData rsmd_tDBInput_18 = rs_tDBInput_18.getMetaData();
					int colQtyInRs_tDBInput_18 = rsmd_tDBInput_18.getColumnCount();

					String tmpContent_tDBInput_18 = null;

					while (rs_tDBInput_18.next()) {
						nb_line_tDBInput_18++;

						if (colQtyInRs_tDBInput_18 < 1) {
							row74.type_acces_id = 0;
						} else {

							row74.type_acces_id = rs_tDBInput_18.getInt(1);
							if (rs_tDBInput_18.wasNull()) {
								throw new RuntimeException("Null value in non-Nullable column");
							}
						}
						if (colQtyInRs_tDBInput_18 < 2) {
							row74.Type_d_acces = null;
						} else {

							tmpContent_tDBInput_18 = rs_tDBInput_18.getString(2);
							if (tmpContent_tDBInput_18 != null) {
								if (talendToDBList_tDBInput_18.contains(
										rsmd_tDBInput_18.getColumnTypeName(2).toUpperCase(java.util.Locale.ENGLISH))) {
									row74.Type_d_acces = FormatterUtils.formatUnwithE(tmpContent_tDBInput_18);
								} else {
									row74.Type_d_acces = tmpContent_tDBInput_18;
								}
							} else {
								row74.Type_d_acces = null;
							}
						}

						/**
						 * [tDBInput_18 begin ] stop
						 */

						/**
						 * [tDBInput_18 main ] start
						 */

						currentComponent = "tDBInput_18";

						tos_count_tDBInput_18++;

						/**
						 * [tDBInput_18 main ] stop
						 */

						/**
						 * [tDBInput_18 process_data_begin ] start
						 */

						currentComponent = "tDBInput_18";

						/**
						 * [tDBInput_18 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row74 main ] start
						 */

						currentComponent = "tAdvancedHash_row74";

						if (execStat) {
							runStat.updateStatOnConnection(iterateId, 1, 1

									, "row74"

							);
						}

						row74Struct row74_HashRow = new row74Struct();

						row74_HashRow.type_acces_id = row74.type_acces_id;

						row74_HashRow.Type_d_acces = row74.Type_d_acces;

						tHash_Lookup_row74.put(row74_HashRow);

						tos_count_tAdvancedHash_row74++;

						/**
						 * [tAdvancedHash_row74 main ] stop
						 */

						/**
						 * [tAdvancedHash_row74 process_data_begin ] start
						 */

						currentComponent = "tAdvancedHash_row74";

						/**
						 * [tAdvancedHash_row74 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row74 process_data_end ] start
						 */

						currentComponent = "tAdvancedHash_row74";

						/**
						 * [tAdvancedHash_row74 process_data_end ] stop
						 */

						/**
						 * [tDBInput_18 process_data_end ] start
						 */

						currentComponent = "tDBInput_18";

						/**
						 * [tDBInput_18 process_data_end ] stop
						 */

						/**
						 * [tDBInput_18 end ] start
						 */

						currentComponent = "tDBInput_18";

					}
				} finally {
					if (rs_tDBInput_18 != null) {
						rs_tDBInput_18.close();
					}
					if (stmt_tDBInput_18 != null) {
						stmt_tDBInput_18.close();
					}
					if (conn_tDBInput_18 != null && !conn_tDBInput_18.isClosed()) {

						conn_tDBInput_18.close();

						if ("com.mysql.cj.jdbc.Driver".equals((String) globalMap.get("driverClass_"))
								&& routines.system.BundleUtils.inOSGi()) {
							Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread")
									.getMethod("checkedShutdown").invoke(null, (Object[]) null);
						}

					}
				}
				globalMap.put("tDBInput_18_NB_LINE", nb_line_tDBInput_18);

				ok_Hash.put("tDBInput_18", true);
				end_Hash.put("tDBInput_18", System.currentTimeMillis());

				/**
				 * [tDBInput_18 end ] stop
				 */

				/**
				 * [tAdvancedHash_row74 end ] start
				 */

				currentComponent = "tAdvancedHash_row74";

				tHash_Lookup_row74.endPut();

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row74");
				}

				ok_Hash.put("tAdvancedHash_row74", true);
				end_Hash.put("tAdvancedHash_row74", System.currentTimeMillis());

				/**
				 * [tAdvancedHash_row74 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tDBInput_18 finally ] start
				 */

				currentComponent = "tDBInput_18";

				/**
				 * [tDBInput_18 finally ] stop
				 */

				/**
				 * [tAdvancedHash_row74 finally ] start
				 */

				currentComponent = "tAdvancedHash_row74";

				/**
				 * [tAdvancedHash_row74 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tDBInput_18_SUBPROCESS_STATE", 1);
	}

	public static class row77Struct implements routines.system.IPersistableComparableLookupRow<row77Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];
		protected static final int DEFAULT_HASHCODE = 1;
		protected static final int PRIME = 31;
		protected int hashCode = DEFAULT_HASHCODE;
		public boolean hashCodeDirty = true;

		public String loopKey;

		public int type_operation_id;

		public int getType_operation_id() {
			return this.type_operation_id;
		}

		public String Type_d_operation;

		public String getType_d_operation() {
			return this.Type_d_operation;
		}

		@Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;

				result = prime * result + ((this.Type_d_operation == null) ? 0 : this.Type_d_operation.hashCode());

				this.hashCode = result;
				this.hashCodeDirty = false;
			}
			return this.hashCode;
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			final row77Struct other = (row77Struct) obj;

			if (this.Type_d_operation == null) {
				if (other.Type_d_operation != null)
					return false;

			} else if (!this.Type_d_operation.equals(other.Type_d_operation))

				return false;

			return true;
		}

		public void copyDataTo(row77Struct other) {

			other.type_operation_id = this.type_operation_id;
			other.Type_d_operation = this.Type_d_operation;

		}

		public void copyKeysDataTo(row77Struct other) {

			other.Type_d_operation = this.Type_d_operation;

		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readKeysData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_d_operation = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_d_operation = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeKeysData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Type_d_operation, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Type_d_operation, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		/**
		 * Fill Values data by reading ObjectInputStream.
		 */
		public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
			try {

				int length = 0;

				this.type_operation_id = dis.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
			try {
				int length = 0;

				this.type_operation_id = objectIn.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		/**
		 * Return a byte array which represents Values data.
		 */
		public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
			try {

				dos.writeInt(this.type_operation_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut) {
			try {

				objectOut.writeInt(this.type_operation_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}
		}

		public boolean supportMarshaller() {
			return true;
		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("type_operation_id=" + String.valueOf(type_operation_id));
			sb.append(",Type_d_operation=" + Type_d_operation);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row77Struct other) {

			int returnValue = -1;

			returnValue = checkNullsAndCompare(this.Type_d_operation, other.Type_d_operation);
			if (returnValue != 0) {
				return returnValue;
			}

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tDBInput_19Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tDBInput_19_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				row77Struct row77 = new row77Struct();

				/**
				 * [tAdvancedHash_row77 begin ] start
				 */

				ok_Hash.put("tAdvancedHash_row77", false);
				start_Hash.put("tAdvancedHash_row77", System.currentTimeMillis());

				currentComponent = "tAdvancedHash_row77";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row77");
				}

				int tos_count_tAdvancedHash_row77 = 0;

				// connection name:row77
				// source node:tDBInput_19 - inputs:(after_tFileInputExcel_12)
				// outputs:(row77,row77) | target node:tAdvancedHash_row77 - inputs:(row77)
				// outputs:()
				// linked node: tMap_54 - inputs:(row77,copyOfDim_type_operation_data_0)
				// outputs:(w)

				org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row77 = org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row77Struct> tHash_Lookup_row77 = org.talend.designer.components.lookup.memory.AdvancedMemoryLookup
						.<row77Struct>getLookup(matchingModeEnum_row77);

				globalMap.put("tHash_Lookup_row77", tHash_Lookup_row77);

				/**
				 * [tAdvancedHash_row77 begin ] stop
				 */

				/**
				 * [tDBInput_19 begin ] start
				 */

				ok_Hash.put("tDBInput_19", false);
				start_Hash.put("tDBInput_19", System.currentTimeMillis());

				currentComponent = "tDBInput_19";

				int tos_count_tDBInput_19 = 0;

				org.talend.designer.components.util.mssql.MSSqlGenerateTimestampUtil mssqlGTU_tDBInput_19 = org.talend.designer.components.util.mssql.MSSqlUtilFactory
						.getMSSqlGenerateTimestampUtil();

				java.util.List<String> talendToDBList_tDBInput_19 = new java.util.ArrayList();
				String[] talendToDBArray_tDBInput_19 = new String[] { "FLOAT", "NUMERIC", "NUMERIC IDENTITY", "DECIMAL",
						"DECIMAL IDENTITY", "REAL" };
				java.util.Collections.addAll(talendToDBList_tDBInput_19, talendToDBArray_tDBInput_19);
				int nb_line_tDBInput_19 = 0;
				java.sql.Connection conn_tDBInput_19 = null;
				String driverClass_tDBInput_19 = "net.sourceforge.jtds.jdbc.Driver";
				java.lang.Class jdbcclazz_tDBInput_19 = java.lang.Class.forName(driverClass_tDBInput_19);
				String dbUser_tDBInput_19 = "sa";

				final String decryptedPassword_tDBInput_19 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:/cgFYcePSswq70QEXPl2ELfSM6KRElJLprK5I5VG/S19Z1cshxA=");

				String dbPwd_tDBInput_19 = decryptedPassword_tDBInput_19;

				String port_tDBInput_19 = "1433";
				String dbname_tDBInput_19 = "orange_DW__";
				String url_tDBInput_19 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBInput_19)) {
					url_tDBInput_19 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBInput_19)) {
					url_tDBInput_19 += "//" + "orange_DW__";
				}
				url_tDBInput_19 += ";appName=" + projectName + ";" + "";
				String dbschema_tDBInput_19 = "dbo";

				conn_tDBInput_19 = java.sql.DriverManager.getConnection(url_tDBInput_19, dbUser_tDBInput_19,
						dbPwd_tDBInput_19);

				java.sql.Statement stmt_tDBInput_19 = conn_tDBInput_19.createStatement();

				String dbquery_tDBInput_19 = "SELECT dbo.Dim_type_operation.type_operation_id,\n		dbo.Dim_type_operation.Type_d_operation\nFROM	dbo.Dim_type_operation";

				globalMap.put("tDBInput_19_QUERY", dbquery_tDBInput_19);
				java.sql.ResultSet rs_tDBInput_19 = null;

				try {
					rs_tDBInput_19 = stmt_tDBInput_19.executeQuery(dbquery_tDBInput_19);
					java.sql.ResultSetMetaData rsmd_tDBInput_19 = rs_tDBInput_19.getMetaData();
					int colQtyInRs_tDBInput_19 = rsmd_tDBInput_19.getColumnCount();

					String tmpContent_tDBInput_19 = null;

					while (rs_tDBInput_19.next()) {
						nb_line_tDBInput_19++;

						if (colQtyInRs_tDBInput_19 < 1) {
							row77.type_operation_id = 0;
						} else {

							row77.type_operation_id = rs_tDBInput_19.getInt(1);
							if (rs_tDBInput_19.wasNull()) {
								throw new RuntimeException("Null value in non-Nullable column");
							}
						}
						if (colQtyInRs_tDBInput_19 < 2) {
							row77.Type_d_operation = null;
						} else {

							tmpContent_tDBInput_19 = rs_tDBInput_19.getString(2);
							if (tmpContent_tDBInput_19 != null) {
								if (talendToDBList_tDBInput_19.contains(
										rsmd_tDBInput_19.getColumnTypeName(2).toUpperCase(java.util.Locale.ENGLISH))) {
									row77.Type_d_operation = FormatterUtils.formatUnwithE(tmpContent_tDBInput_19);
								} else {
									row77.Type_d_operation = tmpContent_tDBInput_19;
								}
							} else {
								row77.Type_d_operation = null;
							}
						}

						/**
						 * [tDBInput_19 begin ] stop
						 */

						/**
						 * [tDBInput_19 main ] start
						 */

						currentComponent = "tDBInput_19";

						tos_count_tDBInput_19++;

						/**
						 * [tDBInput_19 main ] stop
						 */

						/**
						 * [tDBInput_19 process_data_begin ] start
						 */

						currentComponent = "tDBInput_19";

						/**
						 * [tDBInput_19 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row77 main ] start
						 */

						currentComponent = "tAdvancedHash_row77";

						if (execStat) {
							runStat.updateStatOnConnection(iterateId, 1, 1

									, "row77"

							);
						}

						row77Struct row77_HashRow = new row77Struct();

						row77_HashRow.type_operation_id = row77.type_operation_id;

						row77_HashRow.Type_d_operation = row77.Type_d_operation;

						tHash_Lookup_row77.put(row77_HashRow);

						tos_count_tAdvancedHash_row77++;

						/**
						 * [tAdvancedHash_row77 main ] stop
						 */

						/**
						 * [tAdvancedHash_row77 process_data_begin ] start
						 */

						currentComponent = "tAdvancedHash_row77";

						/**
						 * [tAdvancedHash_row77 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row77 process_data_end ] start
						 */

						currentComponent = "tAdvancedHash_row77";

						/**
						 * [tAdvancedHash_row77 process_data_end ] stop
						 */

						/**
						 * [tDBInput_19 process_data_end ] start
						 */

						currentComponent = "tDBInput_19";

						/**
						 * [tDBInput_19 process_data_end ] stop
						 */

						/**
						 * [tDBInput_19 end ] start
						 */

						currentComponent = "tDBInput_19";

					}
				} finally {
					if (rs_tDBInput_19 != null) {
						rs_tDBInput_19.close();
					}
					if (stmt_tDBInput_19 != null) {
						stmt_tDBInput_19.close();
					}
					if (conn_tDBInput_19 != null && !conn_tDBInput_19.isClosed()) {

						conn_tDBInput_19.close();

						if ("com.mysql.cj.jdbc.Driver".equals((String) globalMap.get("driverClass_"))
								&& routines.system.BundleUtils.inOSGi()) {
							Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread")
									.getMethod("checkedShutdown").invoke(null, (Object[]) null);
						}

					}
				}
				globalMap.put("tDBInput_19_NB_LINE", nb_line_tDBInput_19);

				ok_Hash.put("tDBInput_19", true);
				end_Hash.put("tDBInput_19", System.currentTimeMillis());

				/**
				 * [tDBInput_19 end ] stop
				 */

				/**
				 * [tAdvancedHash_row77 end ] start
				 */

				currentComponent = "tAdvancedHash_row77";

				tHash_Lookup_row77.endPut();

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row77");
				}

				ok_Hash.put("tAdvancedHash_row77", true);
				end_Hash.put("tAdvancedHash_row77", System.currentTimeMillis());

				/**
				 * [tAdvancedHash_row77 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tDBInput_19 finally ] start
				 */

				currentComponent = "tDBInput_19";

				/**
				 * [tDBInput_19 finally ] stop
				 */

				/**
				 * [tAdvancedHash_row77 finally ] start
				 */

				currentComponent = "tAdvancedHash_row77";

				/**
				 * [tAdvancedHash_row77 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tDBInput_19_SUBPROCESS_STATE", 1);
	}

	public static class row80Struct implements routines.system.IPersistableComparableLookupRow<row80Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];
		protected static final int DEFAULT_HASHCODE = 1;
		protected static final int PRIME = 31;
		protected int hashCode = DEFAULT_HASHCODE;
		public boolean hashCodeDirty = true;

		public String loopKey;

		public int sujet_id;

		public int getSujet_id() {
			return this.sujet_id;
		}

		public String Sujet;

		public String getSujet() {
			return this.Sujet;
		}

		@Override
		public int hashCode() {
			if (this.hashCodeDirty) {
				final int prime = PRIME;
				int result = DEFAULT_HASHCODE;

				result = prime * result + ((this.Sujet == null) ? 0 : this.Sujet.hashCode());

				this.hashCode = result;
				this.hashCodeDirty = false;
			}
			return this.hashCode;
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			final row80Struct other = (row80Struct) obj;

			if (this.Sujet == null) {
				if (other.Sujet != null)
					return false;

			} else if (!this.Sujet.equals(other.Sujet))

				return false;

			return true;
		}

		public void copyDataTo(row80Struct other) {

			other.sujet_id = this.sujet_id;
			other.Sujet = this.Sujet;

		}

		public void copyKeysDataTo(row80Struct other) {

			other.Sujet = this.Sujet;

		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readKeysData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Sujet = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readKeysData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Sujet = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeKeysData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Sujet, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeKeysData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Sujet, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		/**
		 * Fill Values data by reading ObjectInputStream.
		 */
		public void readValuesData(DataInputStream dis, ObjectInputStream ois) {
			try {

				int length = 0;

				this.sujet_id = dis.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		public void readValuesData(DataInputStream dis, org.jboss.marshalling.Unmarshaller objectIn) {
			try {
				int length = 0;

				this.sujet_id = objectIn.readInt();

			} catch (IOException e) {
				throw new RuntimeException(e);

			}

		}

		/**
		 * Return a byte array which represents Values data.
		 */
		public void writeValuesData(DataOutputStream dos, ObjectOutputStream oos) {
			try {

				dos.writeInt(this.sujet_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeValuesData(DataOutputStream dos, org.jboss.marshalling.Marshaller objectOut) {
			try {

				objectOut.writeInt(this.sujet_id);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}
		}

		public boolean supportMarshaller() {
			return true;
		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("sujet_id=" + String.valueOf(sujet_id));
			sb.append(",Sujet=" + Sujet);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row80Struct other) {

			int returnValue = -1;

			returnValue = checkNullsAndCompare(this.Sujet, other.Sujet);
			if (returnValue != 0) {
				return returnValue;
			}

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tDBInput_20Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tDBInput_20_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				row80Struct row80 = new row80Struct();

				/**
				 * [tAdvancedHash_row80 begin ] start
				 */

				ok_Hash.put("tAdvancedHash_row80", false);
				start_Hash.put("tAdvancedHash_row80", System.currentTimeMillis());

				currentComponent = "tAdvancedHash_row80";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row80");
				}

				int tos_count_tAdvancedHash_row80 = 0;

				// connection name:row80
				// source node:tDBInput_20 - inputs:(after_tFileInputExcel_13)
				// outputs:(row80,row80) | target node:tAdvancedHash_row80 - inputs:(row80)
				// outputs:()
				// linked node: tMap_56 - inputs:(row80,copyOfDim_sujet_data) outputs:(copyOfq)

				org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE matchingModeEnum_row80 = org.talend.designer.components.lookup.common.ICommonLookup.MATCHING_MODE.UNIQUE_MATCH;

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row80Struct> tHash_Lookup_row80 = org.talend.designer.components.lookup.memory.AdvancedMemoryLookup
						.<row80Struct>getLookup(matchingModeEnum_row80);

				globalMap.put("tHash_Lookup_row80", tHash_Lookup_row80);

				/**
				 * [tAdvancedHash_row80 begin ] stop
				 */

				/**
				 * [tDBInput_20 begin ] start
				 */

				ok_Hash.put("tDBInput_20", false);
				start_Hash.put("tDBInput_20", System.currentTimeMillis());

				currentComponent = "tDBInput_20";

				int tos_count_tDBInput_20 = 0;

				org.talend.designer.components.util.mssql.MSSqlGenerateTimestampUtil mssqlGTU_tDBInput_20 = org.talend.designer.components.util.mssql.MSSqlUtilFactory
						.getMSSqlGenerateTimestampUtil();

				java.util.List<String> talendToDBList_tDBInput_20 = new java.util.ArrayList();
				String[] talendToDBArray_tDBInput_20 = new String[] { "FLOAT", "NUMERIC", "NUMERIC IDENTITY", "DECIMAL",
						"DECIMAL IDENTITY", "REAL" };
				java.util.Collections.addAll(talendToDBList_tDBInput_20, talendToDBArray_tDBInput_20);
				int nb_line_tDBInput_20 = 0;
				java.sql.Connection conn_tDBInput_20 = null;
				String driverClass_tDBInput_20 = "net.sourceforge.jtds.jdbc.Driver";
				java.lang.Class jdbcclazz_tDBInput_20 = java.lang.Class.forName(driverClass_tDBInput_20);
				String dbUser_tDBInput_20 = "sa";

				final String decryptedPassword_tDBInput_20 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:3+ru7KcUIqNxwy5wLP1mXXX9yxWk/eMYLutqXbXkaNkdSlO9tq8=");

				String dbPwd_tDBInput_20 = decryptedPassword_tDBInput_20;

				String port_tDBInput_20 = "1433";
				String dbname_tDBInput_20 = "orange_DW__";
				String url_tDBInput_20 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBInput_20)) {
					url_tDBInput_20 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBInput_20)) {
					url_tDBInput_20 += "//" + "orange_DW__";
				}
				url_tDBInput_20 += ";appName=" + projectName + ";" + "";
				String dbschema_tDBInput_20 = "dbo";

				conn_tDBInput_20 = java.sql.DriverManager.getConnection(url_tDBInput_20, dbUser_tDBInput_20,
						dbPwd_tDBInput_20);

				java.sql.Statement stmt_tDBInput_20 = conn_tDBInput_20.createStatement();

				String dbquery_tDBInput_20 = "SELECT dbo.Dim_sujet.sujet_id,\n		dbo.Dim_sujet.Sujet\nFROM	dbo.Dim_sujet";

				globalMap.put("tDBInput_20_QUERY", dbquery_tDBInput_20);
				java.sql.ResultSet rs_tDBInput_20 = null;

				try {
					rs_tDBInput_20 = stmt_tDBInput_20.executeQuery(dbquery_tDBInput_20);
					java.sql.ResultSetMetaData rsmd_tDBInput_20 = rs_tDBInput_20.getMetaData();
					int colQtyInRs_tDBInput_20 = rsmd_tDBInput_20.getColumnCount();

					String tmpContent_tDBInput_20 = null;

					while (rs_tDBInput_20.next()) {
						nb_line_tDBInput_20++;

						if (colQtyInRs_tDBInput_20 < 1) {
							row80.sujet_id = 0;
						} else {

							row80.sujet_id = rs_tDBInput_20.getInt(1);
							if (rs_tDBInput_20.wasNull()) {
								throw new RuntimeException("Null value in non-Nullable column");
							}
						}
						if (colQtyInRs_tDBInput_20 < 2) {
							row80.Sujet = null;
						} else {

							tmpContent_tDBInput_20 = rs_tDBInput_20.getString(2);
							if (tmpContent_tDBInput_20 != null) {
								if (talendToDBList_tDBInput_20.contains(
										rsmd_tDBInput_20.getColumnTypeName(2).toUpperCase(java.util.Locale.ENGLISH))) {
									row80.Sujet = FormatterUtils.formatUnwithE(tmpContent_tDBInput_20);
								} else {
									row80.Sujet = tmpContent_tDBInput_20;
								}
							} else {
								row80.Sujet = null;
							}
						}

						/**
						 * [tDBInput_20 begin ] stop
						 */

						/**
						 * [tDBInput_20 main ] start
						 */

						currentComponent = "tDBInput_20";

						tos_count_tDBInput_20++;

						/**
						 * [tDBInput_20 main ] stop
						 */

						/**
						 * [tDBInput_20 process_data_begin ] start
						 */

						currentComponent = "tDBInput_20";

						/**
						 * [tDBInput_20 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row80 main ] start
						 */

						currentComponent = "tAdvancedHash_row80";

						if (execStat) {
							runStat.updateStatOnConnection(iterateId, 1, 1

									, "row80"

							);
						}

						row80Struct row80_HashRow = new row80Struct();

						row80_HashRow.sujet_id = row80.sujet_id;

						row80_HashRow.Sujet = row80.Sujet;

						tHash_Lookup_row80.put(row80_HashRow);

						tos_count_tAdvancedHash_row80++;

						/**
						 * [tAdvancedHash_row80 main ] stop
						 */

						/**
						 * [tAdvancedHash_row80 process_data_begin ] start
						 */

						currentComponent = "tAdvancedHash_row80";

						/**
						 * [tAdvancedHash_row80 process_data_begin ] stop
						 */

						/**
						 * [tAdvancedHash_row80 process_data_end ] start
						 */

						currentComponent = "tAdvancedHash_row80";

						/**
						 * [tAdvancedHash_row80 process_data_end ] stop
						 */

						/**
						 * [tDBInput_20 process_data_end ] start
						 */

						currentComponent = "tDBInput_20";

						/**
						 * [tDBInput_20 process_data_end ] stop
						 */

						/**
						 * [tDBInput_20 end ] start
						 */

						currentComponent = "tDBInput_20";

					}
				} finally {
					if (rs_tDBInput_20 != null) {
						rs_tDBInput_20.close();
					}
					if (stmt_tDBInput_20 != null) {
						stmt_tDBInput_20.close();
					}
					if (conn_tDBInput_20 != null && !conn_tDBInput_20.isClosed()) {

						conn_tDBInput_20.close();

						if ("com.mysql.cj.jdbc.Driver".equals((String) globalMap.get("driverClass_"))
								&& routines.system.BundleUtils.inOSGi()) {
							Class.forName("com.mysql.cj.jdbc.AbandonedConnectionCleanupThread")
									.getMethod("checkedShutdown").invoke(null, (Object[]) null);
						}

					}
				}
				globalMap.put("tDBInput_20_NB_LINE", nb_line_tDBInput_20);

				ok_Hash.put("tDBInput_20", true);
				end_Hash.put("tDBInput_20", System.currentTimeMillis());

				/**
				 * [tDBInput_20 end ] stop
				 */

				/**
				 * [tAdvancedHash_row80 end ] start
				 */

				currentComponent = "tAdvancedHash_row80";

				tHash_Lookup_row80.endPut();

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row80");
				}

				ok_Hash.put("tAdvancedHash_row80", true);
				end_Hash.put("tAdvancedHash_row80", System.currentTimeMillis());

				/**
				 * [tAdvancedHash_row80 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			try {

				/**
				 * [tDBInput_20 finally ] start
				 */

				currentComponent = "tDBInput_20";

				/**
				 * [tDBInput_20 finally ] stop
				 */

				/**
				 * [tAdvancedHash_row80 finally ] start
				 */

				currentComponent = "tAdvancedHash_row80";

				/**
				 * [tAdvancedHash_row80 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tDBInput_20_SUBPROCESS_STATE", 1);
	}

	public static class row4Struct implements routines.system.IPersistableRow<row4Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Account_Manager__Client_Prospect;

		public String getAccount_Manager__Client_Prospect() {
			return this.Account_Manager__Client_Prospect;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Account_Manager__Client_Prospect = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Account_Manager__Client_Prospect = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Account_Manager__Client_Prospect=" + Account_Manager__Client_Prospect);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row4Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class jStruct implements routines.system.IPersistableRow<jStruct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Account_Manager__Client_Prospect;

		public String getAccount_Manager__Client_Prospect() {
			return this.Account_Manager__Client_Prospect;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Account_Manager__Client_Prospect = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Account_Manager__Client_Prospect = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Account_Manager__Client_Prospect=" + Account_Manager__Client_Prospect);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(jStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row3Struct implements routines.system.IPersistableRow<row3Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Account_Manager__Client_Prospect;

		public String getAccount_Manager__Client_Prospect() {
			return this.Account_Manager__Client_Prospect;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Account_Manager__Client_Prospect = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Account_Manager__Client_Prospect = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Account_Manager__Client_Prospect=" + Account_Manager__Client_Prospect);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row3Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class t5Struct implements routines.system.IPersistableRow<t5Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Demandeur__Opportunite;

		public String getDemandeur__Opportunite() {
			return this.Demandeur__Opportunite;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Demandeur__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Demandeur__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Demandeur__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Demandeur__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Demandeur__Opportunite=" + Demandeur__Opportunite);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(t5Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row1Struct implements routines.system.IPersistableRow<row1Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Reference_OSM_mere__Opportunite;

		public String getReference_OSM_mere__Opportunite() {
			return this.Reference_OSM_mere__Opportunite;
		}

		public String Reference_OSM__Opportunite;

		public String getReference_OSM__Opportunite() {
			return this.Reference_OSM__Opportunite;
		}

		public String Client_Prospect__Opportunite;

		public String getClient_Prospect__Opportunite() {
			return this.Client_Prospect__Opportunite;
		}

		public String Offre;

		public String getOffre() {
			return this.Offre;
		}

		public String Nature_Offre;

		public String getNature_Offre() {
			return this.Nature_Offre;
		}

		public String Produit_existant;

		public String getProduit_existant() {
			return this.Produit_existant;
		}

		public String Nature_produit__Produit_existant;

		public String getNature_produit__Produit_existant() {
			return this.Nature_produit__Produit_existant;
		}

		public Float Quantite;

		public Float getQuantite() {
			return this.Quantite;
		}

		public String Prix_unitaire;

		public String getPrix_unitaire() {
			return this.Prix_unitaire;
		}

		public String Total_final;

		public String getTotal_final() {
			return this.Total_final;
		}

		public String Remise______Opportunite;

		public String getRemise______Opportunite() {
			return this.Remise______Opportunite;
		}

		public Float Total_remise_HT;

		public Float getTotal_remise_HT() {
			return this.Total_remise_HT;
		}

		public String Extension__Opportunite;

		public String getExtension__Opportunite() {
			return this.Extension__Opportunite;
		}

		public String Budget_a_valider__Opportunite;

		public String getBudget_a_valider__Opportunite() {
			return this.Budget_a_valider__Opportunite;
		}

		public String Budget_a_valider_Extension__Opportunite;

		public String getBudget_a_valider_Extension__Opportunite() {
			return this.Budget_a_valider_Extension__Opportunite;
		}

		public String Duree_d_engagement__Opportunite;

		public String getDuree_d_engagement__Opportunite() {
			return this.Duree_d_engagement__Opportunite;
		}

		public String Type_d_engagement__Opportunite;

		public String getType_d_engagement__Opportunite() {
			return this.Type_d_engagement__Opportunite;
		}

		public String Demandeur__Opportunite;

		public String getDemandeur__Opportunite() {
			return this.Demandeur__Opportunite;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public String Cree_le__Opportunite;

		public String getCree_le__Opportunite() {
			return this.Cree_le__Opportunite;
		}

		public Integer Mois_de_creation;

		public Integer getMois_de_creation() {
			return this.Mois_de_creation;
		}

		public Integer Annee_de_creation;

		public Integer getAnnee_de_creation() {
			return this.Annee_de_creation;
		}

		public String Mois_et_annee_de_creation;

		public String getMois_et_annee_de_creation() {
			return this.Mois_et_annee_de_creation;
		}

		public String Raison_de_statut_OSM__Opportunite;

		public String getRaison_de_statut_OSM__Opportunite() {
			return this.Raison_de_statut_OSM__Opportunite;
		}

		public String Statut_OSM__Opportunite;

		public String getStatut_OSM__Opportunite() {
			return this.Statut_OSM__Opportunite;
		}

		public String Statut_activation__Commande;

		public String getStatut_activation__Commande() {
			return this.Statut_activation__Commande;
		}

		public String Date_d_activation__Commande;

		public String getDate_d_activation__Commande() {
			return this.Date_d_activation__Commande;
		}

		public Integer Mois_d_activation;

		public Integer getMois_d_activation() {
			return this.Mois_d_activation;
		}

		public String Staut_Final;

		public String getStaut_Final() {
			return this.Staut_Final;
		}

		public String Gouvernorat;

		public String getGouvernorat() {
			return this.Gouvernorat;
		}

		public String Phase_de_l_opportunite__Opportunite;

		public String getPhase_de_l_opportunite__Opportunite() {
			return this.Phase_de_l_opportunite__Opportunite;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Reference_OSM_mere__Opportunite = readString(dis);

					this.Reference_OSM__Opportunite = readString(dis);

					this.Client_Prospect__Opportunite = readString(dis);

					this.Offre = readString(dis);

					this.Nature_Offre = readString(dis);

					this.Produit_existant = readString(dis);

					this.Nature_produit__Produit_existant = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Quantite = null;
					} else {
						this.Quantite = dis.readFloat();
					}

					this.Prix_unitaire = readString(dis);

					this.Total_final = readString(dis);

					this.Remise______Opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Total_remise_HT = null;
					} else {
						this.Total_remise_HT = dis.readFloat();
					}

					this.Extension__Opportunite = readString(dis);

					this.Budget_a_valider__Opportunite = readString(dis);

					this.Budget_a_valider_Extension__Opportunite = readString(dis);

					this.Duree_d_engagement__Opportunite = readString(dis);

					this.Type_d_engagement__Opportunite = readString(dis);

					this.Demandeur__Opportunite = readString(dis);

					this.Equipe = readString(dis);

					this.Cree_le__Opportunite = readString(dis);

					this.Mois_de_creation = readInteger(dis);

					this.Annee_de_creation = readInteger(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Raison_de_statut_OSM__Opportunite = readString(dis);

					this.Statut_OSM__Opportunite = readString(dis);

					this.Statut_activation__Commande = readString(dis);

					this.Date_d_activation__Commande = readString(dis);

					this.Mois_d_activation = readInteger(dis);

					this.Staut_Final = readString(dis);

					this.Gouvernorat = readString(dis);

					this.Phase_de_l_opportunite__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Reference_OSM_mere__Opportunite = readString(dis);

					this.Reference_OSM__Opportunite = readString(dis);

					this.Client_Prospect__Opportunite = readString(dis);

					this.Offre = readString(dis);

					this.Nature_Offre = readString(dis);

					this.Produit_existant = readString(dis);

					this.Nature_produit__Produit_existant = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Quantite = null;
					} else {
						this.Quantite = dis.readFloat();
					}

					this.Prix_unitaire = readString(dis);

					this.Total_final = readString(dis);

					this.Remise______Opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Total_remise_HT = null;
					} else {
						this.Total_remise_HT = dis.readFloat();
					}

					this.Extension__Opportunite = readString(dis);

					this.Budget_a_valider__Opportunite = readString(dis);

					this.Budget_a_valider_Extension__Opportunite = readString(dis);

					this.Duree_d_engagement__Opportunite = readString(dis);

					this.Type_d_engagement__Opportunite = readString(dis);

					this.Demandeur__Opportunite = readString(dis);

					this.Equipe = readString(dis);

					this.Cree_le__Opportunite = readString(dis);

					this.Mois_de_creation = readInteger(dis);

					this.Annee_de_creation = readInteger(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Raison_de_statut_OSM__Opportunite = readString(dis);

					this.Statut_OSM__Opportunite = readString(dis);

					this.Statut_activation__Commande = readString(dis);

					this.Date_d_activation__Commande = readString(dis);

					this.Mois_d_activation = readInteger(dis);

					this.Staut_Final = readString(dis);

					this.Gouvernorat = readString(dis);

					this.Phase_de_l_opportunite__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Reference_OSM_mere__Opportunite, dos);

				// String

				writeString(this.Reference_OSM__Opportunite, dos);

				// String

				writeString(this.Client_Prospect__Opportunite, dos);

				// String

				writeString(this.Offre, dos);

				// String

				writeString(this.Nature_Offre, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Nature_produit__Produit_existant, dos);

				// Float

				if (this.Quantite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Quantite);
				}

				// String

				writeString(this.Prix_unitaire, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Remise______Opportunite, dos);

				// Float

				if (this.Total_remise_HT == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Total_remise_HT);
				}

				// String

				writeString(this.Extension__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider_Extension__Opportunite, dos);

				// String

				writeString(this.Duree_d_engagement__Opportunite, dos);

				// String

				writeString(this.Type_d_engagement__Opportunite, dos);

				// String

				writeString(this.Demandeur__Opportunite, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Cree_le__Opportunite, dos);

				// Integer

				writeInteger(this.Mois_de_creation, dos);

				// Integer

				writeInteger(this.Annee_de_creation, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Raison_de_statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_activation__Commande, dos);

				// String

				writeString(this.Date_d_activation__Commande, dos);

				// Integer

				writeInteger(this.Mois_d_activation, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Gouvernorat, dos);

				// String

				writeString(this.Phase_de_l_opportunite__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Reference_OSM_mere__Opportunite, dos);

				// String

				writeString(this.Reference_OSM__Opportunite, dos);

				// String

				writeString(this.Client_Prospect__Opportunite, dos);

				// String

				writeString(this.Offre, dos);

				// String

				writeString(this.Nature_Offre, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Nature_produit__Produit_existant, dos);

				// Float

				if (this.Quantite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Quantite);
				}

				// String

				writeString(this.Prix_unitaire, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Remise______Opportunite, dos);

				// Float

				if (this.Total_remise_HT == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Total_remise_HT);
				}

				// String

				writeString(this.Extension__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider_Extension__Opportunite, dos);

				// String

				writeString(this.Duree_d_engagement__Opportunite, dos);

				// String

				writeString(this.Type_d_engagement__Opportunite, dos);

				// String

				writeString(this.Demandeur__Opportunite, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Cree_le__Opportunite, dos);

				// Integer

				writeInteger(this.Mois_de_creation, dos);

				// Integer

				writeInteger(this.Annee_de_creation, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Raison_de_statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_activation__Commande, dos);

				// String

				writeString(this.Date_d_activation__Commande, dos);

				// Integer

				writeInteger(this.Mois_d_activation, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Gouvernorat, dos);

				// String

				writeString(this.Phase_de_l_opportunite__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Reference_OSM_mere__Opportunite=" + Reference_OSM_mere__Opportunite);
			sb.append(",Reference_OSM__Opportunite=" + Reference_OSM__Opportunite);
			sb.append(",Client_Prospect__Opportunite=" + Client_Prospect__Opportunite);
			sb.append(",Offre=" + Offre);
			sb.append(",Nature_Offre=" + Nature_Offre);
			sb.append(",Produit_existant=" + Produit_existant);
			sb.append(",Nature_produit__Produit_existant=" + Nature_produit__Produit_existant);
			sb.append(",Quantite=" + String.valueOf(Quantite));
			sb.append(",Prix_unitaire=" + Prix_unitaire);
			sb.append(",Total_final=" + Total_final);
			sb.append(",Remise______Opportunite=" + Remise______Opportunite);
			sb.append(",Total_remise_HT=" + String.valueOf(Total_remise_HT));
			sb.append(",Extension__Opportunite=" + Extension__Opportunite);
			sb.append(",Budget_a_valider__Opportunite=" + Budget_a_valider__Opportunite);
			sb.append(",Budget_a_valider_Extension__Opportunite=" + Budget_a_valider_Extension__Opportunite);
			sb.append(",Duree_d_engagement__Opportunite=" + Duree_d_engagement__Opportunite);
			sb.append(",Type_d_engagement__Opportunite=" + Type_d_engagement__Opportunite);
			sb.append(",Demandeur__Opportunite=" + Demandeur__Opportunite);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Cree_le__Opportunite=" + Cree_le__Opportunite);
			sb.append(",Mois_de_creation=" + String.valueOf(Mois_de_creation));
			sb.append(",Annee_de_creation=" + String.valueOf(Annee_de_creation));
			sb.append(",Mois_et_annee_de_creation=" + Mois_et_annee_de_creation);
			sb.append(",Raison_de_statut_OSM__Opportunite=" + Raison_de_statut_OSM__Opportunite);
			sb.append(",Statut_OSM__Opportunite=" + Statut_OSM__Opportunite);
			sb.append(",Statut_activation__Commande=" + Statut_activation__Commande);
			sb.append(",Date_d_activation__Commande=" + Date_d_activation__Commande);
			sb.append(",Mois_d_activation=" + String.valueOf(Mois_d_activation));
			sb.append(",Staut_Final=" + Staut_Final);
			sb.append(",Gouvernorat=" + Gouvernorat);
			sb.append(",Phase_de_l_opportunite__Opportunite=" + Phase_de_l_opportunite__Opportunite);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row1Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class after_tFileInputExcel_1Struct
			implements routines.system.IPersistableRow<after_tFileInputExcel_1Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Reference_OSM_mere__Opportunite;

		public String getReference_OSM_mere__Opportunite() {
			return this.Reference_OSM_mere__Opportunite;
		}

		public String Reference_OSM__Opportunite;

		public String getReference_OSM__Opportunite() {
			return this.Reference_OSM__Opportunite;
		}

		public String Client_Prospect__Opportunite;

		public String getClient_Prospect__Opportunite() {
			return this.Client_Prospect__Opportunite;
		}

		public String Offre;

		public String getOffre() {
			return this.Offre;
		}

		public String Nature_Offre;

		public String getNature_Offre() {
			return this.Nature_Offre;
		}

		public String Produit_existant;

		public String getProduit_existant() {
			return this.Produit_existant;
		}

		public String Nature_produit__Produit_existant;

		public String getNature_produit__Produit_existant() {
			return this.Nature_produit__Produit_existant;
		}

		public Float Quantite;

		public Float getQuantite() {
			return this.Quantite;
		}

		public String Prix_unitaire;

		public String getPrix_unitaire() {
			return this.Prix_unitaire;
		}

		public String Total_final;

		public String getTotal_final() {
			return this.Total_final;
		}

		public String Remise______Opportunite;

		public String getRemise______Opportunite() {
			return this.Remise______Opportunite;
		}

		public Float Total_remise_HT;

		public Float getTotal_remise_HT() {
			return this.Total_remise_HT;
		}

		public String Extension__Opportunite;

		public String getExtension__Opportunite() {
			return this.Extension__Opportunite;
		}

		public String Budget_a_valider__Opportunite;

		public String getBudget_a_valider__Opportunite() {
			return this.Budget_a_valider__Opportunite;
		}

		public String Budget_a_valider_Extension__Opportunite;

		public String getBudget_a_valider_Extension__Opportunite() {
			return this.Budget_a_valider_Extension__Opportunite;
		}

		public String Duree_d_engagement__Opportunite;

		public String getDuree_d_engagement__Opportunite() {
			return this.Duree_d_engagement__Opportunite;
		}

		public String Type_d_engagement__Opportunite;

		public String getType_d_engagement__Opportunite() {
			return this.Type_d_engagement__Opportunite;
		}

		public String Demandeur__Opportunite;

		public String getDemandeur__Opportunite() {
			return this.Demandeur__Opportunite;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public String Cree_le__Opportunite;

		public String getCree_le__Opportunite() {
			return this.Cree_le__Opportunite;
		}

		public Integer Mois_de_creation;

		public Integer getMois_de_creation() {
			return this.Mois_de_creation;
		}

		public Integer Annee_de_creation;

		public Integer getAnnee_de_creation() {
			return this.Annee_de_creation;
		}

		public String Mois_et_annee_de_creation;

		public String getMois_et_annee_de_creation() {
			return this.Mois_et_annee_de_creation;
		}

		public String Raison_de_statut_OSM__Opportunite;

		public String getRaison_de_statut_OSM__Opportunite() {
			return this.Raison_de_statut_OSM__Opportunite;
		}

		public String Statut_OSM__Opportunite;

		public String getStatut_OSM__Opportunite() {
			return this.Statut_OSM__Opportunite;
		}

		public String Statut_activation__Commande;

		public String getStatut_activation__Commande() {
			return this.Statut_activation__Commande;
		}

		public String Date_d_activation__Commande;

		public String getDate_d_activation__Commande() {
			return this.Date_d_activation__Commande;
		}

		public Integer Mois_d_activation;

		public Integer getMois_d_activation() {
			return this.Mois_d_activation;
		}

		public String Staut_Final;

		public String getStaut_Final() {
			return this.Staut_Final;
		}

		public String Gouvernorat;

		public String getGouvernorat() {
			return this.Gouvernorat;
		}

		public String Phase_de_l_opportunite__Opportunite;

		public String getPhase_de_l_opportunite__Opportunite() {
			return this.Phase_de_l_opportunite__Opportunite;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Reference_OSM_mere__Opportunite = readString(dis);

					this.Reference_OSM__Opportunite = readString(dis);

					this.Client_Prospect__Opportunite = readString(dis);

					this.Offre = readString(dis);

					this.Nature_Offre = readString(dis);

					this.Produit_existant = readString(dis);

					this.Nature_produit__Produit_existant = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Quantite = null;
					} else {
						this.Quantite = dis.readFloat();
					}

					this.Prix_unitaire = readString(dis);

					this.Total_final = readString(dis);

					this.Remise______Opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Total_remise_HT = null;
					} else {
						this.Total_remise_HT = dis.readFloat();
					}

					this.Extension__Opportunite = readString(dis);

					this.Budget_a_valider__Opportunite = readString(dis);

					this.Budget_a_valider_Extension__Opportunite = readString(dis);

					this.Duree_d_engagement__Opportunite = readString(dis);

					this.Type_d_engagement__Opportunite = readString(dis);

					this.Demandeur__Opportunite = readString(dis);

					this.Equipe = readString(dis);

					this.Cree_le__Opportunite = readString(dis);

					this.Mois_de_creation = readInteger(dis);

					this.Annee_de_creation = readInteger(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Raison_de_statut_OSM__Opportunite = readString(dis);

					this.Statut_OSM__Opportunite = readString(dis);

					this.Statut_activation__Commande = readString(dis);

					this.Date_d_activation__Commande = readString(dis);

					this.Mois_d_activation = readInteger(dis);

					this.Staut_Final = readString(dis);

					this.Gouvernorat = readString(dis);

					this.Phase_de_l_opportunite__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Reference_OSM_mere__Opportunite = readString(dis);

					this.Reference_OSM__Opportunite = readString(dis);

					this.Client_Prospect__Opportunite = readString(dis);

					this.Offre = readString(dis);

					this.Nature_Offre = readString(dis);

					this.Produit_existant = readString(dis);

					this.Nature_produit__Produit_existant = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Quantite = null;
					} else {
						this.Quantite = dis.readFloat();
					}

					this.Prix_unitaire = readString(dis);

					this.Total_final = readString(dis);

					this.Remise______Opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Total_remise_HT = null;
					} else {
						this.Total_remise_HT = dis.readFloat();
					}

					this.Extension__Opportunite = readString(dis);

					this.Budget_a_valider__Opportunite = readString(dis);

					this.Budget_a_valider_Extension__Opportunite = readString(dis);

					this.Duree_d_engagement__Opportunite = readString(dis);

					this.Type_d_engagement__Opportunite = readString(dis);

					this.Demandeur__Opportunite = readString(dis);

					this.Equipe = readString(dis);

					this.Cree_le__Opportunite = readString(dis);

					this.Mois_de_creation = readInteger(dis);

					this.Annee_de_creation = readInteger(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Raison_de_statut_OSM__Opportunite = readString(dis);

					this.Statut_OSM__Opportunite = readString(dis);

					this.Statut_activation__Commande = readString(dis);

					this.Date_d_activation__Commande = readString(dis);

					this.Mois_d_activation = readInteger(dis);

					this.Staut_Final = readString(dis);

					this.Gouvernorat = readString(dis);

					this.Phase_de_l_opportunite__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Reference_OSM_mere__Opportunite, dos);

				// String

				writeString(this.Reference_OSM__Opportunite, dos);

				// String

				writeString(this.Client_Prospect__Opportunite, dos);

				// String

				writeString(this.Offre, dos);

				// String

				writeString(this.Nature_Offre, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Nature_produit__Produit_existant, dos);

				// Float

				if (this.Quantite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Quantite);
				}

				// String

				writeString(this.Prix_unitaire, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Remise______Opportunite, dos);

				// Float

				if (this.Total_remise_HT == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Total_remise_HT);
				}

				// String

				writeString(this.Extension__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider_Extension__Opportunite, dos);

				// String

				writeString(this.Duree_d_engagement__Opportunite, dos);

				// String

				writeString(this.Type_d_engagement__Opportunite, dos);

				// String

				writeString(this.Demandeur__Opportunite, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Cree_le__Opportunite, dos);

				// Integer

				writeInteger(this.Mois_de_creation, dos);

				// Integer

				writeInteger(this.Annee_de_creation, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Raison_de_statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_activation__Commande, dos);

				// String

				writeString(this.Date_d_activation__Commande, dos);

				// Integer

				writeInteger(this.Mois_d_activation, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Gouvernorat, dos);

				// String

				writeString(this.Phase_de_l_opportunite__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Reference_OSM_mere__Opportunite, dos);

				// String

				writeString(this.Reference_OSM__Opportunite, dos);

				// String

				writeString(this.Client_Prospect__Opportunite, dos);

				// String

				writeString(this.Offre, dos);

				// String

				writeString(this.Nature_Offre, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Nature_produit__Produit_existant, dos);

				// Float

				if (this.Quantite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Quantite);
				}

				// String

				writeString(this.Prix_unitaire, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Remise______Opportunite, dos);

				// Float

				if (this.Total_remise_HT == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Total_remise_HT);
				}

				// String

				writeString(this.Extension__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider_Extension__Opportunite, dos);

				// String

				writeString(this.Duree_d_engagement__Opportunite, dos);

				// String

				writeString(this.Type_d_engagement__Opportunite, dos);

				// String

				writeString(this.Demandeur__Opportunite, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Cree_le__Opportunite, dos);

				// Integer

				writeInteger(this.Mois_de_creation, dos);

				// Integer

				writeInteger(this.Annee_de_creation, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Raison_de_statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_activation__Commande, dos);

				// String

				writeString(this.Date_d_activation__Commande, dos);

				// Integer

				writeInteger(this.Mois_d_activation, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Gouvernorat, dos);

				// String

				writeString(this.Phase_de_l_opportunite__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Reference_OSM_mere__Opportunite=" + Reference_OSM_mere__Opportunite);
			sb.append(",Reference_OSM__Opportunite=" + Reference_OSM__Opportunite);
			sb.append(",Client_Prospect__Opportunite=" + Client_Prospect__Opportunite);
			sb.append(",Offre=" + Offre);
			sb.append(",Nature_Offre=" + Nature_Offre);
			sb.append(",Produit_existant=" + Produit_existant);
			sb.append(",Nature_produit__Produit_existant=" + Nature_produit__Produit_existant);
			sb.append(",Quantite=" + String.valueOf(Quantite));
			sb.append(",Prix_unitaire=" + Prix_unitaire);
			sb.append(",Total_final=" + Total_final);
			sb.append(",Remise______Opportunite=" + Remise______Opportunite);
			sb.append(",Total_remise_HT=" + String.valueOf(Total_remise_HT));
			sb.append(",Extension__Opportunite=" + Extension__Opportunite);
			sb.append(",Budget_a_valider__Opportunite=" + Budget_a_valider__Opportunite);
			sb.append(",Budget_a_valider_Extension__Opportunite=" + Budget_a_valider_Extension__Opportunite);
			sb.append(",Duree_d_engagement__Opportunite=" + Duree_d_engagement__Opportunite);
			sb.append(",Type_d_engagement__Opportunite=" + Type_d_engagement__Opportunite);
			sb.append(",Demandeur__Opportunite=" + Demandeur__Opportunite);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Cree_le__Opportunite=" + Cree_le__Opportunite);
			sb.append(",Mois_de_creation=" + String.valueOf(Mois_de_creation));
			sb.append(",Annee_de_creation=" + String.valueOf(Annee_de_creation));
			sb.append(",Mois_et_annee_de_creation=" + Mois_et_annee_de_creation);
			sb.append(",Raison_de_statut_OSM__Opportunite=" + Raison_de_statut_OSM__Opportunite);
			sb.append(",Statut_OSM__Opportunite=" + Statut_OSM__Opportunite);
			sb.append(",Statut_activation__Commande=" + Statut_activation__Commande);
			sb.append(",Date_d_activation__Commande=" + Date_d_activation__Commande);
			sb.append(",Mois_d_activation=" + String.valueOf(Mois_d_activation));
			sb.append(",Staut_Final=" + Staut_Final);
			sb.append(",Gouvernorat=" + Gouvernorat);
			sb.append(",Phase_de_l_opportunite__Opportunite=" + Phase_de_l_opportunite__Opportunite);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(after_tFileInputExcel_1Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class t6Struct implements routines.system.IPersistableRow<t6Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Membre_Equipe;

		public String getMembre_Equipe() {
			return this.Membre_Equipe;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Membre_Equipe = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Membre_Equipe = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Membre_Equipe, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Membre_Equipe, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Membre_Equipe=" + Membre_Equipe);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(t6Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row2Struct implements routines.system.IPersistableRow<row2Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public Integer Index;

		public Integer getIndex() {
			return this.Index;
		}

		public String Membre_Equipe;

		public String getMembre_Equipe() {
			return this.Membre_Equipe;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public Integer Mobile;

		public Integer getMobile() {
			return this.Mobile;
		}

		public Integer Broad_Band;

		public Integer getBroad_Band() {
			return this.Broad_Band;
		}

		public Integer VoIP;

		public Integer getVoIP() {
			return this.VoIP;
		}

		public String Date;

		public String getDate() {
			return this.Date;
		}

		public Integer Nouveaux_Client;

		public Integer getNouveaux_Client() {
			return this.Nouveaux_Client;
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Index = readInteger(dis);

					this.Membre_Equipe = readString(dis);

					this.Equipe = readString(dis);

					this.Mobile = readInteger(dis);

					this.Broad_Band = readInteger(dis);

					this.VoIP = readInteger(dis);

					this.Date = readString(dis);

					this.Nouveaux_Client = readInteger(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Index = readInteger(dis);

					this.Membre_Equipe = readString(dis);

					this.Equipe = readString(dis);

					this.Mobile = readInteger(dis);

					this.Broad_Band = readInteger(dis);

					this.VoIP = readInteger(dis);

					this.Date = readString(dis);

					this.Nouveaux_Client = readInteger(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// Integer

				writeInteger(this.Index, dos);

				// String

				writeString(this.Membre_Equipe, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Mobile, dos);

				// Integer

				writeInteger(this.Broad_Band, dos);

				// Integer

				writeInteger(this.VoIP, dos);

				// String

				writeString(this.Date, dos);

				// Integer

				writeInteger(this.Nouveaux_Client, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// Integer

				writeInteger(this.Index, dos);

				// String

				writeString(this.Membre_Equipe, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Mobile, dos);

				// Integer

				writeInteger(this.Broad_Band, dos);

				// Integer

				writeInteger(this.VoIP, dos);

				// String

				writeString(this.Date, dos);

				// Integer

				writeInteger(this.Nouveaux_Client, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Index=" + String.valueOf(Index));
			sb.append(",Membre_Equipe=" + Membre_Equipe);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Mobile=" + String.valueOf(Mobile));
			sb.append(",Broad_Band=" + String.valueOf(Broad_Band));
			sb.append(",VoIP=" + String.valueOf(VoIP));
			sb.append(",Date=" + Date);
			sb.append(",Nouveaux_Client=" + String.valueOf(Nouveaux_Client));
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row2Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class t7Struct implements routines.system.IPersistableRow<t7Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Account_Manager;

		public String getAccount_Manager() {
			return this.Account_Manager;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Account_Manager = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Account_Manager = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Account_Manager, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Account_Manager, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Account_Manager=" + Account_Manager);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(t7Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row5Struct implements routines.system.IPersistableRow<row5Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public Float Custcode;

		public Float getCustcode() {
			return this.Custcode;
		}

		public String Raison_Sociale;

		public String getRaison_Sociale() {
			return this.Raison_Sociale;
		}

		public String Groupe_Client;

		public String getGroupe_Client() {
			return this.Groupe_Client;
		}

		public String Account_Manager;

		public String getAccount_Manager() {
			return this.Account_Manager;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public Integer Somme_de_Resiliation;

		public Integer getSomme_de_Resiliation() {
			return this.Somme_de_Resiliation;
		}

		public String Type_Resiliation;

		public String getType_Resiliation() {
			return this.Type_Resiliation;
		}

		public String Motif;

		public String getMotif() {
			return this.Motif;
		}

		public String DFE;

		public String getDFE() {
			return this.DFE;
		}

		public String Engage_Oui_Non;

		public String getEngage_Oui_Non() {
			return this.Engage_Oui_Non;
		}

		public String Date_Depot;

		public String getDate_Depot() {
			return this.Date_Depot;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Resiliation = readInteger(dis);

					this.Type_Resiliation = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Resiliation = readInteger(dis);

					this.Type_Resiliation = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Resiliation, dos);

				// String

				writeString(this.Type_Resiliation, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// String

				writeString(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Resiliation, dos);

				// String

				writeString(this.Type_Resiliation, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// String

				writeString(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Custcode=" + String.valueOf(Custcode));
			sb.append(",Raison_Sociale=" + Raison_Sociale);
			sb.append(",Groupe_Client=" + Groupe_Client);
			sb.append(",Account_Manager=" + Account_Manager);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Somme_de_Resiliation=" + String.valueOf(Somme_de_Resiliation));
			sb.append(",Type_Resiliation=" + Type_Resiliation);
			sb.append(",Motif=" + Motif);
			sb.append(",DFE=" + DFE);
			sb.append(",Engage_Oui_Non=" + Engage_Oui_Non);
			sb.append(",Date_Depot=" + Date_Depot);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row5Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class t8Struct implements routines.system.IPersistableRow<t8Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Account_Manager;

		public String getAccount_Manager() {
			return this.Account_Manager;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Account_Manager = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Account_Manager = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Account_Manager, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Account_Manager, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Account_Manager=" + Account_Manager);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(t8Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row6Struct implements routines.system.IPersistableRow<row6Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public Float Custcode;

		public Float getCustcode() {
			return this.Custcode;
		}

		public String Raison_Sociale;

		public String getRaison_Sociale() {
			return this.Raison_Sociale;
		}

		public String Groupe_Client;

		public String getGroupe_Client() {
			return this.Groupe_Client;
		}

		public String Account_Manager;

		public String getAccount_Manager() {
			return this.Account_Manager;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public Integer Somme_de_Suspension;

		public Integer getSomme_de_Suspension() {
			return this.Somme_de_Suspension;
		}

		public String Type_de_suspension;

		public String getType_de_suspension() {
			return this.Type_de_suspension;
		}

		public String Motif;

		public String getMotif() {
			return this.Motif;
		}

		public String DFE;

		public String getDFE() {
			return this.DFE;
		}

		public String Engage_Oui_Non;

		public String getEngage_Oui_Non() {
			return this.Engage_Oui_Non;
		}

		public String Date_Depot;

		public String getDate_Depot() {
			return this.Date_Depot;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Suspension = readInteger(dis);

					this.Type_de_suspension = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Suspension = readInteger(dis);

					this.Type_de_suspension = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Suspension, dos);

				// String

				writeString(this.Type_de_suspension, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// String

				writeString(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Suspension, dos);

				// String

				writeString(this.Type_de_suspension, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// String

				writeString(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Custcode=" + String.valueOf(Custcode));
			sb.append(",Raison_Sociale=" + Raison_Sociale);
			sb.append(",Groupe_Client=" + Groupe_Client);
			sb.append(",Account_Manager=" + Account_Manager);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Somme_de_Suspension=" + String.valueOf(Somme_de_Suspension));
			sb.append(",Type_de_suspension=" + Type_de_suspension);
			sb.append(",Motif=" + Motif);
			sb.append(",DFE=" + DFE);
			sb.append(",Engage_Oui_Non=" + Engage_Oui_Non);
			sb.append(",Date_Depot=" + Date_Depot);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row6Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class t9Struct implements routines.system.IPersistableRow<t9Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Cree_par;

		public String getCree_par() {
			return this.Cree_par;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Cree_par = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Cree_par = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Cree_par, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Cree_par, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Cree_par=" + Cree_par);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(t9Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row7Struct implements routines.system.IPersistableRow<row7Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Sujet;

		public String getSujet() {
			return this.Sujet;
		}

		public java.util.Date Cree_le;

		public java.util.Date getCree_le() {
			return this.Cree_le;
		}

		public String Concernant;

		public String getConcernant() {
			return this.Concernant;
		}

		public String Cree_par;

		public String getCree_par() {
			return this.Cree_par;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public String Emplacement;

		public String getEmplacement() {
			return this.Emplacement;
		}

		public java.util.Date Heure_de_debut;

		public java.util.Date getHeure_de_debut() {
			return this.Heure_de_debut;
		}

		public String Heure_de_fin;

		public String getHeure_de_fin() {
			return this.Heure_de_fin;
		}

		public String Statut;

		public String getStatut() {
			return this.Statut;
		}

		public String Raison_sociale__Concernant;

		public String getRaison_sociale__Concernant() {
			return this.Raison_sociale__Concernant;
		}

		public String Delegation__Concernant;

		public String getDelegation__Concernant() {
			return this.Delegation__Concernant;
		}

		public String Gouvernorat__Concernant;

		public String getGouvernorat__Concernant() {
			return this.Gouvernorat__Concernant;
		}

		public String Jour_de_la_semaine;

		public String getJour_de_la_semaine() {
			return this.Jour_de_la_semaine;
		}

		public String Description;

		public String getDescription() {
			return this.Description;
		}

		public String Categorie;

		public String getCategorie() {
			return this.Categorie;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private java.util.Date readDate(ObjectInputStream dis) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(dis.readLong());
			}
			return dateReturn;
		}

		private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(unmarshaller.readLong());
			}
			return dateReturn;
		}

		private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException {
			if (date1 == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeLong(date1.getTime());
			}
		}

		private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (date1 == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeLong(date1.getTime());
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Sujet = readString(dis);

					this.Cree_le = readDate(dis);

					this.Concernant = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Emplacement = readString(dis);

					this.Heure_de_debut = readDate(dis);

					this.Heure_de_fin = readString(dis);

					this.Statut = readString(dis);

					this.Raison_sociale__Concernant = readString(dis);

					this.Delegation__Concernant = readString(dis);

					this.Gouvernorat__Concernant = readString(dis);

					this.Jour_de_la_semaine = readString(dis);

					this.Description = readString(dis);

					this.Categorie = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Sujet = readString(dis);

					this.Cree_le = readDate(dis);

					this.Concernant = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Emplacement = readString(dis);

					this.Heure_de_debut = readDate(dis);

					this.Heure_de_fin = readString(dis);

					this.Statut = readString(dis);

					this.Raison_sociale__Concernant = readString(dis);

					this.Delegation__Concernant = readString(dis);

					this.Gouvernorat__Concernant = readString(dis);

					this.Jour_de_la_semaine = readString(dis);

					this.Description = readString(dis);

					this.Categorie = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Sujet, dos);

				// java.util.Date

				writeDate(this.Cree_le, dos);

				// String

				writeString(this.Concernant, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Emplacement, dos);

				// java.util.Date

				writeDate(this.Heure_de_debut, dos);

				// String

				writeString(this.Heure_de_fin, dos);

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Raison_sociale__Concernant, dos);

				// String

				writeString(this.Delegation__Concernant, dos);

				// String

				writeString(this.Gouvernorat__Concernant, dos);

				// String

				writeString(this.Jour_de_la_semaine, dos);

				// String

				writeString(this.Description, dos);

				// String

				writeString(this.Categorie, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Sujet, dos);

				// java.util.Date

				writeDate(this.Cree_le, dos);

				// String

				writeString(this.Concernant, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Emplacement, dos);

				// java.util.Date

				writeDate(this.Heure_de_debut, dos);

				// String

				writeString(this.Heure_de_fin, dos);

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Raison_sociale__Concernant, dos);

				// String

				writeString(this.Delegation__Concernant, dos);

				// String

				writeString(this.Gouvernorat__Concernant, dos);

				// String

				writeString(this.Jour_de_la_semaine, dos);

				// String

				writeString(this.Description, dos);

				// String

				writeString(this.Categorie, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Sujet=" + Sujet);
			sb.append(",Cree_le=" + String.valueOf(Cree_le));
			sb.append(",Concernant=" + Concernant);
			sb.append(",Cree_par=" + Cree_par);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Emplacement=" + Emplacement);
			sb.append(",Heure_de_debut=" + String.valueOf(Heure_de_debut));
			sb.append(",Heure_de_fin=" + Heure_de_fin);
			sb.append(",Statut=" + Statut);
			sb.append(",Raison_sociale__Concernant=" + Raison_sociale__Concernant);
			sb.append(",Delegation__Concernant=" + Delegation__Concernant);
			sb.append(",Gouvernorat__Concernant=" + Gouvernorat__Concernant);
			sb.append(",Jour_de_la_semaine=" + Jour_de_la_semaine);
			sb.append(",Description=" + Description);
			sb.append(",Categorie=" + Categorie);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row7Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class t9_Struct implements routines.system.IPersistableRow<t9_Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Cree_par;

		public String getCree_par() {
			return this.Cree_par;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Cree_par = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Cree_par = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Cree_par, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Cree_par, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Cree_par=" + Cree_par);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(t9_Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row15Struct implements routines.system.IPersistableRow<row15Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Client_Prospect;

		public String getClient_Prospect() {
			return this.Client_Prospect;
		}

		public String Sujet;

		public String getSujet() {
			return this.Sujet;
		}

		public String Acces;

		public String getAcces() {
			return this.Acces;
		}

		public String Type_d_acces;

		public String getType_d_acces() {
			return this.Type_d_acces;
		}

		public String Account_Manager__Client_Prospect;

		public String getAccount_Manager__Client_Prospect() {
			return this.Account_Manager__Client_Prospect;
		}

		public String Cree_le;

		public String getCree_le() {
			return this.Cree_le;
		}

		public String Mois_et_annee_de_creation;

		public String getMois_et_annee_de_creation() {
			return this.Mois_et_annee_de_creation;
		}

		public String Cree_par;

		public String getCree_par() {
			return this.Cree_par;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public String Proprietaire;

		public String getProprietaire() {
			return this.Proprietaire;
		}

		public String Phase_de_l_opportunite;

		public String getPhase_de_l_opportunite() {
			return this.Phase_de_l_opportunite;
		}

		public Float Valeur_ordering;

		public Float getValeur_ordering() {
			return this.Valeur_ordering;
		}

		public String Statut;

		public String getStatut() {
			return this.Statut;
		}

		public String Staut_Final;

		public String getStaut_Final() {
			return this.Staut_Final;
		}

		public String Tarifs;

		public String getTarifs() {
			return this.Tarifs;
		}

		public String Montant_total;

		public String getMontant_total() {
			return this.Montant_total;
		}

		public String Parent__Produit_existant;

		public String getParent__Produit_existant() {
			return this.Parent__Produit_existant;
		}

		public String Produit_existant;

		public String getProduit_existant() {
			return this.Produit_existant;
		}

		public String Operation;

		public String getOperation() {
			return this.Operation;
		}

		public String Type_d_operation;

		public String getType_d_operation() {
			return this.Type_d_operation;
		}

		public String Prix_unitaire;

		public String getPrix_unitaire() {
			return this.Prix_unitaire;
		}

		public Float Quantite;

		public Float getQuantite() {
			return this.Quantite;
		}

		public String Remise;

		public String getRemise() {
			return this.Remise;
		}

		public String Montant_de_la_remise_manuelle;

		public String getMontant_de_la_remise_manuelle() {
			return this.Montant_de_la_remise_manuelle;
		}

		public String Total_final;

		public String getTotal_final() {
			return this.Total_final;
		}

		public String Modifie_le;

		public String getModifie_le() {
			return this.Modifie_le;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

					this.Sujet = readString(dis);

					this.Acces = readString(dis);

					this.Type_d_acces = readString(dis);

					this.Account_Manager__Client_Prospect = readString(dis);

					this.Cree_le = readString(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Proprietaire = readString(dis);

					this.Phase_de_l_opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Valeur_ordering = null;
					} else {
						this.Valeur_ordering = dis.readFloat();
					}

					this.Statut = readString(dis);

					this.Staut_Final = readString(dis);

					this.Tarifs = readString(dis);

					this.Montant_total = readString(dis);

					this.Parent__Produit_existant = readString(dis);

					this.Produit_existant = readString(dis);

					this.Operation = readString(dis);

					this.Type_d_operation = readString(dis);

					this.Prix_unitaire = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Quantite = null;
					} else {
						this.Quantite = dis.readFloat();
					}

					this.Remise = readString(dis);

					this.Montant_de_la_remise_manuelle = readString(dis);

					this.Total_final = readString(dis);

					this.Modifie_le = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

					this.Sujet = readString(dis);

					this.Acces = readString(dis);

					this.Type_d_acces = readString(dis);

					this.Account_Manager__Client_Prospect = readString(dis);

					this.Cree_le = readString(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Proprietaire = readString(dis);

					this.Phase_de_l_opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Valeur_ordering = null;
					} else {
						this.Valeur_ordering = dis.readFloat();
					}

					this.Statut = readString(dis);

					this.Staut_Final = readString(dis);

					this.Tarifs = readString(dis);

					this.Montant_total = readString(dis);

					this.Parent__Produit_existant = readString(dis);

					this.Produit_existant = readString(dis);

					this.Operation = readString(dis);

					this.Type_d_operation = readString(dis);

					this.Prix_unitaire = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Quantite = null;
					} else {
						this.Quantite = dis.readFloat();
					}

					this.Remise = readString(dis);

					this.Montant_de_la_remise_manuelle = readString(dis);

					this.Total_final = readString(dis);

					this.Modifie_le = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Acces, dos);

				// String

				writeString(this.Type_d_acces, dos);

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

				// String

				writeString(this.Cree_le, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Proprietaire, dos);

				// String

				writeString(this.Phase_de_l_opportunite, dos);

				// Float

				if (this.Valeur_ordering == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Valeur_ordering);
				}

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Tarifs, dos);

				// String

				writeString(this.Montant_total, dos);

				// String

				writeString(this.Parent__Produit_existant, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Operation, dos);

				// String

				writeString(this.Type_d_operation, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// Float

				if (this.Quantite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Quantite);
				}

				// String

				writeString(this.Remise, dos);

				// String

				writeString(this.Montant_de_la_remise_manuelle, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Modifie_le, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Acces, dos);

				// String

				writeString(this.Type_d_acces, dos);

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

				// String

				writeString(this.Cree_le, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Proprietaire, dos);

				// String

				writeString(this.Phase_de_l_opportunite, dos);

				// Float

				if (this.Valeur_ordering == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Valeur_ordering);
				}

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Tarifs, dos);

				// String

				writeString(this.Montant_total, dos);

				// String

				writeString(this.Parent__Produit_existant, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Operation, dos);

				// String

				writeString(this.Type_d_operation, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// Float

				if (this.Quantite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Quantite);
				}

				// String

				writeString(this.Remise, dos);

				// String

				writeString(this.Montant_de_la_remise_manuelle, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Modifie_le, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Client_Prospect=" + Client_Prospect);
			sb.append(",Sujet=" + Sujet);
			sb.append(",Acces=" + Acces);
			sb.append(",Type_d_acces=" + Type_d_acces);
			sb.append(",Account_Manager__Client_Prospect=" + Account_Manager__Client_Prospect);
			sb.append(",Cree_le=" + Cree_le);
			sb.append(",Mois_et_annee_de_creation=" + Mois_et_annee_de_creation);
			sb.append(",Cree_par=" + Cree_par);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Proprietaire=" + Proprietaire);
			sb.append(",Phase_de_l_opportunite=" + Phase_de_l_opportunite);
			sb.append(",Valeur_ordering=" + String.valueOf(Valeur_ordering));
			sb.append(",Statut=" + Statut);
			sb.append(",Staut_Final=" + Staut_Final);
			sb.append(",Tarifs=" + Tarifs);
			sb.append(",Montant_total=" + Montant_total);
			sb.append(",Parent__Produit_existant=" + Parent__Produit_existant);
			sb.append(",Produit_existant=" + Produit_existant);
			sb.append(",Operation=" + Operation);
			sb.append(",Type_d_operation=" + Type_d_operation);
			sb.append(",Prix_unitaire=" + Prix_unitaire);
			sb.append(",Quantite=" + String.valueOf(Quantite));
			sb.append(",Remise=" + Remise);
			sb.append(",Montant_de_la_remise_manuelle=" + Montant_de_la_remise_manuelle);
			sb.append(",Total_final=" + Total_final);
			sb.append(",Modifie_le=" + Modifie_le);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row15Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tFileInputExcel_1Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tFileInputExcel_1_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				tDBInput_1Process(globalMap);

				row1Struct row1 = new row1Struct();
				t5Struct t5 = new t5Struct();

				row2Struct row2 = new row2Struct();
				t6Struct t6 = new t6Struct();

				row5Struct row5 = new row5Struct();
				t7Struct t7 = new t7Struct();

				row7Struct row7 = new row7Struct();
				t9Struct t9 = new t9Struct();

				row6Struct row6 = new row6Struct();
				t8Struct t8 = new t8Struct();

				row15Struct row15 = new row15Struct();
				t9_Struct t9_ = new t9_Struct();

				row3Struct row3 = new row3Struct();
				jStruct j = new jStruct();
				row4Struct row4 = new row4Struct();

				/**
				 * [tDBOutput_1 begin ] start
				 */

				ok_Hash.put("tDBOutput_1", false);
				start_Hash.put("tDBOutput_1", System.currentTimeMillis());

				currentComponent = "tDBOutput_1";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row4");
				}

				int tos_count_tDBOutput_1 = 0;

				int nb_line_tDBOutput_1 = 0;
				int nb_line_update_tDBOutput_1 = 0;
				int nb_line_inserted_tDBOutput_1 = 0;
				int nb_line_deleted_tDBOutput_1 = 0;
				int nb_line_rejected_tDBOutput_1 = 0;

				int deletedCount_tDBOutput_1 = 0;
				int updatedCount_tDBOutput_1 = 0;
				int insertedCount_tDBOutput_1 = 0;
				int rowsToCommitCount_tDBOutput_1 = 0;
				int rejectedCount_tDBOutput_1 = 0;
				String dbschema_tDBOutput_1 = null;
				String tableName_tDBOutput_1 = null;
				boolean whetherReject_tDBOutput_1 = false;

				java.util.Calendar calendar_tDBOutput_1 = java.util.Calendar.getInstance();
				long year1_tDBOutput_1 = TalendDate.parseDate("yyyy-MM-dd", "0001-01-01").getTime();
				long year2_tDBOutput_1 = TalendDate.parseDate("yyyy-MM-dd", "1753-01-01").getTime();
				long year10000_tDBOutput_1 = TalendDate.parseDate("yyyy-MM-dd HH:mm:ss", "9999-12-31 24:00:00")
						.getTime();
				long date_tDBOutput_1;

				java.util.Calendar calendar_datetimeoffset_tDBOutput_1 = java.util.Calendar
						.getInstance(java.util.TimeZone.getTimeZone("UTC"));

				java.sql.Connection conn_tDBOutput_1 = null;
				String dbUser_tDBOutput_1 = null;
				dbschema_tDBOutput_1 = "dbo";
				String driverClass_tDBOutput_1 = "net.sourceforge.jtds.jdbc.Driver";

				java.lang.Class.forName(driverClass_tDBOutput_1);
				String port_tDBOutput_1 = "1433";
				String dbname_tDBOutput_1 = "orange_DW__";
				String url_tDBOutput_1 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBOutput_1)) {
					url_tDBOutput_1 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBOutput_1)) {
					url_tDBOutput_1 += "//" + "orange_DW__";

				}
				url_tDBOutput_1 += ";appName=" + projectName + ";" + "";
				dbUser_tDBOutput_1 = "sa";

				final String decryptedPassword_tDBOutput_1 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:gQLaWb3SUUf/9QzsObZKgCle2yVYaylbVRaVYetNi7Twx+BflF4=");

				String dbPwd_tDBOutput_1 = decryptedPassword_tDBOutput_1;
				conn_tDBOutput_1 = java.sql.DriverManager.getConnection(url_tDBOutput_1, dbUser_tDBOutput_1,
						dbPwd_tDBOutput_1);

				resourceMap.put("conn_tDBOutput_1", conn_tDBOutput_1);

				conn_tDBOutput_1.setAutoCommit(false);
				int commitEvery_tDBOutput_1 = 10000;
				int commitCounter_tDBOutput_1 = 0;

				int batchSize_tDBOutput_1 = 10000;
				int batchSizeCounter_tDBOutput_1 = 0;

				if (dbschema_tDBOutput_1 == null || dbschema_tDBOutput_1.trim().length() == 0) {
					tableName_tDBOutput_1 = "Dim_membre";
				} else {
					tableName_tDBOutput_1 = dbschema_tDBOutput_1 + "].[" + "Dim_membre";
				}
				int count_tDBOutput_1 = 0;

				String insert_tDBOutput_1 = "INSERT INTO [" + tableName_tDBOutput_1
						+ "] ([Account_Manager__Client_Prospect]) VALUES (?)";
				java.sql.PreparedStatement pstmt_tDBOutput_1 = conn_tDBOutput_1.prepareStatement(insert_tDBOutput_1);
				resourceMap.put("pstmt_tDBOutput_1", pstmt_tDBOutput_1);

				/**
				 * [tDBOutput_1 begin ] stop
				 */

				/**
				 * [tUniqRow_2 begin ] start
				 */

				ok_Hash.put("tUniqRow_2", false);
				start_Hash.put("tUniqRow_2", System.currentTimeMillis());

				currentComponent = "tUniqRow_2";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "j");
				}

				int tos_count_tUniqRow_2 = 0;

				class KeyStruct_tUniqRow_2 {

					private static final int DEFAULT_HASHCODE = 1;
					private static final int PRIME = 31;
					private int hashCode = DEFAULT_HASHCODE;
					public boolean hashCodeDirty = true;

					String Account_Manager__Client_Prospect;

					@Override
					public int hashCode() {
						if (this.hashCodeDirty) {
							final int prime = PRIME;
							int result = DEFAULT_HASHCODE;

							result = prime * result + ((this.Account_Manager__Client_Prospect == null) ? 0
									: this.Account_Manager__Client_Prospect.hashCode());

							this.hashCode = result;
							this.hashCodeDirty = false;
						}
						return this.hashCode;
					}

					@Override
					public boolean equals(Object obj) {
						if (this == obj)
							return true;
						if (obj == null)
							return false;
						if (getClass() != obj.getClass())
							return false;
						final KeyStruct_tUniqRow_2 other = (KeyStruct_tUniqRow_2) obj;

						if (this.Account_Manager__Client_Prospect == null) {
							if (other.Account_Manager__Client_Prospect != null)
								return false;

						} else if (!this.Account_Manager__Client_Prospect
								.equals(other.Account_Manager__Client_Prospect))

							return false;

						return true;
					}

				}

				int nb_uniques_tUniqRow_2 = 0;
				int nb_duplicates_tUniqRow_2 = 0;
				KeyStruct_tUniqRow_2 finder_tUniqRow_2 = new KeyStruct_tUniqRow_2();
				java.util.Set<KeyStruct_tUniqRow_2> keystUniqRow_2 = new java.util.HashSet<KeyStruct_tUniqRow_2>();

				/**
				 * [tUniqRow_2 begin ] stop
				 */

				/**
				 * [tMap_1 begin ] start
				 */

				ok_Hash.put("tMap_1", false);
				start_Hash.put("tMap_1", System.currentTimeMillis());

				currentComponent = "tMap_1";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row3");
				}

				int tos_count_tMap_1 = 0;

// ###############################
// # Lookup's keys initialization

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row8Struct> tHash_Lookup_row8 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row8Struct>) ((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row8Struct>) globalMap
						.get("tHash_Lookup_row8"));

				row8Struct row8HashKey = new row8Struct();
				row8Struct row8Default = new row8Struct();
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_1__Struct {
				}
				Var__tMap_1__Struct Var__tMap_1 = new Var__tMap_1__Struct();
// ###############################

// ###############################
// # Outputs initialization
				jStruct j_tmp = new jStruct();
// ###############################

				/**
				 * [tMap_1 begin ] stop
				 */

				/**
				 * [tUnite_1 begin ] start
				 */

				ok_Hash.put("tUnite_1", false);
				start_Hash.put("tUnite_1", System.currentTimeMillis());

				currentComponent = "tUnite_1";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "t6", "t9", "t5", "t8", "t9_", "t7");
				}

				int tos_count_tUnite_1 = 0;

				int nb_line_tUnite_1 = 0;

				/**
				 * [tUnite_1 begin ] stop
				 */

				/**
				 * [tMap_2 begin ] start
				 */

				ok_Hash.put("tMap_2", false);
				start_Hash.put("tMap_2", System.currentTimeMillis());

				currentComponent = "tMap_2";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row1");
				}

				int tos_count_tMap_2 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_2__Struct {
				}
				Var__tMap_2__Struct Var__tMap_2 = new Var__tMap_2__Struct();
// ###############################

// ###############################
// # Outputs initialization
				t5Struct t5_tmp = new t5Struct();
// ###############################

				/**
				 * [tMap_2 begin ] stop
				 */

				/**
				 * [tFileInputExcel_1 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_1", false);
				start_Hash.put("tFileInputExcel_1", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_1";

				int tos_count_tFileInputExcel_1 = 0;

				final String decryptedPassword_tFileInputExcel_1 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:cjTjAa3A3YpuRGpRgmYou2J8+5VVzLbpG85eHA==");
				String password_tFileInputExcel_1 = decryptedPassword_tFileInputExcel_1;
				if (password_tFileInputExcel_1.isEmpty()) {
					password_tFileInputExcel_1 = null;
				}
				class RegexUtil_tFileInputExcel_1 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_1 regexUtil_tFileInputExcel_1 = new RegexUtil_tFileInputExcel_1();

				Object source_tFileInputExcel_1 = "C:/Users/DELL/Downloads/Copie_de_EXTRACT_OPPORTUNITES_MOBILE_BB_VF_090520222381_1ans.xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_1 = null;

				if (source_tFileInputExcel_1 instanceof String) {
					workbook_tFileInputExcel_1 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_1), password_tFileInputExcel_1,
									true);
				} else if (source_tFileInputExcel_1 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_1 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_1, password_tFileInputExcel_1);
				} else {
					workbook_tFileInputExcel_1 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_1 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_1
							.addAll(regexUtil_tFileInputExcel_1.getSheets(workbook_tFileInputExcel_1, "Source", false));
					if (sheetList_tFileInputExcel_1.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_1 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_1 : sheetList_tFileInputExcel_1) {
						if (sheet_FilterNull_tFileInputExcel_1 != null
								&& sheetList_FilterNull_tFileInputExcel_1.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_1.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_1.add(sheet_FilterNull_tFileInputExcel_1);
						}
					}
					sheetList_tFileInputExcel_1 = sheetList_FilterNull_tFileInputExcel_1;
					if (sheetList_tFileInputExcel_1.size() > 0) {
						int nb_line_tFileInputExcel_1 = 0;

						int begin_line_tFileInputExcel_1 = 1;

						int footer_input_tFileInputExcel_1 = 0;

						int end_line_tFileInputExcel_1 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_1 : sheetList_tFileInputExcel_1) {
							end_line_tFileInputExcel_1 += (sheet_tFileInputExcel_1.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_1 -= footer_input_tFileInputExcel_1;
						int limit_tFileInputExcel_1 = -1;
						int start_column_tFileInputExcel_1 = 1 - 1;
						int end_column_tFileInputExcel_1 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_1 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_1 = sheetList_tFileInputExcel_1
								.get(0);
						int rowCount_tFileInputExcel_1 = 0;
						int sheetIndex_tFileInputExcel_1 = 0;
						int currentRows_tFileInputExcel_1 = (sheetList_tFileInputExcel_1.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_1 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_1 = df_tFileInputExcel_1.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_1 = begin_line_tFileInputExcel_1; i_tFileInputExcel_1 < end_line_tFileInputExcel_1; i_tFileInputExcel_1++) {

							int emptyColumnCount_tFileInputExcel_1 = 0;

							if (limit_tFileInputExcel_1 != -1 && nb_line_tFileInputExcel_1 >= limit_tFileInputExcel_1) {
								break;
							}

							while (i_tFileInputExcel_1 >= rowCount_tFileInputExcel_1 + currentRows_tFileInputExcel_1) {
								rowCount_tFileInputExcel_1 += currentRows_tFileInputExcel_1;
								sheet_tFileInputExcel_1 = sheetList_tFileInputExcel_1
										.get(++sheetIndex_tFileInputExcel_1);
								currentRows_tFileInputExcel_1 = (sheet_tFileInputExcel_1.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_1_CURRENT_SHEET", sheet_tFileInputExcel_1.getSheetName());
							if (rowCount_tFileInputExcel_1 <= i_tFileInputExcel_1) {
								row_tFileInputExcel_1 = sheet_tFileInputExcel_1
										.getRow(i_tFileInputExcel_1 - rowCount_tFileInputExcel_1);
							}
							row1 = null;
							int tempRowLength_tFileInputExcel_1 = 31;

							int columnIndex_tFileInputExcel_1 = 0;

							String[] temp_row_tFileInputExcel_1 = new String[tempRowLength_tFileInputExcel_1];
							int excel_end_column_tFileInputExcel_1;
							if (row_tFileInputExcel_1 == null) {
								excel_end_column_tFileInputExcel_1 = 0;
							} else {
								excel_end_column_tFileInputExcel_1 = row_tFileInputExcel_1.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_1;
							if (end_column_tFileInputExcel_1 == -1) {
								actual_end_column_tFileInputExcel_1 = excel_end_column_tFileInputExcel_1;
							} else {
								actual_end_column_tFileInputExcel_1 = end_column_tFileInputExcel_1 > excel_end_column_tFileInputExcel_1
										? excel_end_column_tFileInputExcel_1
										: end_column_tFileInputExcel_1;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_1 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_1; i++) {
								if (i + start_column_tFileInputExcel_1 < actual_end_column_tFileInputExcel_1) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_1 = row_tFileInputExcel_1
											.getCell(i + start_column_tFileInputExcel_1);
									if (cell_tFileInputExcel_1 != null) {
										switch (cell_tFileInputExcel_1.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_1[i] = cell_tFileInputExcel_1
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_1)) {
												temp_row_tFileInputExcel_1[i] = cell_tFileInputExcel_1
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_1[i] = df_tFileInputExcel_1
														.format(cell_tFileInputExcel_1.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_1[i] = String
													.valueOf(cell_tFileInputExcel_1.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_1.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_1[i] = cell_tFileInputExcel_1
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_1)) {
													temp_row_tFileInputExcel_1[i] = cell_tFileInputExcel_1
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_1 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_1.getNumericCellValue());
													temp_row_tFileInputExcel_1[i] = ne_tFileInputExcel_1
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_1[i] = String
														.valueOf(cell_tFileInputExcel_1.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_1[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_1[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_1[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_1[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_1 = false;
							row1 = new row1Struct();
							int curColNum_tFileInputExcel_1 = -1;
							String curColName_tFileInputExcel_1 = "";
							try {
								columnIndex_tFileInputExcel_1 = 0;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1 + 1;
									curColName_tFileInputExcel_1 = "Reference_OSM_mere__Opportunite";

									row1.Reference_OSM_mere__Opportunite = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
								} else {
									row1.Reference_OSM_mere__Opportunite = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 1;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1 + 1;
									curColName_tFileInputExcel_1 = "Reference_OSM__Opportunite";

									row1.Reference_OSM__Opportunite = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
								} else {
									row1.Reference_OSM__Opportunite = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 2;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1 + 1;
									curColName_tFileInputExcel_1 = "Client_Prospect__Opportunite";

									row1.Client_Prospect__Opportunite = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
								} else {
									row1.Client_Prospect__Opportunite = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 3;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1 + 1;
									curColName_tFileInputExcel_1 = "Offre";

									row1.Offre = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
								} else {
									row1.Offre = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 4;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1 + 1;
									curColName_tFileInputExcel_1 = "Nature_Offre";

									row1.Nature_Offre = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
								} else {
									row1.Nature_Offre = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 5;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1 + 1;
									curColName_tFileInputExcel_1 = "Produit_existant";

									row1.Produit_existant = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
								} else {
									row1.Produit_existant = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 6;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1 + 1;
									curColName_tFileInputExcel_1 = "Nature_produit__Produit_existant";

									row1.Nature_produit__Produit_existant = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
								} else {
									row1.Nature_produit__Produit_existant = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 7;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1 + 1;
									curColName_tFileInputExcel_1 = "Quantite";

									row1.Quantite = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1], null,
											'.' == decimalChar_tFileInputExcel_1 ? null
													: decimalChar_tFileInputExcel_1));
								} else {
									row1.Quantite = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 8;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1 + 1;
									curColName_tFileInputExcel_1 = "Prix_unitaire";

									row1.Prix_unitaire = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
								} else {
									row1.Prix_unitaire = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 9;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1 + 1;
									curColName_tFileInputExcel_1 = "Total_final";

									row1.Total_final = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
								} else {
									row1.Total_final = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 10;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1 + 1;
									curColName_tFileInputExcel_1 = "Remise______Opportunite";

									row1.Remise______Opportunite = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
								} else {
									row1.Remise______Opportunite = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 11;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1 + 1;
									curColName_tFileInputExcel_1 = "Total_remise_HT";

									row1.Total_remise_HT = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1], null,
											'.' == decimalChar_tFileInputExcel_1 ? null
													: decimalChar_tFileInputExcel_1));
								} else {
									row1.Total_remise_HT = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 12;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1 + 1;
									curColName_tFileInputExcel_1 = "Extension__Opportunite";

									row1.Extension__Opportunite = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
								} else {
									row1.Extension__Opportunite = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 13;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1 + 1;
									curColName_tFileInputExcel_1 = "Budget_a_valider__Opportunite";

									row1.Budget_a_valider__Opportunite = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
								} else {
									row1.Budget_a_valider__Opportunite = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 14;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1 + 1;
									curColName_tFileInputExcel_1 = "Budget_a_valider_Extension__Opportunite";

									row1.Budget_a_valider_Extension__Opportunite = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
								} else {
									row1.Budget_a_valider_Extension__Opportunite = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 15;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1 + 1;
									curColName_tFileInputExcel_1 = "Duree_d_engagement__Opportunite";

									row1.Duree_d_engagement__Opportunite = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
								} else {
									row1.Duree_d_engagement__Opportunite = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 16;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1 + 1;
									curColName_tFileInputExcel_1 = "Type_d_engagement__Opportunite";

									row1.Type_d_engagement__Opportunite = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
								} else {
									row1.Type_d_engagement__Opportunite = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 17;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1 + 1;
									curColName_tFileInputExcel_1 = "Demandeur__Opportunite";

									row1.Demandeur__Opportunite = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
								} else {
									row1.Demandeur__Opportunite = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 18;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1 + 1;
									curColName_tFileInputExcel_1 = "Equipe";

									row1.Equipe = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
								} else {
									row1.Equipe = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 19;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1 + 1;
									curColName_tFileInputExcel_1 = "Cree_le__Opportunite";

									row1.Cree_le__Opportunite = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
								} else {
									row1.Cree_le__Opportunite = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 20;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1 + 1;
									curColName_tFileInputExcel_1 = "Mois_de_creation";

									row1.Mois_de_creation = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1], null,
											'.' == decimalChar_tFileInputExcel_1 ? null
													: decimalChar_tFileInputExcel_1));
								} else {
									row1.Mois_de_creation = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 21;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1 + 1;
									curColName_tFileInputExcel_1 = "Annee_de_creation";

									row1.Annee_de_creation = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1], null,
											'.' == decimalChar_tFileInputExcel_1 ? null
													: decimalChar_tFileInputExcel_1));
								} else {
									row1.Annee_de_creation = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 22;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1 + 1;
									curColName_tFileInputExcel_1 = "Mois_et_annee_de_creation";

									row1.Mois_et_annee_de_creation = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
								} else {
									row1.Mois_et_annee_de_creation = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 23;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1 + 1;
									curColName_tFileInputExcel_1 = "Raison_de_statut_OSM__Opportunite";

									row1.Raison_de_statut_OSM__Opportunite = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
								} else {
									row1.Raison_de_statut_OSM__Opportunite = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 24;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1 + 1;
									curColName_tFileInputExcel_1 = "Statut_OSM__Opportunite";

									row1.Statut_OSM__Opportunite = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
								} else {
									row1.Statut_OSM__Opportunite = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 25;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1 + 1;
									curColName_tFileInputExcel_1 = "Statut_activation__Commande";

									row1.Statut_activation__Commande = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
								} else {
									row1.Statut_activation__Commande = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 26;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1 + 1;
									curColName_tFileInputExcel_1 = "Date_d_activation__Commande";

									row1.Date_d_activation__Commande = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
								} else {
									row1.Date_d_activation__Commande = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 27;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1 + 1;
									curColName_tFileInputExcel_1 = "Mois_d_activation";

									row1.Mois_d_activation = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1], null,
											'.' == decimalChar_tFileInputExcel_1 ? null
													: decimalChar_tFileInputExcel_1));
								} else {
									row1.Mois_d_activation = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 28;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1 + 1;
									curColName_tFileInputExcel_1 = "Staut_Final";

									row1.Staut_Final = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
								} else {
									row1.Staut_Final = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 29;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1 + 1;
									curColName_tFileInputExcel_1 = "Gouvernorat";

									row1.Gouvernorat = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
								} else {
									row1.Gouvernorat = null;
									emptyColumnCount_tFileInputExcel_1++;
								}
								columnIndex_tFileInputExcel_1 = 30;

								if (temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1].length() > 0) {
									curColNum_tFileInputExcel_1 = columnIndex_tFileInputExcel_1
											+ start_column_tFileInputExcel_1 + 1;
									curColName_tFileInputExcel_1 = "Phase_de_l_opportunite__Opportunite";

									row1.Phase_de_l_opportunite__Opportunite = temp_row_tFileInputExcel_1[columnIndex_tFileInputExcel_1];
								} else {
									row1.Phase_de_l_opportunite__Opportunite = null;
									emptyColumnCount_tFileInputExcel_1++;
								}

								nb_line_tFileInputExcel_1++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_1_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_1 = true;
								System.err.println(e.getMessage());
								row1 = null;
							}

							/**
							 * [tFileInputExcel_1 begin ] stop
							 */

							/**
							 * [tFileInputExcel_1 main ] start
							 */

							currentComponent = "tFileInputExcel_1";

							tos_count_tFileInputExcel_1++;

							/**
							 * [tFileInputExcel_1 main ] stop
							 */

							/**
							 * [tFileInputExcel_1 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_1";

							/**
							 * [tFileInputExcel_1 process_data_begin ] stop
							 */
// Start of branch "row1"
							if (row1 != null) {

								/**
								 * [tMap_2 main ] start
								 */

								currentComponent = "tMap_2";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row1"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_2 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_2 = false;
								boolean mainRowRejected_tMap_2 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_2__Struct Var = Var__tMap_2;// ###############################
									// ###############################
									// # Output tables

									t5 = null;

// # Output table : 't5'
									t5_tmp.Demandeur__Opportunite = StringHandling.CHANGE(
											StringHandling.UPCASE(row1.Demandeur__Opportunite), "ADELWAHED",
											"ABDELWAHED");
									t5 = t5_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_2 = false;

								tos_count_tMap_2++;

								/**
								 * [tMap_2 main ] stop
								 */

								/**
								 * [tMap_2 process_data_begin ] start
								 */

								currentComponent = "tMap_2";

								/**
								 * [tMap_2 process_data_begin ] stop
								 */
// Start of branch "t5"
								if (t5 != null) {

									/**
									 * [tUnite_1 main ] start
									 */

									currentComponent = "tUnite_1";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "t5"

										);
									}

//////////

// for output
									row3 = new row3Struct();

									row3.Account_Manager__Client_Prospect = t5.Demandeur__Opportunite;

									nb_line_tUnite_1++;

//////////

									tos_count_tUnite_1++;

									/**
									 * [tUnite_1 main ] stop
									 */

									/**
									 * [tUnite_1 process_data_begin ] start
									 */

									currentComponent = "tUnite_1";

									/**
									 * [tUnite_1 process_data_begin ] stop
									 */

									/**
									 * [tMap_1 main ] start
									 */

									currentComponent = "tMap_1";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "row3"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_1 = false;
									boolean mainRowRejected_tMap_1 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row8"
									///////////////////////////////////////////////

									boolean forceLooprow8 = false;

									row8Struct row8ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_1) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_1 = false;

										row8HashKey.Account_Manager__Client_Prospect = row3.Account_Manager__Client_Prospect;

										row8HashKey.hashCodeDirty = true;

										tHash_Lookup_row8.lookup(row8HashKey);

										if (!tHash_Lookup_row8.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_1 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row8 != null && tHash_Lookup_row8.getCount(row8HashKey) > 1) { // G
																													// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row8'
										// and it contains more one result from keys :
										// row8.Account_Manager__Client_Prospect = '" +
										// row8HashKey.Account_Manager__Client_Prospect + "'");
									} // G 071

									row8Struct row8 = null;

									row8Struct fromLookup_row8 = null;
									row8 = row8Default;

									if (tHash_Lookup_row8 != null && tHash_Lookup_row8.hasNext()) { // G 099

										fromLookup_row8 = tHash_Lookup_row8.next();

									} // G 099

									if (fromLookup_row8 != null) {
										row8 = fromLookup_row8;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
										// ###############################
										// # Output tables

										j = null;

										if (!rejectedInnerJoin_tMap_1) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'j'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_1) {
											j_tmp.Account_Manager__Client_Prospect = row3.Account_Manager__Client_Prospect;
											j = j_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_1 = false;

									tos_count_tMap_1++;

									/**
									 * [tMap_1 main ] stop
									 */

									/**
									 * [tMap_1 process_data_begin ] start
									 */

									currentComponent = "tMap_1";

									/**
									 * [tMap_1 process_data_begin ] stop
									 */
// Start of branch "j"
									if (j != null) {

										/**
										 * [tUniqRow_2 main ] start
										 */

										currentComponent = "tUniqRow_2";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "j"

											);
										}

										row4 = null;
										finder_tUniqRow_2.Account_Manager__Client_Prospect = j.Account_Manager__Client_Prospect;
										finder_tUniqRow_2.hashCodeDirty = true;
										if (!keystUniqRow_2.contains(finder_tUniqRow_2)) {
											KeyStruct_tUniqRow_2 new_tUniqRow_2 = new KeyStruct_tUniqRow_2();

											new_tUniqRow_2.Account_Manager__Client_Prospect = j.Account_Manager__Client_Prospect;

											keystUniqRow_2.add(new_tUniqRow_2);
											if (row4 == null) {

												row4 = new row4Struct();
											}
											row4.Account_Manager__Client_Prospect = j.Account_Manager__Client_Prospect;
											nb_uniques_tUniqRow_2++;
										} else {
											nb_duplicates_tUniqRow_2++;
										}

										tos_count_tUniqRow_2++;

										/**
										 * [tUniqRow_2 main ] stop
										 */

										/**
										 * [tUniqRow_2 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_2";

										/**
										 * [tUniqRow_2 process_data_begin ] stop
										 */
// Start of branch "row4"
										if (row4 != null) {

											/**
											 * [tDBOutput_1 main ] start
											 */

											currentComponent = "tDBOutput_1";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row4"

												);
											}

											whetherReject_tDBOutput_1 = false;
											if (row4.Account_Manager__Client_Prospect == null) {
												pstmt_tDBOutput_1.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_1.setString(1, row4.Account_Manager__Client_Prospect);
											}

											pstmt_tDBOutput_1.addBatch();
											nb_line_tDBOutput_1++;

											batchSizeCounter_tDBOutput_1++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_1 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_1) throws Exception {
													try {

														for (int countEach_tDBOutput_1 : pstmt_tDBOutput_1
																.executeBatch()) {
															if (countEach_tDBOutput_1 == -2
																	|| countEach_tDBOutput_1 == -3) {
																break;
															}
															counter += countEach_tDBOutput_1;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_1_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_1 = 0;
														for (int countEach_tDBOutput_1 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_1 < 0 ? 0
																	: countEach_tDBOutput_1);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_1) throws Exception {
													try {

														for (int countEach_tDBOutput_1 : pstmt_tDBOutput_1
																.executeBatch()) {
															if (countEach_tDBOutput_1 == -2
																	|| countEach_tDBOutput_1 == -3) {
																break;
															}
															counter += countEach_tDBOutput_1;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_1_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_1 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_1 < 0 ? 0
																	: countEach_tDBOutput_1);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_1 > 0)
													&& (batchSize_tDBOutput_1 <= batchSizeCounter_tDBOutput_1)) {

												insertedCount_tDBOutput_1 = new LimitBytesHelper_tDBOutput_1()
														.limitBytePart1(insertedCount_tDBOutput_1, pstmt_tDBOutput_1);
												rowsToCommitCount_tDBOutput_1 = insertedCount_tDBOutput_1;

												batchSizeCounter_tDBOutput_1 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_1++;
											if (commitEvery_tDBOutput_1 <= commitCounter_tDBOutput_1) {
												if ((batchSize_tDBOutput_1 > 0) && (batchSizeCounter_tDBOutput_1 > 0)) {

													insertedCount_tDBOutput_1 = new LimitBytesHelper_tDBOutput_1()
															.limitBytePart1(insertedCount_tDBOutput_1,
																	pstmt_tDBOutput_1);

													batchSizeCounter_tDBOutput_1 = 0;
												}
												if (rowsToCommitCount_tDBOutput_1 != 0) {

												}
												conn_tDBOutput_1.commit();
												if (rowsToCommitCount_tDBOutput_1 != 0) {

													rowsToCommitCount_tDBOutput_1 = 0;
												}
												commitCounter_tDBOutput_1 = 0;
											}

											tos_count_tDBOutput_1++;

											/**
											 * [tDBOutput_1 main ] stop
											 */

											/**
											 * [tDBOutput_1 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_1";

											/**
											 * [tDBOutput_1 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_1 process_data_end ] start
											 */

											currentComponent = "tDBOutput_1";

											/**
											 * [tDBOutput_1 process_data_end ] stop
											 */

										} // End of branch "row4"

										/**
										 * [tUniqRow_2 process_data_end ] start
										 */

										currentComponent = "tUniqRow_2";

										/**
										 * [tUniqRow_2 process_data_end ] stop
										 */

									} // End of branch "j"

									/**
									 * [tMap_1 process_data_end ] start
									 */

									currentComponent = "tMap_1";

									/**
									 * [tMap_1 process_data_end ] stop
									 */

									/**
									 * [tUnite_1 process_data_end ] start
									 */

									currentComponent = "tUnite_1";

									/**
									 * [tUnite_1 process_data_end ] stop
									 */

								} // End of branch "t5"

								/**
								 * [tMap_2 process_data_end ] start
								 */

								currentComponent = "tMap_2";

								/**
								 * [tMap_2 process_data_end ] stop
								 */

							} // End of branch "row1"

							/**
							 * [tFileInputExcel_1 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_1";

							/**
							 * [tFileInputExcel_1 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_1 end ] start
							 */

							currentComponent = "tFileInputExcel_1";

						}

						globalMap.put("tFileInputExcel_1_NB_LINE", nb_line_tFileInputExcel_1);

					}

				} finally {

					if (!(source_tFileInputExcel_1 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_1.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_1", true);
				end_Hash.put("tFileInputExcel_1", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_1 end ] stop
				 */

				/**
				 * [tMap_2 end ] start
				 */

				currentComponent = "tMap_2";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row1");
				}

				ok_Hash.put("tMap_2", true);
				end_Hash.put("tMap_2", System.currentTimeMillis());

				/**
				 * [tMap_2 end ] stop
				 */

				/**
				 * [tMap_4 begin ] start
				 */

				ok_Hash.put("tMap_4", false);
				start_Hash.put("tMap_4", System.currentTimeMillis());

				currentComponent = "tMap_4";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row2");
				}

				int tos_count_tMap_4 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_4__Struct {
				}
				Var__tMap_4__Struct Var__tMap_4 = new Var__tMap_4__Struct();
// ###############################

// ###############################
// # Outputs initialization
				t6Struct t6_tmp = new t6Struct();
// ###############################

				/**
				 * [tMap_4 begin ] stop
				 */

				/**
				 * [tFileInputExcel_2 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_2", false);
				start_Hash.put("tFileInputExcel_2", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_2";

				int tos_count_tFileInputExcel_2 = 0;

				final String decryptedPassword_tFileInputExcel_2 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:VRE0yLbuyYP9EXvKwU4ZsqoCWusAnsN7Uw9S5Q==");
				String password_tFileInputExcel_2 = decryptedPassword_tFileInputExcel_2;
				if (password_tFileInputExcel_2.isEmpty()) {
					password_tFileInputExcel_2 = null;
				}
				class RegexUtil_tFileInputExcel_2 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_2 regexUtil_tFileInputExcel_2 = new RegexUtil_tFileInputExcel_2();

				Object source_tFileInputExcel_2 = "C:/Users/DELL/OneDrive/Bureau/Sans nom 9.xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_2 = null;

				if (source_tFileInputExcel_2 instanceof String) {
					workbook_tFileInputExcel_2 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_2), password_tFileInputExcel_2,
									true);
				} else if (source_tFileInputExcel_2 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_2 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_2, password_tFileInputExcel_2);
				} else {
					workbook_tFileInputExcel_2 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_2 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.ss.usermodel.Sheet sheet_tFileInputExcel_2 : workbook_tFileInputExcel_2) {
						sheetList_tFileInputExcel_2
								.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet_tFileInputExcel_2);
					}
					if (sheetList_tFileInputExcel_2.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_2 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_2 : sheetList_tFileInputExcel_2) {
						if (sheet_FilterNull_tFileInputExcel_2 != null
								&& sheetList_FilterNull_tFileInputExcel_2.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_2.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_2.add(sheet_FilterNull_tFileInputExcel_2);
						}
					}
					sheetList_tFileInputExcel_2 = sheetList_FilterNull_tFileInputExcel_2;
					if (sheetList_tFileInputExcel_2.size() > 0) {
						int nb_line_tFileInputExcel_2 = 0;

						int begin_line_tFileInputExcel_2 = 1;

						int footer_input_tFileInputExcel_2 = 0;

						int end_line_tFileInputExcel_2 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_2 : sheetList_tFileInputExcel_2) {
							end_line_tFileInputExcel_2 += (sheet_tFileInputExcel_2.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_2 -= footer_input_tFileInputExcel_2;
						int limit_tFileInputExcel_2 = -1;
						int start_column_tFileInputExcel_2 = 1 - 1;
						int end_column_tFileInputExcel_2 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_2 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_2 = sheetList_tFileInputExcel_2
								.get(0);
						int rowCount_tFileInputExcel_2 = 0;
						int sheetIndex_tFileInputExcel_2 = 0;
						int currentRows_tFileInputExcel_2 = (sheetList_tFileInputExcel_2.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_2 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_2 = df_tFileInputExcel_2.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_2 = begin_line_tFileInputExcel_2; i_tFileInputExcel_2 < end_line_tFileInputExcel_2; i_tFileInputExcel_2++) {

							int emptyColumnCount_tFileInputExcel_2 = 0;

							if (limit_tFileInputExcel_2 != -1 && nb_line_tFileInputExcel_2 >= limit_tFileInputExcel_2) {
								break;
							}

							while (i_tFileInputExcel_2 >= rowCount_tFileInputExcel_2 + currentRows_tFileInputExcel_2) {
								rowCount_tFileInputExcel_2 += currentRows_tFileInputExcel_2;
								sheet_tFileInputExcel_2 = sheetList_tFileInputExcel_2
										.get(++sheetIndex_tFileInputExcel_2);
								currentRows_tFileInputExcel_2 = (sheet_tFileInputExcel_2.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_2_CURRENT_SHEET", sheet_tFileInputExcel_2.getSheetName());
							if (rowCount_tFileInputExcel_2 <= i_tFileInputExcel_2) {
								row_tFileInputExcel_2 = sheet_tFileInputExcel_2
										.getRow(i_tFileInputExcel_2 - rowCount_tFileInputExcel_2);
							}
							row2 = null;
							int tempRowLength_tFileInputExcel_2 = 8;

							int columnIndex_tFileInputExcel_2 = 0;

							String[] temp_row_tFileInputExcel_2 = new String[tempRowLength_tFileInputExcel_2];
							int excel_end_column_tFileInputExcel_2;
							if (row_tFileInputExcel_2 == null) {
								excel_end_column_tFileInputExcel_2 = 0;
							} else {
								excel_end_column_tFileInputExcel_2 = row_tFileInputExcel_2.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_2;
							if (end_column_tFileInputExcel_2 == -1) {
								actual_end_column_tFileInputExcel_2 = excel_end_column_tFileInputExcel_2;
							} else {
								actual_end_column_tFileInputExcel_2 = end_column_tFileInputExcel_2 > excel_end_column_tFileInputExcel_2
										? excel_end_column_tFileInputExcel_2
										: end_column_tFileInputExcel_2;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_2 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_2; i++) {
								if (i + start_column_tFileInputExcel_2 < actual_end_column_tFileInputExcel_2) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_2 = row_tFileInputExcel_2
											.getCell(i + start_column_tFileInputExcel_2);
									if (cell_tFileInputExcel_2 != null) {
										switch (cell_tFileInputExcel_2.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_2[i] = cell_tFileInputExcel_2
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_2)) {
												temp_row_tFileInputExcel_2[i] = cell_tFileInputExcel_2
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_2[i] = df_tFileInputExcel_2
														.format(cell_tFileInputExcel_2.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_2[i] = String
													.valueOf(cell_tFileInputExcel_2.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_2.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_2[i] = cell_tFileInputExcel_2
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_2)) {
													temp_row_tFileInputExcel_2[i] = cell_tFileInputExcel_2
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_2 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_2.getNumericCellValue());
													temp_row_tFileInputExcel_2[i] = ne_tFileInputExcel_2
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_2[i] = String
														.valueOf(cell_tFileInputExcel_2.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_2[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_2[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_2[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_2[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_2 = false;
							row2 = new row2Struct();
							int curColNum_tFileInputExcel_2 = -1;
							String curColName_tFileInputExcel_2 = "";
							try {
								columnIndex_tFileInputExcel_2 = 0;

								if (temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2].length() > 0) {
									curColNum_tFileInputExcel_2 = columnIndex_tFileInputExcel_2
											+ start_column_tFileInputExcel_2 + 1;
									curColName_tFileInputExcel_2 = "Index";

									row2.Index = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2], null,
											'.' == decimalChar_tFileInputExcel_2 ? null
													: decimalChar_tFileInputExcel_2));
								} else {
									row2.Index = null;
									emptyColumnCount_tFileInputExcel_2++;
								}
								columnIndex_tFileInputExcel_2 = 1;

								if (temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2].length() > 0) {
									curColNum_tFileInputExcel_2 = columnIndex_tFileInputExcel_2
											+ start_column_tFileInputExcel_2 + 1;
									curColName_tFileInputExcel_2 = "Membre_Equipe";

									row2.Membre_Equipe = temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2];
								} else {
									row2.Membre_Equipe = null;
									emptyColumnCount_tFileInputExcel_2++;
								}
								columnIndex_tFileInputExcel_2 = 2;

								if (temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2].length() > 0) {
									curColNum_tFileInputExcel_2 = columnIndex_tFileInputExcel_2
											+ start_column_tFileInputExcel_2 + 1;
									curColName_tFileInputExcel_2 = "Equipe";

									row2.Equipe = temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2];
								} else {
									row2.Equipe = null;
									emptyColumnCount_tFileInputExcel_2++;
								}
								columnIndex_tFileInputExcel_2 = 3;

								if (temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2].length() > 0) {
									curColNum_tFileInputExcel_2 = columnIndex_tFileInputExcel_2
											+ start_column_tFileInputExcel_2 + 1;
									curColName_tFileInputExcel_2 = "Mobile";

									row2.Mobile = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2], null,
											'.' == decimalChar_tFileInputExcel_2 ? null
													: decimalChar_tFileInputExcel_2));
								} else {
									row2.Mobile = null;
									emptyColumnCount_tFileInputExcel_2++;
								}
								columnIndex_tFileInputExcel_2 = 4;

								if (temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2].length() > 0) {
									curColNum_tFileInputExcel_2 = columnIndex_tFileInputExcel_2
											+ start_column_tFileInputExcel_2 + 1;
									curColName_tFileInputExcel_2 = "Broad_Band";

									row2.Broad_Band = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2], null,
											'.' == decimalChar_tFileInputExcel_2 ? null
													: decimalChar_tFileInputExcel_2));
								} else {
									row2.Broad_Band = null;
									emptyColumnCount_tFileInputExcel_2++;
								}
								columnIndex_tFileInputExcel_2 = 5;

								if (temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2].length() > 0) {
									curColNum_tFileInputExcel_2 = columnIndex_tFileInputExcel_2
											+ start_column_tFileInputExcel_2 + 1;
									curColName_tFileInputExcel_2 = "VoIP";

									row2.VoIP = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2], null,
											'.' == decimalChar_tFileInputExcel_2 ? null
													: decimalChar_tFileInputExcel_2));
								} else {
									row2.VoIP = null;
									emptyColumnCount_tFileInputExcel_2++;
								}
								columnIndex_tFileInputExcel_2 = 6;

								if (temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2].length() > 0) {
									curColNum_tFileInputExcel_2 = columnIndex_tFileInputExcel_2
											+ start_column_tFileInputExcel_2 + 1;
									curColName_tFileInputExcel_2 = "Date";

									row2.Date = temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2];
								} else {
									row2.Date = null;
									emptyColumnCount_tFileInputExcel_2++;
								}
								columnIndex_tFileInputExcel_2 = 7;

								if (temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2].length() > 0) {
									curColNum_tFileInputExcel_2 = columnIndex_tFileInputExcel_2
											+ start_column_tFileInputExcel_2 + 1;
									curColName_tFileInputExcel_2 = "Nouveaux_Client";

									row2.Nouveaux_Client = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_2[columnIndex_tFileInputExcel_2], null,
											'.' == decimalChar_tFileInputExcel_2 ? null
													: decimalChar_tFileInputExcel_2));
								} else {
									row2.Nouveaux_Client = null;
									emptyColumnCount_tFileInputExcel_2++;
								}

								nb_line_tFileInputExcel_2++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_2_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_2 = true;
								System.err.println(e.getMessage());
								row2 = null;
							}

							/**
							 * [tFileInputExcel_2 begin ] stop
							 */

							/**
							 * [tFileInputExcel_2 main ] start
							 */

							currentComponent = "tFileInputExcel_2";

							tos_count_tFileInputExcel_2++;

							/**
							 * [tFileInputExcel_2 main ] stop
							 */

							/**
							 * [tFileInputExcel_2 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_2";

							/**
							 * [tFileInputExcel_2 process_data_begin ] stop
							 */
// Start of branch "row2"
							if (row2 != null) {

								/**
								 * [tMap_4 main ] start
								 */

								currentComponent = "tMap_4";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row2"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_4 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_4 = false;
								boolean mainRowRejected_tMap_4 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_4__Struct Var = Var__tMap_4;// ###############################
									// ###############################
									// # Output tables

									t6 = null;

// # Output table : 't6'
									t6_tmp.Membre_Equipe = StringHandling.CHANGE(
											StringHandling.UPCASE(row2.Membre_Equipe), "ADELWAHED", "ABDELWAHED");
									t6 = t6_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_4 = false;

								tos_count_tMap_4++;

								/**
								 * [tMap_4 main ] stop
								 */

								/**
								 * [tMap_4 process_data_begin ] start
								 */

								currentComponent = "tMap_4";

								/**
								 * [tMap_4 process_data_begin ] stop
								 */
// Start of branch "t6"
								if (t6 != null) {

									/**
									 * [tUnite_1 main ] start
									 */

									currentComponent = "tUnite_1";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "t6"

										);
									}

//////////

// for output
									row3 = new row3Struct();

									row3.Account_Manager__Client_Prospect = t6.Membre_Equipe;

									nb_line_tUnite_1++;

//////////

									tos_count_tUnite_1++;

									/**
									 * [tUnite_1 main ] stop
									 */

									/**
									 * [tUnite_1 process_data_begin ] start
									 */

									currentComponent = "tUnite_1";

									/**
									 * [tUnite_1 process_data_begin ] stop
									 */

									/**
									 * [tMap_1 main ] start
									 */

									currentComponent = "tMap_1";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "row3"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_1 = false;
									boolean mainRowRejected_tMap_1 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row8"
									///////////////////////////////////////////////

									boolean forceLooprow8 = false;

									row8Struct row8ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_1) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_1 = false;

										row8HashKey.Account_Manager__Client_Prospect = row3.Account_Manager__Client_Prospect;

										row8HashKey.hashCodeDirty = true;

										tHash_Lookup_row8.lookup(row8HashKey);

										if (!tHash_Lookup_row8.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_1 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row8 != null && tHash_Lookup_row8.getCount(row8HashKey) > 1) { // G
																													// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row8'
										// and it contains more one result from keys :
										// row8.Account_Manager__Client_Prospect = '" +
										// row8HashKey.Account_Manager__Client_Prospect + "'");
									} // G 071

									row8Struct row8 = null;

									row8Struct fromLookup_row8 = null;
									row8 = row8Default;

									if (tHash_Lookup_row8 != null && tHash_Lookup_row8.hasNext()) { // G 099

										fromLookup_row8 = tHash_Lookup_row8.next();

									} // G 099

									if (fromLookup_row8 != null) {
										row8 = fromLookup_row8;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
										// ###############################
										// # Output tables

										j = null;

										if (!rejectedInnerJoin_tMap_1) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'j'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_1) {
											j_tmp.Account_Manager__Client_Prospect = row3.Account_Manager__Client_Prospect;
											j = j_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_1 = false;

									tos_count_tMap_1++;

									/**
									 * [tMap_1 main ] stop
									 */

									/**
									 * [tMap_1 process_data_begin ] start
									 */

									currentComponent = "tMap_1";

									/**
									 * [tMap_1 process_data_begin ] stop
									 */
// Start of branch "j"
									if (j != null) {

										/**
										 * [tUniqRow_2 main ] start
										 */

										currentComponent = "tUniqRow_2";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "j"

											);
										}

										row4 = null;
										finder_tUniqRow_2.Account_Manager__Client_Prospect = j.Account_Manager__Client_Prospect;
										finder_tUniqRow_2.hashCodeDirty = true;
										if (!keystUniqRow_2.contains(finder_tUniqRow_2)) {
											KeyStruct_tUniqRow_2 new_tUniqRow_2 = new KeyStruct_tUniqRow_2();

											new_tUniqRow_2.Account_Manager__Client_Prospect = j.Account_Manager__Client_Prospect;

											keystUniqRow_2.add(new_tUniqRow_2);
											if (row4 == null) {

												row4 = new row4Struct();
											}
											row4.Account_Manager__Client_Prospect = j.Account_Manager__Client_Prospect;
											nb_uniques_tUniqRow_2++;
										} else {
											nb_duplicates_tUniqRow_2++;
										}

										tos_count_tUniqRow_2++;

										/**
										 * [tUniqRow_2 main ] stop
										 */

										/**
										 * [tUniqRow_2 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_2";

										/**
										 * [tUniqRow_2 process_data_begin ] stop
										 */
// Start of branch "row4"
										if (row4 != null) {

											/**
											 * [tDBOutput_1 main ] start
											 */

											currentComponent = "tDBOutput_1";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row4"

												);
											}

											whetherReject_tDBOutput_1 = false;
											if (row4.Account_Manager__Client_Prospect == null) {
												pstmt_tDBOutput_1.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_1.setString(1, row4.Account_Manager__Client_Prospect);
											}

											pstmt_tDBOutput_1.addBatch();
											nb_line_tDBOutput_1++;

											batchSizeCounter_tDBOutput_1++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_1 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_1) throws Exception {
													try {

														for (int countEach_tDBOutput_1 : pstmt_tDBOutput_1
																.executeBatch()) {
															if (countEach_tDBOutput_1 == -2
																	|| countEach_tDBOutput_1 == -3) {
																break;
															}
															counter += countEach_tDBOutput_1;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_1_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_1 = 0;
														for (int countEach_tDBOutput_1 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_1 < 0 ? 0
																	: countEach_tDBOutput_1);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_1) throws Exception {
													try {

														for (int countEach_tDBOutput_1 : pstmt_tDBOutput_1
																.executeBatch()) {
															if (countEach_tDBOutput_1 == -2
																	|| countEach_tDBOutput_1 == -3) {
																break;
															}
															counter += countEach_tDBOutput_1;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_1_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_1 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_1 < 0 ? 0
																	: countEach_tDBOutput_1);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_1 > 0)
													&& (batchSize_tDBOutput_1 <= batchSizeCounter_tDBOutput_1)) {

												insertedCount_tDBOutput_1 = new LimitBytesHelper_tDBOutput_1()
														.limitBytePart1(insertedCount_tDBOutput_1, pstmt_tDBOutput_1);
												rowsToCommitCount_tDBOutput_1 = insertedCount_tDBOutput_1;

												batchSizeCounter_tDBOutput_1 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_1++;
											if (commitEvery_tDBOutput_1 <= commitCounter_tDBOutput_1) {
												if ((batchSize_tDBOutput_1 > 0) && (batchSizeCounter_tDBOutput_1 > 0)) {

													insertedCount_tDBOutput_1 = new LimitBytesHelper_tDBOutput_1()
															.limitBytePart1(insertedCount_tDBOutput_1,
																	pstmt_tDBOutput_1);

													batchSizeCounter_tDBOutput_1 = 0;
												}
												if (rowsToCommitCount_tDBOutput_1 != 0) {

												}
												conn_tDBOutput_1.commit();
												if (rowsToCommitCount_tDBOutput_1 != 0) {

													rowsToCommitCount_tDBOutput_1 = 0;
												}
												commitCounter_tDBOutput_1 = 0;
											}

											tos_count_tDBOutput_1++;

											/**
											 * [tDBOutput_1 main ] stop
											 */

											/**
											 * [tDBOutput_1 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_1";

											/**
											 * [tDBOutput_1 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_1 process_data_end ] start
											 */

											currentComponent = "tDBOutput_1";

											/**
											 * [tDBOutput_1 process_data_end ] stop
											 */

										} // End of branch "row4"

										/**
										 * [tUniqRow_2 process_data_end ] start
										 */

										currentComponent = "tUniqRow_2";

										/**
										 * [tUniqRow_2 process_data_end ] stop
										 */

									} // End of branch "j"

									/**
									 * [tMap_1 process_data_end ] start
									 */

									currentComponent = "tMap_1";

									/**
									 * [tMap_1 process_data_end ] stop
									 */

									/**
									 * [tUnite_1 process_data_end ] start
									 */

									currentComponent = "tUnite_1";

									/**
									 * [tUnite_1 process_data_end ] stop
									 */

								} // End of branch "t6"

								/**
								 * [tMap_4 process_data_end ] start
								 */

								currentComponent = "tMap_4";

								/**
								 * [tMap_4 process_data_end ] stop
								 */

							} // End of branch "row2"

							/**
							 * [tFileInputExcel_2 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_2";

							/**
							 * [tFileInputExcel_2 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_2 end ] start
							 */

							currentComponent = "tFileInputExcel_2";

						}

						globalMap.put("tFileInputExcel_2_NB_LINE", nb_line_tFileInputExcel_2);

					}

				} finally {

					if (!(source_tFileInputExcel_2 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_2.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_2", true);
				end_Hash.put("tFileInputExcel_2", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_2 end ] stop
				 */

				/**
				 * [tMap_4 end ] start
				 */

				currentComponent = "tMap_4";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row2");
				}

				ok_Hash.put("tMap_4", true);
				end_Hash.put("tMap_4", System.currentTimeMillis());

				/**
				 * [tMap_4 end ] stop
				 */

				/**
				 * [tMap_3 begin ] start
				 */

				ok_Hash.put("tMap_3", false);
				start_Hash.put("tMap_3", System.currentTimeMillis());

				currentComponent = "tMap_3";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row5");
				}

				int tos_count_tMap_3 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_3__Struct {
				}
				Var__tMap_3__Struct Var__tMap_3 = new Var__tMap_3__Struct();
// ###############################

// ###############################
// # Outputs initialization
				t7Struct t7_tmp = new t7Struct();
// ###############################

				/**
				 * [tMap_3 begin ] stop
				 */

				/**
				 * [tFileInputExcel_3 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_3", false);
				start_Hash.put("tFileInputExcel_3", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_3";

				int tos_count_tFileInputExcel_3 = 0;

				final String decryptedPassword_tFileInputExcel_3 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:AHe+ETvxqzITQmNUDJq64jeqy/IIIZgoOVdCCQ==");
				String password_tFileInputExcel_3 = decryptedPassword_tFileInputExcel_3;
				if (password_tFileInputExcel_3.isEmpty()) {
					password_tFileInputExcel_3 = null;
				}
				class RegexUtil_tFileInputExcel_3 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_3 regexUtil_tFileInputExcel_3 = new RegexUtil_tFileInputExcel_3();

				Object source_tFileInputExcel_3 = "C:/Users/DELL/Downloads/parc facturé Mars 2022 (1).xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_3 = null;

				if (source_tFileInputExcel_3 instanceof String) {
					workbook_tFileInputExcel_3 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_3), password_tFileInputExcel_3,
									true);
				} else if (source_tFileInputExcel_3 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_3 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_3, password_tFileInputExcel_3);
				} else {
					workbook_tFileInputExcel_3 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_3 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_3.addAll(
							regexUtil_tFileInputExcel_3.getSheets(workbook_tFileInputExcel_3, "Résiliation", false));
					if (sheetList_tFileInputExcel_3.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_3 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_3 : sheetList_tFileInputExcel_3) {
						if (sheet_FilterNull_tFileInputExcel_3 != null
								&& sheetList_FilterNull_tFileInputExcel_3.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_3.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_3.add(sheet_FilterNull_tFileInputExcel_3);
						}
					}
					sheetList_tFileInputExcel_3 = sheetList_FilterNull_tFileInputExcel_3;
					if (sheetList_tFileInputExcel_3.size() > 0) {
						int nb_line_tFileInputExcel_3 = 0;

						int begin_line_tFileInputExcel_3 = 1;

						int footer_input_tFileInputExcel_3 = 0;

						int end_line_tFileInputExcel_3 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_3 : sheetList_tFileInputExcel_3) {
							end_line_tFileInputExcel_3 += (sheet_tFileInputExcel_3.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_3 -= footer_input_tFileInputExcel_3;
						int limit_tFileInputExcel_3 = -1;
						int start_column_tFileInputExcel_3 = 1 - 1;
						int end_column_tFileInputExcel_3 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_3 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_3 = sheetList_tFileInputExcel_3
								.get(0);
						int rowCount_tFileInputExcel_3 = 0;
						int sheetIndex_tFileInputExcel_3 = 0;
						int currentRows_tFileInputExcel_3 = (sheetList_tFileInputExcel_3.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_3 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_3 = df_tFileInputExcel_3.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_3 = begin_line_tFileInputExcel_3; i_tFileInputExcel_3 < end_line_tFileInputExcel_3; i_tFileInputExcel_3++) {

							int emptyColumnCount_tFileInputExcel_3 = 0;

							if (limit_tFileInputExcel_3 != -1 && nb_line_tFileInputExcel_3 >= limit_tFileInputExcel_3) {
								break;
							}

							while (i_tFileInputExcel_3 >= rowCount_tFileInputExcel_3 + currentRows_tFileInputExcel_3) {
								rowCount_tFileInputExcel_3 += currentRows_tFileInputExcel_3;
								sheet_tFileInputExcel_3 = sheetList_tFileInputExcel_3
										.get(++sheetIndex_tFileInputExcel_3);
								currentRows_tFileInputExcel_3 = (sheet_tFileInputExcel_3.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_3_CURRENT_SHEET", sheet_tFileInputExcel_3.getSheetName());
							if (rowCount_tFileInputExcel_3 <= i_tFileInputExcel_3) {
								row_tFileInputExcel_3 = sheet_tFileInputExcel_3
										.getRow(i_tFileInputExcel_3 - rowCount_tFileInputExcel_3);
							}
							row5 = null;
							int tempRowLength_tFileInputExcel_3 = 11;

							int columnIndex_tFileInputExcel_3 = 0;

							String[] temp_row_tFileInputExcel_3 = new String[tempRowLength_tFileInputExcel_3];
							int excel_end_column_tFileInputExcel_3;
							if (row_tFileInputExcel_3 == null) {
								excel_end_column_tFileInputExcel_3 = 0;
							} else {
								excel_end_column_tFileInputExcel_3 = row_tFileInputExcel_3.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_3;
							if (end_column_tFileInputExcel_3 == -1) {
								actual_end_column_tFileInputExcel_3 = excel_end_column_tFileInputExcel_3;
							} else {
								actual_end_column_tFileInputExcel_3 = end_column_tFileInputExcel_3 > excel_end_column_tFileInputExcel_3
										? excel_end_column_tFileInputExcel_3
										: end_column_tFileInputExcel_3;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_3 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_3; i++) {
								if (i + start_column_tFileInputExcel_3 < actual_end_column_tFileInputExcel_3) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_3 = row_tFileInputExcel_3
											.getCell(i + start_column_tFileInputExcel_3);
									if (cell_tFileInputExcel_3 != null) {
										switch (cell_tFileInputExcel_3.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_3[i] = cell_tFileInputExcel_3
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_3)) {
												temp_row_tFileInputExcel_3[i] = cell_tFileInputExcel_3
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_3[i] = df_tFileInputExcel_3
														.format(cell_tFileInputExcel_3.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_3[i] = String
													.valueOf(cell_tFileInputExcel_3.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_3.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_3[i] = cell_tFileInputExcel_3
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_3)) {
													temp_row_tFileInputExcel_3[i] = cell_tFileInputExcel_3
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_3 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_3.getNumericCellValue());
													temp_row_tFileInputExcel_3[i] = ne_tFileInputExcel_3
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_3[i] = String
														.valueOf(cell_tFileInputExcel_3.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_3[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_3[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_3[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_3[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_3 = false;
							row5 = new row5Struct();
							int curColNum_tFileInputExcel_3 = -1;
							String curColName_tFileInputExcel_3 = "";
							try {
								columnIndex_tFileInputExcel_3 = 0;

								if (temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
									curColNum_tFileInputExcel_3 = columnIndex_tFileInputExcel_3
											+ start_column_tFileInputExcel_3 + 1;
									curColName_tFileInputExcel_3 = "Custcode";

									row5.Custcode = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3], null,
											'.' == decimalChar_tFileInputExcel_3 ? null
													: decimalChar_tFileInputExcel_3));
								} else {
									row5.Custcode = null;
									emptyColumnCount_tFileInputExcel_3++;
								}
								columnIndex_tFileInputExcel_3 = 1;

								if (temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
									curColNum_tFileInputExcel_3 = columnIndex_tFileInputExcel_3
											+ start_column_tFileInputExcel_3 + 1;
									curColName_tFileInputExcel_3 = "Raison_Sociale";

									row5.Raison_Sociale = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3];
								} else {
									row5.Raison_Sociale = null;
									emptyColumnCount_tFileInputExcel_3++;
								}
								columnIndex_tFileInputExcel_3 = 2;

								if (temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
									curColNum_tFileInputExcel_3 = columnIndex_tFileInputExcel_3
											+ start_column_tFileInputExcel_3 + 1;
									curColName_tFileInputExcel_3 = "Groupe_Client";

									row5.Groupe_Client = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3];
								} else {
									row5.Groupe_Client = null;
									emptyColumnCount_tFileInputExcel_3++;
								}
								columnIndex_tFileInputExcel_3 = 3;

								if (temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
									curColNum_tFileInputExcel_3 = columnIndex_tFileInputExcel_3
											+ start_column_tFileInputExcel_3 + 1;
									curColName_tFileInputExcel_3 = "Account_Manager";

									row5.Account_Manager = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3];
								} else {
									row5.Account_Manager = null;
									emptyColumnCount_tFileInputExcel_3++;
								}
								columnIndex_tFileInputExcel_3 = 4;

								if (temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
									curColNum_tFileInputExcel_3 = columnIndex_tFileInputExcel_3
											+ start_column_tFileInputExcel_3 + 1;
									curColName_tFileInputExcel_3 = "Equipe";

									row5.Equipe = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3];
								} else {
									row5.Equipe = null;
									emptyColumnCount_tFileInputExcel_3++;
								}
								columnIndex_tFileInputExcel_3 = 5;

								if (temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
									curColNum_tFileInputExcel_3 = columnIndex_tFileInputExcel_3
											+ start_column_tFileInputExcel_3 + 1;
									curColName_tFileInputExcel_3 = "Somme_de_Resiliation";

									row5.Somme_de_Resiliation = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3], null,
											'.' == decimalChar_tFileInputExcel_3 ? null
													: decimalChar_tFileInputExcel_3));
								} else {
									row5.Somme_de_Resiliation = null;
									emptyColumnCount_tFileInputExcel_3++;
								}
								columnIndex_tFileInputExcel_3 = 6;

								if (temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
									curColNum_tFileInputExcel_3 = columnIndex_tFileInputExcel_3
											+ start_column_tFileInputExcel_3 + 1;
									curColName_tFileInputExcel_3 = "Type_Resiliation";

									row5.Type_Resiliation = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3];
								} else {
									row5.Type_Resiliation = null;
									emptyColumnCount_tFileInputExcel_3++;
								}
								columnIndex_tFileInputExcel_3 = 7;

								if (temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
									curColNum_tFileInputExcel_3 = columnIndex_tFileInputExcel_3
											+ start_column_tFileInputExcel_3 + 1;
									curColName_tFileInputExcel_3 = "Motif";

									row5.Motif = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3];
								} else {
									row5.Motif = null;
									emptyColumnCount_tFileInputExcel_3++;
								}
								columnIndex_tFileInputExcel_3 = 8;

								if (temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
									curColNum_tFileInputExcel_3 = columnIndex_tFileInputExcel_3
											+ start_column_tFileInputExcel_3 + 1;
									curColName_tFileInputExcel_3 = "DFE";

									row5.DFE = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3];
								} else {
									row5.DFE = null;
									emptyColumnCount_tFileInputExcel_3++;
								}
								columnIndex_tFileInputExcel_3 = 9;

								if (temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
									curColNum_tFileInputExcel_3 = columnIndex_tFileInputExcel_3
											+ start_column_tFileInputExcel_3 + 1;
									curColName_tFileInputExcel_3 = "Engage_Oui_Non";

									row5.Engage_Oui_Non = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3];
								} else {
									row5.Engage_Oui_Non = null;
									emptyColumnCount_tFileInputExcel_3++;
								}
								columnIndex_tFileInputExcel_3 = 10;

								if (temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3].length() > 0) {
									curColNum_tFileInputExcel_3 = columnIndex_tFileInputExcel_3
											+ start_column_tFileInputExcel_3 + 1;
									curColName_tFileInputExcel_3 = "Date_Depot";

									row5.Date_Depot = temp_row_tFileInputExcel_3[columnIndex_tFileInputExcel_3];
								} else {
									row5.Date_Depot = null;
									emptyColumnCount_tFileInputExcel_3++;
								}

								nb_line_tFileInputExcel_3++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_3_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_3 = true;
								System.err.println(e.getMessage());
								row5 = null;
							}

							/**
							 * [tFileInputExcel_3 begin ] stop
							 */

							/**
							 * [tFileInputExcel_3 main ] start
							 */

							currentComponent = "tFileInputExcel_3";

							tos_count_tFileInputExcel_3++;

							/**
							 * [tFileInputExcel_3 main ] stop
							 */

							/**
							 * [tFileInputExcel_3 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_3";

							/**
							 * [tFileInputExcel_3 process_data_begin ] stop
							 */
// Start of branch "row5"
							if (row5 != null) {

								/**
								 * [tMap_3 main ] start
								 */

								currentComponent = "tMap_3";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row5"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_3 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_3 = false;
								boolean mainRowRejected_tMap_3 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_3__Struct Var = Var__tMap_3;// ###############################
									// ###############################
									// # Output tables

									t7 = null;

// # Output table : 't7'
									t7_tmp.Account_Manager = StringHandling.CHANGE(
											StringHandling.UPCASE(row5.Account_Manager), "ADELWAHED", "ABDELWAHED");
									t7 = t7_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_3 = false;

								tos_count_tMap_3++;

								/**
								 * [tMap_3 main ] stop
								 */

								/**
								 * [tMap_3 process_data_begin ] start
								 */

								currentComponent = "tMap_3";

								/**
								 * [tMap_3 process_data_begin ] stop
								 */
// Start of branch "t7"
								if (t7 != null) {

									/**
									 * [tUnite_1 main ] start
									 */

									currentComponent = "tUnite_1";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "t7"

										);
									}

//////////

// for output
									row3 = new row3Struct();

									row3.Account_Manager__Client_Prospect = t7.Account_Manager;

									nb_line_tUnite_1++;

//////////

									tos_count_tUnite_1++;

									/**
									 * [tUnite_1 main ] stop
									 */

									/**
									 * [tUnite_1 process_data_begin ] start
									 */

									currentComponent = "tUnite_1";

									/**
									 * [tUnite_1 process_data_begin ] stop
									 */

									/**
									 * [tMap_1 main ] start
									 */

									currentComponent = "tMap_1";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "row3"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_1 = false;
									boolean mainRowRejected_tMap_1 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row8"
									///////////////////////////////////////////////

									boolean forceLooprow8 = false;

									row8Struct row8ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_1) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_1 = false;

										row8HashKey.Account_Manager__Client_Prospect = row3.Account_Manager__Client_Prospect;

										row8HashKey.hashCodeDirty = true;

										tHash_Lookup_row8.lookup(row8HashKey);

										if (!tHash_Lookup_row8.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_1 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row8 != null && tHash_Lookup_row8.getCount(row8HashKey) > 1) { // G
																													// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row8'
										// and it contains more one result from keys :
										// row8.Account_Manager__Client_Prospect = '" +
										// row8HashKey.Account_Manager__Client_Prospect + "'");
									} // G 071

									row8Struct row8 = null;

									row8Struct fromLookup_row8 = null;
									row8 = row8Default;

									if (tHash_Lookup_row8 != null && tHash_Lookup_row8.hasNext()) { // G 099

										fromLookup_row8 = tHash_Lookup_row8.next();

									} // G 099

									if (fromLookup_row8 != null) {
										row8 = fromLookup_row8;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
										// ###############################
										// # Output tables

										j = null;

										if (!rejectedInnerJoin_tMap_1) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'j'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_1) {
											j_tmp.Account_Manager__Client_Prospect = row3.Account_Manager__Client_Prospect;
											j = j_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_1 = false;

									tos_count_tMap_1++;

									/**
									 * [tMap_1 main ] stop
									 */

									/**
									 * [tMap_1 process_data_begin ] start
									 */

									currentComponent = "tMap_1";

									/**
									 * [tMap_1 process_data_begin ] stop
									 */
// Start of branch "j"
									if (j != null) {

										/**
										 * [tUniqRow_2 main ] start
										 */

										currentComponent = "tUniqRow_2";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "j"

											);
										}

										row4 = null;
										finder_tUniqRow_2.Account_Manager__Client_Prospect = j.Account_Manager__Client_Prospect;
										finder_tUniqRow_2.hashCodeDirty = true;
										if (!keystUniqRow_2.contains(finder_tUniqRow_2)) {
											KeyStruct_tUniqRow_2 new_tUniqRow_2 = new KeyStruct_tUniqRow_2();

											new_tUniqRow_2.Account_Manager__Client_Prospect = j.Account_Manager__Client_Prospect;

											keystUniqRow_2.add(new_tUniqRow_2);
											if (row4 == null) {

												row4 = new row4Struct();
											}
											row4.Account_Manager__Client_Prospect = j.Account_Manager__Client_Prospect;
											nb_uniques_tUniqRow_2++;
										} else {
											nb_duplicates_tUniqRow_2++;
										}

										tos_count_tUniqRow_2++;

										/**
										 * [tUniqRow_2 main ] stop
										 */

										/**
										 * [tUniqRow_2 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_2";

										/**
										 * [tUniqRow_2 process_data_begin ] stop
										 */
// Start of branch "row4"
										if (row4 != null) {

											/**
											 * [tDBOutput_1 main ] start
											 */

											currentComponent = "tDBOutput_1";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row4"

												);
											}

											whetherReject_tDBOutput_1 = false;
											if (row4.Account_Manager__Client_Prospect == null) {
												pstmt_tDBOutput_1.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_1.setString(1, row4.Account_Manager__Client_Prospect);
											}

											pstmt_tDBOutput_1.addBatch();
											nb_line_tDBOutput_1++;

											batchSizeCounter_tDBOutput_1++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_1 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_1) throws Exception {
													try {

														for (int countEach_tDBOutput_1 : pstmt_tDBOutput_1
																.executeBatch()) {
															if (countEach_tDBOutput_1 == -2
																	|| countEach_tDBOutput_1 == -3) {
																break;
															}
															counter += countEach_tDBOutput_1;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_1_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_1 = 0;
														for (int countEach_tDBOutput_1 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_1 < 0 ? 0
																	: countEach_tDBOutput_1);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_1) throws Exception {
													try {

														for (int countEach_tDBOutput_1 : pstmt_tDBOutput_1
																.executeBatch()) {
															if (countEach_tDBOutput_1 == -2
																	|| countEach_tDBOutput_1 == -3) {
																break;
															}
															counter += countEach_tDBOutput_1;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_1_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_1 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_1 < 0 ? 0
																	: countEach_tDBOutput_1);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_1 > 0)
													&& (batchSize_tDBOutput_1 <= batchSizeCounter_tDBOutput_1)) {

												insertedCount_tDBOutput_1 = new LimitBytesHelper_tDBOutput_1()
														.limitBytePart1(insertedCount_tDBOutput_1, pstmt_tDBOutput_1);
												rowsToCommitCount_tDBOutput_1 = insertedCount_tDBOutput_1;

												batchSizeCounter_tDBOutput_1 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_1++;
											if (commitEvery_tDBOutput_1 <= commitCounter_tDBOutput_1) {
												if ((batchSize_tDBOutput_1 > 0) && (batchSizeCounter_tDBOutput_1 > 0)) {

													insertedCount_tDBOutput_1 = new LimitBytesHelper_tDBOutput_1()
															.limitBytePart1(insertedCount_tDBOutput_1,
																	pstmt_tDBOutput_1);

													batchSizeCounter_tDBOutput_1 = 0;
												}
												if (rowsToCommitCount_tDBOutput_1 != 0) {

												}
												conn_tDBOutput_1.commit();
												if (rowsToCommitCount_tDBOutput_1 != 0) {

													rowsToCommitCount_tDBOutput_1 = 0;
												}
												commitCounter_tDBOutput_1 = 0;
											}

											tos_count_tDBOutput_1++;

											/**
											 * [tDBOutput_1 main ] stop
											 */

											/**
											 * [tDBOutput_1 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_1";

											/**
											 * [tDBOutput_1 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_1 process_data_end ] start
											 */

											currentComponent = "tDBOutput_1";

											/**
											 * [tDBOutput_1 process_data_end ] stop
											 */

										} // End of branch "row4"

										/**
										 * [tUniqRow_2 process_data_end ] start
										 */

										currentComponent = "tUniqRow_2";

										/**
										 * [tUniqRow_2 process_data_end ] stop
										 */

									} // End of branch "j"

									/**
									 * [tMap_1 process_data_end ] start
									 */

									currentComponent = "tMap_1";

									/**
									 * [tMap_1 process_data_end ] stop
									 */

									/**
									 * [tUnite_1 process_data_end ] start
									 */

									currentComponent = "tUnite_1";

									/**
									 * [tUnite_1 process_data_end ] stop
									 */

								} // End of branch "t7"

								/**
								 * [tMap_3 process_data_end ] start
								 */

								currentComponent = "tMap_3";

								/**
								 * [tMap_3 process_data_end ] stop
								 */

							} // End of branch "row5"

							/**
							 * [tFileInputExcel_3 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_3";

							/**
							 * [tFileInputExcel_3 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_3 end ] start
							 */

							currentComponent = "tFileInputExcel_3";

						}

						globalMap.put("tFileInputExcel_3_NB_LINE", nb_line_tFileInputExcel_3);

					}

				} finally {

					if (!(source_tFileInputExcel_3 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_3.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_3", true);
				end_Hash.put("tFileInputExcel_3", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_3 end ] stop
				 */

				/**
				 * [tMap_3 end ] start
				 */

				currentComponent = "tMap_3";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row5");
				}

				ok_Hash.put("tMap_3", true);
				end_Hash.put("tMap_3", System.currentTimeMillis());

				/**
				 * [tMap_3 end ] stop
				 */

				/**
				 * [tMap_6 begin ] start
				 */

				ok_Hash.put("tMap_6", false);
				start_Hash.put("tMap_6", System.currentTimeMillis());

				currentComponent = "tMap_6";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row7");
				}

				int tos_count_tMap_6 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_6__Struct {
				}
				Var__tMap_6__Struct Var__tMap_6 = new Var__tMap_6__Struct();
// ###############################

// ###############################
// # Outputs initialization
				t9Struct t9_tmp = new t9Struct();
// ###############################

				/**
				 * [tMap_6 begin ] stop
				 */

				/**
				 * [tFileInputExcel_5 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_5", false);
				start_Hash.put("tFileInputExcel_5", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_5";

				int tos_count_tFileInputExcel_5 = 0;

				final String decryptedPassword_tFileInputExcel_5 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:OnFAXW9YM+CvTCpU6THuWJBprcbI+kz4+cD7bQ==");
				String password_tFileInputExcel_5 = decryptedPassword_tFileInputExcel_5;
				if (password_tFileInputExcel_5.isEmpty()) {
					password_tFileInputExcel_5 = null;
				}
				class RegexUtil_tFileInputExcel_5 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_5 regexUtil_tFileInputExcel_5 = new RegexUtil_tFileInputExcel_5();

				Object source_tFileInputExcel_5 = "C:/Users/DELL/Downloads/suivi rdv slide test (Enregistré automatiquement) VF (1).xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_5 = null;

				if (source_tFileInputExcel_5 instanceof String) {
					workbook_tFileInputExcel_5 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_5), password_tFileInputExcel_5,
									true);
				} else if (source_tFileInputExcel_5 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_5 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_5, password_tFileInputExcel_5);
				} else {
					workbook_tFileInputExcel_5 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_5 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_5.addAll(regexUtil_tFileInputExcel_5.getSheets(workbook_tFileInputExcel_5,
							"{40AAA5D9-FC5C-EC11-80E1-005056", false));
					if (sheetList_tFileInputExcel_5.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_5 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_5 : sheetList_tFileInputExcel_5) {
						if (sheet_FilterNull_tFileInputExcel_5 != null
								&& sheetList_FilterNull_tFileInputExcel_5.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_5.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_5.add(sheet_FilterNull_tFileInputExcel_5);
						}
					}
					sheetList_tFileInputExcel_5 = sheetList_FilterNull_tFileInputExcel_5;
					if (sheetList_tFileInputExcel_5.size() > 0) {
						int nb_line_tFileInputExcel_5 = 0;

						int begin_line_tFileInputExcel_5 = 1;

						int footer_input_tFileInputExcel_5 = 0;

						int end_line_tFileInputExcel_5 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_5 : sheetList_tFileInputExcel_5) {
							end_line_tFileInputExcel_5 += (sheet_tFileInputExcel_5.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_5 -= footer_input_tFileInputExcel_5;
						int limit_tFileInputExcel_5 = -1;
						int start_column_tFileInputExcel_5 = 1 - 1;
						int end_column_tFileInputExcel_5 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_5 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_5 = sheetList_tFileInputExcel_5
								.get(0);
						int rowCount_tFileInputExcel_5 = 0;
						int sheetIndex_tFileInputExcel_5 = 0;
						int currentRows_tFileInputExcel_5 = (sheetList_tFileInputExcel_5.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_5 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_5 = df_tFileInputExcel_5.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_5 = begin_line_tFileInputExcel_5; i_tFileInputExcel_5 < end_line_tFileInputExcel_5; i_tFileInputExcel_5++) {

							int emptyColumnCount_tFileInputExcel_5 = 0;

							if (limit_tFileInputExcel_5 != -1 && nb_line_tFileInputExcel_5 >= limit_tFileInputExcel_5) {
								break;
							}

							while (i_tFileInputExcel_5 >= rowCount_tFileInputExcel_5 + currentRows_tFileInputExcel_5) {
								rowCount_tFileInputExcel_5 += currentRows_tFileInputExcel_5;
								sheet_tFileInputExcel_5 = sheetList_tFileInputExcel_5
										.get(++sheetIndex_tFileInputExcel_5);
								currentRows_tFileInputExcel_5 = (sheet_tFileInputExcel_5.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_5_CURRENT_SHEET", sheet_tFileInputExcel_5.getSheetName());
							if (rowCount_tFileInputExcel_5 <= i_tFileInputExcel_5) {
								row_tFileInputExcel_5 = sheet_tFileInputExcel_5
										.getRow(i_tFileInputExcel_5 - rowCount_tFileInputExcel_5);
							}
							row7 = null;
							int tempRowLength_tFileInputExcel_5 = 15;

							int columnIndex_tFileInputExcel_5 = 0;

							String[] temp_row_tFileInputExcel_5 = new String[tempRowLength_tFileInputExcel_5];
							int excel_end_column_tFileInputExcel_5;
							if (row_tFileInputExcel_5 == null) {
								excel_end_column_tFileInputExcel_5 = 0;
							} else {
								excel_end_column_tFileInputExcel_5 = row_tFileInputExcel_5.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_5;
							if (end_column_tFileInputExcel_5 == -1) {
								actual_end_column_tFileInputExcel_5 = excel_end_column_tFileInputExcel_5;
							} else {
								actual_end_column_tFileInputExcel_5 = end_column_tFileInputExcel_5 > excel_end_column_tFileInputExcel_5
										? excel_end_column_tFileInputExcel_5
										: end_column_tFileInputExcel_5;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_5 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_5; i++) {
								if (i + start_column_tFileInputExcel_5 < actual_end_column_tFileInputExcel_5) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_5 = row_tFileInputExcel_5
											.getCell(i + start_column_tFileInputExcel_5);
									if (cell_tFileInputExcel_5 != null) {
										switch (cell_tFileInputExcel_5.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_5[i] = cell_tFileInputExcel_5
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_5)) {
												temp_row_tFileInputExcel_5[i] = cell_tFileInputExcel_5
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_5[i] = df_tFileInputExcel_5
														.format(cell_tFileInputExcel_5.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_5[i] = String
													.valueOf(cell_tFileInputExcel_5.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_5.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_5[i] = cell_tFileInputExcel_5
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_5)) {
													temp_row_tFileInputExcel_5[i] = cell_tFileInputExcel_5
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_5 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_5.getNumericCellValue());
													temp_row_tFileInputExcel_5[i] = ne_tFileInputExcel_5
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_5[i] = String
														.valueOf(cell_tFileInputExcel_5.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_5[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_5[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_5[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_5[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_5 = false;
							row7 = new row7Struct();
							int curColNum_tFileInputExcel_5 = -1;
							String curColName_tFileInputExcel_5 = "";
							try {
								columnIndex_tFileInputExcel_5 = 0;

								if (temp_row_tFileInputExcel_5[columnIndex_tFileInputExcel_5].length() > 0) {
									curColNum_tFileInputExcel_5 = columnIndex_tFileInputExcel_5
											+ start_column_tFileInputExcel_5 + 1;
									curColName_tFileInputExcel_5 = "Sujet";

									row7.Sujet = temp_row_tFileInputExcel_5[columnIndex_tFileInputExcel_5];
								} else {
									row7.Sujet = null;
									emptyColumnCount_tFileInputExcel_5++;
								}
								columnIndex_tFileInputExcel_5 = 1;

								if (temp_row_tFileInputExcel_5[columnIndex_tFileInputExcel_5].length() > 0) {
									curColNum_tFileInputExcel_5 = columnIndex_tFileInputExcel_5
											+ start_column_tFileInputExcel_5 + 1;
									curColName_tFileInputExcel_5 = "Cree_le";

									if (1 < actual_end_column_tFileInputExcel_5) {
										try {
											if (row_tFileInputExcel_5
													.getCell(columnIndex_tFileInputExcel_5
															+ start_column_tFileInputExcel_5)
													.getCellType() == org.apache.poi.ss.usermodel.CellType.NUMERIC
													&& org.apache.poi.ss.usermodel.DateUtil.isCellDateFormatted(
															row_tFileInputExcel_5.getCell(columnIndex_tFileInputExcel_5
																	+ start_column_tFileInputExcel_5))) {
												row7.Cree_le = row_tFileInputExcel_5.getCell(
														columnIndex_tFileInputExcel_5 + start_column_tFileInputExcel_5)
														.getDateCellValue();
											} else {
												java.util.Date tempDate_tFileInputExcel_5 = ParserUtils.parseTo_Date(
														temp_row_tFileInputExcel_5[columnIndex_tFileInputExcel_5],
														"dd-MM-yyyy");
												if (tempDate_tFileInputExcel_5
														.after((new SimpleDateFormat("yyyy/MM/dd hh:mm:ss.SSS"))
																.parse("9999/12/31 23:59:59.999"))
														|| tempDate_tFileInputExcel_5
																.before((new SimpleDateFormat("yyyy/MM/dd"))
																		.parse("1900/01/01"))) {
													throw new RuntimeException("The cell format is not Date in ( Row. "
															+ (nb_line_tFileInputExcel_5 + 1) + " and ColumnNum. "
															+ curColNum_tFileInputExcel_5 + " )");
												} else {
													row7.Cree_le = tempDate_tFileInputExcel_5;
												}
											}
										} catch (java.lang.Exception e) {
											globalMap.put("tFileInputExcel_5_ERROR_MESSAGE", e.getMessage());

											throw new RuntimeException("The cell format is not Date in ( Row. "
													+ (nb_line_tFileInputExcel_5 + 1) + " and ColumnNum. "
													+ curColNum_tFileInputExcel_5 + " )");
										}
									}

								} else {
									row7.Cree_le = null;
									emptyColumnCount_tFileInputExcel_5++;
								}
								columnIndex_tFileInputExcel_5 = 2;

								if (temp_row_tFileInputExcel_5[columnIndex_tFileInputExcel_5].length() > 0) {
									curColNum_tFileInputExcel_5 = columnIndex_tFileInputExcel_5
											+ start_column_tFileInputExcel_5 + 1;
									curColName_tFileInputExcel_5 = "Concernant";

									row7.Concernant = temp_row_tFileInputExcel_5[columnIndex_tFileInputExcel_5];
								} else {
									row7.Concernant = null;
									emptyColumnCount_tFileInputExcel_5++;
								}
								columnIndex_tFileInputExcel_5 = 3;

								if (temp_row_tFileInputExcel_5[columnIndex_tFileInputExcel_5].length() > 0) {
									curColNum_tFileInputExcel_5 = columnIndex_tFileInputExcel_5
											+ start_column_tFileInputExcel_5 + 1;
									curColName_tFileInputExcel_5 = "Cree_par";

									row7.Cree_par = temp_row_tFileInputExcel_5[columnIndex_tFileInputExcel_5];
								} else {
									row7.Cree_par = null;
									emptyColumnCount_tFileInputExcel_5++;
								}
								columnIndex_tFileInputExcel_5 = 4;

								if (temp_row_tFileInputExcel_5[columnIndex_tFileInputExcel_5].length() > 0) {
									curColNum_tFileInputExcel_5 = columnIndex_tFileInputExcel_5
											+ start_column_tFileInputExcel_5 + 1;
									curColName_tFileInputExcel_5 = "Equipe";

									row7.Equipe = temp_row_tFileInputExcel_5[columnIndex_tFileInputExcel_5];
								} else {
									row7.Equipe = null;
									emptyColumnCount_tFileInputExcel_5++;
								}
								columnIndex_tFileInputExcel_5 = 5;

								if (temp_row_tFileInputExcel_5[columnIndex_tFileInputExcel_5].length() > 0) {
									curColNum_tFileInputExcel_5 = columnIndex_tFileInputExcel_5
											+ start_column_tFileInputExcel_5 + 1;
									curColName_tFileInputExcel_5 = "Emplacement";

									row7.Emplacement = temp_row_tFileInputExcel_5[columnIndex_tFileInputExcel_5];
								} else {
									row7.Emplacement = null;
									emptyColumnCount_tFileInputExcel_5++;
								}
								columnIndex_tFileInputExcel_5 = 6;

								if (temp_row_tFileInputExcel_5[columnIndex_tFileInputExcel_5].length() > 0) {
									curColNum_tFileInputExcel_5 = columnIndex_tFileInputExcel_5
											+ start_column_tFileInputExcel_5 + 1;
									curColName_tFileInputExcel_5 = "Heure_de_debut";

									if (6 < actual_end_column_tFileInputExcel_5) {
										try {
											if (row_tFileInputExcel_5
													.getCell(columnIndex_tFileInputExcel_5
															+ start_column_tFileInputExcel_5)
													.getCellType() == org.apache.poi.ss.usermodel.CellType.NUMERIC
													&& org.apache.poi.ss.usermodel.DateUtil.isCellDateFormatted(
															row_tFileInputExcel_5.getCell(columnIndex_tFileInputExcel_5
																	+ start_column_tFileInputExcel_5))) {
												row7.Heure_de_debut = row_tFileInputExcel_5.getCell(
														columnIndex_tFileInputExcel_5 + start_column_tFileInputExcel_5)
														.getDateCellValue();
											} else {
												java.util.Date tempDate_tFileInputExcel_5 = ParserUtils.parseTo_Date(
														temp_row_tFileInputExcel_5[columnIndex_tFileInputExcel_5],
														"dd-MM-yyyy");
												if (tempDate_tFileInputExcel_5
														.after((new SimpleDateFormat("yyyy/MM/dd hh:mm:ss.SSS"))
																.parse("9999/12/31 23:59:59.999"))
														|| tempDate_tFileInputExcel_5
																.before((new SimpleDateFormat("yyyy/MM/dd"))
																		.parse("1900/01/01"))) {
													throw new RuntimeException("The cell format is not Date in ( Row. "
															+ (nb_line_tFileInputExcel_5 + 1) + " and ColumnNum. "
															+ curColNum_tFileInputExcel_5 + " )");
												} else {
													row7.Heure_de_debut = tempDate_tFileInputExcel_5;
												}
											}
										} catch (java.lang.Exception e) {
											globalMap.put("tFileInputExcel_5_ERROR_MESSAGE", e.getMessage());

											throw new RuntimeException("The cell format is not Date in ( Row. "
													+ (nb_line_tFileInputExcel_5 + 1) + " and ColumnNum. "
													+ curColNum_tFileInputExcel_5 + " )");
										}
									}

								} else {
									row7.Heure_de_debut = null;
									emptyColumnCount_tFileInputExcel_5++;
								}
								columnIndex_tFileInputExcel_5 = 7;

								if (temp_row_tFileInputExcel_5[columnIndex_tFileInputExcel_5].length() > 0) {
									curColNum_tFileInputExcel_5 = columnIndex_tFileInputExcel_5
											+ start_column_tFileInputExcel_5 + 1;
									curColName_tFileInputExcel_5 = "Heure_de_fin";

									row7.Heure_de_fin = temp_row_tFileInputExcel_5[columnIndex_tFileInputExcel_5];
								} else {
									row7.Heure_de_fin = null;
									emptyColumnCount_tFileInputExcel_5++;
								}
								columnIndex_tFileInputExcel_5 = 8;

								if (temp_row_tFileInputExcel_5[columnIndex_tFileInputExcel_5].length() > 0) {
									curColNum_tFileInputExcel_5 = columnIndex_tFileInputExcel_5
											+ start_column_tFileInputExcel_5 + 1;
									curColName_tFileInputExcel_5 = "Statut";

									row7.Statut = temp_row_tFileInputExcel_5[columnIndex_tFileInputExcel_5];
								} else {
									row7.Statut = null;
									emptyColumnCount_tFileInputExcel_5++;
								}
								columnIndex_tFileInputExcel_5 = 9;

								if (temp_row_tFileInputExcel_5[columnIndex_tFileInputExcel_5].length() > 0) {
									curColNum_tFileInputExcel_5 = columnIndex_tFileInputExcel_5
											+ start_column_tFileInputExcel_5 + 1;
									curColName_tFileInputExcel_5 = "Raison_sociale__Concernant";

									row7.Raison_sociale__Concernant = temp_row_tFileInputExcel_5[columnIndex_tFileInputExcel_5];
								} else {
									row7.Raison_sociale__Concernant = null;
									emptyColumnCount_tFileInputExcel_5++;
								}
								columnIndex_tFileInputExcel_5 = 10;

								if (temp_row_tFileInputExcel_5[columnIndex_tFileInputExcel_5].length() > 0) {
									curColNum_tFileInputExcel_5 = columnIndex_tFileInputExcel_5
											+ start_column_tFileInputExcel_5 + 1;
									curColName_tFileInputExcel_5 = "Delegation__Concernant";

									row7.Delegation__Concernant = temp_row_tFileInputExcel_5[columnIndex_tFileInputExcel_5];
								} else {
									row7.Delegation__Concernant = null;
									emptyColumnCount_tFileInputExcel_5++;
								}
								columnIndex_tFileInputExcel_5 = 11;

								if (temp_row_tFileInputExcel_5[columnIndex_tFileInputExcel_5].length() > 0) {
									curColNum_tFileInputExcel_5 = columnIndex_tFileInputExcel_5
											+ start_column_tFileInputExcel_5 + 1;
									curColName_tFileInputExcel_5 = "Gouvernorat__Concernant";

									row7.Gouvernorat__Concernant = temp_row_tFileInputExcel_5[columnIndex_tFileInputExcel_5];
								} else {
									row7.Gouvernorat__Concernant = null;
									emptyColumnCount_tFileInputExcel_5++;
								}
								columnIndex_tFileInputExcel_5 = 12;

								if (temp_row_tFileInputExcel_5[columnIndex_tFileInputExcel_5].length() > 0) {
									curColNum_tFileInputExcel_5 = columnIndex_tFileInputExcel_5
											+ start_column_tFileInputExcel_5 + 1;
									curColName_tFileInputExcel_5 = "Jour_de_la_semaine";

									row7.Jour_de_la_semaine = temp_row_tFileInputExcel_5[columnIndex_tFileInputExcel_5];
								} else {
									row7.Jour_de_la_semaine = null;
									emptyColumnCount_tFileInputExcel_5++;
								}
								columnIndex_tFileInputExcel_5 = 13;

								if (temp_row_tFileInputExcel_5[columnIndex_tFileInputExcel_5].length() > 0) {
									curColNum_tFileInputExcel_5 = columnIndex_tFileInputExcel_5
											+ start_column_tFileInputExcel_5 + 1;
									curColName_tFileInputExcel_5 = "Description";

									row7.Description = temp_row_tFileInputExcel_5[columnIndex_tFileInputExcel_5];
								} else {
									row7.Description = null;
									emptyColumnCount_tFileInputExcel_5++;
								}
								columnIndex_tFileInputExcel_5 = 14;

								if (temp_row_tFileInputExcel_5[columnIndex_tFileInputExcel_5].length() > 0) {
									curColNum_tFileInputExcel_5 = columnIndex_tFileInputExcel_5
											+ start_column_tFileInputExcel_5 + 1;
									curColName_tFileInputExcel_5 = "Categorie";

									row7.Categorie = temp_row_tFileInputExcel_5[columnIndex_tFileInputExcel_5];
								} else {
									row7.Categorie = null;
									emptyColumnCount_tFileInputExcel_5++;
								}

								nb_line_tFileInputExcel_5++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_5_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_5 = true;
								System.err.println(e.getMessage());
								row7 = null;
							}

							/**
							 * [tFileInputExcel_5 begin ] stop
							 */

							/**
							 * [tFileInputExcel_5 main ] start
							 */

							currentComponent = "tFileInputExcel_5";

							tos_count_tFileInputExcel_5++;

							/**
							 * [tFileInputExcel_5 main ] stop
							 */

							/**
							 * [tFileInputExcel_5 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_5";

							/**
							 * [tFileInputExcel_5 process_data_begin ] stop
							 */
// Start of branch "row7"
							if (row7 != null) {

								/**
								 * [tMap_6 main ] start
								 */

								currentComponent = "tMap_6";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row7"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_6 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_6 = false;
								boolean mainRowRejected_tMap_6 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_6__Struct Var = Var__tMap_6;// ###############################
									// ###############################
									// # Output tables

									t9 = null;

// # Output table : 't9'
									t9_tmp.Cree_par = StringHandling.CHANGE(StringHandling.UPCASE(row7.Cree_par),
											"ADELWAHED", "ABDELWAHED");
									t9 = t9_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_6 = false;

								tos_count_tMap_6++;

								/**
								 * [tMap_6 main ] stop
								 */

								/**
								 * [tMap_6 process_data_begin ] start
								 */

								currentComponent = "tMap_6";

								/**
								 * [tMap_6 process_data_begin ] stop
								 */
// Start of branch "t9"
								if (t9 != null) {

									/**
									 * [tUnite_1 main ] start
									 */

									currentComponent = "tUnite_1";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "t9"

										);
									}

//////////

// for output
									row3 = new row3Struct();

									row3.Account_Manager__Client_Prospect = t9.Cree_par;

									nb_line_tUnite_1++;

//////////

									tos_count_tUnite_1++;

									/**
									 * [tUnite_1 main ] stop
									 */

									/**
									 * [tUnite_1 process_data_begin ] start
									 */

									currentComponent = "tUnite_1";

									/**
									 * [tUnite_1 process_data_begin ] stop
									 */

									/**
									 * [tMap_1 main ] start
									 */

									currentComponent = "tMap_1";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "row3"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_1 = false;
									boolean mainRowRejected_tMap_1 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row8"
									///////////////////////////////////////////////

									boolean forceLooprow8 = false;

									row8Struct row8ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_1) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_1 = false;

										row8HashKey.Account_Manager__Client_Prospect = row3.Account_Manager__Client_Prospect;

										row8HashKey.hashCodeDirty = true;

										tHash_Lookup_row8.lookup(row8HashKey);

										if (!tHash_Lookup_row8.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_1 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row8 != null && tHash_Lookup_row8.getCount(row8HashKey) > 1) { // G
																													// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row8'
										// and it contains more one result from keys :
										// row8.Account_Manager__Client_Prospect = '" +
										// row8HashKey.Account_Manager__Client_Prospect + "'");
									} // G 071

									row8Struct row8 = null;

									row8Struct fromLookup_row8 = null;
									row8 = row8Default;

									if (tHash_Lookup_row8 != null && tHash_Lookup_row8.hasNext()) { // G 099

										fromLookup_row8 = tHash_Lookup_row8.next();

									} // G 099

									if (fromLookup_row8 != null) {
										row8 = fromLookup_row8;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
										// ###############################
										// # Output tables

										j = null;

										if (!rejectedInnerJoin_tMap_1) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'j'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_1) {
											j_tmp.Account_Manager__Client_Prospect = row3.Account_Manager__Client_Prospect;
											j = j_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_1 = false;

									tos_count_tMap_1++;

									/**
									 * [tMap_1 main ] stop
									 */

									/**
									 * [tMap_1 process_data_begin ] start
									 */

									currentComponent = "tMap_1";

									/**
									 * [tMap_1 process_data_begin ] stop
									 */
// Start of branch "j"
									if (j != null) {

										/**
										 * [tUniqRow_2 main ] start
										 */

										currentComponent = "tUniqRow_2";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "j"

											);
										}

										row4 = null;
										finder_tUniqRow_2.Account_Manager__Client_Prospect = j.Account_Manager__Client_Prospect;
										finder_tUniqRow_2.hashCodeDirty = true;
										if (!keystUniqRow_2.contains(finder_tUniqRow_2)) {
											KeyStruct_tUniqRow_2 new_tUniqRow_2 = new KeyStruct_tUniqRow_2();

											new_tUniqRow_2.Account_Manager__Client_Prospect = j.Account_Manager__Client_Prospect;

											keystUniqRow_2.add(new_tUniqRow_2);
											if (row4 == null) {

												row4 = new row4Struct();
											}
											row4.Account_Manager__Client_Prospect = j.Account_Manager__Client_Prospect;
											nb_uniques_tUniqRow_2++;
										} else {
											nb_duplicates_tUniqRow_2++;
										}

										tos_count_tUniqRow_2++;

										/**
										 * [tUniqRow_2 main ] stop
										 */

										/**
										 * [tUniqRow_2 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_2";

										/**
										 * [tUniqRow_2 process_data_begin ] stop
										 */
// Start of branch "row4"
										if (row4 != null) {

											/**
											 * [tDBOutput_1 main ] start
											 */

											currentComponent = "tDBOutput_1";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row4"

												);
											}

											whetherReject_tDBOutput_1 = false;
											if (row4.Account_Manager__Client_Prospect == null) {
												pstmt_tDBOutput_1.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_1.setString(1, row4.Account_Manager__Client_Prospect);
											}

											pstmt_tDBOutput_1.addBatch();
											nb_line_tDBOutput_1++;

											batchSizeCounter_tDBOutput_1++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_1 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_1) throws Exception {
													try {

														for (int countEach_tDBOutput_1 : pstmt_tDBOutput_1
																.executeBatch()) {
															if (countEach_tDBOutput_1 == -2
																	|| countEach_tDBOutput_1 == -3) {
																break;
															}
															counter += countEach_tDBOutput_1;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_1_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_1 = 0;
														for (int countEach_tDBOutput_1 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_1 < 0 ? 0
																	: countEach_tDBOutput_1);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_1) throws Exception {
													try {

														for (int countEach_tDBOutput_1 : pstmt_tDBOutput_1
																.executeBatch()) {
															if (countEach_tDBOutput_1 == -2
																	|| countEach_tDBOutput_1 == -3) {
																break;
															}
															counter += countEach_tDBOutput_1;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_1_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_1 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_1 < 0 ? 0
																	: countEach_tDBOutput_1);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_1 > 0)
													&& (batchSize_tDBOutput_1 <= batchSizeCounter_tDBOutput_1)) {

												insertedCount_tDBOutput_1 = new LimitBytesHelper_tDBOutput_1()
														.limitBytePart1(insertedCount_tDBOutput_1, pstmt_tDBOutput_1);
												rowsToCommitCount_tDBOutput_1 = insertedCount_tDBOutput_1;

												batchSizeCounter_tDBOutput_1 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_1++;
											if (commitEvery_tDBOutput_1 <= commitCounter_tDBOutput_1) {
												if ((batchSize_tDBOutput_1 > 0) && (batchSizeCounter_tDBOutput_1 > 0)) {

													insertedCount_tDBOutput_1 = new LimitBytesHelper_tDBOutput_1()
															.limitBytePart1(insertedCount_tDBOutput_1,
																	pstmt_tDBOutput_1);

													batchSizeCounter_tDBOutput_1 = 0;
												}
												if (rowsToCommitCount_tDBOutput_1 != 0) {

												}
												conn_tDBOutput_1.commit();
												if (rowsToCommitCount_tDBOutput_1 != 0) {

													rowsToCommitCount_tDBOutput_1 = 0;
												}
												commitCounter_tDBOutput_1 = 0;
											}

											tos_count_tDBOutput_1++;

											/**
											 * [tDBOutput_1 main ] stop
											 */

											/**
											 * [tDBOutput_1 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_1";

											/**
											 * [tDBOutput_1 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_1 process_data_end ] start
											 */

											currentComponent = "tDBOutput_1";

											/**
											 * [tDBOutput_1 process_data_end ] stop
											 */

										} // End of branch "row4"

										/**
										 * [tUniqRow_2 process_data_end ] start
										 */

										currentComponent = "tUniqRow_2";

										/**
										 * [tUniqRow_2 process_data_end ] stop
										 */

									} // End of branch "j"

									/**
									 * [tMap_1 process_data_end ] start
									 */

									currentComponent = "tMap_1";

									/**
									 * [tMap_1 process_data_end ] stop
									 */

									/**
									 * [tUnite_1 process_data_end ] start
									 */

									currentComponent = "tUnite_1";

									/**
									 * [tUnite_1 process_data_end ] stop
									 */

								} // End of branch "t9"

								/**
								 * [tMap_6 process_data_end ] start
								 */

								currentComponent = "tMap_6";

								/**
								 * [tMap_6 process_data_end ] stop
								 */

							} // End of branch "row7"

							/**
							 * [tFileInputExcel_5 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_5";

							/**
							 * [tFileInputExcel_5 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_5 end ] start
							 */

							currentComponent = "tFileInputExcel_5";

						}

						globalMap.put("tFileInputExcel_5_NB_LINE", nb_line_tFileInputExcel_5);

					}

				} finally {

					if (!(source_tFileInputExcel_5 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_5.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_5", true);
				end_Hash.put("tFileInputExcel_5", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_5 end ] stop
				 */

				/**
				 * [tMap_6 end ] start
				 */

				currentComponent = "tMap_6";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row7");
				}

				ok_Hash.put("tMap_6", true);
				end_Hash.put("tMap_6", System.currentTimeMillis());

				/**
				 * [tMap_6 end ] stop
				 */

				/**
				 * [tMap_5 begin ] start
				 */

				ok_Hash.put("tMap_5", false);
				start_Hash.put("tMap_5", System.currentTimeMillis());

				currentComponent = "tMap_5";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row6");
				}

				int tos_count_tMap_5 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_5__Struct {
				}
				Var__tMap_5__Struct Var__tMap_5 = new Var__tMap_5__Struct();
// ###############################

// ###############################
// # Outputs initialization
				t8Struct t8_tmp = new t8Struct();
// ###############################

				/**
				 * [tMap_5 begin ] stop
				 */

				/**
				 * [tFileInputExcel_4 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_4", false);
				start_Hash.put("tFileInputExcel_4", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_4";

				int tos_count_tFileInputExcel_4 = 0;

				final String decryptedPassword_tFileInputExcel_4 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:BG4R6XqVvfZ2bUIFISzcX7lCom/RVk1s3iexxg==");
				String password_tFileInputExcel_4 = decryptedPassword_tFileInputExcel_4;
				if (password_tFileInputExcel_4.isEmpty()) {
					password_tFileInputExcel_4 = null;
				}
				class RegexUtil_tFileInputExcel_4 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_4 regexUtil_tFileInputExcel_4 = new RegexUtil_tFileInputExcel_4();

				Object source_tFileInputExcel_4 = "C:/Users/DELL/Downloads/parc facturé Mars 2022 (1).xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_4 = null;

				if (source_tFileInputExcel_4 instanceof String) {
					workbook_tFileInputExcel_4 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_4), password_tFileInputExcel_4,
									true);
				} else if (source_tFileInputExcel_4 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_4 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_4, password_tFileInputExcel_4);
				} else {
					workbook_tFileInputExcel_4 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_4 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_4.addAll(
							regexUtil_tFileInputExcel_4.getSheets(workbook_tFileInputExcel_4, "Suspension", false));
					if (sheetList_tFileInputExcel_4.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_4 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_4 : sheetList_tFileInputExcel_4) {
						if (sheet_FilterNull_tFileInputExcel_4 != null
								&& sheetList_FilterNull_tFileInputExcel_4.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_4.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_4.add(sheet_FilterNull_tFileInputExcel_4);
						}
					}
					sheetList_tFileInputExcel_4 = sheetList_FilterNull_tFileInputExcel_4;
					if (sheetList_tFileInputExcel_4.size() > 0) {
						int nb_line_tFileInputExcel_4 = 0;

						int begin_line_tFileInputExcel_4 = 1;

						int footer_input_tFileInputExcel_4 = 0;

						int end_line_tFileInputExcel_4 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_4 : sheetList_tFileInputExcel_4) {
							end_line_tFileInputExcel_4 += (sheet_tFileInputExcel_4.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_4 -= footer_input_tFileInputExcel_4;
						int limit_tFileInputExcel_4 = -1;
						int start_column_tFileInputExcel_4 = 1 - 1;
						int end_column_tFileInputExcel_4 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_4 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_4 = sheetList_tFileInputExcel_4
								.get(0);
						int rowCount_tFileInputExcel_4 = 0;
						int sheetIndex_tFileInputExcel_4 = 0;
						int currentRows_tFileInputExcel_4 = (sheetList_tFileInputExcel_4.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_4 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_4 = df_tFileInputExcel_4.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_4 = begin_line_tFileInputExcel_4; i_tFileInputExcel_4 < end_line_tFileInputExcel_4; i_tFileInputExcel_4++) {

							int emptyColumnCount_tFileInputExcel_4 = 0;

							if (limit_tFileInputExcel_4 != -1 && nb_line_tFileInputExcel_4 >= limit_tFileInputExcel_4) {
								break;
							}

							while (i_tFileInputExcel_4 >= rowCount_tFileInputExcel_4 + currentRows_tFileInputExcel_4) {
								rowCount_tFileInputExcel_4 += currentRows_tFileInputExcel_4;
								sheet_tFileInputExcel_4 = sheetList_tFileInputExcel_4
										.get(++sheetIndex_tFileInputExcel_4);
								currentRows_tFileInputExcel_4 = (sheet_tFileInputExcel_4.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_4_CURRENT_SHEET", sheet_tFileInputExcel_4.getSheetName());
							if (rowCount_tFileInputExcel_4 <= i_tFileInputExcel_4) {
								row_tFileInputExcel_4 = sheet_tFileInputExcel_4
										.getRow(i_tFileInputExcel_4 - rowCount_tFileInputExcel_4);
							}
							row6 = null;
							int tempRowLength_tFileInputExcel_4 = 11;

							int columnIndex_tFileInputExcel_4 = 0;

							String[] temp_row_tFileInputExcel_4 = new String[tempRowLength_tFileInputExcel_4];
							int excel_end_column_tFileInputExcel_4;
							if (row_tFileInputExcel_4 == null) {
								excel_end_column_tFileInputExcel_4 = 0;
							} else {
								excel_end_column_tFileInputExcel_4 = row_tFileInputExcel_4.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_4;
							if (end_column_tFileInputExcel_4 == -1) {
								actual_end_column_tFileInputExcel_4 = excel_end_column_tFileInputExcel_4;
							} else {
								actual_end_column_tFileInputExcel_4 = end_column_tFileInputExcel_4 > excel_end_column_tFileInputExcel_4
										? excel_end_column_tFileInputExcel_4
										: end_column_tFileInputExcel_4;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_4 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_4; i++) {
								if (i + start_column_tFileInputExcel_4 < actual_end_column_tFileInputExcel_4) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_4 = row_tFileInputExcel_4
											.getCell(i + start_column_tFileInputExcel_4);
									if (cell_tFileInputExcel_4 != null) {
										switch (cell_tFileInputExcel_4.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_4[i] = cell_tFileInputExcel_4
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_4)) {
												temp_row_tFileInputExcel_4[i] = cell_tFileInputExcel_4
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_4[i] = df_tFileInputExcel_4
														.format(cell_tFileInputExcel_4.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_4[i] = String
													.valueOf(cell_tFileInputExcel_4.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_4.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_4[i] = cell_tFileInputExcel_4
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_4)) {
													temp_row_tFileInputExcel_4[i] = cell_tFileInputExcel_4
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_4 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_4.getNumericCellValue());
													temp_row_tFileInputExcel_4[i] = ne_tFileInputExcel_4
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_4[i] = String
														.valueOf(cell_tFileInputExcel_4.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_4[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_4[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_4[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_4[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_4 = false;
							row6 = new row6Struct();
							int curColNum_tFileInputExcel_4 = -1;
							String curColName_tFileInputExcel_4 = "";
							try {
								columnIndex_tFileInputExcel_4 = 0;

								if (temp_row_tFileInputExcel_4[columnIndex_tFileInputExcel_4].length() > 0) {
									curColNum_tFileInputExcel_4 = columnIndex_tFileInputExcel_4
											+ start_column_tFileInputExcel_4 + 1;
									curColName_tFileInputExcel_4 = "Custcode";

									row6.Custcode = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_4[columnIndex_tFileInputExcel_4], null,
											'.' == decimalChar_tFileInputExcel_4 ? null
													: decimalChar_tFileInputExcel_4));
								} else {
									row6.Custcode = null;
									emptyColumnCount_tFileInputExcel_4++;
								}
								columnIndex_tFileInputExcel_4 = 1;

								if (temp_row_tFileInputExcel_4[columnIndex_tFileInputExcel_4].length() > 0) {
									curColNum_tFileInputExcel_4 = columnIndex_tFileInputExcel_4
											+ start_column_tFileInputExcel_4 + 1;
									curColName_tFileInputExcel_4 = "Raison_Sociale";

									row6.Raison_Sociale = temp_row_tFileInputExcel_4[columnIndex_tFileInputExcel_4];
								} else {
									row6.Raison_Sociale = null;
									emptyColumnCount_tFileInputExcel_4++;
								}
								columnIndex_tFileInputExcel_4 = 2;

								if (temp_row_tFileInputExcel_4[columnIndex_tFileInputExcel_4].length() > 0) {
									curColNum_tFileInputExcel_4 = columnIndex_tFileInputExcel_4
											+ start_column_tFileInputExcel_4 + 1;
									curColName_tFileInputExcel_4 = "Groupe_Client";

									row6.Groupe_Client = temp_row_tFileInputExcel_4[columnIndex_tFileInputExcel_4];
								} else {
									row6.Groupe_Client = null;
									emptyColumnCount_tFileInputExcel_4++;
								}
								columnIndex_tFileInputExcel_4 = 3;

								if (temp_row_tFileInputExcel_4[columnIndex_tFileInputExcel_4].length() > 0) {
									curColNum_tFileInputExcel_4 = columnIndex_tFileInputExcel_4
											+ start_column_tFileInputExcel_4 + 1;
									curColName_tFileInputExcel_4 = "Account_Manager";

									row6.Account_Manager = temp_row_tFileInputExcel_4[columnIndex_tFileInputExcel_4];
								} else {
									row6.Account_Manager = null;
									emptyColumnCount_tFileInputExcel_4++;
								}
								columnIndex_tFileInputExcel_4 = 4;

								if (temp_row_tFileInputExcel_4[columnIndex_tFileInputExcel_4].length() > 0) {
									curColNum_tFileInputExcel_4 = columnIndex_tFileInputExcel_4
											+ start_column_tFileInputExcel_4 + 1;
									curColName_tFileInputExcel_4 = "Equipe";

									row6.Equipe = temp_row_tFileInputExcel_4[columnIndex_tFileInputExcel_4];
								} else {
									row6.Equipe = null;
									emptyColumnCount_tFileInputExcel_4++;
								}
								columnIndex_tFileInputExcel_4 = 5;

								if (temp_row_tFileInputExcel_4[columnIndex_tFileInputExcel_4].length() > 0) {
									curColNum_tFileInputExcel_4 = columnIndex_tFileInputExcel_4
											+ start_column_tFileInputExcel_4 + 1;
									curColName_tFileInputExcel_4 = "Somme_de_Suspension";

									row6.Somme_de_Suspension = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_4[columnIndex_tFileInputExcel_4], null,
											'.' == decimalChar_tFileInputExcel_4 ? null
													: decimalChar_tFileInputExcel_4));
								} else {
									row6.Somme_de_Suspension = null;
									emptyColumnCount_tFileInputExcel_4++;
								}
								columnIndex_tFileInputExcel_4 = 6;

								if (temp_row_tFileInputExcel_4[columnIndex_tFileInputExcel_4].length() > 0) {
									curColNum_tFileInputExcel_4 = columnIndex_tFileInputExcel_4
											+ start_column_tFileInputExcel_4 + 1;
									curColName_tFileInputExcel_4 = "Type_de_suspension";

									row6.Type_de_suspension = temp_row_tFileInputExcel_4[columnIndex_tFileInputExcel_4];
								} else {
									row6.Type_de_suspension = null;
									emptyColumnCount_tFileInputExcel_4++;
								}
								columnIndex_tFileInputExcel_4 = 7;

								if (temp_row_tFileInputExcel_4[columnIndex_tFileInputExcel_4].length() > 0) {
									curColNum_tFileInputExcel_4 = columnIndex_tFileInputExcel_4
											+ start_column_tFileInputExcel_4 + 1;
									curColName_tFileInputExcel_4 = "Motif";

									row6.Motif = temp_row_tFileInputExcel_4[columnIndex_tFileInputExcel_4];
								} else {
									row6.Motif = null;
									emptyColumnCount_tFileInputExcel_4++;
								}
								columnIndex_tFileInputExcel_4 = 8;

								if (temp_row_tFileInputExcel_4[columnIndex_tFileInputExcel_4].length() > 0) {
									curColNum_tFileInputExcel_4 = columnIndex_tFileInputExcel_4
											+ start_column_tFileInputExcel_4 + 1;
									curColName_tFileInputExcel_4 = "DFE";

									row6.DFE = temp_row_tFileInputExcel_4[columnIndex_tFileInputExcel_4];
								} else {
									row6.DFE = null;
									emptyColumnCount_tFileInputExcel_4++;
								}
								columnIndex_tFileInputExcel_4 = 9;

								if (temp_row_tFileInputExcel_4[columnIndex_tFileInputExcel_4].length() > 0) {
									curColNum_tFileInputExcel_4 = columnIndex_tFileInputExcel_4
											+ start_column_tFileInputExcel_4 + 1;
									curColName_tFileInputExcel_4 = "Engage_Oui_Non";

									row6.Engage_Oui_Non = temp_row_tFileInputExcel_4[columnIndex_tFileInputExcel_4];
								} else {
									row6.Engage_Oui_Non = null;
									emptyColumnCount_tFileInputExcel_4++;
								}
								columnIndex_tFileInputExcel_4 = 10;

								if (temp_row_tFileInputExcel_4[columnIndex_tFileInputExcel_4].length() > 0) {
									curColNum_tFileInputExcel_4 = columnIndex_tFileInputExcel_4
											+ start_column_tFileInputExcel_4 + 1;
									curColName_tFileInputExcel_4 = "Date_Depot";

									row6.Date_Depot = temp_row_tFileInputExcel_4[columnIndex_tFileInputExcel_4];
								} else {
									row6.Date_Depot = null;
									emptyColumnCount_tFileInputExcel_4++;
								}

								nb_line_tFileInputExcel_4++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_4_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_4 = true;
								System.err.println(e.getMessage());
								row6 = null;
							}

							/**
							 * [tFileInputExcel_4 begin ] stop
							 */

							/**
							 * [tFileInputExcel_4 main ] start
							 */

							currentComponent = "tFileInputExcel_4";

							tos_count_tFileInputExcel_4++;

							/**
							 * [tFileInputExcel_4 main ] stop
							 */

							/**
							 * [tFileInputExcel_4 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_4";

							/**
							 * [tFileInputExcel_4 process_data_begin ] stop
							 */
// Start of branch "row6"
							if (row6 != null) {

								/**
								 * [tMap_5 main ] start
								 */

								currentComponent = "tMap_5";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row6"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_5 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_5 = false;
								boolean mainRowRejected_tMap_5 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_5__Struct Var = Var__tMap_5;// ###############################
									// ###############################
									// # Output tables

									t8 = null;

// # Output table : 't8'
									t8_tmp.Account_Manager = StringHandling.CHANGE(
											StringHandling.UPCASE(row6.Account_Manager), "ADELWAHED", "ABDELWAHED");
									t8 = t8_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_5 = false;

								tos_count_tMap_5++;

								/**
								 * [tMap_5 main ] stop
								 */

								/**
								 * [tMap_5 process_data_begin ] start
								 */

								currentComponent = "tMap_5";

								/**
								 * [tMap_5 process_data_begin ] stop
								 */
// Start of branch "t8"
								if (t8 != null) {

									/**
									 * [tUnite_1 main ] start
									 */

									currentComponent = "tUnite_1";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "t8"

										);
									}

//////////

// for output
									row3 = new row3Struct();

									row3.Account_Manager__Client_Prospect = t8.Account_Manager;

									nb_line_tUnite_1++;

//////////

									tos_count_tUnite_1++;

									/**
									 * [tUnite_1 main ] stop
									 */

									/**
									 * [tUnite_1 process_data_begin ] start
									 */

									currentComponent = "tUnite_1";

									/**
									 * [tUnite_1 process_data_begin ] stop
									 */

									/**
									 * [tMap_1 main ] start
									 */

									currentComponent = "tMap_1";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "row3"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_1 = false;
									boolean mainRowRejected_tMap_1 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row8"
									///////////////////////////////////////////////

									boolean forceLooprow8 = false;

									row8Struct row8ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_1) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_1 = false;

										row8HashKey.Account_Manager__Client_Prospect = row3.Account_Manager__Client_Prospect;

										row8HashKey.hashCodeDirty = true;

										tHash_Lookup_row8.lookup(row8HashKey);

										if (!tHash_Lookup_row8.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_1 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row8 != null && tHash_Lookup_row8.getCount(row8HashKey) > 1) { // G
																													// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row8'
										// and it contains more one result from keys :
										// row8.Account_Manager__Client_Prospect = '" +
										// row8HashKey.Account_Manager__Client_Prospect + "'");
									} // G 071

									row8Struct row8 = null;

									row8Struct fromLookup_row8 = null;
									row8 = row8Default;

									if (tHash_Lookup_row8 != null && tHash_Lookup_row8.hasNext()) { // G 099

										fromLookup_row8 = tHash_Lookup_row8.next();

									} // G 099

									if (fromLookup_row8 != null) {
										row8 = fromLookup_row8;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
										// ###############################
										// # Output tables

										j = null;

										if (!rejectedInnerJoin_tMap_1) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'j'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_1) {
											j_tmp.Account_Manager__Client_Prospect = row3.Account_Manager__Client_Prospect;
											j = j_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_1 = false;

									tos_count_tMap_1++;

									/**
									 * [tMap_1 main ] stop
									 */

									/**
									 * [tMap_1 process_data_begin ] start
									 */

									currentComponent = "tMap_1";

									/**
									 * [tMap_1 process_data_begin ] stop
									 */
// Start of branch "j"
									if (j != null) {

										/**
										 * [tUniqRow_2 main ] start
										 */

										currentComponent = "tUniqRow_2";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "j"

											);
										}

										row4 = null;
										finder_tUniqRow_2.Account_Manager__Client_Prospect = j.Account_Manager__Client_Prospect;
										finder_tUniqRow_2.hashCodeDirty = true;
										if (!keystUniqRow_2.contains(finder_tUniqRow_2)) {
											KeyStruct_tUniqRow_2 new_tUniqRow_2 = new KeyStruct_tUniqRow_2();

											new_tUniqRow_2.Account_Manager__Client_Prospect = j.Account_Manager__Client_Prospect;

											keystUniqRow_2.add(new_tUniqRow_2);
											if (row4 == null) {

												row4 = new row4Struct();
											}
											row4.Account_Manager__Client_Prospect = j.Account_Manager__Client_Prospect;
											nb_uniques_tUniqRow_2++;
										} else {
											nb_duplicates_tUniqRow_2++;
										}

										tos_count_tUniqRow_2++;

										/**
										 * [tUniqRow_2 main ] stop
										 */

										/**
										 * [tUniqRow_2 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_2";

										/**
										 * [tUniqRow_2 process_data_begin ] stop
										 */
// Start of branch "row4"
										if (row4 != null) {

											/**
											 * [tDBOutput_1 main ] start
											 */

											currentComponent = "tDBOutput_1";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row4"

												);
											}

											whetherReject_tDBOutput_1 = false;
											if (row4.Account_Manager__Client_Prospect == null) {
												pstmt_tDBOutput_1.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_1.setString(1, row4.Account_Manager__Client_Prospect);
											}

											pstmt_tDBOutput_1.addBatch();
											nb_line_tDBOutput_1++;

											batchSizeCounter_tDBOutput_1++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_1 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_1) throws Exception {
													try {

														for (int countEach_tDBOutput_1 : pstmt_tDBOutput_1
																.executeBatch()) {
															if (countEach_tDBOutput_1 == -2
																	|| countEach_tDBOutput_1 == -3) {
																break;
															}
															counter += countEach_tDBOutput_1;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_1_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_1 = 0;
														for (int countEach_tDBOutput_1 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_1 < 0 ? 0
																	: countEach_tDBOutput_1);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_1) throws Exception {
													try {

														for (int countEach_tDBOutput_1 : pstmt_tDBOutput_1
																.executeBatch()) {
															if (countEach_tDBOutput_1 == -2
																	|| countEach_tDBOutput_1 == -3) {
																break;
															}
															counter += countEach_tDBOutput_1;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_1_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_1 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_1 < 0 ? 0
																	: countEach_tDBOutput_1);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_1 > 0)
													&& (batchSize_tDBOutput_1 <= batchSizeCounter_tDBOutput_1)) {

												insertedCount_tDBOutput_1 = new LimitBytesHelper_tDBOutput_1()
														.limitBytePart1(insertedCount_tDBOutput_1, pstmt_tDBOutput_1);
												rowsToCommitCount_tDBOutput_1 = insertedCount_tDBOutput_1;

												batchSizeCounter_tDBOutput_1 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_1++;
											if (commitEvery_tDBOutput_1 <= commitCounter_tDBOutput_1) {
												if ((batchSize_tDBOutput_1 > 0) && (batchSizeCounter_tDBOutput_1 > 0)) {

													insertedCount_tDBOutput_1 = new LimitBytesHelper_tDBOutput_1()
															.limitBytePart1(insertedCount_tDBOutput_1,
																	pstmt_tDBOutput_1);

													batchSizeCounter_tDBOutput_1 = 0;
												}
												if (rowsToCommitCount_tDBOutput_1 != 0) {

												}
												conn_tDBOutput_1.commit();
												if (rowsToCommitCount_tDBOutput_1 != 0) {

													rowsToCommitCount_tDBOutput_1 = 0;
												}
												commitCounter_tDBOutput_1 = 0;
											}

											tos_count_tDBOutput_1++;

											/**
											 * [tDBOutput_1 main ] stop
											 */

											/**
											 * [tDBOutput_1 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_1";

											/**
											 * [tDBOutput_1 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_1 process_data_end ] start
											 */

											currentComponent = "tDBOutput_1";

											/**
											 * [tDBOutput_1 process_data_end ] stop
											 */

										} // End of branch "row4"

										/**
										 * [tUniqRow_2 process_data_end ] start
										 */

										currentComponent = "tUniqRow_2";

										/**
										 * [tUniqRow_2 process_data_end ] stop
										 */

									} // End of branch "j"

									/**
									 * [tMap_1 process_data_end ] start
									 */

									currentComponent = "tMap_1";

									/**
									 * [tMap_1 process_data_end ] stop
									 */

									/**
									 * [tUnite_1 process_data_end ] start
									 */

									currentComponent = "tUnite_1";

									/**
									 * [tUnite_1 process_data_end ] stop
									 */

								} // End of branch "t8"

								/**
								 * [tMap_5 process_data_end ] start
								 */

								currentComponent = "tMap_5";

								/**
								 * [tMap_5 process_data_end ] stop
								 */

							} // End of branch "row6"

							/**
							 * [tFileInputExcel_4 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_4";

							/**
							 * [tFileInputExcel_4 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_4 end ] start
							 */

							currentComponent = "tFileInputExcel_4";

						}

						globalMap.put("tFileInputExcel_4_NB_LINE", nb_line_tFileInputExcel_4);

					}

				} finally {

					if (!(source_tFileInputExcel_4 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_4.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_4", true);
				end_Hash.put("tFileInputExcel_4", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_4 end ] stop
				 */

				/**
				 * [tMap_5 end ] start
				 */

				currentComponent = "tMap_5";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row6");
				}

				ok_Hash.put("tMap_5", true);
				end_Hash.put("tMap_5", System.currentTimeMillis());

				/**
				 * [tMap_5 end ] stop
				 */

				/**
				 * [tMap_11 begin ] start
				 */

				ok_Hash.put("tMap_11", false);
				start_Hash.put("tMap_11", System.currentTimeMillis());

				currentComponent = "tMap_11";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row15");
				}

				int tos_count_tMap_11 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_11__Struct {
				}
				Var__tMap_11__Struct Var__tMap_11 = new Var__tMap_11__Struct();
// ###############################

// ###############################
// # Outputs initialization
				t9_Struct t9__tmp = new t9_Struct();
// ###############################

				/**
				 * [tMap_11 begin ] stop
				 */

				/**
				 * [tFileInputExcel_11 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_11", false);
				start_Hash.put("tFileInputExcel_11", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_11";

				int tos_count_tFileInputExcel_11 = 0;

				final String decryptedPassword_tFileInputExcel_11 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:XgPuB4OlNKZkEaDmSOLjECCzCL8eHTeGWlxPAg==");
				String password_tFileInputExcel_11 = decryptedPassword_tFileInputExcel_11;
				if (password_tFileInputExcel_11.isEmpty()) {
					password_tFileInputExcel_11 = null;
				}
				class RegexUtil_tFileInputExcel_11 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_11 regexUtil_tFileInputExcel_11 = new RegexUtil_tFileInputExcel_11();

				Object source_tFileInputExcel_11 = "C:/Users/DELL/Downloads/Copie de Rapport Pipe et realisations DME Data et VoIP (2).xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_11 = null;

				if (source_tFileInputExcel_11 instanceof String) {
					workbook_tFileInputExcel_11 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_11), password_tFileInputExcel_11,
									true);
				} else if (source_tFileInputExcel_11 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_11 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_11, password_tFileInputExcel_11);
				} else {
					workbook_tFileInputExcel_11 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_11 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_11.addAll(
							regexUtil_tFileInputExcel_11.getSheets(workbook_tFileInputExcel_11, "Source", false));
					if (sheetList_tFileInputExcel_11.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_11 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_11 : sheetList_tFileInputExcel_11) {
						if (sheet_FilterNull_tFileInputExcel_11 != null
								&& sheetList_FilterNull_tFileInputExcel_11.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_11.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_11.add(sheet_FilterNull_tFileInputExcel_11);
						}
					}
					sheetList_tFileInputExcel_11 = sheetList_FilterNull_tFileInputExcel_11;
					if (sheetList_tFileInputExcel_11.size() > 0) {
						int nb_line_tFileInputExcel_11 = 0;

						int begin_line_tFileInputExcel_11 = 1;

						int footer_input_tFileInputExcel_11 = 0;

						int end_line_tFileInputExcel_11 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_11 : sheetList_tFileInputExcel_11) {
							end_line_tFileInputExcel_11 += (sheet_tFileInputExcel_11.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_11 -= footer_input_tFileInputExcel_11;
						int limit_tFileInputExcel_11 = -1;
						int start_column_tFileInputExcel_11 = 1 - 1;
						int end_column_tFileInputExcel_11 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_11 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_11 = sheetList_tFileInputExcel_11
								.get(0);
						int rowCount_tFileInputExcel_11 = 0;
						int sheetIndex_tFileInputExcel_11 = 0;
						int currentRows_tFileInputExcel_11 = (sheetList_tFileInputExcel_11.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_11 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_11 = df_tFileInputExcel_11.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_11 = begin_line_tFileInputExcel_11; i_tFileInputExcel_11 < end_line_tFileInputExcel_11; i_tFileInputExcel_11++) {

							int emptyColumnCount_tFileInputExcel_11 = 0;

							if (limit_tFileInputExcel_11 != -1
									&& nb_line_tFileInputExcel_11 >= limit_tFileInputExcel_11) {
								break;
							}

							while (i_tFileInputExcel_11 >= rowCount_tFileInputExcel_11
									+ currentRows_tFileInputExcel_11) {
								rowCount_tFileInputExcel_11 += currentRows_tFileInputExcel_11;
								sheet_tFileInputExcel_11 = sheetList_tFileInputExcel_11
										.get(++sheetIndex_tFileInputExcel_11);
								currentRows_tFileInputExcel_11 = (sheet_tFileInputExcel_11.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_11_CURRENT_SHEET", sheet_tFileInputExcel_11.getSheetName());
							if (rowCount_tFileInputExcel_11 <= i_tFileInputExcel_11) {
								row_tFileInputExcel_11 = sheet_tFileInputExcel_11
										.getRow(i_tFileInputExcel_11 - rowCount_tFileInputExcel_11);
							}
							row15 = null;
							int tempRowLength_tFileInputExcel_11 = 26;

							int columnIndex_tFileInputExcel_11 = 0;

							String[] temp_row_tFileInputExcel_11 = new String[tempRowLength_tFileInputExcel_11];
							int excel_end_column_tFileInputExcel_11;
							if (row_tFileInputExcel_11 == null) {
								excel_end_column_tFileInputExcel_11 = 0;
							} else {
								excel_end_column_tFileInputExcel_11 = row_tFileInputExcel_11.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_11;
							if (end_column_tFileInputExcel_11 == -1) {
								actual_end_column_tFileInputExcel_11 = excel_end_column_tFileInputExcel_11;
							} else {
								actual_end_column_tFileInputExcel_11 = end_column_tFileInputExcel_11 > excel_end_column_tFileInputExcel_11
										? excel_end_column_tFileInputExcel_11
										: end_column_tFileInputExcel_11;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_11 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_11; i++) {
								if (i + start_column_tFileInputExcel_11 < actual_end_column_tFileInputExcel_11) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_11 = row_tFileInputExcel_11
											.getCell(i + start_column_tFileInputExcel_11);
									if (cell_tFileInputExcel_11 != null) {
										switch (cell_tFileInputExcel_11.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_11[i] = cell_tFileInputExcel_11
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_11)) {
												temp_row_tFileInputExcel_11[i] = cell_tFileInputExcel_11
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_11[i] = df_tFileInputExcel_11
														.format(cell_tFileInputExcel_11.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_11[i] = String
													.valueOf(cell_tFileInputExcel_11.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_11.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_11[i] = cell_tFileInputExcel_11
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_11)) {
													temp_row_tFileInputExcel_11[i] = cell_tFileInputExcel_11
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_11 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_11.getNumericCellValue());
													temp_row_tFileInputExcel_11[i] = ne_tFileInputExcel_11
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_11[i] = String
														.valueOf(cell_tFileInputExcel_11.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_11[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_11[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_11[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_11[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_11 = false;
							row15 = new row15Struct();
							int curColNum_tFileInputExcel_11 = -1;
							String curColName_tFileInputExcel_11 = "";
							try {
								columnIndex_tFileInputExcel_11 = 0;

								if (temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11].length() > 0) {
									curColNum_tFileInputExcel_11 = columnIndex_tFileInputExcel_11
											+ start_column_tFileInputExcel_11 + 1;
									curColName_tFileInputExcel_11 = "Client_Prospect";

									row15.Client_Prospect = temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11];
								} else {
									row15.Client_Prospect = null;
									emptyColumnCount_tFileInputExcel_11++;
								}
								columnIndex_tFileInputExcel_11 = 1;

								if (temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11].length() > 0) {
									curColNum_tFileInputExcel_11 = columnIndex_tFileInputExcel_11
											+ start_column_tFileInputExcel_11 + 1;
									curColName_tFileInputExcel_11 = "Sujet";

									row15.Sujet = temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11];
								} else {
									row15.Sujet = null;
									emptyColumnCount_tFileInputExcel_11++;
								}
								columnIndex_tFileInputExcel_11 = 2;

								if (temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11].length() > 0) {
									curColNum_tFileInputExcel_11 = columnIndex_tFileInputExcel_11
											+ start_column_tFileInputExcel_11 + 1;
									curColName_tFileInputExcel_11 = "Acces";

									row15.Acces = temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11];
								} else {
									row15.Acces = null;
									emptyColumnCount_tFileInputExcel_11++;
								}
								columnIndex_tFileInputExcel_11 = 3;

								if (temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11].length() > 0) {
									curColNum_tFileInputExcel_11 = columnIndex_tFileInputExcel_11
											+ start_column_tFileInputExcel_11 + 1;
									curColName_tFileInputExcel_11 = "Type_d_acces";

									row15.Type_d_acces = temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11];
								} else {
									row15.Type_d_acces = null;
									emptyColumnCount_tFileInputExcel_11++;
								}
								columnIndex_tFileInputExcel_11 = 4;

								if (temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11].length() > 0) {
									curColNum_tFileInputExcel_11 = columnIndex_tFileInputExcel_11
											+ start_column_tFileInputExcel_11 + 1;
									curColName_tFileInputExcel_11 = "Account_Manager__Client_Prospect";

									row15.Account_Manager__Client_Prospect = temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11];
								} else {
									row15.Account_Manager__Client_Prospect = null;
									emptyColumnCount_tFileInputExcel_11++;
								}
								columnIndex_tFileInputExcel_11 = 5;

								if (temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11].length() > 0) {
									curColNum_tFileInputExcel_11 = columnIndex_tFileInputExcel_11
											+ start_column_tFileInputExcel_11 + 1;
									curColName_tFileInputExcel_11 = "Cree_le";

									row15.Cree_le = temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11];
								} else {
									row15.Cree_le = null;
									emptyColumnCount_tFileInputExcel_11++;
								}
								columnIndex_tFileInputExcel_11 = 6;

								if (temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11].length() > 0) {
									curColNum_tFileInputExcel_11 = columnIndex_tFileInputExcel_11
											+ start_column_tFileInputExcel_11 + 1;
									curColName_tFileInputExcel_11 = "Mois_et_annee_de_creation";

									row15.Mois_et_annee_de_creation = temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11];
								} else {
									row15.Mois_et_annee_de_creation = null;
									emptyColumnCount_tFileInputExcel_11++;
								}
								columnIndex_tFileInputExcel_11 = 7;

								if (temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11].length() > 0) {
									curColNum_tFileInputExcel_11 = columnIndex_tFileInputExcel_11
											+ start_column_tFileInputExcel_11 + 1;
									curColName_tFileInputExcel_11 = "Cree_par";

									row15.Cree_par = temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11];
								} else {
									row15.Cree_par = null;
									emptyColumnCount_tFileInputExcel_11++;
								}
								columnIndex_tFileInputExcel_11 = 8;

								if (temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11].length() > 0) {
									curColNum_tFileInputExcel_11 = columnIndex_tFileInputExcel_11
											+ start_column_tFileInputExcel_11 + 1;
									curColName_tFileInputExcel_11 = "Equipe";

									row15.Equipe = temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11];
								} else {
									row15.Equipe = null;
									emptyColumnCount_tFileInputExcel_11++;
								}
								columnIndex_tFileInputExcel_11 = 9;

								if (temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11].length() > 0) {
									curColNum_tFileInputExcel_11 = columnIndex_tFileInputExcel_11
											+ start_column_tFileInputExcel_11 + 1;
									curColName_tFileInputExcel_11 = "Proprietaire";

									row15.Proprietaire = temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11];
								} else {
									row15.Proprietaire = null;
									emptyColumnCount_tFileInputExcel_11++;
								}
								columnIndex_tFileInputExcel_11 = 10;

								if (temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11].length() > 0) {
									curColNum_tFileInputExcel_11 = columnIndex_tFileInputExcel_11
											+ start_column_tFileInputExcel_11 + 1;
									curColName_tFileInputExcel_11 = "Phase_de_l_opportunite";

									row15.Phase_de_l_opportunite = temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11];
								} else {
									row15.Phase_de_l_opportunite = null;
									emptyColumnCount_tFileInputExcel_11++;
								}
								columnIndex_tFileInputExcel_11 = 11;

								if (temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11].length() > 0) {
									curColNum_tFileInputExcel_11 = columnIndex_tFileInputExcel_11
											+ start_column_tFileInputExcel_11 + 1;
									curColName_tFileInputExcel_11 = "Valeur_ordering";

									row15.Valeur_ordering = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11], null,
											'.' == decimalChar_tFileInputExcel_11 ? null
													: decimalChar_tFileInputExcel_11));
								} else {
									row15.Valeur_ordering = null;
									emptyColumnCount_tFileInputExcel_11++;
								}
								columnIndex_tFileInputExcel_11 = 12;

								if (temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11].length() > 0) {
									curColNum_tFileInputExcel_11 = columnIndex_tFileInputExcel_11
											+ start_column_tFileInputExcel_11 + 1;
									curColName_tFileInputExcel_11 = "Statut";

									row15.Statut = temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11];
								} else {
									row15.Statut = null;
									emptyColumnCount_tFileInputExcel_11++;
								}
								columnIndex_tFileInputExcel_11 = 13;

								if (temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11].length() > 0) {
									curColNum_tFileInputExcel_11 = columnIndex_tFileInputExcel_11
											+ start_column_tFileInputExcel_11 + 1;
									curColName_tFileInputExcel_11 = "Staut_Final";

									row15.Staut_Final = temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11];
								} else {
									row15.Staut_Final = null;
									emptyColumnCount_tFileInputExcel_11++;
								}
								columnIndex_tFileInputExcel_11 = 14;

								if (temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11].length() > 0) {
									curColNum_tFileInputExcel_11 = columnIndex_tFileInputExcel_11
											+ start_column_tFileInputExcel_11 + 1;
									curColName_tFileInputExcel_11 = "Tarifs";

									row15.Tarifs = temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11];
								} else {
									row15.Tarifs = null;
									emptyColumnCount_tFileInputExcel_11++;
								}
								columnIndex_tFileInputExcel_11 = 15;

								if (temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11].length() > 0) {
									curColNum_tFileInputExcel_11 = columnIndex_tFileInputExcel_11
											+ start_column_tFileInputExcel_11 + 1;
									curColName_tFileInputExcel_11 = "Montant_total";

									row15.Montant_total = temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11];
								} else {
									row15.Montant_total = null;
									emptyColumnCount_tFileInputExcel_11++;
								}
								columnIndex_tFileInputExcel_11 = 16;

								if (temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11].length() > 0) {
									curColNum_tFileInputExcel_11 = columnIndex_tFileInputExcel_11
											+ start_column_tFileInputExcel_11 + 1;
									curColName_tFileInputExcel_11 = "Parent__Produit_existant";

									row15.Parent__Produit_existant = temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11];
								} else {
									row15.Parent__Produit_existant = null;
									emptyColumnCount_tFileInputExcel_11++;
								}
								columnIndex_tFileInputExcel_11 = 17;

								if (temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11].length() > 0) {
									curColNum_tFileInputExcel_11 = columnIndex_tFileInputExcel_11
											+ start_column_tFileInputExcel_11 + 1;
									curColName_tFileInputExcel_11 = "Produit_existant";

									row15.Produit_existant = temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11];
								} else {
									row15.Produit_existant = null;
									emptyColumnCount_tFileInputExcel_11++;
								}
								columnIndex_tFileInputExcel_11 = 18;

								if (temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11].length() > 0) {
									curColNum_tFileInputExcel_11 = columnIndex_tFileInputExcel_11
											+ start_column_tFileInputExcel_11 + 1;
									curColName_tFileInputExcel_11 = "Operation";

									row15.Operation = temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11];
								} else {
									row15.Operation = null;
									emptyColumnCount_tFileInputExcel_11++;
								}
								columnIndex_tFileInputExcel_11 = 19;

								if (temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11].length() > 0) {
									curColNum_tFileInputExcel_11 = columnIndex_tFileInputExcel_11
											+ start_column_tFileInputExcel_11 + 1;
									curColName_tFileInputExcel_11 = "Type_d_operation";

									row15.Type_d_operation = temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11];
								} else {
									row15.Type_d_operation = null;
									emptyColumnCount_tFileInputExcel_11++;
								}
								columnIndex_tFileInputExcel_11 = 20;

								if (temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11].length() > 0) {
									curColNum_tFileInputExcel_11 = columnIndex_tFileInputExcel_11
											+ start_column_tFileInputExcel_11 + 1;
									curColName_tFileInputExcel_11 = "Prix_unitaire";

									row15.Prix_unitaire = temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11];
								} else {
									row15.Prix_unitaire = null;
									emptyColumnCount_tFileInputExcel_11++;
								}
								columnIndex_tFileInputExcel_11 = 21;

								if (temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11].length() > 0) {
									curColNum_tFileInputExcel_11 = columnIndex_tFileInputExcel_11
											+ start_column_tFileInputExcel_11 + 1;
									curColName_tFileInputExcel_11 = "Quantite";

									row15.Quantite = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11], null,
											'.' == decimalChar_tFileInputExcel_11 ? null
													: decimalChar_tFileInputExcel_11));
								} else {
									row15.Quantite = null;
									emptyColumnCount_tFileInputExcel_11++;
								}
								columnIndex_tFileInputExcel_11 = 22;

								if (temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11].length() > 0) {
									curColNum_tFileInputExcel_11 = columnIndex_tFileInputExcel_11
											+ start_column_tFileInputExcel_11 + 1;
									curColName_tFileInputExcel_11 = "Remise";

									row15.Remise = temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11];
								} else {
									row15.Remise = null;
									emptyColumnCount_tFileInputExcel_11++;
								}
								columnIndex_tFileInputExcel_11 = 23;

								if (temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11].length() > 0) {
									curColNum_tFileInputExcel_11 = columnIndex_tFileInputExcel_11
											+ start_column_tFileInputExcel_11 + 1;
									curColName_tFileInputExcel_11 = "Montant_de_la_remise_manuelle";

									row15.Montant_de_la_remise_manuelle = temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11];
								} else {
									row15.Montant_de_la_remise_manuelle = null;
									emptyColumnCount_tFileInputExcel_11++;
								}
								columnIndex_tFileInputExcel_11 = 24;

								if (temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11].length() > 0) {
									curColNum_tFileInputExcel_11 = columnIndex_tFileInputExcel_11
											+ start_column_tFileInputExcel_11 + 1;
									curColName_tFileInputExcel_11 = "Total_final";

									row15.Total_final = temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11];
								} else {
									row15.Total_final = null;
									emptyColumnCount_tFileInputExcel_11++;
								}
								columnIndex_tFileInputExcel_11 = 25;

								if (temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11].length() > 0) {
									curColNum_tFileInputExcel_11 = columnIndex_tFileInputExcel_11
											+ start_column_tFileInputExcel_11 + 1;
									curColName_tFileInputExcel_11 = "Modifie_le";

									row15.Modifie_le = temp_row_tFileInputExcel_11[columnIndex_tFileInputExcel_11];
								} else {
									row15.Modifie_le = null;
									emptyColumnCount_tFileInputExcel_11++;
								}

								nb_line_tFileInputExcel_11++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_11_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_11 = true;
								System.err.println(e.getMessage());
								row15 = null;
							}

							/**
							 * [tFileInputExcel_11 begin ] stop
							 */

							/**
							 * [tFileInputExcel_11 main ] start
							 */

							currentComponent = "tFileInputExcel_11";

							tos_count_tFileInputExcel_11++;

							/**
							 * [tFileInputExcel_11 main ] stop
							 */

							/**
							 * [tFileInputExcel_11 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_11";

							/**
							 * [tFileInputExcel_11 process_data_begin ] stop
							 */
// Start of branch "row15"
							if (row15 != null) {

								/**
								 * [tMap_11 main ] start
								 */

								currentComponent = "tMap_11";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row15"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_11 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_11 = false;
								boolean mainRowRejected_tMap_11 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_11__Struct Var = Var__tMap_11;// ###############################
									// ###############################
									// # Output tables

									t9_ = null;

// # Output table : 't9_'
									t9__tmp.Cree_par = StringHandling.CHANGE(StringHandling.UPCASE(row15.Cree_par),
											"ADELWAHED", "ABDELWAHED");
									t9_ = t9__tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_11 = false;

								tos_count_tMap_11++;

								/**
								 * [tMap_11 main ] stop
								 */

								/**
								 * [tMap_11 process_data_begin ] start
								 */

								currentComponent = "tMap_11";

								/**
								 * [tMap_11 process_data_begin ] stop
								 */
// Start of branch "t9_"
								if (t9_ != null) {

									/**
									 * [tUnite_1 main ] start
									 */

									currentComponent = "tUnite_1";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "t9_"

										);
									}

//////////

// for output
									row3 = new row3Struct();

									row3.Account_Manager__Client_Prospect = t9_.Cree_par;

									nb_line_tUnite_1++;

//////////

									tos_count_tUnite_1++;

									/**
									 * [tUnite_1 main ] stop
									 */

									/**
									 * [tUnite_1 process_data_begin ] start
									 */

									currentComponent = "tUnite_1";

									/**
									 * [tUnite_1 process_data_begin ] stop
									 */

									/**
									 * [tMap_1 main ] start
									 */

									currentComponent = "tMap_1";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "row3"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_1 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_1 = false;
									boolean mainRowRejected_tMap_1 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row8"
									///////////////////////////////////////////////

									boolean forceLooprow8 = false;

									row8Struct row8ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_1) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_1 = false;

										row8HashKey.Account_Manager__Client_Prospect = row3.Account_Manager__Client_Prospect;

										row8HashKey.hashCodeDirty = true;

										tHash_Lookup_row8.lookup(row8HashKey);

										if (!tHash_Lookup_row8.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_1 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row8 != null && tHash_Lookup_row8.getCount(row8HashKey) > 1) { // G
																													// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup 'row8'
										// and it contains more one result from keys :
										// row8.Account_Manager__Client_Prospect = '" +
										// row8HashKey.Account_Manager__Client_Prospect + "'");
									} // G 071

									row8Struct row8 = null;

									row8Struct fromLookup_row8 = null;
									row8 = row8Default;

									if (tHash_Lookup_row8 != null && tHash_Lookup_row8.hasNext()) { // G 099

										fromLookup_row8 = tHash_Lookup_row8.next();

									} // G 099

									if (fromLookup_row8 != null) {
										row8 = fromLookup_row8;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_1__Struct Var = Var__tMap_1;// ###############################
										// ###############################
										// # Output tables

										j = null;

										if (!rejectedInnerJoin_tMap_1) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'j'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_1) {
											j_tmp.Account_Manager__Client_Prospect = row3.Account_Manager__Client_Prospect;
											j = j_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_1 = false;

									tos_count_tMap_1++;

									/**
									 * [tMap_1 main ] stop
									 */

									/**
									 * [tMap_1 process_data_begin ] start
									 */

									currentComponent = "tMap_1";

									/**
									 * [tMap_1 process_data_begin ] stop
									 */
// Start of branch "j"
									if (j != null) {

										/**
										 * [tUniqRow_2 main ] start
										 */

										currentComponent = "tUniqRow_2";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "j"

											);
										}

										row4 = null;
										finder_tUniqRow_2.Account_Manager__Client_Prospect = j.Account_Manager__Client_Prospect;
										finder_tUniqRow_2.hashCodeDirty = true;
										if (!keystUniqRow_2.contains(finder_tUniqRow_2)) {
											KeyStruct_tUniqRow_2 new_tUniqRow_2 = new KeyStruct_tUniqRow_2();

											new_tUniqRow_2.Account_Manager__Client_Prospect = j.Account_Manager__Client_Prospect;

											keystUniqRow_2.add(new_tUniqRow_2);
											if (row4 == null) {

												row4 = new row4Struct();
											}
											row4.Account_Manager__Client_Prospect = j.Account_Manager__Client_Prospect;
											nb_uniques_tUniqRow_2++;
										} else {
											nb_duplicates_tUniqRow_2++;
										}

										tos_count_tUniqRow_2++;

										/**
										 * [tUniqRow_2 main ] stop
										 */

										/**
										 * [tUniqRow_2 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_2";

										/**
										 * [tUniqRow_2 process_data_begin ] stop
										 */
// Start of branch "row4"
										if (row4 != null) {

											/**
											 * [tDBOutput_1 main ] start
											 */

											currentComponent = "tDBOutput_1";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row4"

												);
											}

											whetherReject_tDBOutput_1 = false;
											if (row4.Account_Manager__Client_Prospect == null) {
												pstmt_tDBOutput_1.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_1.setString(1, row4.Account_Manager__Client_Prospect);
											}

											pstmt_tDBOutput_1.addBatch();
											nb_line_tDBOutput_1++;

											batchSizeCounter_tDBOutput_1++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_1 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_1) throws Exception {
													try {

														for (int countEach_tDBOutput_1 : pstmt_tDBOutput_1
																.executeBatch()) {
															if (countEach_tDBOutput_1 == -2
																	|| countEach_tDBOutput_1 == -3) {
																break;
															}
															counter += countEach_tDBOutput_1;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_1_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_1 = 0;
														for (int countEach_tDBOutput_1 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_1 < 0 ? 0
																	: countEach_tDBOutput_1);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_1) throws Exception {
													try {

														for (int countEach_tDBOutput_1 : pstmt_tDBOutput_1
																.executeBatch()) {
															if (countEach_tDBOutput_1 == -2
																	|| countEach_tDBOutput_1 == -3) {
																break;
															}
															counter += countEach_tDBOutput_1;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_1_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_1 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_1 < 0 ? 0
																	: countEach_tDBOutput_1);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_1 > 0)
													&& (batchSize_tDBOutput_1 <= batchSizeCounter_tDBOutput_1)) {

												insertedCount_tDBOutput_1 = new LimitBytesHelper_tDBOutput_1()
														.limitBytePart1(insertedCount_tDBOutput_1, pstmt_tDBOutput_1);
												rowsToCommitCount_tDBOutput_1 = insertedCount_tDBOutput_1;

												batchSizeCounter_tDBOutput_1 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_1++;
											if (commitEvery_tDBOutput_1 <= commitCounter_tDBOutput_1) {
												if ((batchSize_tDBOutput_1 > 0) && (batchSizeCounter_tDBOutput_1 > 0)) {

													insertedCount_tDBOutput_1 = new LimitBytesHelper_tDBOutput_1()
															.limitBytePart1(insertedCount_tDBOutput_1,
																	pstmt_tDBOutput_1);

													batchSizeCounter_tDBOutput_1 = 0;
												}
												if (rowsToCommitCount_tDBOutput_1 != 0) {

												}
												conn_tDBOutput_1.commit();
												if (rowsToCommitCount_tDBOutput_1 != 0) {

													rowsToCommitCount_tDBOutput_1 = 0;
												}
												commitCounter_tDBOutput_1 = 0;
											}

											tos_count_tDBOutput_1++;

											/**
											 * [tDBOutput_1 main ] stop
											 */

											/**
											 * [tDBOutput_1 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_1";

											/**
											 * [tDBOutput_1 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_1 process_data_end ] start
											 */

											currentComponent = "tDBOutput_1";

											/**
											 * [tDBOutput_1 process_data_end ] stop
											 */

										} // End of branch "row4"

										/**
										 * [tUniqRow_2 process_data_end ] start
										 */

										currentComponent = "tUniqRow_2";

										/**
										 * [tUniqRow_2 process_data_end ] stop
										 */

									} // End of branch "j"

									/**
									 * [tMap_1 process_data_end ] start
									 */

									currentComponent = "tMap_1";

									/**
									 * [tMap_1 process_data_end ] stop
									 */

									/**
									 * [tUnite_1 process_data_end ] start
									 */

									currentComponent = "tUnite_1";

									/**
									 * [tUnite_1 process_data_end ] stop
									 */

								} // End of branch "t9_"

								/**
								 * [tMap_11 process_data_end ] start
								 */

								currentComponent = "tMap_11";

								/**
								 * [tMap_11 process_data_end ] stop
								 */

							} // End of branch "row15"

							/**
							 * [tFileInputExcel_11 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_11";

							/**
							 * [tFileInputExcel_11 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_11 end ] start
							 */

							currentComponent = "tFileInputExcel_11";

						}

						globalMap.put("tFileInputExcel_11_NB_LINE", nb_line_tFileInputExcel_11);

					}

				} finally {

					if (!(source_tFileInputExcel_11 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_11.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_11", true);
				end_Hash.put("tFileInputExcel_11", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_11 end ] stop
				 */

				/**
				 * [tMap_11 end ] start
				 */

				currentComponent = "tMap_11";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row15");
				}

				ok_Hash.put("tMap_11", true);
				end_Hash.put("tMap_11", System.currentTimeMillis());

				/**
				 * [tMap_11 end ] stop
				 */

				/**
				 * [tUnite_1 end ] start
				 */

				currentComponent = "tUnite_1";

				globalMap.put("tUnite_1_NB_LINE", nb_line_tUnite_1);
				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "t6", "t9", "t5", "t8", "t9_", "t7");
				}

				ok_Hash.put("tUnite_1", true);
				end_Hash.put("tUnite_1", System.currentTimeMillis());

				/**
				 * [tUnite_1 end ] stop
				 */

				/**
				 * [tMap_1 end ] start
				 */

				currentComponent = "tMap_1";

// ###############################
// # Lookup hashes releasing
				if (tHash_Lookup_row8 != null) {
					tHash_Lookup_row8.endGet();
				}
				globalMap.remove("tHash_Lookup_row8");

// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row3");
				}

				ok_Hash.put("tMap_1", true);
				end_Hash.put("tMap_1", System.currentTimeMillis());

				/**
				 * [tMap_1 end ] stop
				 */

				/**
				 * [tUniqRow_2 end ] start
				 */

				currentComponent = "tUniqRow_2";

				globalMap.put("tUniqRow_2_NB_UNIQUES", nb_uniques_tUniqRow_2);
				globalMap.put("tUniqRow_2_NB_DUPLICATES", nb_duplicates_tUniqRow_2);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "j");
				}

				ok_Hash.put("tUniqRow_2", true);
				end_Hash.put("tUniqRow_2", System.currentTimeMillis());

				/**
				 * [tUniqRow_2 end ] stop
				 */

				/**
				 * [tDBOutput_1 end ] start
				 */

				currentComponent = "tDBOutput_1";

				try {
					int countSum_tDBOutput_1 = 0;
					if (pstmt_tDBOutput_1 != null && batchSizeCounter_tDBOutput_1 > 0) {

						for (int countEach_tDBOutput_1 : pstmt_tDBOutput_1.executeBatch()) {
							if (countEach_tDBOutput_1 == -2 || countEach_tDBOutput_1 == -3) {
								break;
							}
							countSum_tDBOutput_1 += countEach_tDBOutput_1;
						}
						rowsToCommitCount_tDBOutput_1 += countSum_tDBOutput_1;

					}

					insertedCount_tDBOutput_1 += countSum_tDBOutput_1;

				} catch (java.sql.BatchUpdateException e) {
					globalMap.put("tDBOutput_1_ERROR_MESSAGE", e.getMessage());

					int countSum_tDBOutput_1 = 0;
					for (int countEach_tDBOutput_1 : e.getUpdateCounts()) {
						countSum_tDBOutput_1 += (countEach_tDBOutput_1 < 0 ? 0 : countEach_tDBOutput_1);
					}
					rowsToCommitCount_tDBOutput_1 += countSum_tDBOutput_1;

					insertedCount_tDBOutput_1 += countSum_tDBOutput_1;

					System.err.println(e.getMessage());

				}
				if (pstmt_tDBOutput_1 != null) {

					pstmt_tDBOutput_1.close();
					resourceMap.remove("pstmt_tDBOutput_1");

				}
				resourceMap.put("statementClosed_tDBOutput_1", true);
				if (rowsToCommitCount_tDBOutput_1 != 0) {

				}
				conn_tDBOutput_1.commit();
				if (rowsToCommitCount_tDBOutput_1 != 0) {

					rowsToCommitCount_tDBOutput_1 = 0;
				}
				commitCounter_tDBOutput_1 = 0;
				conn_tDBOutput_1.close();
				resourceMap.put("finish_tDBOutput_1", true);

				nb_line_deleted_tDBOutput_1 = nb_line_deleted_tDBOutput_1 + deletedCount_tDBOutput_1;
				nb_line_update_tDBOutput_1 = nb_line_update_tDBOutput_1 + updatedCount_tDBOutput_1;
				nb_line_inserted_tDBOutput_1 = nb_line_inserted_tDBOutput_1 + insertedCount_tDBOutput_1;
				nb_line_rejected_tDBOutput_1 = nb_line_rejected_tDBOutput_1 + rejectedCount_tDBOutput_1;

				globalMap.put("tDBOutput_1_NB_LINE", nb_line_tDBOutput_1);
				globalMap.put("tDBOutput_1_NB_LINE_UPDATED", nb_line_update_tDBOutput_1);
				globalMap.put("tDBOutput_1_NB_LINE_INSERTED", nb_line_inserted_tDBOutput_1);
				globalMap.put("tDBOutput_1_NB_LINE_DELETED", nb_line_deleted_tDBOutput_1);
				globalMap.put("tDBOutput_1_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_1);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row4");
				}

				ok_Hash.put("tDBOutput_1", true);
				end_Hash.put("tDBOutput_1", System.currentTimeMillis());

				/**
				 * [tDBOutput_1 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			// free memory for "tMap_1"
			globalMap.remove("tHash_Lookup_row8");

			try {

				/**
				 * [tFileInputExcel_1 finally ] start
				 */

				currentComponent = "tFileInputExcel_1";

				/**
				 * [tFileInputExcel_1 finally ] stop
				 */

				/**
				 * [tMap_2 finally ] start
				 */

				currentComponent = "tMap_2";

				/**
				 * [tMap_2 finally ] stop
				 */

				/**
				 * [tFileInputExcel_2 finally ] start
				 */

				currentComponent = "tFileInputExcel_2";

				/**
				 * [tFileInputExcel_2 finally ] stop
				 */

				/**
				 * [tMap_4 finally ] start
				 */

				currentComponent = "tMap_4";

				/**
				 * [tMap_4 finally ] stop
				 */

				/**
				 * [tFileInputExcel_3 finally ] start
				 */

				currentComponent = "tFileInputExcel_3";

				/**
				 * [tFileInputExcel_3 finally ] stop
				 */

				/**
				 * [tMap_3 finally ] start
				 */

				currentComponent = "tMap_3";

				/**
				 * [tMap_3 finally ] stop
				 */

				/**
				 * [tFileInputExcel_5 finally ] start
				 */

				currentComponent = "tFileInputExcel_5";

				/**
				 * [tFileInputExcel_5 finally ] stop
				 */

				/**
				 * [tMap_6 finally ] start
				 */

				currentComponent = "tMap_6";

				/**
				 * [tMap_6 finally ] stop
				 */

				/**
				 * [tFileInputExcel_4 finally ] start
				 */

				currentComponent = "tFileInputExcel_4";

				/**
				 * [tFileInputExcel_4 finally ] stop
				 */

				/**
				 * [tMap_5 finally ] start
				 */

				currentComponent = "tMap_5";

				/**
				 * [tMap_5 finally ] stop
				 */

				/**
				 * [tFileInputExcel_11 finally ] start
				 */

				currentComponent = "tFileInputExcel_11";

				/**
				 * [tFileInputExcel_11 finally ] stop
				 */

				/**
				 * [tMap_11 finally ] start
				 */

				currentComponent = "tMap_11";

				/**
				 * [tMap_11 finally ] stop
				 */

				/**
				 * [tUnite_1 finally ] start
				 */

				currentComponent = "tUnite_1";

				/**
				 * [tUnite_1 finally ] stop
				 */

				/**
				 * [tMap_1 finally ] start
				 */

				currentComponent = "tMap_1";

				/**
				 * [tMap_1 finally ] stop
				 */

				/**
				 * [tUniqRow_2 finally ] start
				 */

				currentComponent = "tUniqRow_2";

				/**
				 * [tUniqRow_2 finally ] stop
				 */

				/**
				 * [tDBOutput_1 finally ] start
				 */

				currentComponent = "tDBOutput_1";

				try {
					if (resourceMap.get("statementClosed_tDBOutput_1") == null) {
						java.sql.PreparedStatement pstmtToClose_tDBOutput_1 = null;
						if ((pstmtToClose_tDBOutput_1 = (java.sql.PreparedStatement) resourceMap
								.remove("pstmt_tDBOutput_1")) != null) {
							pstmtToClose_tDBOutput_1.close();
						}
					}
				} finally {
					if (resourceMap.get("finish_tDBOutput_1") == null) {
						java.sql.Connection ctn_tDBOutput_1 = null;
						if ((ctn_tDBOutput_1 = (java.sql.Connection) resourceMap.get("conn_tDBOutput_1")) != null) {
							try {
								ctn_tDBOutput_1.close();
							} catch (java.sql.SQLException sqlEx_tDBOutput_1) {
								String errorMessage_tDBOutput_1 = "failed to close the connection in tDBOutput_1 :"
										+ sqlEx_tDBOutput_1.getMessage();
								System.err.println(errorMessage_tDBOutput_1);
							}
						}
					}
				}

				/**
				 * [tDBOutput_1 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tFileInputExcel_1_SUBPROCESS_STATE", 1);
	}

	public static class llllStruct implements routines.system.IPersistableRow<llllStruct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Type_Resiliation;

		public String getType_Resiliation() {
			return this.Type_Resiliation;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_Resiliation = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_Resiliation = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Type_Resiliation, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Type_Resiliation, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Type_Resiliation=" + Type_Resiliation);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(llllStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row18Struct implements routines.system.IPersistableRow<row18Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Type_Resiliation;

		public String getType_Resiliation() {
			return this.Type_Resiliation;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_Resiliation = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_Resiliation = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Type_Resiliation, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Type_Resiliation, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Type_Resiliation=" + Type_Resiliation);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row18Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class bbbbStruct implements routines.system.IPersistableRow<bbbbStruct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Type_Resiliation;

		public String getType_Resiliation() {
			return this.Type_Resiliation;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_Resiliation = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_Resiliation = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Type_Resiliation, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Type_Resiliation, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Type_Resiliation=" + Type_Resiliation);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(bbbbStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row17Struct implements routines.system.IPersistableRow<row17Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public Float Custcode;

		public Float getCustcode() {
			return this.Custcode;
		}

		public String Raison_Sociale;

		public String getRaison_Sociale() {
			return this.Raison_Sociale;
		}

		public String Groupe_Client;

		public String getGroupe_Client() {
			return this.Groupe_Client;
		}

		public String Account_Manager;

		public String getAccount_Manager() {
			return this.Account_Manager;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public Integer Somme_de_Resiliation;

		public Integer getSomme_de_Resiliation() {
			return this.Somme_de_Resiliation;
		}

		public String Type_Resiliation;

		public String getType_Resiliation() {
			return this.Type_Resiliation;
		}

		public String Motif;

		public String getMotif() {
			return this.Motif;
		}

		public String DFE;

		public String getDFE() {
			return this.DFE;
		}

		public String Engage_Oui_Non;

		public String getEngage_Oui_Non() {
			return this.Engage_Oui_Non;
		}

		public String Date_Depot;

		public String getDate_Depot() {
			return this.Date_Depot;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Resiliation = readInteger(dis);

					this.Type_Resiliation = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Resiliation = readInteger(dis);

					this.Type_Resiliation = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Resiliation, dos);

				// String

				writeString(this.Type_Resiliation, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// String

				writeString(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Resiliation, dos);

				// String

				writeString(this.Type_Resiliation, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// String

				writeString(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Custcode=" + String.valueOf(Custcode));
			sb.append(",Raison_Sociale=" + Raison_Sociale);
			sb.append(",Groupe_Client=" + Groupe_Client);
			sb.append(",Account_Manager=" + Account_Manager);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Somme_de_Resiliation=" + String.valueOf(Somme_de_Resiliation));
			sb.append(",Type_Resiliation=" + Type_Resiliation);
			sb.append(",Motif=" + Motif);
			sb.append(",DFE=" + DFE);
			sb.append(",Engage_Oui_Non=" + Engage_Oui_Non);
			sb.append(",Date_Depot=" + Date_Depot);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row17Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class after_tFileInputExcel_6Struct
			implements routines.system.IPersistableRow<after_tFileInputExcel_6Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public Float Custcode;

		public Float getCustcode() {
			return this.Custcode;
		}

		public String Raison_Sociale;

		public String getRaison_Sociale() {
			return this.Raison_Sociale;
		}

		public String Groupe_Client;

		public String getGroupe_Client() {
			return this.Groupe_Client;
		}

		public String Account_Manager;

		public String getAccount_Manager() {
			return this.Account_Manager;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public Integer Somme_de_Resiliation;

		public Integer getSomme_de_Resiliation() {
			return this.Somme_de_Resiliation;
		}

		public String Type_Resiliation;

		public String getType_Resiliation() {
			return this.Type_Resiliation;
		}

		public String Motif;

		public String getMotif() {
			return this.Motif;
		}

		public String DFE;

		public String getDFE() {
			return this.DFE;
		}

		public String Engage_Oui_Non;

		public String getEngage_Oui_Non() {
			return this.Engage_Oui_Non;
		}

		public String Date_Depot;

		public String getDate_Depot() {
			return this.Date_Depot;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Resiliation = readInteger(dis);

					this.Type_Resiliation = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Resiliation = readInteger(dis);

					this.Type_Resiliation = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Resiliation, dos);

				// String

				writeString(this.Type_Resiliation, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// String

				writeString(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Resiliation, dos);

				// String

				writeString(this.Type_Resiliation, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// String

				writeString(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Custcode=" + String.valueOf(Custcode));
			sb.append(",Raison_Sociale=" + Raison_Sociale);
			sb.append(",Groupe_Client=" + Groupe_Client);
			sb.append(",Account_Manager=" + Account_Manager);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Somme_de_Resiliation=" + String.valueOf(Somme_de_Resiliation));
			sb.append(",Type_Resiliation=" + Type_Resiliation);
			sb.append(",Motif=" + Motif);
			sb.append(",DFE=" + DFE);
			sb.append(",Engage_Oui_Non=" + Engage_Oui_Non);
			sb.append(",Date_Depot=" + Date_Depot);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(after_tFileInputExcel_6Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class aaaaStruct implements routines.system.IPersistableRow<aaaaStruct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Type_de_suspension;

		public String getType_de_suspension() {
			return this.Type_de_suspension;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_de_suspension = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_de_suspension = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Type_de_suspension, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Type_de_suspension, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Type_de_suspension=" + Type_de_suspension);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(aaaaStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row21Struct implements routines.system.IPersistableRow<row21Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public Float Custcode;

		public Float getCustcode() {
			return this.Custcode;
		}

		public String Raison_Sociale;

		public String getRaison_Sociale() {
			return this.Raison_Sociale;
		}

		public String Groupe_Client;

		public String getGroupe_Client() {
			return this.Groupe_Client;
		}

		public String Account_Manager;

		public String getAccount_Manager() {
			return this.Account_Manager;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public Integer Somme_de_Suspension;

		public Integer getSomme_de_Suspension() {
			return this.Somme_de_Suspension;
		}

		public String Type_de_suspension;

		public String getType_de_suspension() {
			return this.Type_de_suspension;
		}

		public String Motif;

		public String getMotif() {
			return this.Motif;
		}

		public String DFE;

		public String getDFE() {
			return this.DFE;
		}

		public String Engage_Oui_Non;

		public String getEngage_Oui_Non() {
			return this.Engage_Oui_Non;
		}

		public String Date_Depot;

		public String getDate_Depot() {
			return this.Date_Depot;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Suspension = readInteger(dis);

					this.Type_de_suspension = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Suspension = readInteger(dis);

					this.Type_de_suspension = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Suspension, dos);

				// String

				writeString(this.Type_de_suspension, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// String

				writeString(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Suspension, dos);

				// String

				writeString(this.Type_de_suspension, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// String

				writeString(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Custcode=" + String.valueOf(Custcode));
			sb.append(",Raison_Sociale=" + Raison_Sociale);
			sb.append(",Groupe_Client=" + Groupe_Client);
			sb.append(",Account_Manager=" + Account_Manager);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Somme_de_Suspension=" + String.valueOf(Somme_de_Suspension));
			sb.append(",Type_de_suspension=" + Type_de_suspension);
			sb.append(",Motif=" + Motif);
			sb.append(",DFE=" + DFE);
			sb.append(",Engage_Oui_Non=" + Engage_Oui_Non);
			sb.append(",Date_Depot=" + Date_Depot);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row21Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tFileInputExcel_6Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tFileInputExcel_6_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				tDBInput_6Process(globalMap);

				row17Struct row17 = new row17Struct();
				bbbbStruct bbbb = new bbbbStruct();

				row21Struct row21 = new row21Struct();
				aaaaStruct aaaa = new aaaaStruct();

				row18Struct row18 = new row18Struct();
				llllStruct llll = new llllStruct();

				/**
				 * [tDBOutput_6 begin ] start
				 */

				ok_Hash.put("tDBOutput_6", false);
				start_Hash.put("tDBOutput_6", System.currentTimeMillis());

				currentComponent = "tDBOutput_6";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "llll");
				}

				int tos_count_tDBOutput_6 = 0;

				int nb_line_tDBOutput_6 = 0;
				int nb_line_update_tDBOutput_6 = 0;
				int nb_line_inserted_tDBOutput_6 = 0;
				int nb_line_deleted_tDBOutput_6 = 0;
				int nb_line_rejected_tDBOutput_6 = 0;

				int deletedCount_tDBOutput_6 = 0;
				int updatedCount_tDBOutput_6 = 0;
				int insertedCount_tDBOutput_6 = 0;
				int rowsToCommitCount_tDBOutput_6 = 0;
				int rejectedCount_tDBOutput_6 = 0;
				String dbschema_tDBOutput_6 = null;
				String tableName_tDBOutput_6 = null;
				boolean whetherReject_tDBOutput_6 = false;

				java.util.Calendar calendar_tDBOutput_6 = java.util.Calendar.getInstance();
				long year1_tDBOutput_6 = TalendDate.parseDate("yyyy-MM-dd", "0001-01-01").getTime();
				long year2_tDBOutput_6 = TalendDate.parseDate("yyyy-MM-dd", "1753-01-01").getTime();
				long year10000_tDBOutput_6 = TalendDate.parseDate("yyyy-MM-dd HH:mm:ss", "9999-12-31 24:00:00")
						.getTime();
				long date_tDBOutput_6;

				java.util.Calendar calendar_datetimeoffset_tDBOutput_6 = java.util.Calendar
						.getInstance(java.util.TimeZone.getTimeZone("UTC"));

				java.sql.Connection conn_tDBOutput_6 = null;
				String dbUser_tDBOutput_6 = null;
				dbschema_tDBOutput_6 = "dbo";
				String driverClass_tDBOutput_6 = "net.sourceforge.jtds.jdbc.Driver";

				java.lang.Class.forName(driverClass_tDBOutput_6);
				String port_tDBOutput_6 = "1433";
				String dbname_tDBOutput_6 = "orange_DW__";
				String url_tDBOutput_6 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBOutput_6)) {
					url_tDBOutput_6 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBOutput_6)) {
					url_tDBOutput_6 += "//" + "orange_DW__";

				}
				url_tDBOutput_6 += ";appName=" + projectName + ";" + "";
				dbUser_tDBOutput_6 = "sa";

				final String decryptedPassword_tDBOutput_6 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:1nQvGaEs1LQ2kyOAr3L8SbySPsTwqCwyloHO9DmoY+RBQixYzkA=");

				String dbPwd_tDBOutput_6 = decryptedPassword_tDBOutput_6;
				conn_tDBOutput_6 = java.sql.DriverManager.getConnection(url_tDBOutput_6, dbUser_tDBOutput_6,
						dbPwd_tDBOutput_6);

				resourceMap.put("conn_tDBOutput_6", conn_tDBOutput_6);

				conn_tDBOutput_6.setAutoCommit(false);
				int commitEvery_tDBOutput_6 = 10000;
				int commitCounter_tDBOutput_6 = 0;

				int batchSize_tDBOutput_6 = 10000;
				int batchSizeCounter_tDBOutput_6 = 0;

				if (dbschema_tDBOutput_6 == null || dbschema_tDBOutput_6.trim().length() == 0) {
					tableName_tDBOutput_6 = "Dim_type";
				} else {
					tableName_tDBOutput_6 = dbschema_tDBOutput_6 + "].[" + "Dim_type";
				}
				int count_tDBOutput_6 = 0;

				String insert_tDBOutput_6 = "INSERT INTO [" + tableName_tDBOutput_6
						+ "] ([Type_Resiliation]) VALUES (?)";
				java.sql.PreparedStatement pstmt_tDBOutput_6 = conn_tDBOutput_6.prepareStatement(insert_tDBOutput_6);
				resourceMap.put("pstmt_tDBOutput_6", pstmt_tDBOutput_6);

				/**
				 * [tDBOutput_6 begin ] stop
				 */

				/**
				 * [tMap_16 begin ] start
				 */

				ok_Hash.put("tMap_16", false);
				start_Hash.put("tMap_16", System.currentTimeMillis());

				currentComponent = "tMap_16";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row18");
				}

				int tos_count_tMap_16 = 0;

// ###############################
// # Lookup's keys initialization

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row38Struct> tHash_Lookup_row38 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row38Struct>) ((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row38Struct>) globalMap
						.get("tHash_Lookup_row38"));

				row38Struct row38HashKey = new row38Struct();
				row38Struct row38Default = new row38Struct();
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_16__Struct {
				}
				Var__tMap_16__Struct Var__tMap_16 = new Var__tMap_16__Struct();
// ###############################

// ###############################
// # Outputs initialization
				llllStruct llll_tmp = new llllStruct();
// ###############################

				/**
				 * [tMap_16 begin ] stop
				 */

				/**
				 * [tUnite_2 begin ] start
				 */

				ok_Hash.put("tUnite_2", false);
				start_Hash.put("tUnite_2", System.currentTimeMillis());

				currentComponent = "tUnite_2";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "aaaa", "bbbb");
				}

				int tos_count_tUnite_2 = 0;

				int nb_line_tUnite_2 = 0;

				/**
				 * [tUnite_2 begin ] stop
				 */

				/**
				 * [tMap_12 begin ] start
				 */

				ok_Hash.put("tMap_12", false);
				start_Hash.put("tMap_12", System.currentTimeMillis());

				currentComponent = "tMap_12";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row17");
				}

				int tos_count_tMap_12 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_12__Struct {
				}
				Var__tMap_12__Struct Var__tMap_12 = new Var__tMap_12__Struct();
// ###############################

// ###############################
// # Outputs initialization
				bbbbStruct bbbb_tmp = new bbbbStruct();
// ###############################

				/**
				 * [tMap_12 begin ] stop
				 */

				/**
				 * [tFileInputExcel_6 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_6", false);
				start_Hash.put("tFileInputExcel_6", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_6";

				int tos_count_tFileInputExcel_6 = 0;

				final String decryptedPassword_tFileInputExcel_6 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:tBYUR5mTROs1fSeQPAj8m6uE5NnXwlBKnSDMrg==");
				String password_tFileInputExcel_6 = decryptedPassword_tFileInputExcel_6;
				if (password_tFileInputExcel_6.isEmpty()) {
					password_tFileInputExcel_6 = null;
				}
				class RegexUtil_tFileInputExcel_6 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_6 regexUtil_tFileInputExcel_6 = new RegexUtil_tFileInputExcel_6();

				Object source_tFileInputExcel_6 = "C:/Users/DELL/Downloads/parc facturé Mars 2022 (1).xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_6 = null;

				if (source_tFileInputExcel_6 instanceof String) {
					workbook_tFileInputExcel_6 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_6), password_tFileInputExcel_6,
									true);
				} else if (source_tFileInputExcel_6 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_6 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_6, password_tFileInputExcel_6);
				} else {
					workbook_tFileInputExcel_6 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_6 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_6.addAll(
							regexUtil_tFileInputExcel_6.getSheets(workbook_tFileInputExcel_6, "Résiliation", false));
					if (sheetList_tFileInputExcel_6.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_6 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_6 : sheetList_tFileInputExcel_6) {
						if (sheet_FilterNull_tFileInputExcel_6 != null
								&& sheetList_FilterNull_tFileInputExcel_6.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_6.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_6.add(sheet_FilterNull_tFileInputExcel_6);
						}
					}
					sheetList_tFileInputExcel_6 = sheetList_FilterNull_tFileInputExcel_6;
					if (sheetList_tFileInputExcel_6.size() > 0) {
						int nb_line_tFileInputExcel_6 = 0;

						int begin_line_tFileInputExcel_6 = 1;

						int footer_input_tFileInputExcel_6 = 0;

						int end_line_tFileInputExcel_6 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_6 : sheetList_tFileInputExcel_6) {
							end_line_tFileInputExcel_6 += (sheet_tFileInputExcel_6.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_6 -= footer_input_tFileInputExcel_6;
						int limit_tFileInputExcel_6 = -1;
						int start_column_tFileInputExcel_6 = 1 - 1;
						int end_column_tFileInputExcel_6 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_6 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_6 = sheetList_tFileInputExcel_6
								.get(0);
						int rowCount_tFileInputExcel_6 = 0;
						int sheetIndex_tFileInputExcel_6 = 0;
						int currentRows_tFileInputExcel_6 = (sheetList_tFileInputExcel_6.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_6 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_6 = df_tFileInputExcel_6.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_6 = begin_line_tFileInputExcel_6; i_tFileInputExcel_6 < end_line_tFileInputExcel_6; i_tFileInputExcel_6++) {

							int emptyColumnCount_tFileInputExcel_6 = 0;

							if (limit_tFileInputExcel_6 != -1 && nb_line_tFileInputExcel_6 >= limit_tFileInputExcel_6) {
								break;
							}

							while (i_tFileInputExcel_6 >= rowCount_tFileInputExcel_6 + currentRows_tFileInputExcel_6) {
								rowCount_tFileInputExcel_6 += currentRows_tFileInputExcel_6;
								sheet_tFileInputExcel_6 = sheetList_tFileInputExcel_6
										.get(++sheetIndex_tFileInputExcel_6);
								currentRows_tFileInputExcel_6 = (sheet_tFileInputExcel_6.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_6_CURRENT_SHEET", sheet_tFileInputExcel_6.getSheetName());
							if (rowCount_tFileInputExcel_6 <= i_tFileInputExcel_6) {
								row_tFileInputExcel_6 = sheet_tFileInputExcel_6
										.getRow(i_tFileInputExcel_6 - rowCount_tFileInputExcel_6);
							}
							row17 = null;
							int tempRowLength_tFileInputExcel_6 = 11;

							int columnIndex_tFileInputExcel_6 = 0;

							String[] temp_row_tFileInputExcel_6 = new String[tempRowLength_tFileInputExcel_6];
							int excel_end_column_tFileInputExcel_6;
							if (row_tFileInputExcel_6 == null) {
								excel_end_column_tFileInputExcel_6 = 0;
							} else {
								excel_end_column_tFileInputExcel_6 = row_tFileInputExcel_6.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_6;
							if (end_column_tFileInputExcel_6 == -1) {
								actual_end_column_tFileInputExcel_6 = excel_end_column_tFileInputExcel_6;
							} else {
								actual_end_column_tFileInputExcel_6 = end_column_tFileInputExcel_6 > excel_end_column_tFileInputExcel_6
										? excel_end_column_tFileInputExcel_6
										: end_column_tFileInputExcel_6;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_6 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_6; i++) {
								if (i + start_column_tFileInputExcel_6 < actual_end_column_tFileInputExcel_6) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_6 = row_tFileInputExcel_6
											.getCell(i + start_column_tFileInputExcel_6);
									if (cell_tFileInputExcel_6 != null) {
										switch (cell_tFileInputExcel_6.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_6[i] = cell_tFileInputExcel_6
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_6)) {
												temp_row_tFileInputExcel_6[i] = cell_tFileInputExcel_6
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_6[i] = df_tFileInputExcel_6
														.format(cell_tFileInputExcel_6.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_6[i] = String
													.valueOf(cell_tFileInputExcel_6.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_6.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_6[i] = cell_tFileInputExcel_6
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_6)) {
													temp_row_tFileInputExcel_6[i] = cell_tFileInputExcel_6
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_6 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_6.getNumericCellValue());
													temp_row_tFileInputExcel_6[i] = ne_tFileInputExcel_6
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_6[i] = String
														.valueOf(cell_tFileInputExcel_6.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_6[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_6[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_6[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_6[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_6 = false;
							row17 = new row17Struct();
							int curColNum_tFileInputExcel_6 = -1;
							String curColName_tFileInputExcel_6 = "";
							try {
								columnIndex_tFileInputExcel_6 = 0;

								if (temp_row_tFileInputExcel_6[columnIndex_tFileInputExcel_6].length() > 0) {
									curColNum_tFileInputExcel_6 = columnIndex_tFileInputExcel_6
											+ start_column_tFileInputExcel_6 + 1;
									curColName_tFileInputExcel_6 = "Custcode";

									row17.Custcode = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_6[columnIndex_tFileInputExcel_6], null,
											'.' == decimalChar_tFileInputExcel_6 ? null
													: decimalChar_tFileInputExcel_6));
								} else {
									row17.Custcode = null;
									emptyColumnCount_tFileInputExcel_6++;
								}
								columnIndex_tFileInputExcel_6 = 1;

								if (temp_row_tFileInputExcel_6[columnIndex_tFileInputExcel_6].length() > 0) {
									curColNum_tFileInputExcel_6 = columnIndex_tFileInputExcel_6
											+ start_column_tFileInputExcel_6 + 1;
									curColName_tFileInputExcel_6 = "Raison_Sociale";

									row17.Raison_Sociale = temp_row_tFileInputExcel_6[columnIndex_tFileInputExcel_6];
								} else {
									row17.Raison_Sociale = null;
									emptyColumnCount_tFileInputExcel_6++;
								}
								columnIndex_tFileInputExcel_6 = 2;

								if (temp_row_tFileInputExcel_6[columnIndex_tFileInputExcel_6].length() > 0) {
									curColNum_tFileInputExcel_6 = columnIndex_tFileInputExcel_6
											+ start_column_tFileInputExcel_6 + 1;
									curColName_tFileInputExcel_6 = "Groupe_Client";

									row17.Groupe_Client = temp_row_tFileInputExcel_6[columnIndex_tFileInputExcel_6];
								} else {
									row17.Groupe_Client = null;
									emptyColumnCount_tFileInputExcel_6++;
								}
								columnIndex_tFileInputExcel_6 = 3;

								if (temp_row_tFileInputExcel_6[columnIndex_tFileInputExcel_6].length() > 0) {
									curColNum_tFileInputExcel_6 = columnIndex_tFileInputExcel_6
											+ start_column_tFileInputExcel_6 + 1;
									curColName_tFileInputExcel_6 = "Account_Manager";

									row17.Account_Manager = temp_row_tFileInputExcel_6[columnIndex_tFileInputExcel_6];
								} else {
									row17.Account_Manager = null;
									emptyColumnCount_tFileInputExcel_6++;
								}
								columnIndex_tFileInputExcel_6 = 4;

								if (temp_row_tFileInputExcel_6[columnIndex_tFileInputExcel_6].length() > 0) {
									curColNum_tFileInputExcel_6 = columnIndex_tFileInputExcel_6
											+ start_column_tFileInputExcel_6 + 1;
									curColName_tFileInputExcel_6 = "Equipe";

									row17.Equipe = temp_row_tFileInputExcel_6[columnIndex_tFileInputExcel_6];
								} else {
									row17.Equipe = null;
									emptyColumnCount_tFileInputExcel_6++;
								}
								columnIndex_tFileInputExcel_6 = 5;

								if (temp_row_tFileInputExcel_6[columnIndex_tFileInputExcel_6].length() > 0) {
									curColNum_tFileInputExcel_6 = columnIndex_tFileInputExcel_6
											+ start_column_tFileInputExcel_6 + 1;
									curColName_tFileInputExcel_6 = "Somme_de_Resiliation";

									row17.Somme_de_Resiliation = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_6[columnIndex_tFileInputExcel_6], null,
											'.' == decimalChar_tFileInputExcel_6 ? null
													: decimalChar_tFileInputExcel_6));
								} else {
									row17.Somme_de_Resiliation = null;
									emptyColumnCount_tFileInputExcel_6++;
								}
								columnIndex_tFileInputExcel_6 = 6;

								if (temp_row_tFileInputExcel_6[columnIndex_tFileInputExcel_6].length() > 0) {
									curColNum_tFileInputExcel_6 = columnIndex_tFileInputExcel_6
											+ start_column_tFileInputExcel_6 + 1;
									curColName_tFileInputExcel_6 = "Type_Resiliation";

									row17.Type_Resiliation = temp_row_tFileInputExcel_6[columnIndex_tFileInputExcel_6];
								} else {
									row17.Type_Resiliation = null;
									emptyColumnCount_tFileInputExcel_6++;
								}
								columnIndex_tFileInputExcel_6 = 7;

								if (temp_row_tFileInputExcel_6[columnIndex_tFileInputExcel_6].length() > 0) {
									curColNum_tFileInputExcel_6 = columnIndex_tFileInputExcel_6
											+ start_column_tFileInputExcel_6 + 1;
									curColName_tFileInputExcel_6 = "Motif";

									row17.Motif = temp_row_tFileInputExcel_6[columnIndex_tFileInputExcel_6];
								} else {
									row17.Motif = null;
									emptyColumnCount_tFileInputExcel_6++;
								}
								columnIndex_tFileInputExcel_6 = 8;

								if (temp_row_tFileInputExcel_6[columnIndex_tFileInputExcel_6].length() > 0) {
									curColNum_tFileInputExcel_6 = columnIndex_tFileInputExcel_6
											+ start_column_tFileInputExcel_6 + 1;
									curColName_tFileInputExcel_6 = "DFE";

									row17.DFE = temp_row_tFileInputExcel_6[columnIndex_tFileInputExcel_6];
								} else {
									row17.DFE = null;
									emptyColumnCount_tFileInputExcel_6++;
								}
								columnIndex_tFileInputExcel_6 = 9;

								if (temp_row_tFileInputExcel_6[columnIndex_tFileInputExcel_6].length() > 0) {
									curColNum_tFileInputExcel_6 = columnIndex_tFileInputExcel_6
											+ start_column_tFileInputExcel_6 + 1;
									curColName_tFileInputExcel_6 = "Engage_Oui_Non";

									row17.Engage_Oui_Non = temp_row_tFileInputExcel_6[columnIndex_tFileInputExcel_6];
								} else {
									row17.Engage_Oui_Non = null;
									emptyColumnCount_tFileInputExcel_6++;
								}
								columnIndex_tFileInputExcel_6 = 10;

								if (temp_row_tFileInputExcel_6[columnIndex_tFileInputExcel_6].length() > 0) {
									curColNum_tFileInputExcel_6 = columnIndex_tFileInputExcel_6
											+ start_column_tFileInputExcel_6 + 1;
									curColName_tFileInputExcel_6 = "Date_Depot";

									row17.Date_Depot = temp_row_tFileInputExcel_6[columnIndex_tFileInputExcel_6];
								} else {
									row17.Date_Depot = null;
									emptyColumnCount_tFileInputExcel_6++;
								}

								nb_line_tFileInputExcel_6++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_6_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_6 = true;
								System.err.println(e.getMessage());
								row17 = null;
							}

							/**
							 * [tFileInputExcel_6 begin ] stop
							 */

							/**
							 * [tFileInputExcel_6 main ] start
							 */

							currentComponent = "tFileInputExcel_6";

							tos_count_tFileInputExcel_6++;

							/**
							 * [tFileInputExcel_6 main ] stop
							 */

							/**
							 * [tFileInputExcel_6 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_6";

							/**
							 * [tFileInputExcel_6 process_data_begin ] stop
							 */
// Start of branch "row17"
							if (row17 != null) {

								/**
								 * [tMap_12 main ] start
								 */

								currentComponent = "tMap_12";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row17"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_12 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_12 = false;
								boolean mainRowRejected_tMap_12 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_12__Struct Var = Var__tMap_12;// ###############################
									// ###############################
									// # Output tables

									bbbb = null;

// # Output table : 'bbbb'
									bbbb_tmp.Type_Resiliation = row17.Type_Resiliation;
									bbbb = bbbb_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_12 = false;

								tos_count_tMap_12++;

								/**
								 * [tMap_12 main ] stop
								 */

								/**
								 * [tMap_12 process_data_begin ] start
								 */

								currentComponent = "tMap_12";

								/**
								 * [tMap_12 process_data_begin ] stop
								 */
// Start of branch "bbbb"
								if (bbbb != null) {

									/**
									 * [tUnite_2 main ] start
									 */

									currentComponent = "tUnite_2";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "bbbb"

										);
									}

//////////

// for output
									row18 = new row18Struct();

									row18.Type_Resiliation = bbbb.Type_Resiliation;

									nb_line_tUnite_2++;

//////////

									tos_count_tUnite_2++;

									/**
									 * [tUnite_2 main ] stop
									 */

									/**
									 * [tUnite_2 process_data_begin ] start
									 */

									currentComponent = "tUnite_2";

									/**
									 * [tUnite_2 process_data_begin ] stop
									 */

									/**
									 * [tMap_16 main ] start
									 */

									currentComponent = "tMap_16";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "row18"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_16 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_16 = false;
									boolean mainRowRejected_tMap_16 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row38"
									///////////////////////////////////////////////

									boolean forceLooprow38 = false;

									row38Struct row38ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_16) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_16 = false;

										row38HashKey.Type_Resiliation = row18.Type_Resiliation;

										row38HashKey.hashCodeDirty = true;

										tHash_Lookup_row38.lookup(row38HashKey);

										if (!tHash_Lookup_row38.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_16 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row38 != null && tHash_Lookup_row38.getCount(row38HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row38' and it contains more one result from keys : row38.Type_Resiliation =
										// '" + row38HashKey.Type_Resiliation + "'");
									} // G 071

									row38Struct row38 = null;

									row38Struct fromLookup_row38 = null;
									row38 = row38Default;

									if (tHash_Lookup_row38 != null && tHash_Lookup_row38.hasNext()) { // G 099

										fromLookup_row38 = tHash_Lookup_row38.next();

									} // G 099

									if (fromLookup_row38 != null) {
										row38 = fromLookup_row38;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_16__Struct Var = Var__tMap_16;// ###############################
										// ###############################
										// # Output tables

										llll = null;

										if (!rejectedInnerJoin_tMap_16) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'llll'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_16) {
											llll_tmp.Type_Resiliation = row18.Type_Resiliation;
											llll = llll_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_16 = false;

									tos_count_tMap_16++;

									/**
									 * [tMap_16 main ] stop
									 */

									/**
									 * [tMap_16 process_data_begin ] start
									 */

									currentComponent = "tMap_16";

									/**
									 * [tMap_16 process_data_begin ] stop
									 */
// Start of branch "llll"
									if (llll != null) {

										/**
										 * [tDBOutput_6 main ] start
										 */

										currentComponent = "tDBOutput_6";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "llll"

											);
										}

										whetherReject_tDBOutput_6 = false;
										if (llll.Type_Resiliation == null) {
											pstmt_tDBOutput_6.setNull(1, java.sql.Types.VARCHAR);
										} else {
											pstmt_tDBOutput_6.setString(1, llll.Type_Resiliation);
										}

										pstmt_tDBOutput_6.addBatch();
										nb_line_tDBOutput_6++;

										batchSizeCounter_tDBOutput_6++;

										////////// batch execute by batch size///////
										class LimitBytesHelper_tDBOutput_6 {
											public int limitBytePart1(int counter,
													java.sql.PreparedStatement pstmt_tDBOutput_6) throws Exception {
												try {

													for (int countEach_tDBOutput_6 : pstmt_tDBOutput_6.executeBatch()) {
														if (countEach_tDBOutput_6 == -2
																|| countEach_tDBOutput_6 == -3) {
															break;
														}
														counter += countEach_tDBOutput_6;
													}

												} catch (java.sql.BatchUpdateException e) {
													globalMap.put("tDBOutput_6_ERROR_MESSAGE", e.getMessage());

													int countSum_tDBOutput_6 = 0;
													for (int countEach_tDBOutput_6 : e.getUpdateCounts()) {
														counter += (countEach_tDBOutput_6 < 0 ? 0
																: countEach_tDBOutput_6);
													}

													System.err.println(e.getMessage());

												}
												return counter;
											}

											public int limitBytePart2(int counter,
													java.sql.PreparedStatement pstmt_tDBOutput_6) throws Exception {
												try {

													for (int countEach_tDBOutput_6 : pstmt_tDBOutput_6.executeBatch()) {
														if (countEach_tDBOutput_6 == -2
																|| countEach_tDBOutput_6 == -3) {
															break;
														}
														counter += countEach_tDBOutput_6;
													}

												} catch (java.sql.BatchUpdateException e) {
													globalMap.put("tDBOutput_6_ERROR_MESSAGE", e.getMessage());

													for (int countEach_tDBOutput_6 : e.getUpdateCounts()) {
														counter += (countEach_tDBOutput_6 < 0 ? 0
																: countEach_tDBOutput_6);
													}

													System.err.println(e.getMessage());

												}
												return counter;
											}
										}
										if ((batchSize_tDBOutput_6 > 0)
												&& (batchSize_tDBOutput_6 <= batchSizeCounter_tDBOutput_6)) {

											insertedCount_tDBOutput_6 = new LimitBytesHelper_tDBOutput_6()
													.limitBytePart1(insertedCount_tDBOutput_6, pstmt_tDBOutput_6);
											rowsToCommitCount_tDBOutput_6 = insertedCount_tDBOutput_6;

											batchSizeCounter_tDBOutput_6 = 0;
										}

										//////////// commit every////////////

										commitCounter_tDBOutput_6++;
										if (commitEvery_tDBOutput_6 <= commitCounter_tDBOutput_6) {
											if ((batchSize_tDBOutput_6 > 0) && (batchSizeCounter_tDBOutput_6 > 0)) {

												insertedCount_tDBOutput_6 = new LimitBytesHelper_tDBOutput_6()
														.limitBytePart1(insertedCount_tDBOutput_6, pstmt_tDBOutput_6);

												batchSizeCounter_tDBOutput_6 = 0;
											}
											if (rowsToCommitCount_tDBOutput_6 != 0) {

											}
											conn_tDBOutput_6.commit();
											if (rowsToCommitCount_tDBOutput_6 != 0) {

												rowsToCommitCount_tDBOutput_6 = 0;
											}
											commitCounter_tDBOutput_6 = 0;
										}

										tos_count_tDBOutput_6++;

										/**
										 * [tDBOutput_6 main ] stop
										 */

										/**
										 * [tDBOutput_6 process_data_begin ] start
										 */

										currentComponent = "tDBOutput_6";

										/**
										 * [tDBOutput_6 process_data_begin ] stop
										 */

										/**
										 * [tDBOutput_6 process_data_end ] start
										 */

										currentComponent = "tDBOutput_6";

										/**
										 * [tDBOutput_6 process_data_end ] stop
										 */

									} // End of branch "llll"

									/**
									 * [tMap_16 process_data_end ] start
									 */

									currentComponent = "tMap_16";

									/**
									 * [tMap_16 process_data_end ] stop
									 */

									/**
									 * [tUnite_2 process_data_end ] start
									 */

									currentComponent = "tUnite_2";

									/**
									 * [tUnite_2 process_data_end ] stop
									 */

								} // End of branch "bbbb"

								/**
								 * [tMap_12 process_data_end ] start
								 */

								currentComponent = "tMap_12";

								/**
								 * [tMap_12 process_data_end ] stop
								 */

							} // End of branch "row17"

							/**
							 * [tFileInputExcel_6 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_6";

							/**
							 * [tFileInputExcel_6 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_6 end ] start
							 */

							currentComponent = "tFileInputExcel_6";

						}

						globalMap.put("tFileInputExcel_6_NB_LINE", nb_line_tFileInputExcel_6);

					}

				} finally {

					if (!(source_tFileInputExcel_6 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_6.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_6", true);
				end_Hash.put("tFileInputExcel_6", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_6 end ] stop
				 */

				/**
				 * [tMap_12 end ] start
				 */

				currentComponent = "tMap_12";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row17");
				}

				ok_Hash.put("tMap_12", true);
				end_Hash.put("tMap_12", System.currentTimeMillis());

				/**
				 * [tMap_12 end ] stop
				 */

				/**
				 * [tMap_15 begin ] start
				 */

				ok_Hash.put("tMap_15", false);
				start_Hash.put("tMap_15", System.currentTimeMillis());

				currentComponent = "tMap_15";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row21");
				}

				int tos_count_tMap_15 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_15__Struct {
				}
				Var__tMap_15__Struct Var__tMap_15 = new Var__tMap_15__Struct();
// ###############################

// ###############################
// # Outputs initialization
				aaaaStruct aaaa_tmp = new aaaaStruct();
// ###############################

				/**
				 * [tMap_15 begin ] stop
				 */

				/**
				 * [tFileInputExcel_7 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_7", false);
				start_Hash.put("tFileInputExcel_7", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_7";

				int tos_count_tFileInputExcel_7 = 0;

				final String decryptedPassword_tFileInputExcel_7 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:u2nMW2poJBEvFUkE/tsLyaGfx19ZaiveihPZ1Q==");
				String password_tFileInputExcel_7 = decryptedPassword_tFileInputExcel_7;
				if (password_tFileInputExcel_7.isEmpty()) {
					password_tFileInputExcel_7 = null;
				}
				class RegexUtil_tFileInputExcel_7 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_7 regexUtil_tFileInputExcel_7 = new RegexUtil_tFileInputExcel_7();

				Object source_tFileInputExcel_7 = "C:/Users/DELL/Downloads/parc facturé Mars 2022 (1).xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_7 = null;

				if (source_tFileInputExcel_7 instanceof String) {
					workbook_tFileInputExcel_7 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_7), password_tFileInputExcel_7,
									true);
				} else if (source_tFileInputExcel_7 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_7 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_7, password_tFileInputExcel_7);
				} else {
					workbook_tFileInputExcel_7 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_7 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_7.addAll(
							regexUtil_tFileInputExcel_7.getSheets(workbook_tFileInputExcel_7, "Suspension", false));
					if (sheetList_tFileInputExcel_7.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_7 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_7 : sheetList_tFileInputExcel_7) {
						if (sheet_FilterNull_tFileInputExcel_7 != null
								&& sheetList_FilterNull_tFileInputExcel_7.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_7.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_7.add(sheet_FilterNull_tFileInputExcel_7);
						}
					}
					sheetList_tFileInputExcel_7 = sheetList_FilterNull_tFileInputExcel_7;
					if (sheetList_tFileInputExcel_7.size() > 0) {
						int nb_line_tFileInputExcel_7 = 0;

						int begin_line_tFileInputExcel_7 = 1;

						int footer_input_tFileInputExcel_7 = 0;

						int end_line_tFileInputExcel_7 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_7 : sheetList_tFileInputExcel_7) {
							end_line_tFileInputExcel_7 += (sheet_tFileInputExcel_7.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_7 -= footer_input_tFileInputExcel_7;
						int limit_tFileInputExcel_7 = -1;
						int start_column_tFileInputExcel_7 = 1 - 1;
						int end_column_tFileInputExcel_7 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_7 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_7 = sheetList_tFileInputExcel_7
								.get(0);
						int rowCount_tFileInputExcel_7 = 0;
						int sheetIndex_tFileInputExcel_7 = 0;
						int currentRows_tFileInputExcel_7 = (sheetList_tFileInputExcel_7.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_7 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_7 = df_tFileInputExcel_7.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_7 = begin_line_tFileInputExcel_7; i_tFileInputExcel_7 < end_line_tFileInputExcel_7; i_tFileInputExcel_7++) {

							int emptyColumnCount_tFileInputExcel_7 = 0;

							if (limit_tFileInputExcel_7 != -1 && nb_line_tFileInputExcel_7 >= limit_tFileInputExcel_7) {
								break;
							}

							while (i_tFileInputExcel_7 >= rowCount_tFileInputExcel_7 + currentRows_tFileInputExcel_7) {
								rowCount_tFileInputExcel_7 += currentRows_tFileInputExcel_7;
								sheet_tFileInputExcel_7 = sheetList_tFileInputExcel_7
										.get(++sheetIndex_tFileInputExcel_7);
								currentRows_tFileInputExcel_7 = (sheet_tFileInputExcel_7.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_7_CURRENT_SHEET", sheet_tFileInputExcel_7.getSheetName());
							if (rowCount_tFileInputExcel_7 <= i_tFileInputExcel_7) {
								row_tFileInputExcel_7 = sheet_tFileInputExcel_7
										.getRow(i_tFileInputExcel_7 - rowCount_tFileInputExcel_7);
							}
							row21 = null;
							int tempRowLength_tFileInputExcel_7 = 11;

							int columnIndex_tFileInputExcel_7 = 0;

							String[] temp_row_tFileInputExcel_7 = new String[tempRowLength_tFileInputExcel_7];
							int excel_end_column_tFileInputExcel_7;
							if (row_tFileInputExcel_7 == null) {
								excel_end_column_tFileInputExcel_7 = 0;
							} else {
								excel_end_column_tFileInputExcel_7 = row_tFileInputExcel_7.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_7;
							if (end_column_tFileInputExcel_7 == -1) {
								actual_end_column_tFileInputExcel_7 = excel_end_column_tFileInputExcel_7;
							} else {
								actual_end_column_tFileInputExcel_7 = end_column_tFileInputExcel_7 > excel_end_column_tFileInputExcel_7
										? excel_end_column_tFileInputExcel_7
										: end_column_tFileInputExcel_7;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_7 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_7; i++) {
								if (i + start_column_tFileInputExcel_7 < actual_end_column_tFileInputExcel_7) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_7 = row_tFileInputExcel_7
											.getCell(i + start_column_tFileInputExcel_7);
									if (cell_tFileInputExcel_7 != null) {
										switch (cell_tFileInputExcel_7.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_7[i] = cell_tFileInputExcel_7
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_7)) {
												temp_row_tFileInputExcel_7[i] = cell_tFileInputExcel_7
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_7[i] = df_tFileInputExcel_7
														.format(cell_tFileInputExcel_7.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_7[i] = String
													.valueOf(cell_tFileInputExcel_7.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_7.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_7[i] = cell_tFileInputExcel_7
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_7)) {
													temp_row_tFileInputExcel_7[i] = cell_tFileInputExcel_7
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_7 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_7.getNumericCellValue());
													temp_row_tFileInputExcel_7[i] = ne_tFileInputExcel_7
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_7[i] = String
														.valueOf(cell_tFileInputExcel_7.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_7[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_7[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_7[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_7[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_7 = false;
							row21 = new row21Struct();
							int curColNum_tFileInputExcel_7 = -1;
							String curColName_tFileInputExcel_7 = "";
							try {
								columnIndex_tFileInputExcel_7 = 0;

								if (temp_row_tFileInputExcel_7[columnIndex_tFileInputExcel_7].length() > 0) {
									curColNum_tFileInputExcel_7 = columnIndex_tFileInputExcel_7
											+ start_column_tFileInputExcel_7 + 1;
									curColName_tFileInputExcel_7 = "Custcode";

									row21.Custcode = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_7[columnIndex_tFileInputExcel_7], null,
											'.' == decimalChar_tFileInputExcel_7 ? null
													: decimalChar_tFileInputExcel_7));
								} else {
									row21.Custcode = null;
									emptyColumnCount_tFileInputExcel_7++;
								}
								columnIndex_tFileInputExcel_7 = 1;

								if (temp_row_tFileInputExcel_7[columnIndex_tFileInputExcel_7].length() > 0) {
									curColNum_tFileInputExcel_7 = columnIndex_tFileInputExcel_7
											+ start_column_tFileInputExcel_7 + 1;
									curColName_tFileInputExcel_7 = "Raison_Sociale";

									row21.Raison_Sociale = temp_row_tFileInputExcel_7[columnIndex_tFileInputExcel_7];
								} else {
									row21.Raison_Sociale = null;
									emptyColumnCount_tFileInputExcel_7++;
								}
								columnIndex_tFileInputExcel_7 = 2;

								if (temp_row_tFileInputExcel_7[columnIndex_tFileInputExcel_7].length() > 0) {
									curColNum_tFileInputExcel_7 = columnIndex_tFileInputExcel_7
											+ start_column_tFileInputExcel_7 + 1;
									curColName_tFileInputExcel_7 = "Groupe_Client";

									row21.Groupe_Client = temp_row_tFileInputExcel_7[columnIndex_tFileInputExcel_7];
								} else {
									row21.Groupe_Client = null;
									emptyColumnCount_tFileInputExcel_7++;
								}
								columnIndex_tFileInputExcel_7 = 3;

								if (temp_row_tFileInputExcel_7[columnIndex_tFileInputExcel_7].length() > 0) {
									curColNum_tFileInputExcel_7 = columnIndex_tFileInputExcel_7
											+ start_column_tFileInputExcel_7 + 1;
									curColName_tFileInputExcel_7 = "Account_Manager";

									row21.Account_Manager = temp_row_tFileInputExcel_7[columnIndex_tFileInputExcel_7];
								} else {
									row21.Account_Manager = null;
									emptyColumnCount_tFileInputExcel_7++;
								}
								columnIndex_tFileInputExcel_7 = 4;

								if (temp_row_tFileInputExcel_7[columnIndex_tFileInputExcel_7].length() > 0) {
									curColNum_tFileInputExcel_7 = columnIndex_tFileInputExcel_7
											+ start_column_tFileInputExcel_7 + 1;
									curColName_tFileInputExcel_7 = "Equipe";

									row21.Equipe = temp_row_tFileInputExcel_7[columnIndex_tFileInputExcel_7];
								} else {
									row21.Equipe = null;
									emptyColumnCount_tFileInputExcel_7++;
								}
								columnIndex_tFileInputExcel_7 = 5;

								if (temp_row_tFileInputExcel_7[columnIndex_tFileInputExcel_7].length() > 0) {
									curColNum_tFileInputExcel_7 = columnIndex_tFileInputExcel_7
											+ start_column_tFileInputExcel_7 + 1;
									curColName_tFileInputExcel_7 = "Somme_de_Suspension";

									row21.Somme_de_Suspension = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_7[columnIndex_tFileInputExcel_7], null,
											'.' == decimalChar_tFileInputExcel_7 ? null
													: decimalChar_tFileInputExcel_7));
								} else {
									row21.Somme_de_Suspension = null;
									emptyColumnCount_tFileInputExcel_7++;
								}
								columnIndex_tFileInputExcel_7 = 6;

								if (temp_row_tFileInputExcel_7[columnIndex_tFileInputExcel_7].length() > 0) {
									curColNum_tFileInputExcel_7 = columnIndex_tFileInputExcel_7
											+ start_column_tFileInputExcel_7 + 1;
									curColName_tFileInputExcel_7 = "Type_de_suspension";

									row21.Type_de_suspension = temp_row_tFileInputExcel_7[columnIndex_tFileInputExcel_7];
								} else {
									row21.Type_de_suspension = null;
									emptyColumnCount_tFileInputExcel_7++;
								}
								columnIndex_tFileInputExcel_7 = 7;

								if (temp_row_tFileInputExcel_7[columnIndex_tFileInputExcel_7].length() > 0) {
									curColNum_tFileInputExcel_7 = columnIndex_tFileInputExcel_7
											+ start_column_tFileInputExcel_7 + 1;
									curColName_tFileInputExcel_7 = "Motif";

									row21.Motif = temp_row_tFileInputExcel_7[columnIndex_tFileInputExcel_7];
								} else {
									row21.Motif = null;
									emptyColumnCount_tFileInputExcel_7++;
								}
								columnIndex_tFileInputExcel_7 = 8;

								if (temp_row_tFileInputExcel_7[columnIndex_tFileInputExcel_7].length() > 0) {
									curColNum_tFileInputExcel_7 = columnIndex_tFileInputExcel_7
											+ start_column_tFileInputExcel_7 + 1;
									curColName_tFileInputExcel_7 = "DFE";

									row21.DFE = temp_row_tFileInputExcel_7[columnIndex_tFileInputExcel_7];
								} else {
									row21.DFE = null;
									emptyColumnCount_tFileInputExcel_7++;
								}
								columnIndex_tFileInputExcel_7 = 9;

								if (temp_row_tFileInputExcel_7[columnIndex_tFileInputExcel_7].length() > 0) {
									curColNum_tFileInputExcel_7 = columnIndex_tFileInputExcel_7
											+ start_column_tFileInputExcel_7 + 1;
									curColName_tFileInputExcel_7 = "Engage_Oui_Non";

									row21.Engage_Oui_Non = temp_row_tFileInputExcel_7[columnIndex_tFileInputExcel_7];
								} else {
									row21.Engage_Oui_Non = null;
									emptyColumnCount_tFileInputExcel_7++;
								}
								columnIndex_tFileInputExcel_7 = 10;

								if (temp_row_tFileInputExcel_7[columnIndex_tFileInputExcel_7].length() > 0) {
									curColNum_tFileInputExcel_7 = columnIndex_tFileInputExcel_7
											+ start_column_tFileInputExcel_7 + 1;
									curColName_tFileInputExcel_7 = "Date_Depot";

									row21.Date_Depot = temp_row_tFileInputExcel_7[columnIndex_tFileInputExcel_7];
								} else {
									row21.Date_Depot = null;
									emptyColumnCount_tFileInputExcel_7++;
								}

								nb_line_tFileInputExcel_7++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_7_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_7 = true;
								System.err.println(e.getMessage());
								row21 = null;
							}

							/**
							 * [tFileInputExcel_7 begin ] stop
							 */

							/**
							 * [tFileInputExcel_7 main ] start
							 */

							currentComponent = "tFileInputExcel_7";

							tos_count_tFileInputExcel_7++;

							/**
							 * [tFileInputExcel_7 main ] stop
							 */

							/**
							 * [tFileInputExcel_7 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_7";

							/**
							 * [tFileInputExcel_7 process_data_begin ] stop
							 */
// Start of branch "row21"
							if (row21 != null) {

								/**
								 * [tMap_15 main ] start
								 */

								currentComponent = "tMap_15";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row21"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_15 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_15 = false;
								boolean mainRowRejected_tMap_15 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_15__Struct Var = Var__tMap_15;// ###############################
									// ###############################
									// # Output tables

									aaaa = null;

// # Output table : 'aaaa'
									aaaa_tmp.Type_de_suspension = row21.Type_de_suspension;
									aaaa = aaaa_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_15 = false;

								tos_count_tMap_15++;

								/**
								 * [tMap_15 main ] stop
								 */

								/**
								 * [tMap_15 process_data_begin ] start
								 */

								currentComponent = "tMap_15";

								/**
								 * [tMap_15 process_data_begin ] stop
								 */
// Start of branch "aaaa"
								if (aaaa != null) {

									/**
									 * [tUnite_2 main ] start
									 */

									currentComponent = "tUnite_2";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "aaaa"

										);
									}

//////////

// for output
									row18 = new row18Struct();

									row18.Type_Resiliation = aaaa.Type_de_suspension;

									nb_line_tUnite_2++;

//////////

									tos_count_tUnite_2++;

									/**
									 * [tUnite_2 main ] stop
									 */

									/**
									 * [tUnite_2 process_data_begin ] start
									 */

									currentComponent = "tUnite_2";

									/**
									 * [tUnite_2 process_data_begin ] stop
									 */

									/**
									 * [tMap_16 main ] start
									 */

									currentComponent = "tMap_16";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "row18"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_16 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_16 = false;
									boolean mainRowRejected_tMap_16 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row38"
									///////////////////////////////////////////////

									boolean forceLooprow38 = false;

									row38Struct row38ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_16) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_16 = false;

										row38HashKey.Type_Resiliation = row18.Type_Resiliation;

										row38HashKey.hashCodeDirty = true;

										tHash_Lookup_row38.lookup(row38HashKey);

										if (!tHash_Lookup_row38.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_16 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row38 != null && tHash_Lookup_row38.getCount(row38HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row38' and it contains more one result from keys : row38.Type_Resiliation =
										// '" + row38HashKey.Type_Resiliation + "'");
									} // G 071

									row38Struct row38 = null;

									row38Struct fromLookup_row38 = null;
									row38 = row38Default;

									if (tHash_Lookup_row38 != null && tHash_Lookup_row38.hasNext()) { // G 099

										fromLookup_row38 = tHash_Lookup_row38.next();

									} // G 099

									if (fromLookup_row38 != null) {
										row38 = fromLookup_row38;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_16__Struct Var = Var__tMap_16;// ###############################
										// ###############################
										// # Output tables

										llll = null;

										if (!rejectedInnerJoin_tMap_16) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'llll'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_16) {
											llll_tmp.Type_Resiliation = row18.Type_Resiliation;
											llll = llll_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_16 = false;

									tos_count_tMap_16++;

									/**
									 * [tMap_16 main ] stop
									 */

									/**
									 * [tMap_16 process_data_begin ] start
									 */

									currentComponent = "tMap_16";

									/**
									 * [tMap_16 process_data_begin ] stop
									 */
// Start of branch "llll"
									if (llll != null) {

										/**
										 * [tDBOutput_6 main ] start
										 */

										currentComponent = "tDBOutput_6";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "llll"

											);
										}

										whetherReject_tDBOutput_6 = false;
										if (llll.Type_Resiliation == null) {
											pstmt_tDBOutput_6.setNull(1, java.sql.Types.VARCHAR);
										} else {
											pstmt_tDBOutput_6.setString(1, llll.Type_Resiliation);
										}

										pstmt_tDBOutput_6.addBatch();
										nb_line_tDBOutput_6++;

										batchSizeCounter_tDBOutput_6++;

										////////// batch execute by batch size///////
										class LimitBytesHelper_tDBOutput_6 {
											public int limitBytePart1(int counter,
													java.sql.PreparedStatement pstmt_tDBOutput_6) throws Exception {
												try {

													for (int countEach_tDBOutput_6 : pstmt_tDBOutput_6.executeBatch()) {
														if (countEach_tDBOutput_6 == -2
																|| countEach_tDBOutput_6 == -3) {
															break;
														}
														counter += countEach_tDBOutput_6;
													}

												} catch (java.sql.BatchUpdateException e) {
													globalMap.put("tDBOutput_6_ERROR_MESSAGE", e.getMessage());

													int countSum_tDBOutput_6 = 0;
													for (int countEach_tDBOutput_6 : e.getUpdateCounts()) {
														counter += (countEach_tDBOutput_6 < 0 ? 0
																: countEach_tDBOutput_6);
													}

													System.err.println(e.getMessage());

												}
												return counter;
											}

											public int limitBytePart2(int counter,
													java.sql.PreparedStatement pstmt_tDBOutput_6) throws Exception {
												try {

													for (int countEach_tDBOutput_6 : pstmt_tDBOutput_6.executeBatch()) {
														if (countEach_tDBOutput_6 == -2
																|| countEach_tDBOutput_6 == -3) {
															break;
														}
														counter += countEach_tDBOutput_6;
													}

												} catch (java.sql.BatchUpdateException e) {
													globalMap.put("tDBOutput_6_ERROR_MESSAGE", e.getMessage());

													for (int countEach_tDBOutput_6 : e.getUpdateCounts()) {
														counter += (countEach_tDBOutput_6 < 0 ? 0
																: countEach_tDBOutput_6);
													}

													System.err.println(e.getMessage());

												}
												return counter;
											}
										}
										if ((batchSize_tDBOutput_6 > 0)
												&& (batchSize_tDBOutput_6 <= batchSizeCounter_tDBOutput_6)) {

											insertedCount_tDBOutput_6 = new LimitBytesHelper_tDBOutput_6()
													.limitBytePart1(insertedCount_tDBOutput_6, pstmt_tDBOutput_6);
											rowsToCommitCount_tDBOutput_6 = insertedCount_tDBOutput_6;

											batchSizeCounter_tDBOutput_6 = 0;
										}

										//////////// commit every////////////

										commitCounter_tDBOutput_6++;
										if (commitEvery_tDBOutput_6 <= commitCounter_tDBOutput_6) {
											if ((batchSize_tDBOutput_6 > 0) && (batchSizeCounter_tDBOutput_6 > 0)) {

												insertedCount_tDBOutput_6 = new LimitBytesHelper_tDBOutput_6()
														.limitBytePart1(insertedCount_tDBOutput_6, pstmt_tDBOutput_6);

												batchSizeCounter_tDBOutput_6 = 0;
											}
											if (rowsToCommitCount_tDBOutput_6 != 0) {

											}
											conn_tDBOutput_6.commit();
											if (rowsToCommitCount_tDBOutput_6 != 0) {

												rowsToCommitCount_tDBOutput_6 = 0;
											}
											commitCounter_tDBOutput_6 = 0;
										}

										tos_count_tDBOutput_6++;

										/**
										 * [tDBOutput_6 main ] stop
										 */

										/**
										 * [tDBOutput_6 process_data_begin ] start
										 */

										currentComponent = "tDBOutput_6";

										/**
										 * [tDBOutput_6 process_data_begin ] stop
										 */

										/**
										 * [tDBOutput_6 process_data_end ] start
										 */

										currentComponent = "tDBOutput_6";

										/**
										 * [tDBOutput_6 process_data_end ] stop
										 */

									} // End of branch "llll"

									/**
									 * [tMap_16 process_data_end ] start
									 */

									currentComponent = "tMap_16";

									/**
									 * [tMap_16 process_data_end ] stop
									 */

									/**
									 * [tUnite_2 process_data_end ] start
									 */

									currentComponent = "tUnite_2";

									/**
									 * [tUnite_2 process_data_end ] stop
									 */

								} // End of branch "aaaa"

								/**
								 * [tMap_15 process_data_end ] start
								 */

								currentComponent = "tMap_15";

								/**
								 * [tMap_15 process_data_end ] stop
								 */

							} // End of branch "row21"

							/**
							 * [tFileInputExcel_7 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_7";

							/**
							 * [tFileInputExcel_7 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_7 end ] start
							 */

							currentComponent = "tFileInputExcel_7";

						}

						globalMap.put("tFileInputExcel_7_NB_LINE", nb_line_tFileInputExcel_7);

					}

				} finally {

					if (!(source_tFileInputExcel_7 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_7.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_7", true);
				end_Hash.put("tFileInputExcel_7", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_7 end ] stop
				 */

				/**
				 * [tMap_15 end ] start
				 */

				currentComponent = "tMap_15";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row21");
				}

				ok_Hash.put("tMap_15", true);
				end_Hash.put("tMap_15", System.currentTimeMillis());

				/**
				 * [tMap_15 end ] stop
				 */

				/**
				 * [tUnite_2 end ] start
				 */

				currentComponent = "tUnite_2";

				globalMap.put("tUnite_2_NB_LINE", nb_line_tUnite_2);
				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "aaaa", "bbbb");
				}

				ok_Hash.put("tUnite_2", true);
				end_Hash.put("tUnite_2", System.currentTimeMillis());

				/**
				 * [tUnite_2 end ] stop
				 */

				/**
				 * [tMap_16 end ] start
				 */

				currentComponent = "tMap_16";

// ###############################
// # Lookup hashes releasing
				if (tHash_Lookup_row38 != null) {
					tHash_Lookup_row38.endGet();
				}
				globalMap.remove("tHash_Lookup_row38");

// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row18");
				}

				ok_Hash.put("tMap_16", true);
				end_Hash.put("tMap_16", System.currentTimeMillis());

				/**
				 * [tMap_16 end ] stop
				 */

				/**
				 * [tDBOutput_6 end ] start
				 */

				currentComponent = "tDBOutput_6";

				try {
					int countSum_tDBOutput_6 = 0;
					if (pstmt_tDBOutput_6 != null && batchSizeCounter_tDBOutput_6 > 0) {

						for (int countEach_tDBOutput_6 : pstmt_tDBOutput_6.executeBatch()) {
							if (countEach_tDBOutput_6 == -2 || countEach_tDBOutput_6 == -3) {
								break;
							}
							countSum_tDBOutput_6 += countEach_tDBOutput_6;
						}
						rowsToCommitCount_tDBOutput_6 += countSum_tDBOutput_6;

					}

					insertedCount_tDBOutput_6 += countSum_tDBOutput_6;

				} catch (java.sql.BatchUpdateException e) {
					globalMap.put("tDBOutput_6_ERROR_MESSAGE", e.getMessage());

					int countSum_tDBOutput_6 = 0;
					for (int countEach_tDBOutput_6 : e.getUpdateCounts()) {
						countSum_tDBOutput_6 += (countEach_tDBOutput_6 < 0 ? 0 : countEach_tDBOutput_6);
					}
					rowsToCommitCount_tDBOutput_6 += countSum_tDBOutput_6;

					insertedCount_tDBOutput_6 += countSum_tDBOutput_6;

					System.err.println(e.getMessage());

				}
				if (pstmt_tDBOutput_6 != null) {

					pstmt_tDBOutput_6.close();
					resourceMap.remove("pstmt_tDBOutput_6");

				}
				resourceMap.put("statementClosed_tDBOutput_6", true);
				if (rowsToCommitCount_tDBOutput_6 != 0) {

				}
				conn_tDBOutput_6.commit();
				if (rowsToCommitCount_tDBOutput_6 != 0) {

					rowsToCommitCount_tDBOutput_6 = 0;
				}
				commitCounter_tDBOutput_6 = 0;
				conn_tDBOutput_6.close();
				resourceMap.put("finish_tDBOutput_6", true);

				nb_line_deleted_tDBOutput_6 = nb_line_deleted_tDBOutput_6 + deletedCount_tDBOutput_6;
				nb_line_update_tDBOutput_6 = nb_line_update_tDBOutput_6 + updatedCount_tDBOutput_6;
				nb_line_inserted_tDBOutput_6 = nb_line_inserted_tDBOutput_6 + insertedCount_tDBOutput_6;
				nb_line_rejected_tDBOutput_6 = nb_line_rejected_tDBOutput_6 + rejectedCount_tDBOutput_6;

				globalMap.put("tDBOutput_6_NB_LINE", nb_line_tDBOutput_6);
				globalMap.put("tDBOutput_6_NB_LINE_UPDATED", nb_line_update_tDBOutput_6);
				globalMap.put("tDBOutput_6_NB_LINE_INSERTED", nb_line_inserted_tDBOutput_6);
				globalMap.put("tDBOutput_6_NB_LINE_DELETED", nb_line_deleted_tDBOutput_6);
				globalMap.put("tDBOutput_6_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_6);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "llll");
				}

				ok_Hash.put("tDBOutput_6", true);
				end_Hash.put("tDBOutput_6", System.currentTimeMillis());

				/**
				 * [tDBOutput_6 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			// free memory for "tMap_16"
			globalMap.remove("tHash_Lookup_row38");

			try {

				/**
				 * [tFileInputExcel_6 finally ] start
				 */

				currentComponent = "tFileInputExcel_6";

				/**
				 * [tFileInputExcel_6 finally ] stop
				 */

				/**
				 * [tMap_12 finally ] start
				 */

				currentComponent = "tMap_12";

				/**
				 * [tMap_12 finally ] stop
				 */

				/**
				 * [tFileInputExcel_7 finally ] start
				 */

				currentComponent = "tFileInputExcel_7";

				/**
				 * [tFileInputExcel_7 finally ] stop
				 */

				/**
				 * [tMap_15 finally ] start
				 */

				currentComponent = "tMap_15";

				/**
				 * [tMap_15 finally ] stop
				 */

				/**
				 * [tUnite_2 finally ] start
				 */

				currentComponent = "tUnite_2";

				/**
				 * [tUnite_2 finally ] stop
				 */

				/**
				 * [tMap_16 finally ] start
				 */

				currentComponent = "tMap_16";

				/**
				 * [tMap_16 finally ] stop
				 */

				/**
				 * [tDBOutput_6 finally ] start
				 */

				currentComponent = "tDBOutput_6";

				try {
					if (resourceMap.get("statementClosed_tDBOutput_6") == null) {
						java.sql.PreparedStatement pstmtToClose_tDBOutput_6 = null;
						if ((pstmtToClose_tDBOutput_6 = (java.sql.PreparedStatement) resourceMap
								.remove("pstmt_tDBOutput_6")) != null) {
							pstmtToClose_tDBOutput_6.close();
						}
					}
				} finally {
					if (resourceMap.get("finish_tDBOutput_6") == null) {
						java.sql.Connection ctn_tDBOutput_6 = null;
						if ((ctn_tDBOutput_6 = (java.sql.Connection) resourceMap.get("conn_tDBOutput_6")) != null) {
							try {
								ctn_tDBOutput_6.close();
							} catch (java.sql.SQLException sqlEx_tDBOutput_6) {
								String errorMessage_tDBOutput_6 = "failed to close the connection in tDBOutput_6 :"
										+ sqlEx_tDBOutput_6.getMessage();
								System.err.println(errorMessage_tDBOutput_6);
							}
						}
					}
				}

				/**
				 * [tDBOutput_6 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tFileInputExcel_6_SUBPROCESS_STATE", 1);
	}

	public static class row61Struct implements routines.system.IPersistableRow<row61Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Categorie;

		public String getCategorie() {
			return this.Categorie;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Categorie = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Categorie = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Categorie, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Categorie, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Categorie=" + Categorie);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row61Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class gStruct implements routines.system.IPersistableRow<gStruct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Categorie;

		public String getCategorie() {
			return this.Categorie;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Categorie = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Categorie = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Categorie, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Categorie, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Categorie=" + Categorie);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(gStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class Dim_Categorie_rdvStruct implements routines.system.IPersistableRow<Dim_Categorie_rdvStruct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Categorie;

		public String getCategorie() {
			return this.Categorie;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Categorie = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Categorie = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Categorie, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Categorie, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Categorie=" + Categorie);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(Dim_Categorie_rdvStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row42Struct implements routines.system.IPersistableRow<row42Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Sujet;

		public String getSujet() {
			return this.Sujet;
		}

		public String Cree_le;

		public String getCree_le() {
			return this.Cree_le;
		}

		public String Concernant;

		public String getConcernant() {
			return this.Concernant;
		}

		public String Cree_par;

		public String getCree_par() {
			return this.Cree_par;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public String Emplacement;

		public String getEmplacement() {
			return this.Emplacement;
		}

		public java.util.Date Heure_de_debut;

		public java.util.Date getHeure_de_debut() {
			return this.Heure_de_debut;
		}

		public String Heure_de_fin;

		public String getHeure_de_fin() {
			return this.Heure_de_fin;
		}

		public String Statut;

		public String getStatut() {
			return this.Statut;
		}

		public String Raison_sociale__Concernant;

		public String getRaison_sociale__Concernant() {
			return this.Raison_sociale__Concernant;
		}

		public String Delegation__Concernant;

		public String getDelegation__Concernant() {
			return this.Delegation__Concernant;
		}

		public String Gouvernorat__Concernant;

		public String getGouvernorat__Concernant() {
			return this.Gouvernorat__Concernant;
		}

		public String Jour_de_la_semaine;

		public String getJour_de_la_semaine() {
			return this.Jour_de_la_semaine;
		}

		public String Description;

		public String getDescription() {
			return this.Description;
		}

		public String Categorie;

		public String getCategorie() {
			return this.Categorie;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private java.util.Date readDate(ObjectInputStream dis) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(dis.readLong());
			}
			return dateReturn;
		}

		private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(unmarshaller.readLong());
			}
			return dateReturn;
		}

		private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException {
			if (date1 == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeLong(date1.getTime());
			}
		}

		private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (date1 == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeLong(date1.getTime());
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Sujet = readString(dis);

					this.Cree_le = readString(dis);

					this.Concernant = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Emplacement = readString(dis);

					this.Heure_de_debut = readDate(dis);

					this.Heure_de_fin = readString(dis);

					this.Statut = readString(dis);

					this.Raison_sociale__Concernant = readString(dis);

					this.Delegation__Concernant = readString(dis);

					this.Gouvernorat__Concernant = readString(dis);

					this.Jour_de_la_semaine = readString(dis);

					this.Description = readString(dis);

					this.Categorie = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Sujet = readString(dis);

					this.Cree_le = readString(dis);

					this.Concernant = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Emplacement = readString(dis);

					this.Heure_de_debut = readDate(dis);

					this.Heure_de_fin = readString(dis);

					this.Statut = readString(dis);

					this.Raison_sociale__Concernant = readString(dis);

					this.Delegation__Concernant = readString(dis);

					this.Gouvernorat__Concernant = readString(dis);

					this.Jour_de_la_semaine = readString(dis);

					this.Description = readString(dis);

					this.Categorie = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Cree_le, dos);

				// String

				writeString(this.Concernant, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Emplacement, dos);

				// java.util.Date

				writeDate(this.Heure_de_debut, dos);

				// String

				writeString(this.Heure_de_fin, dos);

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Raison_sociale__Concernant, dos);

				// String

				writeString(this.Delegation__Concernant, dos);

				// String

				writeString(this.Gouvernorat__Concernant, dos);

				// String

				writeString(this.Jour_de_la_semaine, dos);

				// String

				writeString(this.Description, dos);

				// String

				writeString(this.Categorie, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Cree_le, dos);

				// String

				writeString(this.Concernant, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Emplacement, dos);

				// java.util.Date

				writeDate(this.Heure_de_debut, dos);

				// String

				writeString(this.Heure_de_fin, dos);

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Raison_sociale__Concernant, dos);

				// String

				writeString(this.Delegation__Concernant, dos);

				// String

				writeString(this.Gouvernorat__Concernant, dos);

				// String

				writeString(this.Jour_de_la_semaine, dos);

				// String

				writeString(this.Description, dos);

				// String

				writeString(this.Categorie, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Sujet=" + Sujet);
			sb.append(",Cree_le=" + Cree_le);
			sb.append(",Concernant=" + Concernant);
			sb.append(",Cree_par=" + Cree_par);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Emplacement=" + Emplacement);
			sb.append(",Heure_de_debut=" + String.valueOf(Heure_de_debut));
			sb.append(",Heure_de_fin=" + Heure_de_fin);
			sb.append(",Statut=" + Statut);
			sb.append(",Raison_sociale__Concernant=" + Raison_sociale__Concernant);
			sb.append(",Delegation__Concernant=" + Delegation__Concernant);
			sb.append(",Gouvernorat__Concernant=" + Gouvernorat__Concernant);
			sb.append(",Jour_de_la_semaine=" + Jour_de_la_semaine);
			sb.append(",Description=" + Description);
			sb.append(",Categorie=" + Categorie);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row42Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class after_tFileInputExcel_8Struct
			implements routines.system.IPersistableRow<after_tFileInputExcel_8Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Sujet;

		public String getSujet() {
			return this.Sujet;
		}

		public String Cree_le;

		public String getCree_le() {
			return this.Cree_le;
		}

		public String Concernant;

		public String getConcernant() {
			return this.Concernant;
		}

		public String Cree_par;

		public String getCree_par() {
			return this.Cree_par;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public String Emplacement;

		public String getEmplacement() {
			return this.Emplacement;
		}

		public java.util.Date Heure_de_debut;

		public java.util.Date getHeure_de_debut() {
			return this.Heure_de_debut;
		}

		public String Heure_de_fin;

		public String getHeure_de_fin() {
			return this.Heure_de_fin;
		}

		public String Statut;

		public String getStatut() {
			return this.Statut;
		}

		public String Raison_sociale__Concernant;

		public String getRaison_sociale__Concernant() {
			return this.Raison_sociale__Concernant;
		}

		public String Delegation__Concernant;

		public String getDelegation__Concernant() {
			return this.Delegation__Concernant;
		}

		public String Gouvernorat__Concernant;

		public String getGouvernorat__Concernant() {
			return this.Gouvernorat__Concernant;
		}

		public String Jour_de_la_semaine;

		public String getJour_de_la_semaine() {
			return this.Jour_de_la_semaine;
		}

		public String Description;

		public String getDescription() {
			return this.Description;
		}

		public String Categorie;

		public String getCategorie() {
			return this.Categorie;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private java.util.Date readDate(ObjectInputStream dis) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(dis.readLong());
			}
			return dateReturn;
		}

		private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(unmarshaller.readLong());
			}
			return dateReturn;
		}

		private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException {
			if (date1 == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeLong(date1.getTime());
			}
		}

		private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (date1 == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeLong(date1.getTime());
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Sujet = readString(dis);

					this.Cree_le = readString(dis);

					this.Concernant = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Emplacement = readString(dis);

					this.Heure_de_debut = readDate(dis);

					this.Heure_de_fin = readString(dis);

					this.Statut = readString(dis);

					this.Raison_sociale__Concernant = readString(dis);

					this.Delegation__Concernant = readString(dis);

					this.Gouvernorat__Concernant = readString(dis);

					this.Jour_de_la_semaine = readString(dis);

					this.Description = readString(dis);

					this.Categorie = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Sujet = readString(dis);

					this.Cree_le = readString(dis);

					this.Concernant = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Emplacement = readString(dis);

					this.Heure_de_debut = readDate(dis);

					this.Heure_de_fin = readString(dis);

					this.Statut = readString(dis);

					this.Raison_sociale__Concernant = readString(dis);

					this.Delegation__Concernant = readString(dis);

					this.Gouvernorat__Concernant = readString(dis);

					this.Jour_de_la_semaine = readString(dis);

					this.Description = readString(dis);

					this.Categorie = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Cree_le, dos);

				// String

				writeString(this.Concernant, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Emplacement, dos);

				// java.util.Date

				writeDate(this.Heure_de_debut, dos);

				// String

				writeString(this.Heure_de_fin, dos);

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Raison_sociale__Concernant, dos);

				// String

				writeString(this.Delegation__Concernant, dos);

				// String

				writeString(this.Gouvernorat__Concernant, dos);

				// String

				writeString(this.Jour_de_la_semaine, dos);

				// String

				writeString(this.Description, dos);

				// String

				writeString(this.Categorie, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Cree_le, dos);

				// String

				writeString(this.Concernant, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Emplacement, dos);

				// java.util.Date

				writeDate(this.Heure_de_debut, dos);

				// String

				writeString(this.Heure_de_fin, dos);

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Raison_sociale__Concernant, dos);

				// String

				writeString(this.Delegation__Concernant, dos);

				// String

				writeString(this.Gouvernorat__Concernant, dos);

				// String

				writeString(this.Jour_de_la_semaine, dos);

				// String

				writeString(this.Description, dos);

				// String

				writeString(this.Categorie, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Sujet=" + Sujet);
			sb.append(",Cree_le=" + Cree_le);
			sb.append(",Concernant=" + Concernant);
			sb.append(",Cree_par=" + Cree_par);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Emplacement=" + Emplacement);
			sb.append(",Heure_de_debut=" + String.valueOf(Heure_de_debut));
			sb.append(",Heure_de_fin=" + Heure_de_fin);
			sb.append(",Statut=" + Statut);
			sb.append(",Raison_sociale__Concernant=" + Raison_sociale__Concernant);
			sb.append(",Delegation__Concernant=" + Delegation__Concernant);
			sb.append(",Gouvernorat__Concernant=" + Gouvernorat__Concernant);
			sb.append(",Jour_de_la_semaine=" + Jour_de_la_semaine);
			sb.append(",Description=" + Description);
			sb.append(",Categorie=" + Categorie);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(after_tFileInputExcel_8Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tFileInputExcel_8Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tFileInputExcel_8_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				tDBInput_12Process(globalMap);

				row42Struct row42 = new row42Struct();
				Dim_Categorie_rdvStruct Dim_Categorie_rdv = new Dim_Categorie_rdvStruct();
				gStruct g = new gStruct();
				row61Struct row61 = new row61Struct();

				/**
				 * [tDBOutput_11 begin ] start
				 */

				ok_Hash.put("tDBOutput_11", false);
				start_Hash.put("tDBOutput_11", System.currentTimeMillis());

				currentComponent = "tDBOutput_11";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row61");
				}

				int tos_count_tDBOutput_11 = 0;

				int nb_line_tDBOutput_11 = 0;
				int nb_line_update_tDBOutput_11 = 0;
				int nb_line_inserted_tDBOutput_11 = 0;
				int nb_line_deleted_tDBOutput_11 = 0;
				int nb_line_rejected_tDBOutput_11 = 0;

				int deletedCount_tDBOutput_11 = 0;
				int updatedCount_tDBOutput_11 = 0;
				int insertedCount_tDBOutput_11 = 0;
				int rowsToCommitCount_tDBOutput_11 = 0;
				int rejectedCount_tDBOutput_11 = 0;
				String dbschema_tDBOutput_11 = null;
				String tableName_tDBOutput_11 = null;
				boolean whetherReject_tDBOutput_11 = false;

				java.util.Calendar calendar_tDBOutput_11 = java.util.Calendar.getInstance();
				long year1_tDBOutput_11 = TalendDate.parseDate("yyyy-MM-dd", "0001-01-01").getTime();
				long year2_tDBOutput_11 = TalendDate.parseDate("yyyy-MM-dd", "1753-01-01").getTime();
				long year10000_tDBOutput_11 = TalendDate.parseDate("yyyy-MM-dd HH:mm:ss", "9999-12-31 24:00:00")
						.getTime();
				long date_tDBOutput_11;

				java.util.Calendar calendar_datetimeoffset_tDBOutput_11 = java.util.Calendar
						.getInstance(java.util.TimeZone.getTimeZone("UTC"));

				java.sql.Connection conn_tDBOutput_11 = null;
				String dbUser_tDBOutput_11 = null;
				dbschema_tDBOutput_11 = "dbo";
				String driverClass_tDBOutput_11 = "net.sourceforge.jtds.jdbc.Driver";

				java.lang.Class.forName(driverClass_tDBOutput_11);
				String port_tDBOutput_11 = "1433";
				String dbname_tDBOutput_11 = "orange_DW__";
				String url_tDBOutput_11 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBOutput_11)) {
					url_tDBOutput_11 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBOutput_11)) {
					url_tDBOutput_11 += "//" + "orange_DW__";

				}
				url_tDBOutput_11 += ";appName=" + projectName + ";" + "";
				dbUser_tDBOutput_11 = "sa";

				final String decryptedPassword_tDBOutput_11 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:Nu1LsGSaUMI7ME6cWniWDG05Ib+kDgkl8m5UQRPhD4Nfwi9XzWE=");

				String dbPwd_tDBOutput_11 = decryptedPassword_tDBOutput_11;
				conn_tDBOutput_11 = java.sql.DriverManager.getConnection(url_tDBOutput_11, dbUser_tDBOutput_11,
						dbPwd_tDBOutput_11);

				resourceMap.put("conn_tDBOutput_11", conn_tDBOutput_11);

				conn_tDBOutput_11.setAutoCommit(false);
				int commitEvery_tDBOutput_11 = 10000;
				int commitCounter_tDBOutput_11 = 0;

				int batchSize_tDBOutput_11 = 10000;
				int batchSizeCounter_tDBOutput_11 = 0;

				if (dbschema_tDBOutput_11 == null || dbschema_tDBOutput_11.trim().length() == 0) {
					tableName_tDBOutput_11 = "Dim_Catégorie_rdv";
				} else {
					tableName_tDBOutput_11 = dbschema_tDBOutput_11 + "].[" + "Dim_Catégorie_rdv";
				}
				int count_tDBOutput_11 = 0;

				String insert_tDBOutput_11 = "INSERT INTO [" + tableName_tDBOutput_11 + "] ([Categorie]) VALUES (?)";
				java.sql.PreparedStatement pstmt_tDBOutput_11 = conn_tDBOutput_11.prepareStatement(insert_tDBOutput_11);
				resourceMap.put("pstmt_tDBOutput_11", pstmt_tDBOutput_11);

				/**
				 * [tDBOutput_11 begin ] stop
				 */

				/**
				 * [tUniqRow_4 begin ] start
				 */

				ok_Hash.put("tUniqRow_4", false);
				start_Hash.put("tUniqRow_4", System.currentTimeMillis());

				currentComponent = "tUniqRow_4";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "g");
				}

				int tos_count_tUniqRow_4 = 0;

				class KeyStruct_tUniqRow_4 {

					private static final int DEFAULT_HASHCODE = 1;
					private static final int PRIME = 31;
					private int hashCode = DEFAULT_HASHCODE;
					public boolean hashCodeDirty = true;

					String Categorie;

					@Override
					public int hashCode() {
						if (this.hashCodeDirty) {
							final int prime = PRIME;
							int result = DEFAULT_HASHCODE;

							result = prime * result + ((this.Categorie == null) ? 0 : this.Categorie.hashCode());

							this.hashCode = result;
							this.hashCodeDirty = false;
						}
						return this.hashCode;
					}

					@Override
					public boolean equals(Object obj) {
						if (this == obj)
							return true;
						if (obj == null)
							return false;
						if (getClass() != obj.getClass())
							return false;
						final KeyStruct_tUniqRow_4 other = (KeyStruct_tUniqRow_4) obj;

						if (this.Categorie == null) {
							if (other.Categorie != null)
								return false;

						} else if (!this.Categorie.equals(other.Categorie))

							return false;

						return true;
					}

				}

				int nb_uniques_tUniqRow_4 = 0;
				int nb_duplicates_tUniqRow_4 = 0;
				KeyStruct_tUniqRow_4 finder_tUniqRow_4 = new KeyStruct_tUniqRow_4();
				java.util.Set<KeyStruct_tUniqRow_4> keystUniqRow_4 = new java.util.HashSet<KeyStruct_tUniqRow_4>();

				/**
				 * [tUniqRow_4 begin ] stop
				 */

				/**
				 * [tMap_44 begin ] start
				 */

				ok_Hash.put("tMap_44", false);
				start_Hash.put("tMap_44", System.currentTimeMillis());

				currentComponent = "tMap_44";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "Dim_Categorie_rdv");
				}

				int tos_count_tMap_44 = 0;

// ###############################
// # Lookup's keys initialization

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row60Struct> tHash_Lookup_row60 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row60Struct>) ((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row60Struct>) globalMap
						.get("tHash_Lookup_row60"));

				row60Struct row60HashKey = new row60Struct();
				row60Struct row60Default = new row60Struct();
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_44__Struct {
				}
				Var__tMap_44__Struct Var__tMap_44 = new Var__tMap_44__Struct();
// ###############################

// ###############################
// # Outputs initialization
				gStruct g_tmp = new gStruct();
// ###############################

				/**
				 * [tMap_44 begin ] stop
				 */

				/**
				 * [tMap_38 begin ] start
				 */

				ok_Hash.put("tMap_38", false);
				start_Hash.put("tMap_38", System.currentTimeMillis());

				currentComponent = "tMap_38";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row42");
				}

				int tos_count_tMap_38 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_38__Struct {
				}
				Var__tMap_38__Struct Var__tMap_38 = new Var__tMap_38__Struct();
// ###############################

// ###############################
// # Outputs initialization
				Dim_Categorie_rdvStruct Dim_Categorie_rdv_tmp = new Dim_Categorie_rdvStruct();
// ###############################

				/**
				 * [tMap_38 begin ] stop
				 */

				/**
				 * [tFileInputExcel_8 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_8", false);
				start_Hash.put("tFileInputExcel_8", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_8";

				int tos_count_tFileInputExcel_8 = 0;

				final String decryptedPassword_tFileInputExcel_8 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:XOIVwQXkrkRJX4mtKTnoE6AwYzWOOs3vbShryg==");
				String password_tFileInputExcel_8 = decryptedPassword_tFileInputExcel_8;
				if (password_tFileInputExcel_8.isEmpty()) {
					password_tFileInputExcel_8 = null;
				}
				class RegexUtil_tFileInputExcel_8 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_8 regexUtil_tFileInputExcel_8 = new RegexUtil_tFileInputExcel_8();

				Object source_tFileInputExcel_8 = "C:/Users/DELL/Downloads/suivi rdv slide test (Enregistré automatiquement) VF (1).xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_8 = null;

				if (source_tFileInputExcel_8 instanceof String) {
					workbook_tFileInputExcel_8 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_8), password_tFileInputExcel_8,
									true);
				} else if (source_tFileInputExcel_8 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_8 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_8, password_tFileInputExcel_8);
				} else {
					workbook_tFileInputExcel_8 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_8 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_8.addAll(regexUtil_tFileInputExcel_8.getSheets(workbook_tFileInputExcel_8,
							"{40AAA5D9-FC5C-EC11-80E1-005056", false));
					if (sheetList_tFileInputExcel_8.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_8 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_8 : sheetList_tFileInputExcel_8) {
						if (sheet_FilterNull_tFileInputExcel_8 != null
								&& sheetList_FilterNull_tFileInputExcel_8.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_8.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_8.add(sheet_FilterNull_tFileInputExcel_8);
						}
					}
					sheetList_tFileInputExcel_8 = sheetList_FilterNull_tFileInputExcel_8;
					if (sheetList_tFileInputExcel_8.size() > 0) {
						int nb_line_tFileInputExcel_8 = 0;

						int begin_line_tFileInputExcel_8 = 1;

						int footer_input_tFileInputExcel_8 = 0;

						int end_line_tFileInputExcel_8 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_8 : sheetList_tFileInputExcel_8) {
							end_line_tFileInputExcel_8 += (sheet_tFileInputExcel_8.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_8 -= footer_input_tFileInputExcel_8;
						int limit_tFileInputExcel_8 = -1;
						int start_column_tFileInputExcel_8 = 1 - 1;
						int end_column_tFileInputExcel_8 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_8 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_8 = sheetList_tFileInputExcel_8
								.get(0);
						int rowCount_tFileInputExcel_8 = 0;
						int sheetIndex_tFileInputExcel_8 = 0;
						int currentRows_tFileInputExcel_8 = (sheetList_tFileInputExcel_8.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_8 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_8 = df_tFileInputExcel_8.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_8 = begin_line_tFileInputExcel_8; i_tFileInputExcel_8 < end_line_tFileInputExcel_8; i_tFileInputExcel_8++) {

							int emptyColumnCount_tFileInputExcel_8 = 0;

							if (limit_tFileInputExcel_8 != -1 && nb_line_tFileInputExcel_8 >= limit_tFileInputExcel_8) {
								break;
							}

							while (i_tFileInputExcel_8 >= rowCount_tFileInputExcel_8 + currentRows_tFileInputExcel_8) {
								rowCount_tFileInputExcel_8 += currentRows_tFileInputExcel_8;
								sheet_tFileInputExcel_8 = sheetList_tFileInputExcel_8
										.get(++sheetIndex_tFileInputExcel_8);
								currentRows_tFileInputExcel_8 = (sheet_tFileInputExcel_8.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_8_CURRENT_SHEET", sheet_tFileInputExcel_8.getSheetName());
							if (rowCount_tFileInputExcel_8 <= i_tFileInputExcel_8) {
								row_tFileInputExcel_8 = sheet_tFileInputExcel_8
										.getRow(i_tFileInputExcel_8 - rowCount_tFileInputExcel_8);
							}
							row42 = null;
							int tempRowLength_tFileInputExcel_8 = 15;

							int columnIndex_tFileInputExcel_8 = 0;

							String[] temp_row_tFileInputExcel_8 = new String[tempRowLength_tFileInputExcel_8];
							int excel_end_column_tFileInputExcel_8;
							if (row_tFileInputExcel_8 == null) {
								excel_end_column_tFileInputExcel_8 = 0;
							} else {
								excel_end_column_tFileInputExcel_8 = row_tFileInputExcel_8.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_8;
							if (end_column_tFileInputExcel_8 == -1) {
								actual_end_column_tFileInputExcel_8 = excel_end_column_tFileInputExcel_8;
							} else {
								actual_end_column_tFileInputExcel_8 = end_column_tFileInputExcel_8 > excel_end_column_tFileInputExcel_8
										? excel_end_column_tFileInputExcel_8
										: end_column_tFileInputExcel_8;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_8 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_8; i++) {
								if (i + start_column_tFileInputExcel_8 < actual_end_column_tFileInputExcel_8) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_8 = row_tFileInputExcel_8
											.getCell(i + start_column_tFileInputExcel_8);
									if (cell_tFileInputExcel_8 != null) {
										switch (cell_tFileInputExcel_8.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_8[i] = cell_tFileInputExcel_8
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_8)) {
												temp_row_tFileInputExcel_8[i] = cell_tFileInputExcel_8
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_8[i] = df_tFileInputExcel_8
														.format(cell_tFileInputExcel_8.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_8[i] = String
													.valueOf(cell_tFileInputExcel_8.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_8.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_8[i] = cell_tFileInputExcel_8
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_8)) {
													temp_row_tFileInputExcel_8[i] = cell_tFileInputExcel_8
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_8 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_8.getNumericCellValue());
													temp_row_tFileInputExcel_8[i] = ne_tFileInputExcel_8
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_8[i] = String
														.valueOf(cell_tFileInputExcel_8.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_8[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_8[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_8[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_8[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_8 = false;
							row42 = new row42Struct();
							int curColNum_tFileInputExcel_8 = -1;
							String curColName_tFileInputExcel_8 = "";
							try {
								columnIndex_tFileInputExcel_8 = 0;

								if (temp_row_tFileInputExcel_8[columnIndex_tFileInputExcel_8].length() > 0) {
									curColNum_tFileInputExcel_8 = columnIndex_tFileInputExcel_8
											+ start_column_tFileInputExcel_8 + 1;
									curColName_tFileInputExcel_8 = "Sujet";

									row42.Sujet = temp_row_tFileInputExcel_8[columnIndex_tFileInputExcel_8];
								} else {
									row42.Sujet = null;
									emptyColumnCount_tFileInputExcel_8++;
								}
								columnIndex_tFileInputExcel_8 = 1;

								if (temp_row_tFileInputExcel_8[columnIndex_tFileInputExcel_8].length() > 0) {
									curColNum_tFileInputExcel_8 = columnIndex_tFileInputExcel_8
											+ start_column_tFileInputExcel_8 + 1;
									curColName_tFileInputExcel_8 = "Cree_le";

									row42.Cree_le = temp_row_tFileInputExcel_8[columnIndex_tFileInputExcel_8];
								} else {
									row42.Cree_le = null;
									emptyColumnCount_tFileInputExcel_8++;
								}
								columnIndex_tFileInputExcel_8 = 2;

								if (temp_row_tFileInputExcel_8[columnIndex_tFileInputExcel_8].length() > 0) {
									curColNum_tFileInputExcel_8 = columnIndex_tFileInputExcel_8
											+ start_column_tFileInputExcel_8 + 1;
									curColName_tFileInputExcel_8 = "Concernant";

									row42.Concernant = temp_row_tFileInputExcel_8[columnIndex_tFileInputExcel_8];
								} else {
									row42.Concernant = null;
									emptyColumnCount_tFileInputExcel_8++;
								}
								columnIndex_tFileInputExcel_8 = 3;

								if (temp_row_tFileInputExcel_8[columnIndex_tFileInputExcel_8].length() > 0) {
									curColNum_tFileInputExcel_8 = columnIndex_tFileInputExcel_8
											+ start_column_tFileInputExcel_8 + 1;
									curColName_tFileInputExcel_8 = "Cree_par";

									row42.Cree_par = temp_row_tFileInputExcel_8[columnIndex_tFileInputExcel_8];
								} else {
									row42.Cree_par = null;
									emptyColumnCount_tFileInputExcel_8++;
								}
								columnIndex_tFileInputExcel_8 = 4;

								if (temp_row_tFileInputExcel_8[columnIndex_tFileInputExcel_8].length() > 0) {
									curColNum_tFileInputExcel_8 = columnIndex_tFileInputExcel_8
											+ start_column_tFileInputExcel_8 + 1;
									curColName_tFileInputExcel_8 = "Equipe";

									row42.Equipe = temp_row_tFileInputExcel_8[columnIndex_tFileInputExcel_8];
								} else {
									row42.Equipe = null;
									emptyColumnCount_tFileInputExcel_8++;
								}
								columnIndex_tFileInputExcel_8 = 5;

								if (temp_row_tFileInputExcel_8[columnIndex_tFileInputExcel_8].length() > 0) {
									curColNum_tFileInputExcel_8 = columnIndex_tFileInputExcel_8
											+ start_column_tFileInputExcel_8 + 1;
									curColName_tFileInputExcel_8 = "Emplacement";

									row42.Emplacement = temp_row_tFileInputExcel_8[columnIndex_tFileInputExcel_8];
								} else {
									row42.Emplacement = null;
									emptyColumnCount_tFileInputExcel_8++;
								}
								columnIndex_tFileInputExcel_8 = 6;

								if (temp_row_tFileInputExcel_8[columnIndex_tFileInputExcel_8].length() > 0) {
									curColNum_tFileInputExcel_8 = columnIndex_tFileInputExcel_8
											+ start_column_tFileInputExcel_8 + 1;
									curColName_tFileInputExcel_8 = "Heure_de_debut";

									if (6 < actual_end_column_tFileInputExcel_8) {
										try {
											if (row_tFileInputExcel_8
													.getCell(columnIndex_tFileInputExcel_8
															+ start_column_tFileInputExcel_8)
													.getCellType() == org.apache.poi.ss.usermodel.CellType.NUMERIC
													&& org.apache.poi.ss.usermodel.DateUtil.isCellDateFormatted(
															row_tFileInputExcel_8.getCell(columnIndex_tFileInputExcel_8
																	+ start_column_tFileInputExcel_8))) {
												row42.Heure_de_debut = row_tFileInputExcel_8.getCell(
														columnIndex_tFileInputExcel_8 + start_column_tFileInputExcel_8)
														.getDateCellValue();
											} else {
												java.util.Date tempDate_tFileInputExcel_8 = ParserUtils.parseTo_Date(
														temp_row_tFileInputExcel_8[columnIndex_tFileInputExcel_8],
														"dd/MM/yyyy");
												if (tempDate_tFileInputExcel_8
														.after((new SimpleDateFormat("yyyy/MM/dd hh:mm:ss.SSS"))
																.parse("9999/12/31 23:59:59.999"))
														|| tempDate_tFileInputExcel_8
																.before((new SimpleDateFormat("yyyy/MM/dd"))
																		.parse("1900/01/01"))) {
													throw new RuntimeException("The cell format is not Date in ( Row. "
															+ (nb_line_tFileInputExcel_8 + 1) + " and ColumnNum. "
															+ curColNum_tFileInputExcel_8 + " )");
												} else {
													row42.Heure_de_debut = tempDate_tFileInputExcel_8;
												}
											}
										} catch (java.lang.Exception e) {
											globalMap.put("tFileInputExcel_8_ERROR_MESSAGE", e.getMessage());

											throw new RuntimeException("The cell format is not Date in ( Row. "
													+ (nb_line_tFileInputExcel_8 + 1) + " and ColumnNum. "
													+ curColNum_tFileInputExcel_8 + " )");
										}
									}

								} else {
									row42.Heure_de_debut = null;
									emptyColumnCount_tFileInputExcel_8++;
								}
								columnIndex_tFileInputExcel_8 = 7;

								if (temp_row_tFileInputExcel_8[columnIndex_tFileInputExcel_8].length() > 0) {
									curColNum_tFileInputExcel_8 = columnIndex_tFileInputExcel_8
											+ start_column_tFileInputExcel_8 + 1;
									curColName_tFileInputExcel_8 = "Heure_de_fin";

									row42.Heure_de_fin = temp_row_tFileInputExcel_8[columnIndex_tFileInputExcel_8];
								} else {
									row42.Heure_de_fin = null;
									emptyColumnCount_tFileInputExcel_8++;
								}
								columnIndex_tFileInputExcel_8 = 8;

								if (temp_row_tFileInputExcel_8[columnIndex_tFileInputExcel_8].length() > 0) {
									curColNum_tFileInputExcel_8 = columnIndex_tFileInputExcel_8
											+ start_column_tFileInputExcel_8 + 1;
									curColName_tFileInputExcel_8 = "Statut";

									row42.Statut = temp_row_tFileInputExcel_8[columnIndex_tFileInputExcel_8];
								} else {
									row42.Statut = null;
									emptyColumnCount_tFileInputExcel_8++;
								}
								columnIndex_tFileInputExcel_8 = 9;

								if (temp_row_tFileInputExcel_8[columnIndex_tFileInputExcel_8].length() > 0) {
									curColNum_tFileInputExcel_8 = columnIndex_tFileInputExcel_8
											+ start_column_tFileInputExcel_8 + 1;
									curColName_tFileInputExcel_8 = "Raison_sociale__Concernant";

									row42.Raison_sociale__Concernant = temp_row_tFileInputExcel_8[columnIndex_tFileInputExcel_8];
								} else {
									row42.Raison_sociale__Concernant = null;
									emptyColumnCount_tFileInputExcel_8++;
								}
								columnIndex_tFileInputExcel_8 = 10;

								if (temp_row_tFileInputExcel_8[columnIndex_tFileInputExcel_8].length() > 0) {
									curColNum_tFileInputExcel_8 = columnIndex_tFileInputExcel_8
											+ start_column_tFileInputExcel_8 + 1;
									curColName_tFileInputExcel_8 = "Delegation__Concernant";

									row42.Delegation__Concernant = temp_row_tFileInputExcel_8[columnIndex_tFileInputExcel_8];
								} else {
									row42.Delegation__Concernant = null;
									emptyColumnCount_tFileInputExcel_8++;
								}
								columnIndex_tFileInputExcel_8 = 11;

								if (temp_row_tFileInputExcel_8[columnIndex_tFileInputExcel_8].length() > 0) {
									curColNum_tFileInputExcel_8 = columnIndex_tFileInputExcel_8
											+ start_column_tFileInputExcel_8 + 1;
									curColName_tFileInputExcel_8 = "Gouvernorat__Concernant";

									row42.Gouvernorat__Concernant = temp_row_tFileInputExcel_8[columnIndex_tFileInputExcel_8];
								} else {
									row42.Gouvernorat__Concernant = null;
									emptyColumnCount_tFileInputExcel_8++;
								}
								columnIndex_tFileInputExcel_8 = 12;

								if (temp_row_tFileInputExcel_8[columnIndex_tFileInputExcel_8].length() > 0) {
									curColNum_tFileInputExcel_8 = columnIndex_tFileInputExcel_8
											+ start_column_tFileInputExcel_8 + 1;
									curColName_tFileInputExcel_8 = "Jour_de_la_semaine";

									row42.Jour_de_la_semaine = temp_row_tFileInputExcel_8[columnIndex_tFileInputExcel_8];
								} else {
									row42.Jour_de_la_semaine = null;
									emptyColumnCount_tFileInputExcel_8++;
								}
								columnIndex_tFileInputExcel_8 = 13;

								if (temp_row_tFileInputExcel_8[columnIndex_tFileInputExcel_8].length() > 0) {
									curColNum_tFileInputExcel_8 = columnIndex_tFileInputExcel_8
											+ start_column_tFileInputExcel_8 + 1;
									curColName_tFileInputExcel_8 = "Description";

									row42.Description = temp_row_tFileInputExcel_8[columnIndex_tFileInputExcel_8];
								} else {
									row42.Description = null;
									emptyColumnCount_tFileInputExcel_8++;
								}
								columnIndex_tFileInputExcel_8 = 14;

								if (temp_row_tFileInputExcel_8[columnIndex_tFileInputExcel_8].length() > 0) {
									curColNum_tFileInputExcel_8 = columnIndex_tFileInputExcel_8
											+ start_column_tFileInputExcel_8 + 1;
									curColName_tFileInputExcel_8 = "Categorie";

									row42.Categorie = temp_row_tFileInputExcel_8[columnIndex_tFileInputExcel_8];
								} else {
									row42.Categorie = null;
									emptyColumnCount_tFileInputExcel_8++;
								}

								nb_line_tFileInputExcel_8++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_8_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_8 = true;
								System.err.println(e.getMessage());
								row42 = null;
							}

							/**
							 * [tFileInputExcel_8 begin ] stop
							 */

							/**
							 * [tFileInputExcel_8 main ] start
							 */

							currentComponent = "tFileInputExcel_8";

							tos_count_tFileInputExcel_8++;

							/**
							 * [tFileInputExcel_8 main ] stop
							 */

							/**
							 * [tFileInputExcel_8 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_8";

							/**
							 * [tFileInputExcel_8 process_data_begin ] stop
							 */
// Start of branch "row42"
							if (row42 != null) {

								/**
								 * [tMap_38 main ] start
								 */

								currentComponent = "tMap_38";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row42"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_38 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_38 = false;
								boolean mainRowRejected_tMap_38 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_38__Struct Var = Var__tMap_38;// ###############################
									// ###############################
									// # Output tables

									Dim_Categorie_rdv = null;

// # Output table : 'Dim_Categorie_rdv'
									Dim_Categorie_rdv_tmp.Categorie = row42.Categorie;
									Dim_Categorie_rdv = Dim_Categorie_rdv_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_38 = false;

								tos_count_tMap_38++;

								/**
								 * [tMap_38 main ] stop
								 */

								/**
								 * [tMap_38 process_data_begin ] start
								 */

								currentComponent = "tMap_38";

								/**
								 * [tMap_38 process_data_begin ] stop
								 */
// Start of branch "Dim_Categorie_rdv"
								if (Dim_Categorie_rdv != null) {

									/**
									 * [tMap_44 main ] start
									 */

									currentComponent = "tMap_44";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "Dim_Categorie_rdv"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_44 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_44 = false;
									boolean mainRowRejected_tMap_44 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row60"
									///////////////////////////////////////////////

									boolean forceLooprow60 = false;

									row60Struct row60ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_44) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_44 = false;

										row60HashKey.Categorie = Dim_Categorie_rdv.Categorie;

										row60HashKey.hashCodeDirty = true;

										tHash_Lookup_row60.lookup(row60HashKey);

										if (!tHash_Lookup_row60.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_44 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row60 != null && tHash_Lookup_row60.getCount(row60HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row60' and it contains more one result from keys : row60.Categorie = '" +
										// row60HashKey.Categorie + "'");
									} // G 071

									row60Struct row60 = null;

									row60Struct fromLookup_row60 = null;
									row60 = row60Default;

									if (tHash_Lookup_row60 != null && tHash_Lookup_row60.hasNext()) { // G 099

										fromLookup_row60 = tHash_Lookup_row60.next();

									} // G 099

									if (fromLookup_row60 != null) {
										row60 = fromLookup_row60;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_44__Struct Var = Var__tMap_44;// ###############################
										// ###############################
										// # Output tables

										g = null;

										if (!rejectedInnerJoin_tMap_44) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'g'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_44) {
											g_tmp.Categorie = Dim_Categorie_rdv.Categorie;
											g = g_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_44 = false;

									tos_count_tMap_44++;

									/**
									 * [tMap_44 main ] stop
									 */

									/**
									 * [tMap_44 process_data_begin ] start
									 */

									currentComponent = "tMap_44";

									/**
									 * [tMap_44 process_data_begin ] stop
									 */
// Start of branch "g"
									if (g != null) {

										/**
										 * [tUniqRow_4 main ] start
										 */

										currentComponent = "tUniqRow_4";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "g"

											);
										}

										row61 = null;
										finder_tUniqRow_4.Categorie = g.Categorie;
										finder_tUniqRow_4.hashCodeDirty = true;
										if (!keystUniqRow_4.contains(finder_tUniqRow_4)) {
											KeyStruct_tUniqRow_4 new_tUniqRow_4 = new KeyStruct_tUniqRow_4();

											new_tUniqRow_4.Categorie = g.Categorie;

											keystUniqRow_4.add(new_tUniqRow_4);
											if (row61 == null) {

												row61 = new row61Struct();
											}
											row61.Categorie = g.Categorie;
											nb_uniques_tUniqRow_4++;
										} else {
											nb_duplicates_tUniqRow_4++;
										}

										tos_count_tUniqRow_4++;

										/**
										 * [tUniqRow_4 main ] stop
										 */

										/**
										 * [tUniqRow_4 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_4";

										/**
										 * [tUniqRow_4 process_data_begin ] stop
										 */
// Start of branch "row61"
										if (row61 != null) {

											/**
											 * [tDBOutput_11 main ] start
											 */

											currentComponent = "tDBOutput_11";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row61"

												);
											}

											whetherReject_tDBOutput_11 = false;
											if (row61.Categorie == null) {
												pstmt_tDBOutput_11.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_11.setString(1, row61.Categorie);
											}

											pstmt_tDBOutput_11.addBatch();
											nb_line_tDBOutput_11++;

											batchSizeCounter_tDBOutput_11++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_11 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_11)
														throws Exception {
													try {

														for (int countEach_tDBOutput_11 : pstmt_tDBOutput_11
																.executeBatch()) {
															if (countEach_tDBOutput_11 == -2
																	|| countEach_tDBOutput_11 == -3) {
																break;
															}
															counter += countEach_tDBOutput_11;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_11_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_11 = 0;
														for (int countEach_tDBOutput_11 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_11 < 0 ? 0
																	: countEach_tDBOutput_11);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_11)
														throws Exception {
													try {

														for (int countEach_tDBOutput_11 : pstmt_tDBOutput_11
																.executeBatch()) {
															if (countEach_tDBOutput_11 == -2
																	|| countEach_tDBOutput_11 == -3) {
																break;
															}
															counter += countEach_tDBOutput_11;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_11_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_11 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_11 < 0 ? 0
																	: countEach_tDBOutput_11);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_11 > 0)
													&& (batchSize_tDBOutput_11 <= batchSizeCounter_tDBOutput_11)) {

												insertedCount_tDBOutput_11 = new LimitBytesHelper_tDBOutput_11()
														.limitBytePart1(insertedCount_tDBOutput_11, pstmt_tDBOutput_11);
												rowsToCommitCount_tDBOutput_11 = insertedCount_tDBOutput_11;

												batchSizeCounter_tDBOutput_11 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_11++;
											if (commitEvery_tDBOutput_11 <= commitCounter_tDBOutput_11) {
												if ((batchSize_tDBOutput_11 > 0)
														&& (batchSizeCounter_tDBOutput_11 > 0)) {

													insertedCount_tDBOutput_11 = new LimitBytesHelper_tDBOutput_11()
															.limitBytePart1(insertedCount_tDBOutput_11,
																	pstmt_tDBOutput_11);

													batchSizeCounter_tDBOutput_11 = 0;
												}
												if (rowsToCommitCount_tDBOutput_11 != 0) {

												}
												conn_tDBOutput_11.commit();
												if (rowsToCommitCount_tDBOutput_11 != 0) {

													rowsToCommitCount_tDBOutput_11 = 0;
												}
												commitCounter_tDBOutput_11 = 0;
											}

											tos_count_tDBOutput_11++;

											/**
											 * [tDBOutput_11 main ] stop
											 */

											/**
											 * [tDBOutput_11 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_11";

											/**
											 * [tDBOutput_11 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_11 process_data_end ] start
											 */

											currentComponent = "tDBOutput_11";

											/**
											 * [tDBOutput_11 process_data_end ] stop
											 */

										} // End of branch "row61"

										/**
										 * [tUniqRow_4 process_data_end ] start
										 */

										currentComponent = "tUniqRow_4";

										/**
										 * [tUniqRow_4 process_data_end ] stop
										 */

									} // End of branch "g"

									/**
									 * [tMap_44 process_data_end ] start
									 */

									currentComponent = "tMap_44";

									/**
									 * [tMap_44 process_data_end ] stop
									 */

								} // End of branch "Dim_Categorie_rdv"

								/**
								 * [tMap_38 process_data_end ] start
								 */

								currentComponent = "tMap_38";

								/**
								 * [tMap_38 process_data_end ] stop
								 */

							} // End of branch "row42"

							/**
							 * [tFileInputExcel_8 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_8";

							/**
							 * [tFileInputExcel_8 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_8 end ] start
							 */

							currentComponent = "tFileInputExcel_8";

						}

						globalMap.put("tFileInputExcel_8_NB_LINE", nb_line_tFileInputExcel_8);

					}

				} finally {

					if (!(source_tFileInputExcel_8 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_8.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_8", true);
				end_Hash.put("tFileInputExcel_8", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_8 end ] stop
				 */

				/**
				 * [tMap_38 end ] start
				 */

				currentComponent = "tMap_38";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row42");
				}

				ok_Hash.put("tMap_38", true);
				end_Hash.put("tMap_38", System.currentTimeMillis());

				/**
				 * [tMap_38 end ] stop
				 */

				/**
				 * [tMap_44 end ] start
				 */

				currentComponent = "tMap_44";

// ###############################
// # Lookup hashes releasing
				if (tHash_Lookup_row60 != null) {
					tHash_Lookup_row60.endGet();
				}
				globalMap.remove("tHash_Lookup_row60");

// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "Dim_Categorie_rdv");
				}

				ok_Hash.put("tMap_44", true);
				end_Hash.put("tMap_44", System.currentTimeMillis());

				/**
				 * [tMap_44 end ] stop
				 */

				/**
				 * [tUniqRow_4 end ] start
				 */

				currentComponent = "tUniqRow_4";

				globalMap.put("tUniqRow_4_NB_UNIQUES", nb_uniques_tUniqRow_4);
				globalMap.put("tUniqRow_4_NB_DUPLICATES", nb_duplicates_tUniqRow_4);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "g");
				}

				ok_Hash.put("tUniqRow_4", true);
				end_Hash.put("tUniqRow_4", System.currentTimeMillis());

				/**
				 * [tUniqRow_4 end ] stop
				 */

				/**
				 * [tDBOutput_11 end ] start
				 */

				currentComponent = "tDBOutput_11";

				try {
					int countSum_tDBOutput_11 = 0;
					if (pstmt_tDBOutput_11 != null && batchSizeCounter_tDBOutput_11 > 0) {

						for (int countEach_tDBOutput_11 : pstmt_tDBOutput_11.executeBatch()) {
							if (countEach_tDBOutput_11 == -2 || countEach_tDBOutput_11 == -3) {
								break;
							}
							countSum_tDBOutput_11 += countEach_tDBOutput_11;
						}
						rowsToCommitCount_tDBOutput_11 += countSum_tDBOutput_11;

					}

					insertedCount_tDBOutput_11 += countSum_tDBOutput_11;

				} catch (java.sql.BatchUpdateException e) {
					globalMap.put("tDBOutput_11_ERROR_MESSAGE", e.getMessage());

					int countSum_tDBOutput_11 = 0;
					for (int countEach_tDBOutput_11 : e.getUpdateCounts()) {
						countSum_tDBOutput_11 += (countEach_tDBOutput_11 < 0 ? 0 : countEach_tDBOutput_11);
					}
					rowsToCommitCount_tDBOutput_11 += countSum_tDBOutput_11;

					insertedCount_tDBOutput_11 += countSum_tDBOutput_11;

					System.err.println(e.getMessage());

				}
				if (pstmt_tDBOutput_11 != null) {

					pstmt_tDBOutput_11.close();
					resourceMap.remove("pstmt_tDBOutput_11");

				}
				resourceMap.put("statementClosed_tDBOutput_11", true);
				if (rowsToCommitCount_tDBOutput_11 != 0) {

				}
				conn_tDBOutput_11.commit();
				if (rowsToCommitCount_tDBOutput_11 != 0) {

					rowsToCommitCount_tDBOutput_11 = 0;
				}
				commitCounter_tDBOutput_11 = 0;
				conn_tDBOutput_11.close();
				resourceMap.put("finish_tDBOutput_11", true);

				nb_line_deleted_tDBOutput_11 = nb_line_deleted_tDBOutput_11 + deletedCount_tDBOutput_11;
				nb_line_update_tDBOutput_11 = nb_line_update_tDBOutput_11 + updatedCount_tDBOutput_11;
				nb_line_inserted_tDBOutput_11 = nb_line_inserted_tDBOutput_11 + insertedCount_tDBOutput_11;
				nb_line_rejected_tDBOutput_11 = nb_line_rejected_tDBOutput_11 + rejectedCount_tDBOutput_11;

				globalMap.put("tDBOutput_11_NB_LINE", nb_line_tDBOutput_11);
				globalMap.put("tDBOutput_11_NB_LINE_UPDATED", nb_line_update_tDBOutput_11);
				globalMap.put("tDBOutput_11_NB_LINE_INSERTED", nb_line_inserted_tDBOutput_11);
				globalMap.put("tDBOutput_11_NB_LINE_DELETED", nb_line_deleted_tDBOutput_11);
				globalMap.put("tDBOutput_11_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_11);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row61");
				}

				ok_Hash.put("tDBOutput_11", true);
				end_Hash.put("tDBOutput_11", System.currentTimeMillis());

				/**
				 * [tDBOutput_11 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			// free memory for "tMap_44"
			globalMap.remove("tHash_Lookup_row60");

			try {

				/**
				 * [tFileInputExcel_8 finally ] start
				 */

				currentComponent = "tFileInputExcel_8";

				/**
				 * [tFileInputExcel_8 finally ] stop
				 */

				/**
				 * [tMap_38 finally ] start
				 */

				currentComponent = "tMap_38";

				/**
				 * [tMap_38 finally ] stop
				 */

				/**
				 * [tMap_44 finally ] start
				 */

				currentComponent = "tMap_44";

				/**
				 * [tMap_44 finally ] stop
				 */

				/**
				 * [tUniqRow_4 finally ] start
				 */

				currentComponent = "tUniqRow_4";

				/**
				 * [tUniqRow_4 finally ] stop
				 */

				/**
				 * [tDBOutput_11 finally ] start
				 */

				currentComponent = "tDBOutput_11";

				try {
					if (resourceMap.get("statementClosed_tDBOutput_11") == null) {
						java.sql.PreparedStatement pstmtToClose_tDBOutput_11 = null;
						if ((pstmtToClose_tDBOutput_11 = (java.sql.PreparedStatement) resourceMap
								.remove("pstmt_tDBOutput_11")) != null) {
							pstmtToClose_tDBOutput_11.close();
						}
					}
				} finally {
					if (resourceMap.get("finish_tDBOutput_11") == null) {
						java.sql.Connection ctn_tDBOutput_11 = null;
						if ((ctn_tDBOutput_11 = (java.sql.Connection) resourceMap.get("conn_tDBOutput_11")) != null) {
							try {
								ctn_tDBOutput_11.close();
							} catch (java.sql.SQLException sqlEx_tDBOutput_11) {
								String errorMessage_tDBOutput_11 = "failed to close the connection in tDBOutput_11 :"
										+ sqlEx_tDBOutput_11.getMessage();
								System.err.println(errorMessage_tDBOutput_11);
							}
						}
					}
				}

				/**
				 * [tDBOutput_11 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tFileInputExcel_8_SUBPROCESS_STATE", 1);
	}

	public static class row64Struct implements routines.system.IPersistableRow<row64Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Offre;

		public String getOffre() {
			return this.Offre;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Offre = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Offre = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Offre, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Offre, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Offre=" + Offre);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row64Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class cStruct implements routines.system.IPersistableRow<cStruct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Offre;

		public String getOffre() {
			return this.Offre;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Offre = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Offre = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Offre, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Offre, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Offre=" + Offre);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(cStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row66Struct implements routines.system.IPersistableRow<row66Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Nature_Offre;

		public String getNature_Offre() {
			return this.Nature_Offre;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Nature_Offre = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Nature_Offre = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Nature_Offre, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Nature_Offre, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Nature_Offre=" + Nature_Offre);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row66Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class vStruct implements routines.system.IPersistableRow<vStruct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Nature_Offre;

		public String getNature_Offre() {
			return this.Nature_Offre;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Nature_Offre = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Nature_Offre = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Nature_Offre, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Nature_Offre, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Nature_Offre=" + Nature_Offre);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(vStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row71Struct implements routines.system.IPersistableRow<row71Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Extension__Opportunite;

		public String getExtension__Opportunite() {
			return this.Extension__Opportunite;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Extension__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Extension__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Extension__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Extension__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Extension__Opportunite=" + Extension__Opportunite);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row71Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class qStruct implements routines.system.IPersistableRow<qStruct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Extension__Opportunite;

		public String getExtension__Opportunite() {
			return this.Extension__Opportunite;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Extension__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Extension__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Extension__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Extension__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Extension__Opportunite=" + Extension__Opportunite);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(qStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row70Struct implements routines.system.IPersistableRow<row70Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Type_d_engagement__Opportunite;

		public String getType_d_engagement__Opportunite() {
			return this.Type_d_engagement__Opportunite;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_d_engagement__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_d_engagement__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Type_d_engagement__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Type_d_engagement__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Type_d_engagement__Opportunite=" + Type_d_engagement__Opportunite);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row70Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class nStruct implements routines.system.IPersistableRow<nStruct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Type_d_engagement__Opportunite;

		public String getType_d_engagement__Opportunite() {
			return this.Type_d_engagement__Opportunite;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_d_engagement__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_d_engagement__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Type_d_engagement__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Type_d_engagement__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Type_d_engagement__Opportunite=" + Type_d_engagement__Opportunite);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(nStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row68Struct implements routines.system.IPersistableRow<row68Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Reference_OSM__Opportunite;

		public String getReference_OSM__Opportunite() {
			return this.Reference_OSM__Opportunite;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Reference_OSM__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Reference_OSM__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Reference_OSM__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Reference_OSM__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Reference_OSM__Opportunite=" + Reference_OSM__Opportunite);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row68Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class bStruct implements routines.system.IPersistableRow<bStruct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Reference_OSM__Opportunite;

		public String getReference_OSM__Opportunite() {
			return this.Reference_OSM__Opportunite;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Reference_OSM__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Reference_OSM__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Reference_OSM__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Reference_OSM__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Reference_OSM__Opportunite=" + Reference_OSM__Opportunite);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(bStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class Dim_Reference_OSM_Opportunite_mobileStruct
			implements routines.system.IPersistableRow<Dim_Reference_OSM_Opportunite_mobileStruct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Reference_OSM__Opportunite;

		public String getReference_OSM__Opportunite() {
			return this.Reference_OSM__Opportunite;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Reference_OSM__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Reference_OSM__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Reference_OSM__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Reference_OSM__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Reference_OSM__Opportunite=" + Reference_OSM__Opportunite);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(Dim_Reference_OSM_Opportunite_mobileStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class Dim_type_engagement_mobileStruct
			implements routines.system.IPersistableRow<Dim_type_engagement_mobileStruct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Type_d_engagement__Opportunite;

		public String getType_d_engagement__Opportunite() {
			return this.Type_d_engagement__Opportunite;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_d_engagement__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_d_engagement__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Type_d_engagement__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Type_d_engagement__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Type_d_engagement__Opportunite=" + Type_d_engagement__Opportunite);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(Dim_type_engagement_mobileStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class Extension_idStruct implements routines.system.IPersistableRow<Extension_idStruct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Extension__Opportunite;

		public String getExtension__Opportunite() {
			return this.Extension__Opportunite;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Extension__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Extension__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Extension__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Extension__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Extension__Opportunite=" + Extension__Opportunite);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(Extension_idStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class Dim_nature_offre_mobileStruct
			implements routines.system.IPersistableRow<Dim_nature_offre_mobileStruct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Nature_Offre;

		public String getNature_Offre() {
			return this.Nature_Offre;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Nature_Offre = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Nature_Offre = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Nature_Offre, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Nature_Offre, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Nature_Offre=" + Nature_Offre);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(Dim_nature_offre_mobileStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class Dim_offre_mobileStruct implements routines.system.IPersistableRow<Dim_offre_mobileStruct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Offre;

		public String getOffre() {
			return this.Offre;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Offre = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Offre = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Offre, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Offre, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Offre=" + Offre);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(Dim_offre_mobileStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row58Struct implements routines.system.IPersistableRow<row58Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Reference_OSM_mere__Opportunite;

		public String getReference_OSM_mere__Opportunite() {
			return this.Reference_OSM_mere__Opportunite;
		}

		public String Reference_OSM__Opportunite;

		public String getReference_OSM__Opportunite() {
			return this.Reference_OSM__Opportunite;
		}

		public String Client_Prospect__Opportunite;

		public String getClient_Prospect__Opportunite() {
			return this.Client_Prospect__Opportunite;
		}

		public String Offre;

		public String getOffre() {
			return this.Offre;
		}

		public String Nature_Offre;

		public String getNature_Offre() {
			return this.Nature_Offre;
		}

		public String Produit_existant;

		public String getProduit_existant() {
			return this.Produit_existant;
		}

		public String Nature_produit__Produit_existant;

		public String getNature_produit__Produit_existant() {
			return this.Nature_produit__Produit_existant;
		}

		public Integer Quantite;

		public Integer getQuantite() {
			return this.Quantite;
		}

		public String Prix_unitaire;

		public String getPrix_unitaire() {
			return this.Prix_unitaire;
		}

		public String Total_final;

		public String getTotal_final() {
			return this.Total_final;
		}

		public String Remise______Opportunite;

		public String getRemise______Opportunite() {
			return this.Remise______Opportunite;
		}

		public Float Total_remise_HT;

		public Float getTotal_remise_HT() {
			return this.Total_remise_HT;
		}

		public String Extension__Opportunite;

		public String getExtension__Opportunite() {
			return this.Extension__Opportunite;
		}

		public String Budget_a_valider__Opportunite;

		public String getBudget_a_valider__Opportunite() {
			return this.Budget_a_valider__Opportunite;
		}

		public String Budget_a_valider_Extension__Opportunite;

		public String getBudget_a_valider_Extension__Opportunite() {
			return this.Budget_a_valider_Extension__Opportunite;
		}

		public String Duree_d_engagement__Opportunite;

		public String getDuree_d_engagement__Opportunite() {
			return this.Duree_d_engagement__Opportunite;
		}

		public String Type_d_engagement__Opportunite;

		public String getType_d_engagement__Opportunite() {
			return this.Type_d_engagement__Opportunite;
		}

		public String Demandeur__Opportunite;

		public String getDemandeur__Opportunite() {
			return this.Demandeur__Opportunite;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public String Cree_le__Opportunite;

		public String getCree_le__Opportunite() {
			return this.Cree_le__Opportunite;
		}

		public Integer Mois_de_creation;

		public Integer getMois_de_creation() {
			return this.Mois_de_creation;
		}

		public Integer Annee_de_creation;

		public Integer getAnnee_de_creation() {
			return this.Annee_de_creation;
		}

		public String Mois_et_annee_de_creation;

		public String getMois_et_annee_de_creation() {
			return this.Mois_et_annee_de_creation;
		}

		public String Raison_de_statut_OSM__Opportunite;

		public String getRaison_de_statut_OSM__Opportunite() {
			return this.Raison_de_statut_OSM__Opportunite;
		}

		public String Statut_OSM__Opportunite;

		public String getStatut_OSM__Opportunite() {
			return this.Statut_OSM__Opportunite;
		}

		public String Statut_activation__Commande;

		public String getStatut_activation__Commande() {
			return this.Statut_activation__Commande;
		}

		public String Date_d_activation__Commande;

		public String getDate_d_activation__Commande() {
			return this.Date_d_activation__Commande;
		}

		public Integer Mois_d_activation;

		public Integer getMois_d_activation() {
			return this.Mois_d_activation;
		}

		public String Staut_Final;

		public String getStaut_Final() {
			return this.Staut_Final;
		}

		public String Gouvernorat;

		public String getGouvernorat() {
			return this.Gouvernorat;
		}

		public String Phase_de_l_opportunite__Opportunite;

		public String getPhase_de_l_opportunite__Opportunite() {
			return this.Phase_de_l_opportunite__Opportunite;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Reference_OSM_mere__Opportunite = readString(dis);

					this.Reference_OSM__Opportunite = readString(dis);

					this.Client_Prospect__Opportunite = readString(dis);

					this.Offre = readString(dis);

					this.Nature_Offre = readString(dis);

					this.Produit_existant = readString(dis);

					this.Nature_produit__Produit_existant = readString(dis);

					this.Quantite = readInteger(dis);

					this.Prix_unitaire = readString(dis);

					this.Total_final = readString(dis);

					this.Remise______Opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Total_remise_HT = null;
					} else {
						this.Total_remise_HT = dis.readFloat();
					}

					this.Extension__Opportunite = readString(dis);

					this.Budget_a_valider__Opportunite = readString(dis);

					this.Budget_a_valider_Extension__Opportunite = readString(dis);

					this.Duree_d_engagement__Opportunite = readString(dis);

					this.Type_d_engagement__Opportunite = readString(dis);

					this.Demandeur__Opportunite = readString(dis);

					this.Equipe = readString(dis);

					this.Cree_le__Opportunite = readString(dis);

					this.Mois_de_creation = readInteger(dis);

					this.Annee_de_creation = readInteger(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Raison_de_statut_OSM__Opportunite = readString(dis);

					this.Statut_OSM__Opportunite = readString(dis);

					this.Statut_activation__Commande = readString(dis);

					this.Date_d_activation__Commande = readString(dis);

					this.Mois_d_activation = readInteger(dis);

					this.Staut_Final = readString(dis);

					this.Gouvernorat = readString(dis);

					this.Phase_de_l_opportunite__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Reference_OSM_mere__Opportunite = readString(dis);

					this.Reference_OSM__Opportunite = readString(dis);

					this.Client_Prospect__Opportunite = readString(dis);

					this.Offre = readString(dis);

					this.Nature_Offre = readString(dis);

					this.Produit_existant = readString(dis);

					this.Nature_produit__Produit_existant = readString(dis);

					this.Quantite = readInteger(dis);

					this.Prix_unitaire = readString(dis);

					this.Total_final = readString(dis);

					this.Remise______Opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Total_remise_HT = null;
					} else {
						this.Total_remise_HT = dis.readFloat();
					}

					this.Extension__Opportunite = readString(dis);

					this.Budget_a_valider__Opportunite = readString(dis);

					this.Budget_a_valider_Extension__Opportunite = readString(dis);

					this.Duree_d_engagement__Opportunite = readString(dis);

					this.Type_d_engagement__Opportunite = readString(dis);

					this.Demandeur__Opportunite = readString(dis);

					this.Equipe = readString(dis);

					this.Cree_le__Opportunite = readString(dis);

					this.Mois_de_creation = readInteger(dis);

					this.Annee_de_creation = readInteger(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Raison_de_statut_OSM__Opportunite = readString(dis);

					this.Statut_OSM__Opportunite = readString(dis);

					this.Statut_activation__Commande = readString(dis);

					this.Date_d_activation__Commande = readString(dis);

					this.Mois_d_activation = readInteger(dis);

					this.Staut_Final = readString(dis);

					this.Gouvernorat = readString(dis);

					this.Phase_de_l_opportunite__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Reference_OSM_mere__Opportunite, dos);

				// String

				writeString(this.Reference_OSM__Opportunite, dos);

				// String

				writeString(this.Client_Prospect__Opportunite, dos);

				// String

				writeString(this.Offre, dos);

				// String

				writeString(this.Nature_Offre, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Nature_produit__Produit_existant, dos);

				// Integer

				writeInteger(this.Quantite, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Remise______Opportunite, dos);

				// Float

				if (this.Total_remise_HT == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Total_remise_HT);
				}

				// String

				writeString(this.Extension__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider_Extension__Opportunite, dos);

				// String

				writeString(this.Duree_d_engagement__Opportunite, dos);

				// String

				writeString(this.Type_d_engagement__Opportunite, dos);

				// String

				writeString(this.Demandeur__Opportunite, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Cree_le__Opportunite, dos);

				// Integer

				writeInteger(this.Mois_de_creation, dos);

				// Integer

				writeInteger(this.Annee_de_creation, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Raison_de_statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_activation__Commande, dos);

				// String

				writeString(this.Date_d_activation__Commande, dos);

				// Integer

				writeInteger(this.Mois_d_activation, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Gouvernorat, dos);

				// String

				writeString(this.Phase_de_l_opportunite__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Reference_OSM_mere__Opportunite, dos);

				// String

				writeString(this.Reference_OSM__Opportunite, dos);

				// String

				writeString(this.Client_Prospect__Opportunite, dos);

				// String

				writeString(this.Offre, dos);

				// String

				writeString(this.Nature_Offre, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Nature_produit__Produit_existant, dos);

				// Integer

				writeInteger(this.Quantite, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Remise______Opportunite, dos);

				// Float

				if (this.Total_remise_HT == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Total_remise_HT);
				}

				// String

				writeString(this.Extension__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider_Extension__Opportunite, dos);

				// String

				writeString(this.Duree_d_engagement__Opportunite, dos);

				// String

				writeString(this.Type_d_engagement__Opportunite, dos);

				// String

				writeString(this.Demandeur__Opportunite, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Cree_le__Opportunite, dos);

				// Integer

				writeInteger(this.Mois_de_creation, dos);

				// Integer

				writeInteger(this.Annee_de_creation, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Raison_de_statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_activation__Commande, dos);

				// String

				writeString(this.Date_d_activation__Commande, dos);

				// Integer

				writeInteger(this.Mois_d_activation, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Gouvernorat, dos);

				// String

				writeString(this.Phase_de_l_opportunite__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Reference_OSM_mere__Opportunite=" + Reference_OSM_mere__Opportunite);
			sb.append(",Reference_OSM__Opportunite=" + Reference_OSM__Opportunite);
			sb.append(",Client_Prospect__Opportunite=" + Client_Prospect__Opportunite);
			sb.append(",Offre=" + Offre);
			sb.append(",Nature_Offre=" + Nature_Offre);
			sb.append(",Produit_existant=" + Produit_existant);
			sb.append(",Nature_produit__Produit_existant=" + Nature_produit__Produit_existant);
			sb.append(",Quantite=" + String.valueOf(Quantite));
			sb.append(",Prix_unitaire=" + Prix_unitaire);
			sb.append(",Total_final=" + Total_final);
			sb.append(",Remise______Opportunite=" + Remise______Opportunite);
			sb.append(",Total_remise_HT=" + String.valueOf(Total_remise_HT));
			sb.append(",Extension__Opportunite=" + Extension__Opportunite);
			sb.append(",Budget_a_valider__Opportunite=" + Budget_a_valider__Opportunite);
			sb.append(",Budget_a_valider_Extension__Opportunite=" + Budget_a_valider_Extension__Opportunite);
			sb.append(",Duree_d_engagement__Opportunite=" + Duree_d_engagement__Opportunite);
			sb.append(",Type_d_engagement__Opportunite=" + Type_d_engagement__Opportunite);
			sb.append(",Demandeur__Opportunite=" + Demandeur__Opportunite);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Cree_le__Opportunite=" + Cree_le__Opportunite);
			sb.append(",Mois_de_creation=" + String.valueOf(Mois_de_creation));
			sb.append(",Annee_de_creation=" + String.valueOf(Annee_de_creation));
			sb.append(",Mois_et_annee_de_creation=" + Mois_et_annee_de_creation);
			sb.append(",Raison_de_statut_OSM__Opportunite=" + Raison_de_statut_OSM__Opportunite);
			sb.append(",Statut_OSM__Opportunite=" + Statut_OSM__Opportunite);
			sb.append(",Statut_activation__Commande=" + Statut_activation__Commande);
			sb.append(",Date_d_activation__Commande=" + Date_d_activation__Commande);
			sb.append(",Mois_d_activation=" + String.valueOf(Mois_d_activation));
			sb.append(",Staut_Final=" + Staut_Final);
			sb.append(",Gouvernorat=" + Gouvernorat);
			sb.append(",Phase_de_l_opportunite__Opportunite=" + Phase_de_l_opportunite__Opportunite);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row58Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class after_tFileInputExcel_9Struct
			implements routines.system.IPersistableRow<after_tFileInputExcel_9Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Reference_OSM_mere__Opportunite;

		public String getReference_OSM_mere__Opportunite() {
			return this.Reference_OSM_mere__Opportunite;
		}

		public String Reference_OSM__Opportunite;

		public String getReference_OSM__Opportunite() {
			return this.Reference_OSM__Opportunite;
		}

		public String Client_Prospect__Opportunite;

		public String getClient_Prospect__Opportunite() {
			return this.Client_Prospect__Opportunite;
		}

		public String Offre;

		public String getOffre() {
			return this.Offre;
		}

		public String Nature_Offre;

		public String getNature_Offre() {
			return this.Nature_Offre;
		}

		public String Produit_existant;

		public String getProduit_existant() {
			return this.Produit_existant;
		}

		public String Nature_produit__Produit_existant;

		public String getNature_produit__Produit_existant() {
			return this.Nature_produit__Produit_existant;
		}

		public Integer Quantite;

		public Integer getQuantite() {
			return this.Quantite;
		}

		public String Prix_unitaire;

		public String getPrix_unitaire() {
			return this.Prix_unitaire;
		}

		public String Total_final;

		public String getTotal_final() {
			return this.Total_final;
		}

		public String Remise______Opportunite;

		public String getRemise______Opportunite() {
			return this.Remise______Opportunite;
		}

		public Float Total_remise_HT;

		public Float getTotal_remise_HT() {
			return this.Total_remise_HT;
		}

		public String Extension__Opportunite;

		public String getExtension__Opportunite() {
			return this.Extension__Opportunite;
		}

		public String Budget_a_valider__Opportunite;

		public String getBudget_a_valider__Opportunite() {
			return this.Budget_a_valider__Opportunite;
		}

		public String Budget_a_valider_Extension__Opportunite;

		public String getBudget_a_valider_Extension__Opportunite() {
			return this.Budget_a_valider_Extension__Opportunite;
		}

		public String Duree_d_engagement__Opportunite;

		public String getDuree_d_engagement__Opportunite() {
			return this.Duree_d_engagement__Opportunite;
		}

		public String Type_d_engagement__Opportunite;

		public String getType_d_engagement__Opportunite() {
			return this.Type_d_engagement__Opportunite;
		}

		public String Demandeur__Opportunite;

		public String getDemandeur__Opportunite() {
			return this.Demandeur__Opportunite;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public String Cree_le__Opportunite;

		public String getCree_le__Opportunite() {
			return this.Cree_le__Opportunite;
		}

		public Integer Mois_de_creation;

		public Integer getMois_de_creation() {
			return this.Mois_de_creation;
		}

		public Integer Annee_de_creation;

		public Integer getAnnee_de_creation() {
			return this.Annee_de_creation;
		}

		public String Mois_et_annee_de_creation;

		public String getMois_et_annee_de_creation() {
			return this.Mois_et_annee_de_creation;
		}

		public String Raison_de_statut_OSM__Opportunite;

		public String getRaison_de_statut_OSM__Opportunite() {
			return this.Raison_de_statut_OSM__Opportunite;
		}

		public String Statut_OSM__Opportunite;

		public String getStatut_OSM__Opportunite() {
			return this.Statut_OSM__Opportunite;
		}

		public String Statut_activation__Commande;

		public String getStatut_activation__Commande() {
			return this.Statut_activation__Commande;
		}

		public String Date_d_activation__Commande;

		public String getDate_d_activation__Commande() {
			return this.Date_d_activation__Commande;
		}

		public Integer Mois_d_activation;

		public Integer getMois_d_activation() {
			return this.Mois_d_activation;
		}

		public String Staut_Final;

		public String getStaut_Final() {
			return this.Staut_Final;
		}

		public String Gouvernorat;

		public String getGouvernorat() {
			return this.Gouvernorat;
		}

		public String Phase_de_l_opportunite__Opportunite;

		public String getPhase_de_l_opportunite__Opportunite() {
			return this.Phase_de_l_opportunite__Opportunite;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Reference_OSM_mere__Opportunite = readString(dis);

					this.Reference_OSM__Opportunite = readString(dis);

					this.Client_Prospect__Opportunite = readString(dis);

					this.Offre = readString(dis);

					this.Nature_Offre = readString(dis);

					this.Produit_existant = readString(dis);

					this.Nature_produit__Produit_existant = readString(dis);

					this.Quantite = readInteger(dis);

					this.Prix_unitaire = readString(dis);

					this.Total_final = readString(dis);

					this.Remise______Opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Total_remise_HT = null;
					} else {
						this.Total_remise_HT = dis.readFloat();
					}

					this.Extension__Opportunite = readString(dis);

					this.Budget_a_valider__Opportunite = readString(dis);

					this.Budget_a_valider_Extension__Opportunite = readString(dis);

					this.Duree_d_engagement__Opportunite = readString(dis);

					this.Type_d_engagement__Opportunite = readString(dis);

					this.Demandeur__Opportunite = readString(dis);

					this.Equipe = readString(dis);

					this.Cree_le__Opportunite = readString(dis);

					this.Mois_de_creation = readInteger(dis);

					this.Annee_de_creation = readInteger(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Raison_de_statut_OSM__Opportunite = readString(dis);

					this.Statut_OSM__Opportunite = readString(dis);

					this.Statut_activation__Commande = readString(dis);

					this.Date_d_activation__Commande = readString(dis);

					this.Mois_d_activation = readInteger(dis);

					this.Staut_Final = readString(dis);

					this.Gouvernorat = readString(dis);

					this.Phase_de_l_opportunite__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Reference_OSM_mere__Opportunite = readString(dis);

					this.Reference_OSM__Opportunite = readString(dis);

					this.Client_Prospect__Opportunite = readString(dis);

					this.Offre = readString(dis);

					this.Nature_Offre = readString(dis);

					this.Produit_existant = readString(dis);

					this.Nature_produit__Produit_existant = readString(dis);

					this.Quantite = readInteger(dis);

					this.Prix_unitaire = readString(dis);

					this.Total_final = readString(dis);

					this.Remise______Opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Total_remise_HT = null;
					} else {
						this.Total_remise_HT = dis.readFloat();
					}

					this.Extension__Opportunite = readString(dis);

					this.Budget_a_valider__Opportunite = readString(dis);

					this.Budget_a_valider_Extension__Opportunite = readString(dis);

					this.Duree_d_engagement__Opportunite = readString(dis);

					this.Type_d_engagement__Opportunite = readString(dis);

					this.Demandeur__Opportunite = readString(dis);

					this.Equipe = readString(dis);

					this.Cree_le__Opportunite = readString(dis);

					this.Mois_de_creation = readInteger(dis);

					this.Annee_de_creation = readInteger(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Raison_de_statut_OSM__Opportunite = readString(dis);

					this.Statut_OSM__Opportunite = readString(dis);

					this.Statut_activation__Commande = readString(dis);

					this.Date_d_activation__Commande = readString(dis);

					this.Mois_d_activation = readInteger(dis);

					this.Staut_Final = readString(dis);

					this.Gouvernorat = readString(dis);

					this.Phase_de_l_opportunite__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Reference_OSM_mere__Opportunite, dos);

				// String

				writeString(this.Reference_OSM__Opportunite, dos);

				// String

				writeString(this.Client_Prospect__Opportunite, dos);

				// String

				writeString(this.Offre, dos);

				// String

				writeString(this.Nature_Offre, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Nature_produit__Produit_existant, dos);

				// Integer

				writeInteger(this.Quantite, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Remise______Opportunite, dos);

				// Float

				if (this.Total_remise_HT == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Total_remise_HT);
				}

				// String

				writeString(this.Extension__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider_Extension__Opportunite, dos);

				// String

				writeString(this.Duree_d_engagement__Opportunite, dos);

				// String

				writeString(this.Type_d_engagement__Opportunite, dos);

				// String

				writeString(this.Demandeur__Opportunite, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Cree_le__Opportunite, dos);

				// Integer

				writeInteger(this.Mois_de_creation, dos);

				// Integer

				writeInteger(this.Annee_de_creation, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Raison_de_statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_activation__Commande, dos);

				// String

				writeString(this.Date_d_activation__Commande, dos);

				// Integer

				writeInteger(this.Mois_d_activation, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Gouvernorat, dos);

				// String

				writeString(this.Phase_de_l_opportunite__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Reference_OSM_mere__Opportunite, dos);

				// String

				writeString(this.Reference_OSM__Opportunite, dos);

				// String

				writeString(this.Client_Prospect__Opportunite, dos);

				// String

				writeString(this.Offre, dos);

				// String

				writeString(this.Nature_Offre, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Nature_produit__Produit_existant, dos);

				// Integer

				writeInteger(this.Quantite, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Remise______Opportunite, dos);

				// Float

				if (this.Total_remise_HT == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Total_remise_HT);
				}

				// String

				writeString(this.Extension__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider_Extension__Opportunite, dos);

				// String

				writeString(this.Duree_d_engagement__Opportunite, dos);

				// String

				writeString(this.Type_d_engagement__Opportunite, dos);

				// String

				writeString(this.Demandeur__Opportunite, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Cree_le__Opportunite, dos);

				// Integer

				writeInteger(this.Mois_de_creation, dos);

				// Integer

				writeInteger(this.Annee_de_creation, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Raison_de_statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_activation__Commande, dos);

				// String

				writeString(this.Date_d_activation__Commande, dos);

				// Integer

				writeInteger(this.Mois_d_activation, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Gouvernorat, dos);

				// String

				writeString(this.Phase_de_l_opportunite__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Reference_OSM_mere__Opportunite=" + Reference_OSM_mere__Opportunite);
			sb.append(",Reference_OSM__Opportunite=" + Reference_OSM__Opportunite);
			sb.append(",Client_Prospect__Opportunite=" + Client_Prospect__Opportunite);
			sb.append(",Offre=" + Offre);
			sb.append(",Nature_Offre=" + Nature_Offre);
			sb.append(",Produit_existant=" + Produit_existant);
			sb.append(",Nature_produit__Produit_existant=" + Nature_produit__Produit_existant);
			sb.append(",Quantite=" + String.valueOf(Quantite));
			sb.append(",Prix_unitaire=" + Prix_unitaire);
			sb.append(",Total_final=" + Total_final);
			sb.append(",Remise______Opportunite=" + Remise______Opportunite);
			sb.append(",Total_remise_HT=" + String.valueOf(Total_remise_HT));
			sb.append(",Extension__Opportunite=" + Extension__Opportunite);
			sb.append(",Budget_a_valider__Opportunite=" + Budget_a_valider__Opportunite);
			sb.append(",Budget_a_valider_Extension__Opportunite=" + Budget_a_valider_Extension__Opportunite);
			sb.append(",Duree_d_engagement__Opportunite=" + Duree_d_engagement__Opportunite);
			sb.append(",Type_d_engagement__Opportunite=" + Type_d_engagement__Opportunite);
			sb.append(",Demandeur__Opportunite=" + Demandeur__Opportunite);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Cree_le__Opportunite=" + Cree_le__Opportunite);
			sb.append(",Mois_de_creation=" + String.valueOf(Mois_de_creation));
			sb.append(",Annee_de_creation=" + String.valueOf(Annee_de_creation));
			sb.append(",Mois_et_annee_de_creation=" + Mois_et_annee_de_creation);
			sb.append(",Raison_de_statut_OSM__Opportunite=" + Raison_de_statut_OSM__Opportunite);
			sb.append(",Statut_OSM__Opportunite=" + Statut_OSM__Opportunite);
			sb.append(",Statut_activation__Commande=" + Statut_activation__Commande);
			sb.append(",Date_d_activation__Commande=" + Date_d_activation__Commande);
			sb.append(",Mois_d_activation=" + String.valueOf(Mois_d_activation));
			sb.append(",Staut_Final=" + Staut_Final);
			sb.append(",Gouvernorat=" + Gouvernorat);
			sb.append(",Phase_de_l_opportunite__Opportunite=" + Phase_de_l_opportunite__Opportunite);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(after_tFileInputExcel_9Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tFileInputExcel_9Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tFileInputExcel_9_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				tDBInput_13Process(globalMap);
				tDBInput_14Process(globalMap);
				tDBInput_15Process(globalMap);
				tDBInput_16Process(globalMap);
				tDBInput_17Process(globalMap);

				row58Struct row58 = new row58Struct();
				Dim_Reference_OSM_Opportunite_mobileStruct Dim_Reference_OSM_Opportunite_mobile = new Dim_Reference_OSM_Opportunite_mobileStruct();
				bStruct b = new bStruct();
				row68Struct row68 = new row68Struct();
				Dim_type_engagement_mobileStruct Dim_type_engagement_mobile = new Dim_type_engagement_mobileStruct();
				nStruct n = new nStruct();
				row70Struct row70 = new row70Struct();
				Extension_idStruct Extension_id = new Extension_idStruct();
				qStruct q = new qStruct();
				row71Struct row71 = new row71Struct();
				Dim_nature_offre_mobileStruct Dim_nature_offre_mobile = new Dim_nature_offre_mobileStruct();
				vStruct v = new vStruct();
				row66Struct row66 = new row66Struct();
				Dim_offre_mobileStruct Dim_offre_mobile = new Dim_offre_mobileStruct();
				cStruct c = new cStruct();
				row64Struct row64 = new row64Struct();

				/**
				 * [tDBOutput_15 begin ] start
				 */

				ok_Hash.put("tDBOutput_15", false);
				start_Hash.put("tDBOutput_15", System.currentTimeMillis());

				currentComponent = "tDBOutput_15";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row68");
				}

				int tos_count_tDBOutput_15 = 0;

				int nb_line_tDBOutput_15 = 0;
				int nb_line_update_tDBOutput_15 = 0;
				int nb_line_inserted_tDBOutput_15 = 0;
				int nb_line_deleted_tDBOutput_15 = 0;
				int nb_line_rejected_tDBOutput_15 = 0;

				int deletedCount_tDBOutput_15 = 0;
				int updatedCount_tDBOutput_15 = 0;
				int insertedCount_tDBOutput_15 = 0;
				int rowsToCommitCount_tDBOutput_15 = 0;
				int rejectedCount_tDBOutput_15 = 0;
				String dbschema_tDBOutput_15 = null;
				String tableName_tDBOutput_15 = null;
				boolean whetherReject_tDBOutput_15 = false;

				java.util.Calendar calendar_tDBOutput_15 = java.util.Calendar.getInstance();
				long year1_tDBOutput_15 = TalendDate.parseDate("yyyy-MM-dd", "0001-01-01").getTime();
				long year2_tDBOutput_15 = TalendDate.parseDate("yyyy-MM-dd", "1753-01-01").getTime();
				long year10000_tDBOutput_15 = TalendDate.parseDate("yyyy-MM-dd HH:mm:ss", "9999-12-31 24:00:00")
						.getTime();
				long date_tDBOutput_15;

				java.util.Calendar calendar_datetimeoffset_tDBOutput_15 = java.util.Calendar
						.getInstance(java.util.TimeZone.getTimeZone("UTC"));

				java.sql.Connection conn_tDBOutput_15 = null;
				String dbUser_tDBOutput_15 = null;
				dbschema_tDBOutput_15 = "dbo";
				String driverClass_tDBOutput_15 = "net.sourceforge.jtds.jdbc.Driver";

				java.lang.Class.forName(driverClass_tDBOutput_15);
				String port_tDBOutput_15 = "1433";
				String dbname_tDBOutput_15 = "orange_DW__";
				String url_tDBOutput_15 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBOutput_15)) {
					url_tDBOutput_15 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBOutput_15)) {
					url_tDBOutput_15 += "//" + "orange_DW__";

				}
				url_tDBOutput_15 += ";appName=" + projectName + ";" + "";
				dbUser_tDBOutput_15 = "sa";

				final String decryptedPassword_tDBOutput_15 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:KLqLyD6cswBMD8frkUmjv0XkfbexULHdVFMxxVIJXFgjl9jcwKE=");

				String dbPwd_tDBOutput_15 = decryptedPassword_tDBOutput_15;
				conn_tDBOutput_15 = java.sql.DriverManager.getConnection(url_tDBOutput_15, dbUser_tDBOutput_15,
						dbPwd_tDBOutput_15);

				resourceMap.put("conn_tDBOutput_15", conn_tDBOutput_15);

				conn_tDBOutput_15.setAutoCommit(false);
				int commitEvery_tDBOutput_15 = 10000;
				int commitCounter_tDBOutput_15 = 0;

				int batchSize_tDBOutput_15 = 10000;
				int batchSizeCounter_tDBOutput_15 = 0;

				if (dbschema_tDBOutput_15 == null || dbschema_tDBOutput_15.trim().length() == 0) {
					tableName_tDBOutput_15 = "Dim_Reference_OSM";
				} else {
					tableName_tDBOutput_15 = dbschema_tDBOutput_15 + "].[" + "Dim_Reference_OSM";
				}
				int count_tDBOutput_15 = 0;

				String insert_tDBOutput_15 = "INSERT INTO [" + tableName_tDBOutput_15
						+ "] ([Reference_OSM__Opportunite]) VALUES (?)";
				java.sql.PreparedStatement pstmt_tDBOutput_15 = conn_tDBOutput_15.prepareStatement(insert_tDBOutput_15);
				resourceMap.put("pstmt_tDBOutput_15", pstmt_tDBOutput_15);

				/**
				 * [tDBOutput_15 begin ] stop
				 */

				/**
				 * [tUniqRow_14 begin ] start
				 */

				ok_Hash.put("tUniqRow_14", false);
				start_Hash.put("tUniqRow_14", System.currentTimeMillis());

				currentComponent = "tUniqRow_14";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "b");
				}

				int tos_count_tUniqRow_14 = 0;

				class KeyStruct_tUniqRow_14 {

					private static final int DEFAULT_HASHCODE = 1;
					private static final int PRIME = 31;
					private int hashCode = DEFAULT_HASHCODE;
					public boolean hashCodeDirty = true;

					String Reference_OSM__Opportunite;

					@Override
					public int hashCode() {
						if (this.hashCodeDirty) {
							final int prime = PRIME;
							int result = DEFAULT_HASHCODE;

							result = prime * result + ((this.Reference_OSM__Opportunite == null) ? 0
									: this.Reference_OSM__Opportunite.hashCode());

							this.hashCode = result;
							this.hashCodeDirty = false;
						}
						return this.hashCode;
					}

					@Override
					public boolean equals(Object obj) {
						if (this == obj)
							return true;
						if (obj == null)
							return false;
						if (getClass() != obj.getClass())
							return false;
						final KeyStruct_tUniqRow_14 other = (KeyStruct_tUniqRow_14) obj;

						if (this.Reference_OSM__Opportunite == null) {
							if (other.Reference_OSM__Opportunite != null)
								return false;

						} else if (!this.Reference_OSM__Opportunite.equals(other.Reference_OSM__Opportunite))

							return false;

						return true;
					}

				}

				int nb_uniques_tUniqRow_14 = 0;
				int nb_duplicates_tUniqRow_14 = 0;
				KeyStruct_tUniqRow_14 finder_tUniqRow_14 = new KeyStruct_tUniqRow_14();
				java.util.Set<KeyStruct_tUniqRow_14> keystUniqRow_14 = new java.util.HashSet<KeyStruct_tUniqRow_14>();

				/**
				 * [tUniqRow_14 begin ] stop
				 */

				/**
				 * [tMap_48 begin ] start
				 */

				ok_Hash.put("tMap_48", false);
				start_Hash.put("tMap_48", System.currentTimeMillis());

				currentComponent = "tMap_48";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0,
							"Dim_Reference_OSM_Opportunite_mobile");
				}

				int tos_count_tMap_48 = 0;

// ###############################
// # Lookup's keys initialization

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row67Struct> tHash_Lookup_row67 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row67Struct>) ((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row67Struct>) globalMap
						.get("tHash_Lookup_row67"));

				row67Struct row67HashKey = new row67Struct();
				row67Struct row67Default = new row67Struct();
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_48__Struct {
				}
				Var__tMap_48__Struct Var__tMap_48 = new Var__tMap_48__Struct();
// ###############################

// ###############################
// # Outputs initialization
				bStruct b_tmp = new bStruct();
// ###############################

				/**
				 * [tMap_48 begin ] stop
				 */

				/**
				 * [tDBOutput_16 begin ] start
				 */

				ok_Hash.put("tDBOutput_16", false);
				start_Hash.put("tDBOutput_16", System.currentTimeMillis());

				currentComponent = "tDBOutput_16";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row70");
				}

				int tos_count_tDBOutput_16 = 0;

				int nb_line_tDBOutput_16 = 0;
				int nb_line_update_tDBOutput_16 = 0;
				int nb_line_inserted_tDBOutput_16 = 0;
				int nb_line_deleted_tDBOutput_16 = 0;
				int nb_line_rejected_tDBOutput_16 = 0;

				int deletedCount_tDBOutput_16 = 0;
				int updatedCount_tDBOutput_16 = 0;
				int insertedCount_tDBOutput_16 = 0;
				int rowsToCommitCount_tDBOutput_16 = 0;
				int rejectedCount_tDBOutput_16 = 0;
				String dbschema_tDBOutput_16 = null;
				String tableName_tDBOutput_16 = null;
				boolean whetherReject_tDBOutput_16 = false;

				java.util.Calendar calendar_tDBOutput_16 = java.util.Calendar.getInstance();
				long year1_tDBOutput_16 = TalendDate.parseDate("yyyy-MM-dd", "0001-01-01").getTime();
				long year2_tDBOutput_16 = TalendDate.parseDate("yyyy-MM-dd", "1753-01-01").getTime();
				long year10000_tDBOutput_16 = TalendDate.parseDate("yyyy-MM-dd HH:mm:ss", "9999-12-31 24:00:00")
						.getTime();
				long date_tDBOutput_16;

				java.util.Calendar calendar_datetimeoffset_tDBOutput_16 = java.util.Calendar
						.getInstance(java.util.TimeZone.getTimeZone("UTC"));

				java.sql.Connection conn_tDBOutput_16 = null;
				String dbUser_tDBOutput_16 = null;
				dbschema_tDBOutput_16 = "dbo";
				String driverClass_tDBOutput_16 = "net.sourceforge.jtds.jdbc.Driver";

				java.lang.Class.forName(driverClass_tDBOutput_16);
				String port_tDBOutput_16 = "1433";
				String dbname_tDBOutput_16 = "orange_DW__";
				String url_tDBOutput_16 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBOutput_16)) {
					url_tDBOutput_16 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBOutput_16)) {
					url_tDBOutput_16 += "//" + "orange_DW__";

				}
				url_tDBOutput_16 += ";appName=" + projectName + ";" + "";
				dbUser_tDBOutput_16 = "sa";

				final String decryptedPassword_tDBOutput_16 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:8nyLlNFpLfpzvXXcB1Wz2ckaV5atHPk9gJy09LDlZ5P7BBbt6to=");

				String dbPwd_tDBOutput_16 = decryptedPassword_tDBOutput_16;
				conn_tDBOutput_16 = java.sql.DriverManager.getConnection(url_tDBOutput_16, dbUser_tDBOutput_16,
						dbPwd_tDBOutput_16);

				resourceMap.put("conn_tDBOutput_16", conn_tDBOutput_16);

				conn_tDBOutput_16.setAutoCommit(false);
				int commitEvery_tDBOutput_16 = 10000;
				int commitCounter_tDBOutput_16 = 0;

				int batchSize_tDBOutput_16 = 10000;
				int batchSizeCounter_tDBOutput_16 = 0;

				if (dbschema_tDBOutput_16 == null || dbschema_tDBOutput_16.trim().length() == 0) {
					tableName_tDBOutput_16 = "Dim_type_engagement";
				} else {
					tableName_tDBOutput_16 = dbschema_tDBOutput_16 + "].[" + "Dim_type_engagement";
				}
				int count_tDBOutput_16 = 0;

				String insert_tDBOutput_16 = "INSERT INTO [" + tableName_tDBOutput_16
						+ "] ([Type_d_engagement__Opportunite]) VALUES (?)";
				java.sql.PreparedStatement pstmt_tDBOutput_16 = conn_tDBOutput_16.prepareStatement(insert_tDBOutput_16);
				resourceMap.put("pstmt_tDBOutput_16", pstmt_tDBOutput_16);

				/**
				 * [tDBOutput_16 begin ] stop
				 */

				/**
				 * [tUniqRow_15 begin ] start
				 */

				ok_Hash.put("tUniqRow_15", false);
				start_Hash.put("tUniqRow_15", System.currentTimeMillis());

				currentComponent = "tUniqRow_15";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "n");
				}

				int tos_count_tUniqRow_15 = 0;

				class KeyStruct_tUniqRow_15 {

					private static final int DEFAULT_HASHCODE = 1;
					private static final int PRIME = 31;
					private int hashCode = DEFAULT_HASHCODE;
					public boolean hashCodeDirty = true;

					String Type_d_engagement__Opportunite;

					@Override
					public int hashCode() {
						if (this.hashCodeDirty) {
							final int prime = PRIME;
							int result = DEFAULT_HASHCODE;

							result = prime * result + ((this.Type_d_engagement__Opportunite == null) ? 0
									: this.Type_d_engagement__Opportunite.hashCode());

							this.hashCode = result;
							this.hashCodeDirty = false;
						}
						return this.hashCode;
					}

					@Override
					public boolean equals(Object obj) {
						if (this == obj)
							return true;
						if (obj == null)
							return false;
						if (getClass() != obj.getClass())
							return false;
						final KeyStruct_tUniqRow_15 other = (KeyStruct_tUniqRow_15) obj;

						if (this.Type_d_engagement__Opportunite == null) {
							if (other.Type_d_engagement__Opportunite != null)
								return false;

						} else if (!this.Type_d_engagement__Opportunite.equals(other.Type_d_engagement__Opportunite))

							return false;

						return true;
					}

				}

				int nb_uniques_tUniqRow_15 = 0;
				int nb_duplicates_tUniqRow_15 = 0;
				KeyStruct_tUniqRow_15 finder_tUniqRow_15 = new KeyStruct_tUniqRow_15();
				java.util.Set<KeyStruct_tUniqRow_15> keystUniqRow_15 = new java.util.HashSet<KeyStruct_tUniqRow_15>();

				/**
				 * [tUniqRow_15 begin ] stop
				 */

				/**
				 * [tMap_49 begin ] start
				 */

				ok_Hash.put("tMap_49", false);
				start_Hash.put("tMap_49", System.currentTimeMillis());

				currentComponent = "tMap_49";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "Dim_type_engagement_mobile");
				}

				int tos_count_tMap_49 = 0;

// ###############################
// # Lookup's keys initialization

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row69Struct> tHash_Lookup_row69 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row69Struct>) ((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row69Struct>) globalMap
						.get("tHash_Lookup_row69"));

				row69Struct row69HashKey = new row69Struct();
				row69Struct row69Default = new row69Struct();
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_49__Struct {
				}
				Var__tMap_49__Struct Var__tMap_49 = new Var__tMap_49__Struct();
// ###############################

// ###############################
// # Outputs initialization
				nStruct n_tmp = new nStruct();
// ###############################

				/**
				 * [tMap_49 begin ] stop
				 */

				/**
				 * [tDBOutput_17 begin ] start
				 */

				ok_Hash.put("tDBOutput_17", false);
				start_Hash.put("tDBOutput_17", System.currentTimeMillis());

				currentComponent = "tDBOutput_17";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row71");
				}

				int tos_count_tDBOutput_17 = 0;

				int nb_line_tDBOutput_17 = 0;
				int nb_line_update_tDBOutput_17 = 0;
				int nb_line_inserted_tDBOutput_17 = 0;
				int nb_line_deleted_tDBOutput_17 = 0;
				int nb_line_rejected_tDBOutput_17 = 0;

				int deletedCount_tDBOutput_17 = 0;
				int updatedCount_tDBOutput_17 = 0;
				int insertedCount_tDBOutput_17 = 0;
				int rowsToCommitCount_tDBOutput_17 = 0;
				int rejectedCount_tDBOutput_17 = 0;
				String dbschema_tDBOutput_17 = null;
				String tableName_tDBOutput_17 = null;
				boolean whetherReject_tDBOutput_17 = false;

				java.util.Calendar calendar_tDBOutput_17 = java.util.Calendar.getInstance();
				long year1_tDBOutput_17 = TalendDate.parseDate("yyyy-MM-dd", "0001-01-01").getTime();
				long year2_tDBOutput_17 = TalendDate.parseDate("yyyy-MM-dd", "1753-01-01").getTime();
				long year10000_tDBOutput_17 = TalendDate.parseDate("yyyy-MM-dd HH:mm:ss", "9999-12-31 24:00:00")
						.getTime();
				long date_tDBOutput_17;

				java.util.Calendar calendar_datetimeoffset_tDBOutput_17 = java.util.Calendar
						.getInstance(java.util.TimeZone.getTimeZone("UTC"));

				java.sql.Connection conn_tDBOutput_17 = null;
				String dbUser_tDBOutput_17 = null;
				dbschema_tDBOutput_17 = "dbo";
				String driverClass_tDBOutput_17 = "net.sourceforge.jtds.jdbc.Driver";

				java.lang.Class.forName(driverClass_tDBOutput_17);
				String port_tDBOutput_17 = "1433";
				String dbname_tDBOutput_17 = "orange_DW__";
				String url_tDBOutput_17 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBOutput_17)) {
					url_tDBOutput_17 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBOutput_17)) {
					url_tDBOutput_17 += "//" + "orange_DW__";

				}
				url_tDBOutput_17 += ";appName=" + projectName + ";" + "";
				dbUser_tDBOutput_17 = "sa";

				final String decryptedPassword_tDBOutput_17 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:ZKTrKyMvjlbdRrCrUdUVZ787c2nCuR0j0I1jD039DjH17d5PP90=");

				String dbPwd_tDBOutput_17 = decryptedPassword_tDBOutput_17;
				conn_tDBOutput_17 = java.sql.DriverManager.getConnection(url_tDBOutput_17, dbUser_tDBOutput_17,
						dbPwd_tDBOutput_17);

				resourceMap.put("conn_tDBOutput_17", conn_tDBOutput_17);

				conn_tDBOutput_17.setAutoCommit(false);
				int commitEvery_tDBOutput_17 = 10000;
				int commitCounter_tDBOutput_17 = 0;

				int batchSize_tDBOutput_17 = 10000;
				int batchSizeCounter_tDBOutput_17 = 0;

				if (dbschema_tDBOutput_17 == null || dbschema_tDBOutput_17.trim().length() == 0) {
					tableName_tDBOutput_17 = "Dim_Extension_mobile";
				} else {
					tableName_tDBOutput_17 = dbschema_tDBOutput_17 + "].[" + "Dim_Extension_mobile";
				}
				int count_tDBOutput_17 = 0;

				String insert_tDBOutput_17 = "INSERT INTO [" + tableName_tDBOutput_17
						+ "] ([Extension__Opportunite]) VALUES (?)";
				java.sql.PreparedStatement pstmt_tDBOutput_17 = conn_tDBOutput_17.prepareStatement(insert_tDBOutput_17);
				resourceMap.put("pstmt_tDBOutput_17", pstmt_tDBOutput_17);

				/**
				 * [tDBOutput_17 begin ] stop
				 */

				/**
				 * [tUniqRow_16 begin ] start
				 */

				ok_Hash.put("tUniqRow_16", false);
				start_Hash.put("tUniqRow_16", System.currentTimeMillis());

				currentComponent = "tUniqRow_16";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "q");
				}

				int tos_count_tUniqRow_16 = 0;

				class KeyStruct_tUniqRow_16 {

					private static final int DEFAULT_HASHCODE = 1;
					private static final int PRIME = 31;
					private int hashCode = DEFAULT_HASHCODE;
					public boolean hashCodeDirty = true;

					String Extension__Opportunite;

					@Override
					public int hashCode() {
						if (this.hashCodeDirty) {
							final int prime = PRIME;
							int result = DEFAULT_HASHCODE;

							result = prime * result + ((this.Extension__Opportunite == null) ? 0
									: this.Extension__Opportunite.hashCode());

							this.hashCode = result;
							this.hashCodeDirty = false;
						}
						return this.hashCode;
					}

					@Override
					public boolean equals(Object obj) {
						if (this == obj)
							return true;
						if (obj == null)
							return false;
						if (getClass() != obj.getClass())
							return false;
						final KeyStruct_tUniqRow_16 other = (KeyStruct_tUniqRow_16) obj;

						if (this.Extension__Opportunite == null) {
							if (other.Extension__Opportunite != null)
								return false;

						} else if (!this.Extension__Opportunite.equals(other.Extension__Opportunite))

							return false;

						return true;
					}

				}

				int nb_uniques_tUniqRow_16 = 0;
				int nb_duplicates_tUniqRow_16 = 0;
				KeyStruct_tUniqRow_16 finder_tUniqRow_16 = new KeyStruct_tUniqRow_16();
				java.util.Set<KeyStruct_tUniqRow_16> keystUniqRow_16 = new java.util.HashSet<KeyStruct_tUniqRow_16>();

				/**
				 * [tUniqRow_16 begin ] stop
				 */

				/**
				 * [tMap_50 begin ] start
				 */

				ok_Hash.put("tMap_50", false);
				start_Hash.put("tMap_50", System.currentTimeMillis());

				currentComponent = "tMap_50";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "Extension_id");
				}

				int tos_count_tMap_50 = 0;

// ###############################
// # Lookup's keys initialization

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row72Struct> tHash_Lookup_row72 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row72Struct>) ((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row72Struct>) globalMap
						.get("tHash_Lookup_row72"));

				row72Struct row72HashKey = new row72Struct();
				row72Struct row72Default = new row72Struct();
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_50__Struct {
				}
				Var__tMap_50__Struct Var__tMap_50 = new Var__tMap_50__Struct();
// ###############################

// ###############################
// # Outputs initialization
				qStruct q_tmp = new qStruct();
// ###############################

				/**
				 * [tMap_50 begin ] stop
				 */

				/**
				 * [tDBOutput_14 begin ] start
				 */

				ok_Hash.put("tDBOutput_14", false);
				start_Hash.put("tDBOutput_14", System.currentTimeMillis());

				currentComponent = "tDBOutput_14";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row66");
				}

				int tos_count_tDBOutput_14 = 0;

				int nb_line_tDBOutput_14 = 0;
				int nb_line_update_tDBOutput_14 = 0;
				int nb_line_inserted_tDBOutput_14 = 0;
				int nb_line_deleted_tDBOutput_14 = 0;
				int nb_line_rejected_tDBOutput_14 = 0;

				int deletedCount_tDBOutput_14 = 0;
				int updatedCount_tDBOutput_14 = 0;
				int insertedCount_tDBOutput_14 = 0;
				int rowsToCommitCount_tDBOutput_14 = 0;
				int rejectedCount_tDBOutput_14 = 0;
				String dbschema_tDBOutput_14 = null;
				String tableName_tDBOutput_14 = null;
				boolean whetherReject_tDBOutput_14 = false;

				java.util.Calendar calendar_tDBOutput_14 = java.util.Calendar.getInstance();
				long year1_tDBOutput_14 = TalendDate.parseDate("yyyy-MM-dd", "0001-01-01").getTime();
				long year2_tDBOutput_14 = TalendDate.parseDate("yyyy-MM-dd", "1753-01-01").getTime();
				long year10000_tDBOutput_14 = TalendDate.parseDate("yyyy-MM-dd HH:mm:ss", "9999-12-31 24:00:00")
						.getTime();
				long date_tDBOutput_14;

				java.util.Calendar calendar_datetimeoffset_tDBOutput_14 = java.util.Calendar
						.getInstance(java.util.TimeZone.getTimeZone("UTC"));

				java.sql.Connection conn_tDBOutput_14 = null;
				String dbUser_tDBOutput_14 = null;
				dbschema_tDBOutput_14 = "dbo";
				String driverClass_tDBOutput_14 = "net.sourceforge.jtds.jdbc.Driver";

				java.lang.Class.forName(driverClass_tDBOutput_14);
				String port_tDBOutput_14 = "1433";
				String dbname_tDBOutput_14 = "orange_DW__";
				String url_tDBOutput_14 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBOutput_14)) {
					url_tDBOutput_14 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBOutput_14)) {
					url_tDBOutput_14 += "//" + "orange_DW__";

				}
				url_tDBOutput_14 += ";appName=" + projectName + ";" + "";
				dbUser_tDBOutput_14 = "sa";

				final String decryptedPassword_tDBOutput_14 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:QAflfunntFpKPbfLHvFPuA7H8oK+U6tE5y9BTVt+SQN25TxOICY=");

				String dbPwd_tDBOutput_14 = decryptedPassword_tDBOutput_14;
				conn_tDBOutput_14 = java.sql.DriverManager.getConnection(url_tDBOutput_14, dbUser_tDBOutput_14,
						dbPwd_tDBOutput_14);

				resourceMap.put("conn_tDBOutput_14", conn_tDBOutput_14);

				conn_tDBOutput_14.setAutoCommit(false);
				int commitEvery_tDBOutput_14 = 10000;
				int commitCounter_tDBOutput_14 = 0;

				int batchSize_tDBOutput_14 = 10000;
				int batchSizeCounter_tDBOutput_14 = 0;

				if (dbschema_tDBOutput_14 == null || dbschema_tDBOutput_14.trim().length() == 0) {
					tableName_tDBOutput_14 = "Dim_nature_offre";
				} else {
					tableName_tDBOutput_14 = dbschema_tDBOutput_14 + "].[" + "Dim_nature_offre";
				}
				int count_tDBOutput_14 = 0;

				String insert_tDBOutput_14 = "INSERT INTO [" + tableName_tDBOutput_14 + "] ([Nature_Offre]) VALUES (?)";
				java.sql.PreparedStatement pstmt_tDBOutput_14 = conn_tDBOutput_14.prepareStatement(insert_tDBOutput_14);
				resourceMap.put("pstmt_tDBOutput_14", pstmt_tDBOutput_14);

				/**
				 * [tDBOutput_14 begin ] stop
				 */

				/**
				 * [tUniqRow_13 begin ] start
				 */

				ok_Hash.put("tUniqRow_13", false);
				start_Hash.put("tUniqRow_13", System.currentTimeMillis());

				currentComponent = "tUniqRow_13";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "v");
				}

				int tos_count_tUniqRow_13 = 0;

				class KeyStruct_tUniqRow_13 {

					private static final int DEFAULT_HASHCODE = 1;
					private static final int PRIME = 31;
					private int hashCode = DEFAULT_HASHCODE;
					public boolean hashCodeDirty = true;

					String Nature_Offre;

					@Override
					public int hashCode() {
						if (this.hashCodeDirty) {
							final int prime = PRIME;
							int result = DEFAULT_HASHCODE;

							result = prime * result + ((this.Nature_Offre == null) ? 0 : this.Nature_Offre.hashCode());

							this.hashCode = result;
							this.hashCodeDirty = false;
						}
						return this.hashCode;
					}

					@Override
					public boolean equals(Object obj) {
						if (this == obj)
							return true;
						if (obj == null)
							return false;
						if (getClass() != obj.getClass())
							return false;
						final KeyStruct_tUniqRow_13 other = (KeyStruct_tUniqRow_13) obj;

						if (this.Nature_Offre == null) {
							if (other.Nature_Offre != null)
								return false;

						} else if (!this.Nature_Offre.equals(other.Nature_Offre))

							return false;

						return true;
					}

				}

				int nb_uniques_tUniqRow_13 = 0;
				int nb_duplicates_tUniqRow_13 = 0;
				KeyStruct_tUniqRow_13 finder_tUniqRow_13 = new KeyStruct_tUniqRow_13();
				java.util.Set<KeyStruct_tUniqRow_13> keystUniqRow_13 = new java.util.HashSet<KeyStruct_tUniqRow_13>();

				/**
				 * [tUniqRow_13 begin ] stop
				 */

				/**
				 * [tMap_47 begin ] start
				 */

				ok_Hash.put("tMap_47", false);
				start_Hash.put("tMap_47", System.currentTimeMillis());

				currentComponent = "tMap_47";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "Dim_nature_offre_mobile");
				}

				int tos_count_tMap_47 = 0;

// ###############################
// # Lookup's keys initialization

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row65Struct> tHash_Lookup_row65 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row65Struct>) ((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row65Struct>) globalMap
						.get("tHash_Lookup_row65"));

				row65Struct row65HashKey = new row65Struct();
				row65Struct row65Default = new row65Struct();
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_47__Struct {
				}
				Var__tMap_47__Struct Var__tMap_47 = new Var__tMap_47__Struct();
// ###############################

// ###############################
// # Outputs initialization
				vStruct v_tmp = new vStruct();
// ###############################

				/**
				 * [tMap_47 begin ] stop
				 */

				/**
				 * [tDBOutput_13 begin ] start
				 */

				ok_Hash.put("tDBOutput_13", false);
				start_Hash.put("tDBOutput_13", System.currentTimeMillis());

				currentComponent = "tDBOutput_13";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row64");
				}

				int tos_count_tDBOutput_13 = 0;

				int nb_line_tDBOutput_13 = 0;
				int nb_line_update_tDBOutput_13 = 0;
				int nb_line_inserted_tDBOutput_13 = 0;
				int nb_line_deleted_tDBOutput_13 = 0;
				int nb_line_rejected_tDBOutput_13 = 0;

				int deletedCount_tDBOutput_13 = 0;
				int updatedCount_tDBOutput_13 = 0;
				int insertedCount_tDBOutput_13 = 0;
				int rowsToCommitCount_tDBOutput_13 = 0;
				int rejectedCount_tDBOutput_13 = 0;
				String dbschema_tDBOutput_13 = null;
				String tableName_tDBOutput_13 = null;
				boolean whetherReject_tDBOutput_13 = false;

				java.util.Calendar calendar_tDBOutput_13 = java.util.Calendar.getInstance();
				long year1_tDBOutput_13 = TalendDate.parseDate("yyyy-MM-dd", "0001-01-01").getTime();
				long year2_tDBOutput_13 = TalendDate.parseDate("yyyy-MM-dd", "1753-01-01").getTime();
				long year10000_tDBOutput_13 = TalendDate.parseDate("yyyy-MM-dd HH:mm:ss", "9999-12-31 24:00:00")
						.getTime();
				long date_tDBOutput_13;

				java.util.Calendar calendar_datetimeoffset_tDBOutput_13 = java.util.Calendar
						.getInstance(java.util.TimeZone.getTimeZone("UTC"));

				java.sql.Connection conn_tDBOutput_13 = null;
				String dbUser_tDBOutput_13 = null;
				dbschema_tDBOutput_13 = "dbo";
				String driverClass_tDBOutput_13 = "net.sourceforge.jtds.jdbc.Driver";

				java.lang.Class.forName(driverClass_tDBOutput_13);
				String port_tDBOutput_13 = "1433";
				String dbname_tDBOutput_13 = "orange_DW__";
				String url_tDBOutput_13 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBOutput_13)) {
					url_tDBOutput_13 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBOutput_13)) {
					url_tDBOutput_13 += "//" + "orange_DW__";

				}
				url_tDBOutput_13 += ";appName=" + projectName + ";" + "";
				dbUser_tDBOutput_13 = "sa";

				final String decryptedPassword_tDBOutput_13 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:eHAb6p3csJc90gzJc+cgCwufIBhOgmLoKDj4KeI6M/4TXhb9VOo=");

				String dbPwd_tDBOutput_13 = decryptedPassword_tDBOutput_13;
				conn_tDBOutput_13 = java.sql.DriverManager.getConnection(url_tDBOutput_13, dbUser_tDBOutput_13,
						dbPwd_tDBOutput_13);

				resourceMap.put("conn_tDBOutput_13", conn_tDBOutput_13);

				conn_tDBOutput_13.setAutoCommit(false);
				int commitEvery_tDBOutput_13 = 10000;
				int commitCounter_tDBOutput_13 = 0;

				int batchSize_tDBOutput_13 = 10000;
				int batchSizeCounter_tDBOutput_13 = 0;

				if (dbschema_tDBOutput_13 == null || dbschema_tDBOutput_13.trim().length() == 0) {
					tableName_tDBOutput_13 = "Dim_offre";
				} else {
					tableName_tDBOutput_13 = dbschema_tDBOutput_13 + "].[" + "Dim_offre";
				}
				int count_tDBOutput_13 = 0;

				String insert_tDBOutput_13 = "INSERT INTO [" + tableName_tDBOutput_13 + "] ([Offre]) VALUES (?)";
				java.sql.PreparedStatement pstmt_tDBOutput_13 = conn_tDBOutput_13.prepareStatement(insert_tDBOutput_13);
				resourceMap.put("pstmt_tDBOutput_13", pstmt_tDBOutput_13);

				/**
				 * [tDBOutput_13 begin ] stop
				 */

				/**
				 * [tUniqRow_12 begin ] start
				 */

				ok_Hash.put("tUniqRow_12", false);
				start_Hash.put("tUniqRow_12", System.currentTimeMillis());

				currentComponent = "tUniqRow_12";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "c");
				}

				int tos_count_tUniqRow_12 = 0;

				class KeyStruct_tUniqRow_12 {

					private static final int DEFAULT_HASHCODE = 1;
					private static final int PRIME = 31;
					private int hashCode = DEFAULT_HASHCODE;
					public boolean hashCodeDirty = true;

					String Offre;

					@Override
					public int hashCode() {
						if (this.hashCodeDirty) {
							final int prime = PRIME;
							int result = DEFAULT_HASHCODE;

							result = prime * result + ((this.Offre == null) ? 0 : this.Offre.hashCode());

							this.hashCode = result;
							this.hashCodeDirty = false;
						}
						return this.hashCode;
					}

					@Override
					public boolean equals(Object obj) {
						if (this == obj)
							return true;
						if (obj == null)
							return false;
						if (getClass() != obj.getClass())
							return false;
						final KeyStruct_tUniqRow_12 other = (KeyStruct_tUniqRow_12) obj;

						if (this.Offre == null) {
							if (other.Offre != null)
								return false;

						} else if (!this.Offre.equals(other.Offre))

							return false;

						return true;
					}

				}

				int nb_uniques_tUniqRow_12 = 0;
				int nb_duplicates_tUniqRow_12 = 0;
				KeyStruct_tUniqRow_12 finder_tUniqRow_12 = new KeyStruct_tUniqRow_12();
				java.util.Set<KeyStruct_tUniqRow_12> keystUniqRow_12 = new java.util.HashSet<KeyStruct_tUniqRow_12>();

				/**
				 * [tUniqRow_12 begin ] stop
				 */

				/**
				 * [tMap_46 begin ] start
				 */

				ok_Hash.put("tMap_46", false);
				start_Hash.put("tMap_46", System.currentTimeMillis());

				currentComponent = "tMap_46";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "Dim_offre_mobile");
				}

				int tos_count_tMap_46 = 0;

// ###############################
// # Lookup's keys initialization

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row63Struct> tHash_Lookup_row63 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row63Struct>) ((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row63Struct>) globalMap
						.get("tHash_Lookup_row63"));

				row63Struct row63HashKey = new row63Struct();
				row63Struct row63Default = new row63Struct();
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_46__Struct {
				}
				Var__tMap_46__Struct Var__tMap_46 = new Var__tMap_46__Struct();
// ###############################

// ###############################
// # Outputs initialization
				cStruct c_tmp = new cStruct();
// ###############################

				/**
				 * [tMap_46 begin ] stop
				 */

				/**
				 * [tMap_45 begin ] start
				 */

				ok_Hash.put("tMap_45", false);
				start_Hash.put("tMap_45", System.currentTimeMillis());

				currentComponent = "tMap_45";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row58");
				}

				int tos_count_tMap_45 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_45__Struct {
				}
				Var__tMap_45__Struct Var__tMap_45 = new Var__tMap_45__Struct();
// ###############################

// ###############################
// # Outputs initialization
				Dim_Reference_OSM_Opportunite_mobileStruct Dim_Reference_OSM_Opportunite_mobile_tmp = new Dim_Reference_OSM_Opportunite_mobileStruct();
				Dim_type_engagement_mobileStruct Dim_type_engagement_mobile_tmp = new Dim_type_engagement_mobileStruct();
				Extension_idStruct Extension_id_tmp = new Extension_idStruct();
				Dim_nature_offre_mobileStruct Dim_nature_offre_mobile_tmp = new Dim_nature_offre_mobileStruct();
				Dim_offre_mobileStruct Dim_offre_mobile_tmp = new Dim_offre_mobileStruct();
// ###############################

				/**
				 * [tMap_45 begin ] stop
				 */

				/**
				 * [tFileInputExcel_9 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_9", false);
				start_Hash.put("tFileInputExcel_9", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_9";

				int tos_count_tFileInputExcel_9 = 0;

				final String decryptedPassword_tFileInputExcel_9 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:Y10QCRbQ1/UYVbFLNovebuPX4L+LLYohZWQF9A==");
				String password_tFileInputExcel_9 = decryptedPassword_tFileInputExcel_9;
				if (password_tFileInputExcel_9.isEmpty()) {
					password_tFileInputExcel_9 = null;
				}
				class RegexUtil_tFileInputExcel_9 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_9 regexUtil_tFileInputExcel_9 = new RegexUtil_tFileInputExcel_9();

				Object source_tFileInputExcel_9 = "C:/Users/DELL/Downloads/Copie_de_EXTRACT_OPPORTUNITES_MOBILE_BB_VF_090520222381_1ans.xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_9 = null;

				if (source_tFileInputExcel_9 instanceof String) {
					workbook_tFileInputExcel_9 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_9), password_tFileInputExcel_9,
									true);
				} else if (source_tFileInputExcel_9 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_9 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_9, password_tFileInputExcel_9);
				} else {
					workbook_tFileInputExcel_9 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_9 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_9
							.addAll(regexUtil_tFileInputExcel_9.getSheets(workbook_tFileInputExcel_9, "Source", false));
					if (sheetList_tFileInputExcel_9.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_9 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_9 : sheetList_tFileInputExcel_9) {
						if (sheet_FilterNull_tFileInputExcel_9 != null
								&& sheetList_FilterNull_tFileInputExcel_9.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_9.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_9.add(sheet_FilterNull_tFileInputExcel_9);
						}
					}
					sheetList_tFileInputExcel_9 = sheetList_FilterNull_tFileInputExcel_9;
					if (sheetList_tFileInputExcel_9.size() > 0) {
						int nb_line_tFileInputExcel_9 = 0;

						int begin_line_tFileInputExcel_9 = 1;

						int footer_input_tFileInputExcel_9 = 0;

						int end_line_tFileInputExcel_9 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_9 : sheetList_tFileInputExcel_9) {
							end_line_tFileInputExcel_9 += (sheet_tFileInputExcel_9.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_9 -= footer_input_tFileInputExcel_9;
						int limit_tFileInputExcel_9 = -1;
						int start_column_tFileInputExcel_9 = 1 - 1;
						int end_column_tFileInputExcel_9 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_9 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_9 = sheetList_tFileInputExcel_9
								.get(0);
						int rowCount_tFileInputExcel_9 = 0;
						int sheetIndex_tFileInputExcel_9 = 0;
						int currentRows_tFileInputExcel_9 = (sheetList_tFileInputExcel_9.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_9 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_9 = df_tFileInputExcel_9.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_9 = begin_line_tFileInputExcel_9; i_tFileInputExcel_9 < end_line_tFileInputExcel_9; i_tFileInputExcel_9++) {

							int emptyColumnCount_tFileInputExcel_9 = 0;

							if (limit_tFileInputExcel_9 != -1 && nb_line_tFileInputExcel_9 >= limit_tFileInputExcel_9) {
								break;
							}

							while (i_tFileInputExcel_9 >= rowCount_tFileInputExcel_9 + currentRows_tFileInputExcel_9) {
								rowCount_tFileInputExcel_9 += currentRows_tFileInputExcel_9;
								sheet_tFileInputExcel_9 = sheetList_tFileInputExcel_9
										.get(++sheetIndex_tFileInputExcel_9);
								currentRows_tFileInputExcel_9 = (sheet_tFileInputExcel_9.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_9_CURRENT_SHEET", sheet_tFileInputExcel_9.getSheetName());
							if (rowCount_tFileInputExcel_9 <= i_tFileInputExcel_9) {
								row_tFileInputExcel_9 = sheet_tFileInputExcel_9
										.getRow(i_tFileInputExcel_9 - rowCount_tFileInputExcel_9);
							}
							row58 = null;
							int tempRowLength_tFileInputExcel_9 = 31;

							int columnIndex_tFileInputExcel_9 = 0;

							String[] temp_row_tFileInputExcel_9 = new String[tempRowLength_tFileInputExcel_9];
							int excel_end_column_tFileInputExcel_9;
							if (row_tFileInputExcel_9 == null) {
								excel_end_column_tFileInputExcel_9 = 0;
							} else {
								excel_end_column_tFileInputExcel_9 = row_tFileInputExcel_9.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_9;
							if (end_column_tFileInputExcel_9 == -1) {
								actual_end_column_tFileInputExcel_9 = excel_end_column_tFileInputExcel_9;
							} else {
								actual_end_column_tFileInputExcel_9 = end_column_tFileInputExcel_9 > excel_end_column_tFileInputExcel_9
										? excel_end_column_tFileInputExcel_9
										: end_column_tFileInputExcel_9;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_9 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_9; i++) {
								if (i + start_column_tFileInputExcel_9 < actual_end_column_tFileInputExcel_9) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_9 = row_tFileInputExcel_9
											.getCell(i + start_column_tFileInputExcel_9);
									if (cell_tFileInputExcel_9 != null) {
										switch (cell_tFileInputExcel_9.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_9[i] = cell_tFileInputExcel_9
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_9)) {
												temp_row_tFileInputExcel_9[i] = cell_tFileInputExcel_9
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_9[i] = df_tFileInputExcel_9
														.format(cell_tFileInputExcel_9.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_9[i] = String
													.valueOf(cell_tFileInputExcel_9.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_9.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_9[i] = cell_tFileInputExcel_9
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_9)) {
													temp_row_tFileInputExcel_9[i] = cell_tFileInputExcel_9
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_9 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_9.getNumericCellValue());
													temp_row_tFileInputExcel_9[i] = ne_tFileInputExcel_9
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_9[i] = String
														.valueOf(cell_tFileInputExcel_9.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_9[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_9[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_9[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_9[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_9 = false;
							row58 = new row58Struct();
							int curColNum_tFileInputExcel_9 = -1;
							String curColName_tFileInputExcel_9 = "";
							try {
								columnIndex_tFileInputExcel_9 = 0;

								if (temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9].length() > 0) {
									curColNum_tFileInputExcel_9 = columnIndex_tFileInputExcel_9
											+ start_column_tFileInputExcel_9 + 1;
									curColName_tFileInputExcel_9 = "Reference_OSM_mere__Opportunite";

									row58.Reference_OSM_mere__Opportunite = temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9];
								} else {
									row58.Reference_OSM_mere__Opportunite = null;
									emptyColumnCount_tFileInputExcel_9++;
								}
								columnIndex_tFileInputExcel_9 = 1;

								if (temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9].length() > 0) {
									curColNum_tFileInputExcel_9 = columnIndex_tFileInputExcel_9
											+ start_column_tFileInputExcel_9 + 1;
									curColName_tFileInputExcel_9 = "Reference_OSM__Opportunite";

									row58.Reference_OSM__Opportunite = temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9];
								} else {
									row58.Reference_OSM__Opportunite = null;
									emptyColumnCount_tFileInputExcel_9++;
								}
								columnIndex_tFileInputExcel_9 = 2;

								if (temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9].length() > 0) {
									curColNum_tFileInputExcel_9 = columnIndex_tFileInputExcel_9
											+ start_column_tFileInputExcel_9 + 1;
									curColName_tFileInputExcel_9 = "Client_Prospect__Opportunite";

									row58.Client_Prospect__Opportunite = temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9];
								} else {
									row58.Client_Prospect__Opportunite = null;
									emptyColumnCount_tFileInputExcel_9++;
								}
								columnIndex_tFileInputExcel_9 = 3;

								if (temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9].length() > 0) {
									curColNum_tFileInputExcel_9 = columnIndex_tFileInputExcel_9
											+ start_column_tFileInputExcel_9 + 1;
									curColName_tFileInputExcel_9 = "Offre";

									row58.Offre = temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9];
								} else {
									row58.Offre = null;
									emptyColumnCount_tFileInputExcel_9++;
								}
								columnIndex_tFileInputExcel_9 = 4;

								if (temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9].length() > 0) {
									curColNum_tFileInputExcel_9 = columnIndex_tFileInputExcel_9
											+ start_column_tFileInputExcel_9 + 1;
									curColName_tFileInputExcel_9 = "Nature_Offre";

									row58.Nature_Offre = temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9];
								} else {
									row58.Nature_Offre = null;
									emptyColumnCount_tFileInputExcel_9++;
								}
								columnIndex_tFileInputExcel_9 = 5;

								if (temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9].length() > 0) {
									curColNum_tFileInputExcel_9 = columnIndex_tFileInputExcel_9
											+ start_column_tFileInputExcel_9 + 1;
									curColName_tFileInputExcel_9 = "Produit_existant";

									row58.Produit_existant = temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9];
								} else {
									row58.Produit_existant = null;
									emptyColumnCount_tFileInputExcel_9++;
								}
								columnIndex_tFileInputExcel_9 = 6;

								if (temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9].length() > 0) {
									curColNum_tFileInputExcel_9 = columnIndex_tFileInputExcel_9
											+ start_column_tFileInputExcel_9 + 1;
									curColName_tFileInputExcel_9 = "Nature_produit__Produit_existant";

									row58.Nature_produit__Produit_existant = temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9];
								} else {
									row58.Nature_produit__Produit_existant = null;
									emptyColumnCount_tFileInputExcel_9++;
								}
								columnIndex_tFileInputExcel_9 = 7;

								if (temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9].length() > 0) {
									curColNum_tFileInputExcel_9 = columnIndex_tFileInputExcel_9
											+ start_column_tFileInputExcel_9 + 1;
									curColName_tFileInputExcel_9 = "Quantite";

									row58.Quantite = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9], null,
											'.' == decimalChar_tFileInputExcel_9 ? null
													: decimalChar_tFileInputExcel_9));
								} else {
									row58.Quantite = null;
									emptyColumnCount_tFileInputExcel_9++;
								}
								columnIndex_tFileInputExcel_9 = 8;

								if (temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9].length() > 0) {
									curColNum_tFileInputExcel_9 = columnIndex_tFileInputExcel_9
											+ start_column_tFileInputExcel_9 + 1;
									curColName_tFileInputExcel_9 = "Prix_unitaire";

									row58.Prix_unitaire = temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9];
								} else {
									row58.Prix_unitaire = null;
									emptyColumnCount_tFileInputExcel_9++;
								}
								columnIndex_tFileInputExcel_9 = 9;

								if (temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9].length() > 0) {
									curColNum_tFileInputExcel_9 = columnIndex_tFileInputExcel_9
											+ start_column_tFileInputExcel_9 + 1;
									curColName_tFileInputExcel_9 = "Total_final";

									row58.Total_final = temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9];
								} else {
									row58.Total_final = null;
									emptyColumnCount_tFileInputExcel_9++;
								}
								columnIndex_tFileInputExcel_9 = 10;

								if (temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9].length() > 0) {
									curColNum_tFileInputExcel_9 = columnIndex_tFileInputExcel_9
											+ start_column_tFileInputExcel_9 + 1;
									curColName_tFileInputExcel_9 = "Remise______Opportunite";

									row58.Remise______Opportunite = temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9];
								} else {
									row58.Remise______Opportunite = null;
									emptyColumnCount_tFileInputExcel_9++;
								}
								columnIndex_tFileInputExcel_9 = 11;

								if (temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9].length() > 0) {
									curColNum_tFileInputExcel_9 = columnIndex_tFileInputExcel_9
											+ start_column_tFileInputExcel_9 + 1;
									curColName_tFileInputExcel_9 = "Total_remise_HT";

									row58.Total_remise_HT = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9], null,
											'.' == decimalChar_tFileInputExcel_9 ? null
													: decimalChar_tFileInputExcel_9));
								} else {
									row58.Total_remise_HT = null;
									emptyColumnCount_tFileInputExcel_9++;
								}
								columnIndex_tFileInputExcel_9 = 12;

								if (temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9].length() > 0) {
									curColNum_tFileInputExcel_9 = columnIndex_tFileInputExcel_9
											+ start_column_tFileInputExcel_9 + 1;
									curColName_tFileInputExcel_9 = "Extension__Opportunite";

									row58.Extension__Opportunite = temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9];
								} else {
									row58.Extension__Opportunite = null;
									emptyColumnCount_tFileInputExcel_9++;
								}
								columnIndex_tFileInputExcel_9 = 13;

								if (temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9].length() > 0) {
									curColNum_tFileInputExcel_9 = columnIndex_tFileInputExcel_9
											+ start_column_tFileInputExcel_9 + 1;
									curColName_tFileInputExcel_9 = "Budget_a_valider__Opportunite";

									row58.Budget_a_valider__Opportunite = temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9];
								} else {
									row58.Budget_a_valider__Opportunite = null;
									emptyColumnCount_tFileInputExcel_9++;
								}
								columnIndex_tFileInputExcel_9 = 14;

								if (temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9].length() > 0) {
									curColNum_tFileInputExcel_9 = columnIndex_tFileInputExcel_9
											+ start_column_tFileInputExcel_9 + 1;
									curColName_tFileInputExcel_9 = "Budget_a_valider_Extension__Opportunite";

									row58.Budget_a_valider_Extension__Opportunite = temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9];
								} else {
									row58.Budget_a_valider_Extension__Opportunite = null;
									emptyColumnCount_tFileInputExcel_9++;
								}
								columnIndex_tFileInputExcel_9 = 15;

								if (temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9].length() > 0) {
									curColNum_tFileInputExcel_9 = columnIndex_tFileInputExcel_9
											+ start_column_tFileInputExcel_9 + 1;
									curColName_tFileInputExcel_9 = "Duree_d_engagement__Opportunite";

									row58.Duree_d_engagement__Opportunite = temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9];
								} else {
									row58.Duree_d_engagement__Opportunite = null;
									emptyColumnCount_tFileInputExcel_9++;
								}
								columnIndex_tFileInputExcel_9 = 16;

								if (temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9].length() > 0) {
									curColNum_tFileInputExcel_9 = columnIndex_tFileInputExcel_9
											+ start_column_tFileInputExcel_9 + 1;
									curColName_tFileInputExcel_9 = "Type_d_engagement__Opportunite";

									row58.Type_d_engagement__Opportunite = temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9];
								} else {
									row58.Type_d_engagement__Opportunite = null;
									emptyColumnCount_tFileInputExcel_9++;
								}
								columnIndex_tFileInputExcel_9 = 17;

								if (temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9].length() > 0) {
									curColNum_tFileInputExcel_9 = columnIndex_tFileInputExcel_9
											+ start_column_tFileInputExcel_9 + 1;
									curColName_tFileInputExcel_9 = "Demandeur__Opportunite";

									row58.Demandeur__Opportunite = temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9];
								} else {
									row58.Demandeur__Opportunite = null;
									emptyColumnCount_tFileInputExcel_9++;
								}
								columnIndex_tFileInputExcel_9 = 18;

								if (temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9].length() > 0) {
									curColNum_tFileInputExcel_9 = columnIndex_tFileInputExcel_9
											+ start_column_tFileInputExcel_9 + 1;
									curColName_tFileInputExcel_9 = "Equipe";

									row58.Equipe = temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9];
								} else {
									row58.Equipe = null;
									emptyColumnCount_tFileInputExcel_9++;
								}
								columnIndex_tFileInputExcel_9 = 19;

								if (temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9].length() > 0) {
									curColNum_tFileInputExcel_9 = columnIndex_tFileInputExcel_9
											+ start_column_tFileInputExcel_9 + 1;
									curColName_tFileInputExcel_9 = "Cree_le__Opportunite";

									row58.Cree_le__Opportunite = temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9];
								} else {
									row58.Cree_le__Opportunite = null;
									emptyColumnCount_tFileInputExcel_9++;
								}
								columnIndex_tFileInputExcel_9 = 20;

								if (temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9].length() > 0) {
									curColNum_tFileInputExcel_9 = columnIndex_tFileInputExcel_9
											+ start_column_tFileInputExcel_9 + 1;
									curColName_tFileInputExcel_9 = "Mois_de_creation";

									row58.Mois_de_creation = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9], null,
											'.' == decimalChar_tFileInputExcel_9 ? null
													: decimalChar_tFileInputExcel_9));
								} else {
									row58.Mois_de_creation = null;
									emptyColumnCount_tFileInputExcel_9++;
								}
								columnIndex_tFileInputExcel_9 = 21;

								if (temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9].length() > 0) {
									curColNum_tFileInputExcel_9 = columnIndex_tFileInputExcel_9
											+ start_column_tFileInputExcel_9 + 1;
									curColName_tFileInputExcel_9 = "Annee_de_creation";

									row58.Annee_de_creation = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9], null,
											'.' == decimalChar_tFileInputExcel_9 ? null
													: decimalChar_tFileInputExcel_9));
								} else {
									row58.Annee_de_creation = null;
									emptyColumnCount_tFileInputExcel_9++;
								}
								columnIndex_tFileInputExcel_9 = 22;

								if (temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9].length() > 0) {
									curColNum_tFileInputExcel_9 = columnIndex_tFileInputExcel_9
											+ start_column_tFileInputExcel_9 + 1;
									curColName_tFileInputExcel_9 = "Mois_et_annee_de_creation";

									row58.Mois_et_annee_de_creation = temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9];
								} else {
									row58.Mois_et_annee_de_creation = null;
									emptyColumnCount_tFileInputExcel_9++;
								}
								columnIndex_tFileInputExcel_9 = 23;

								if (temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9].length() > 0) {
									curColNum_tFileInputExcel_9 = columnIndex_tFileInputExcel_9
											+ start_column_tFileInputExcel_9 + 1;
									curColName_tFileInputExcel_9 = "Raison_de_statut_OSM__Opportunite";

									row58.Raison_de_statut_OSM__Opportunite = temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9];
								} else {
									row58.Raison_de_statut_OSM__Opportunite = null;
									emptyColumnCount_tFileInputExcel_9++;
								}
								columnIndex_tFileInputExcel_9 = 24;

								if (temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9].length() > 0) {
									curColNum_tFileInputExcel_9 = columnIndex_tFileInputExcel_9
											+ start_column_tFileInputExcel_9 + 1;
									curColName_tFileInputExcel_9 = "Statut_OSM__Opportunite";

									row58.Statut_OSM__Opportunite = temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9];
								} else {
									row58.Statut_OSM__Opportunite = null;
									emptyColumnCount_tFileInputExcel_9++;
								}
								columnIndex_tFileInputExcel_9 = 25;

								if (temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9].length() > 0) {
									curColNum_tFileInputExcel_9 = columnIndex_tFileInputExcel_9
											+ start_column_tFileInputExcel_9 + 1;
									curColName_tFileInputExcel_9 = "Statut_activation__Commande";

									row58.Statut_activation__Commande = temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9];
								} else {
									row58.Statut_activation__Commande = null;
									emptyColumnCount_tFileInputExcel_9++;
								}
								columnIndex_tFileInputExcel_9 = 26;

								if (temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9].length() > 0) {
									curColNum_tFileInputExcel_9 = columnIndex_tFileInputExcel_9
											+ start_column_tFileInputExcel_9 + 1;
									curColName_tFileInputExcel_9 = "Date_d_activation__Commande";

									row58.Date_d_activation__Commande = temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9];
								} else {
									row58.Date_d_activation__Commande = null;
									emptyColumnCount_tFileInputExcel_9++;
								}
								columnIndex_tFileInputExcel_9 = 27;

								if (temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9].length() > 0) {
									curColNum_tFileInputExcel_9 = columnIndex_tFileInputExcel_9
											+ start_column_tFileInputExcel_9 + 1;
									curColName_tFileInputExcel_9 = "Mois_d_activation";

									row58.Mois_d_activation = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9], null,
											'.' == decimalChar_tFileInputExcel_9 ? null
													: decimalChar_tFileInputExcel_9));
								} else {
									row58.Mois_d_activation = null;
									emptyColumnCount_tFileInputExcel_9++;
								}
								columnIndex_tFileInputExcel_9 = 28;

								if (temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9].length() > 0) {
									curColNum_tFileInputExcel_9 = columnIndex_tFileInputExcel_9
											+ start_column_tFileInputExcel_9 + 1;
									curColName_tFileInputExcel_9 = "Staut_Final";

									row58.Staut_Final = temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9];
								} else {
									row58.Staut_Final = null;
									emptyColumnCount_tFileInputExcel_9++;
								}
								columnIndex_tFileInputExcel_9 = 29;

								if (temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9].length() > 0) {
									curColNum_tFileInputExcel_9 = columnIndex_tFileInputExcel_9
											+ start_column_tFileInputExcel_9 + 1;
									curColName_tFileInputExcel_9 = "Gouvernorat";

									row58.Gouvernorat = temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9];
								} else {
									row58.Gouvernorat = null;
									emptyColumnCount_tFileInputExcel_9++;
								}
								columnIndex_tFileInputExcel_9 = 30;

								if (temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9].length() > 0) {
									curColNum_tFileInputExcel_9 = columnIndex_tFileInputExcel_9
											+ start_column_tFileInputExcel_9 + 1;
									curColName_tFileInputExcel_9 = "Phase_de_l_opportunite__Opportunite";

									row58.Phase_de_l_opportunite__Opportunite = temp_row_tFileInputExcel_9[columnIndex_tFileInputExcel_9];
								} else {
									row58.Phase_de_l_opportunite__Opportunite = null;
									emptyColumnCount_tFileInputExcel_9++;
								}

								nb_line_tFileInputExcel_9++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_9_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_9 = true;
								System.err.println(e.getMessage());
								row58 = null;
							}

							/**
							 * [tFileInputExcel_9 begin ] stop
							 */

							/**
							 * [tFileInputExcel_9 main ] start
							 */

							currentComponent = "tFileInputExcel_9";

							tos_count_tFileInputExcel_9++;

							/**
							 * [tFileInputExcel_9 main ] stop
							 */

							/**
							 * [tFileInputExcel_9 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_9";

							/**
							 * [tFileInputExcel_9 process_data_begin ] stop
							 */
// Start of branch "row58"
							if (row58 != null) {

								/**
								 * [tMap_45 main ] start
								 */

								currentComponent = "tMap_45";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row58"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_45 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_45 = false;
								boolean mainRowRejected_tMap_45 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_45__Struct Var = Var__tMap_45;// ###############################
									// ###############################
									// # Output tables

									Dim_Reference_OSM_Opportunite_mobile = null;
									Dim_type_engagement_mobile = null;
									Extension_id = null;
									Dim_nature_offre_mobile = null;
									Dim_offre_mobile = null;

// # Output table : 'Dim_Reference_OSM_Opportunite_mobile'
									Dim_Reference_OSM_Opportunite_mobile_tmp.Reference_OSM__Opportunite = row58.Reference_OSM__Opportunite;
									Dim_Reference_OSM_Opportunite_mobile = Dim_Reference_OSM_Opportunite_mobile_tmp;

// # Output table : 'Dim_type_engagement_mobile'
									Dim_type_engagement_mobile_tmp.Type_d_engagement__Opportunite = row58.Type_d_engagement__Opportunite;
									Dim_type_engagement_mobile = Dim_type_engagement_mobile_tmp;

// # Output table : 'Extension_id'
									Extension_id_tmp.Extension__Opportunite = row58.Extension__Opportunite;
									Extension_id = Extension_id_tmp;

// # Output table : 'Dim_nature_offre_mobile'
									Dim_nature_offre_mobile_tmp.Nature_Offre = row58.Nature_Offre;
									Dim_nature_offre_mobile = Dim_nature_offre_mobile_tmp;

// # Output table : 'Dim_offre_mobile'
									Dim_offre_mobile_tmp.Offre = row58.Offre;
									Dim_offre_mobile = Dim_offre_mobile_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_45 = false;

								tos_count_tMap_45++;

								/**
								 * [tMap_45 main ] stop
								 */

								/**
								 * [tMap_45 process_data_begin ] start
								 */

								currentComponent = "tMap_45";

								/**
								 * [tMap_45 process_data_begin ] stop
								 */
// Start of branch "Dim_Reference_OSM_Opportunite_mobile"
								if (Dim_Reference_OSM_Opportunite_mobile != null) {

									/**
									 * [tMap_48 main ] start
									 */

									currentComponent = "tMap_48";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "Dim_Reference_OSM_Opportunite_mobile"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_48 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_48 = false;
									boolean mainRowRejected_tMap_48 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row67"
									///////////////////////////////////////////////

									boolean forceLooprow67 = false;

									row67Struct row67ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_48) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_48 = false;

										row67HashKey.Reference_OSM__Opportunite = Dim_Reference_OSM_Opportunite_mobile.Reference_OSM__Opportunite;

										row67HashKey.hashCodeDirty = true;

										tHash_Lookup_row67.lookup(row67HashKey);

										if (!tHash_Lookup_row67.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_48 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row67 != null && tHash_Lookup_row67.getCount(row67HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row67' and it contains more one result from keys :
										// row67.Reference_OSM__Opportunite = '" +
										// row67HashKey.Reference_OSM__Opportunite + "'");
									} // G 071

									row67Struct row67 = null;

									row67Struct fromLookup_row67 = null;
									row67 = row67Default;

									if (tHash_Lookup_row67 != null && tHash_Lookup_row67.hasNext()) { // G 099

										fromLookup_row67 = tHash_Lookup_row67.next();

									} // G 099

									if (fromLookup_row67 != null) {
										row67 = fromLookup_row67;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_48__Struct Var = Var__tMap_48;// ###############################
										// ###############################
										// # Output tables

										b = null;

										if (!rejectedInnerJoin_tMap_48) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'b'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_48) {
											b_tmp.Reference_OSM__Opportunite = Dim_Reference_OSM_Opportunite_mobile.Reference_OSM__Opportunite;
											b = b_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_48 = false;

									tos_count_tMap_48++;

									/**
									 * [tMap_48 main ] stop
									 */

									/**
									 * [tMap_48 process_data_begin ] start
									 */

									currentComponent = "tMap_48";

									/**
									 * [tMap_48 process_data_begin ] stop
									 */
// Start of branch "b"
									if (b != null) {

										/**
										 * [tUniqRow_14 main ] start
										 */

										currentComponent = "tUniqRow_14";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "b"

											);
										}

										row68 = null;
										finder_tUniqRow_14.Reference_OSM__Opportunite = b.Reference_OSM__Opportunite;
										finder_tUniqRow_14.hashCodeDirty = true;
										if (!keystUniqRow_14.contains(finder_tUniqRow_14)) {
											KeyStruct_tUniqRow_14 new_tUniqRow_14 = new KeyStruct_tUniqRow_14();

											new_tUniqRow_14.Reference_OSM__Opportunite = b.Reference_OSM__Opportunite;

											keystUniqRow_14.add(new_tUniqRow_14);
											if (row68 == null) {

												row68 = new row68Struct();
											}
											row68.Reference_OSM__Opportunite = b.Reference_OSM__Opportunite;
											nb_uniques_tUniqRow_14++;
										} else {
											nb_duplicates_tUniqRow_14++;
										}

										tos_count_tUniqRow_14++;

										/**
										 * [tUniqRow_14 main ] stop
										 */

										/**
										 * [tUniqRow_14 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_14";

										/**
										 * [tUniqRow_14 process_data_begin ] stop
										 */
// Start of branch "row68"
										if (row68 != null) {

											/**
											 * [tDBOutput_15 main ] start
											 */

											currentComponent = "tDBOutput_15";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row68"

												);
											}

											whetherReject_tDBOutput_15 = false;
											if (row68.Reference_OSM__Opportunite == null) {
												pstmt_tDBOutput_15.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_15.setString(1, row68.Reference_OSM__Opportunite);
											}

											pstmt_tDBOutput_15.addBatch();
											nb_line_tDBOutput_15++;

											batchSizeCounter_tDBOutput_15++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_15 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_15)
														throws Exception {
													try {

														for (int countEach_tDBOutput_15 : pstmt_tDBOutput_15
																.executeBatch()) {
															if (countEach_tDBOutput_15 == -2
																	|| countEach_tDBOutput_15 == -3) {
																break;
															}
															counter += countEach_tDBOutput_15;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_15_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_15 = 0;
														for (int countEach_tDBOutput_15 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_15 < 0 ? 0
																	: countEach_tDBOutput_15);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_15)
														throws Exception {
													try {

														for (int countEach_tDBOutput_15 : pstmt_tDBOutput_15
																.executeBatch()) {
															if (countEach_tDBOutput_15 == -2
																	|| countEach_tDBOutput_15 == -3) {
																break;
															}
															counter += countEach_tDBOutput_15;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_15_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_15 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_15 < 0 ? 0
																	: countEach_tDBOutput_15);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_15 > 0)
													&& (batchSize_tDBOutput_15 <= batchSizeCounter_tDBOutput_15)) {

												insertedCount_tDBOutput_15 = new LimitBytesHelper_tDBOutput_15()
														.limitBytePart1(insertedCount_tDBOutput_15, pstmt_tDBOutput_15);
												rowsToCommitCount_tDBOutput_15 = insertedCount_tDBOutput_15;

												batchSizeCounter_tDBOutput_15 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_15++;
											if (commitEvery_tDBOutput_15 <= commitCounter_tDBOutput_15) {
												if ((batchSize_tDBOutput_15 > 0)
														&& (batchSizeCounter_tDBOutput_15 > 0)) {

													insertedCount_tDBOutput_15 = new LimitBytesHelper_tDBOutput_15()
															.limitBytePart1(insertedCount_tDBOutput_15,
																	pstmt_tDBOutput_15);

													batchSizeCounter_tDBOutput_15 = 0;
												}
												if (rowsToCommitCount_tDBOutput_15 != 0) {

												}
												conn_tDBOutput_15.commit();
												if (rowsToCommitCount_tDBOutput_15 != 0) {

													rowsToCommitCount_tDBOutput_15 = 0;
												}
												commitCounter_tDBOutput_15 = 0;
											}

											tos_count_tDBOutput_15++;

											/**
											 * [tDBOutput_15 main ] stop
											 */

											/**
											 * [tDBOutput_15 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_15";

											/**
											 * [tDBOutput_15 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_15 process_data_end ] start
											 */

											currentComponent = "tDBOutput_15";

											/**
											 * [tDBOutput_15 process_data_end ] stop
											 */

										} // End of branch "row68"

										/**
										 * [tUniqRow_14 process_data_end ] start
										 */

										currentComponent = "tUniqRow_14";

										/**
										 * [tUniqRow_14 process_data_end ] stop
										 */

									} // End of branch "b"

									/**
									 * [tMap_48 process_data_end ] start
									 */

									currentComponent = "tMap_48";

									/**
									 * [tMap_48 process_data_end ] stop
									 */

								} // End of branch "Dim_Reference_OSM_Opportunite_mobile"

// Start of branch "Dim_type_engagement_mobile"
								if (Dim_type_engagement_mobile != null) {

									/**
									 * [tMap_49 main ] start
									 */

									currentComponent = "tMap_49";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "Dim_type_engagement_mobile"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_49 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_49 = false;
									boolean mainRowRejected_tMap_49 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row69"
									///////////////////////////////////////////////

									boolean forceLooprow69 = false;

									row69Struct row69ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_49) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_49 = false;

										row69HashKey.Type_d_engagement__Opportunite = Dim_type_engagement_mobile.Type_d_engagement__Opportunite;

										row69HashKey.hashCodeDirty = true;

										tHash_Lookup_row69.lookup(row69HashKey);

										if (!tHash_Lookup_row69.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_49 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row69 != null && tHash_Lookup_row69.getCount(row69HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row69' and it contains more one result from keys :
										// row69.Type_d_engagement__Opportunite = '" +
										// row69HashKey.Type_d_engagement__Opportunite + "'");
									} // G 071

									row69Struct row69 = null;

									row69Struct fromLookup_row69 = null;
									row69 = row69Default;

									if (tHash_Lookup_row69 != null && tHash_Lookup_row69.hasNext()) { // G 099

										fromLookup_row69 = tHash_Lookup_row69.next();

									} // G 099

									if (fromLookup_row69 != null) {
										row69 = fromLookup_row69;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_49__Struct Var = Var__tMap_49;// ###############################
										// ###############################
										// # Output tables

										n = null;

										if (!rejectedInnerJoin_tMap_49) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'n'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_49) {
											n_tmp.Type_d_engagement__Opportunite = Dim_type_engagement_mobile.Type_d_engagement__Opportunite;
											n = n_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_49 = false;

									tos_count_tMap_49++;

									/**
									 * [tMap_49 main ] stop
									 */

									/**
									 * [tMap_49 process_data_begin ] start
									 */

									currentComponent = "tMap_49";

									/**
									 * [tMap_49 process_data_begin ] stop
									 */
// Start of branch "n"
									if (n != null) {

										/**
										 * [tUniqRow_15 main ] start
										 */

										currentComponent = "tUniqRow_15";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "n"

											);
										}

										row70 = null;
										finder_tUniqRow_15.Type_d_engagement__Opportunite = n.Type_d_engagement__Opportunite;
										finder_tUniqRow_15.hashCodeDirty = true;
										if (!keystUniqRow_15.contains(finder_tUniqRow_15)) {
											KeyStruct_tUniqRow_15 new_tUniqRow_15 = new KeyStruct_tUniqRow_15();

											new_tUniqRow_15.Type_d_engagement__Opportunite = n.Type_d_engagement__Opportunite;

											keystUniqRow_15.add(new_tUniqRow_15);
											if (row70 == null) {

												row70 = new row70Struct();
											}
											row70.Type_d_engagement__Opportunite = n.Type_d_engagement__Opportunite;
											nb_uniques_tUniqRow_15++;
										} else {
											nb_duplicates_tUniqRow_15++;
										}

										tos_count_tUniqRow_15++;

										/**
										 * [tUniqRow_15 main ] stop
										 */

										/**
										 * [tUniqRow_15 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_15";

										/**
										 * [tUniqRow_15 process_data_begin ] stop
										 */
// Start of branch "row70"
										if (row70 != null) {

											/**
											 * [tDBOutput_16 main ] start
											 */

											currentComponent = "tDBOutput_16";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row70"

												);
											}

											whetherReject_tDBOutput_16 = false;
											if (row70.Type_d_engagement__Opportunite == null) {
												pstmt_tDBOutput_16.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_16.setString(1, row70.Type_d_engagement__Opportunite);
											}

											pstmt_tDBOutput_16.addBatch();
											nb_line_tDBOutput_16++;

											batchSizeCounter_tDBOutput_16++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_16 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_16)
														throws Exception {
													try {

														for (int countEach_tDBOutput_16 : pstmt_tDBOutput_16
																.executeBatch()) {
															if (countEach_tDBOutput_16 == -2
																	|| countEach_tDBOutput_16 == -3) {
																break;
															}
															counter += countEach_tDBOutput_16;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_16_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_16 = 0;
														for (int countEach_tDBOutput_16 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_16 < 0 ? 0
																	: countEach_tDBOutput_16);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_16)
														throws Exception {
													try {

														for (int countEach_tDBOutput_16 : pstmt_tDBOutput_16
																.executeBatch()) {
															if (countEach_tDBOutput_16 == -2
																	|| countEach_tDBOutput_16 == -3) {
																break;
															}
															counter += countEach_tDBOutput_16;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_16_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_16 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_16 < 0 ? 0
																	: countEach_tDBOutput_16);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_16 > 0)
													&& (batchSize_tDBOutput_16 <= batchSizeCounter_tDBOutput_16)) {

												insertedCount_tDBOutput_16 = new LimitBytesHelper_tDBOutput_16()
														.limitBytePart1(insertedCount_tDBOutput_16, pstmt_tDBOutput_16);
												rowsToCommitCount_tDBOutput_16 = insertedCount_tDBOutput_16;

												batchSizeCounter_tDBOutput_16 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_16++;
											if (commitEvery_tDBOutput_16 <= commitCounter_tDBOutput_16) {
												if ((batchSize_tDBOutput_16 > 0)
														&& (batchSizeCounter_tDBOutput_16 > 0)) {

													insertedCount_tDBOutput_16 = new LimitBytesHelper_tDBOutput_16()
															.limitBytePart1(insertedCount_tDBOutput_16,
																	pstmt_tDBOutput_16);

													batchSizeCounter_tDBOutput_16 = 0;
												}
												if (rowsToCommitCount_tDBOutput_16 != 0) {

												}
												conn_tDBOutput_16.commit();
												if (rowsToCommitCount_tDBOutput_16 != 0) {

													rowsToCommitCount_tDBOutput_16 = 0;
												}
												commitCounter_tDBOutput_16 = 0;
											}

											tos_count_tDBOutput_16++;

											/**
											 * [tDBOutput_16 main ] stop
											 */

											/**
											 * [tDBOutput_16 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_16";

											/**
											 * [tDBOutput_16 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_16 process_data_end ] start
											 */

											currentComponent = "tDBOutput_16";

											/**
											 * [tDBOutput_16 process_data_end ] stop
											 */

										} // End of branch "row70"

										/**
										 * [tUniqRow_15 process_data_end ] start
										 */

										currentComponent = "tUniqRow_15";

										/**
										 * [tUniqRow_15 process_data_end ] stop
										 */

									} // End of branch "n"

									/**
									 * [tMap_49 process_data_end ] start
									 */

									currentComponent = "tMap_49";

									/**
									 * [tMap_49 process_data_end ] stop
									 */

								} // End of branch "Dim_type_engagement_mobile"

// Start of branch "Extension_id"
								if (Extension_id != null) {

									/**
									 * [tMap_50 main ] start
									 */

									currentComponent = "tMap_50";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "Extension_id"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_50 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_50 = false;
									boolean mainRowRejected_tMap_50 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row72"
									///////////////////////////////////////////////

									boolean forceLooprow72 = false;

									row72Struct row72ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_50) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_50 = false;

										row72HashKey.Extension__Opportunite = Extension_id.Extension__Opportunite;

										row72HashKey.hashCodeDirty = true;

										tHash_Lookup_row72.lookup(row72HashKey);

										if (!tHash_Lookup_row72.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_50 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row72 != null && tHash_Lookup_row72.getCount(row72HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row72' and it contains more one result from keys :
										// row72.Extension__Opportunite = '" + row72HashKey.Extension__Opportunite +
										// "'");
									} // G 071

									row72Struct row72 = null;

									row72Struct fromLookup_row72 = null;
									row72 = row72Default;

									if (tHash_Lookup_row72 != null && tHash_Lookup_row72.hasNext()) { // G 099

										fromLookup_row72 = tHash_Lookup_row72.next();

									} // G 099

									if (fromLookup_row72 != null) {
										row72 = fromLookup_row72;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_50__Struct Var = Var__tMap_50;// ###############################
										// ###############################
										// # Output tables

										q = null;

										if (!rejectedInnerJoin_tMap_50) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'q'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_50) {
											q_tmp.Extension__Opportunite = Extension_id.Extension__Opportunite;
											q = q_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_50 = false;

									tos_count_tMap_50++;

									/**
									 * [tMap_50 main ] stop
									 */

									/**
									 * [tMap_50 process_data_begin ] start
									 */

									currentComponent = "tMap_50";

									/**
									 * [tMap_50 process_data_begin ] stop
									 */
// Start of branch "q"
									if (q != null) {

										/**
										 * [tUniqRow_16 main ] start
										 */

										currentComponent = "tUniqRow_16";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "q"

											);
										}

										row71 = null;
										finder_tUniqRow_16.Extension__Opportunite = q.Extension__Opportunite;
										finder_tUniqRow_16.hashCodeDirty = true;
										if (!keystUniqRow_16.contains(finder_tUniqRow_16)) {
											KeyStruct_tUniqRow_16 new_tUniqRow_16 = new KeyStruct_tUniqRow_16();

											new_tUniqRow_16.Extension__Opportunite = q.Extension__Opportunite;

											keystUniqRow_16.add(new_tUniqRow_16);
											if (row71 == null) {

												row71 = new row71Struct();
											}
											row71.Extension__Opportunite = q.Extension__Opportunite;
											nb_uniques_tUniqRow_16++;
										} else {
											nb_duplicates_tUniqRow_16++;
										}

										tos_count_tUniqRow_16++;

										/**
										 * [tUniqRow_16 main ] stop
										 */

										/**
										 * [tUniqRow_16 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_16";

										/**
										 * [tUniqRow_16 process_data_begin ] stop
										 */
// Start of branch "row71"
										if (row71 != null) {

											/**
											 * [tDBOutput_17 main ] start
											 */

											currentComponent = "tDBOutput_17";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row71"

												);
											}

											whetherReject_tDBOutput_17 = false;
											if (row71.Extension__Opportunite == null) {
												pstmt_tDBOutput_17.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_17.setString(1, row71.Extension__Opportunite);
											}

											pstmt_tDBOutput_17.addBatch();
											nb_line_tDBOutput_17++;

											batchSizeCounter_tDBOutput_17++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_17 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_17)
														throws Exception {
													try {

														for (int countEach_tDBOutput_17 : pstmt_tDBOutput_17
																.executeBatch()) {
															if (countEach_tDBOutput_17 == -2
																	|| countEach_tDBOutput_17 == -3) {
																break;
															}
															counter += countEach_tDBOutput_17;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_17_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_17 = 0;
														for (int countEach_tDBOutput_17 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_17 < 0 ? 0
																	: countEach_tDBOutput_17);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_17)
														throws Exception {
													try {

														for (int countEach_tDBOutput_17 : pstmt_tDBOutput_17
																.executeBatch()) {
															if (countEach_tDBOutput_17 == -2
																	|| countEach_tDBOutput_17 == -3) {
																break;
															}
															counter += countEach_tDBOutput_17;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_17_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_17 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_17 < 0 ? 0
																	: countEach_tDBOutput_17);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_17 > 0)
													&& (batchSize_tDBOutput_17 <= batchSizeCounter_tDBOutput_17)) {

												insertedCount_tDBOutput_17 = new LimitBytesHelper_tDBOutput_17()
														.limitBytePart1(insertedCount_tDBOutput_17, pstmt_tDBOutput_17);
												rowsToCommitCount_tDBOutput_17 = insertedCount_tDBOutput_17;

												batchSizeCounter_tDBOutput_17 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_17++;
											if (commitEvery_tDBOutput_17 <= commitCounter_tDBOutput_17) {
												if ((batchSize_tDBOutput_17 > 0)
														&& (batchSizeCounter_tDBOutput_17 > 0)) {

													insertedCount_tDBOutput_17 = new LimitBytesHelper_tDBOutput_17()
															.limitBytePart1(insertedCount_tDBOutput_17,
																	pstmt_tDBOutput_17);

													batchSizeCounter_tDBOutput_17 = 0;
												}
												if (rowsToCommitCount_tDBOutput_17 != 0) {

												}
												conn_tDBOutput_17.commit();
												if (rowsToCommitCount_tDBOutput_17 != 0) {

													rowsToCommitCount_tDBOutput_17 = 0;
												}
												commitCounter_tDBOutput_17 = 0;
											}

											tos_count_tDBOutput_17++;

											/**
											 * [tDBOutput_17 main ] stop
											 */

											/**
											 * [tDBOutput_17 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_17";

											/**
											 * [tDBOutput_17 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_17 process_data_end ] start
											 */

											currentComponent = "tDBOutput_17";

											/**
											 * [tDBOutput_17 process_data_end ] stop
											 */

										} // End of branch "row71"

										/**
										 * [tUniqRow_16 process_data_end ] start
										 */

										currentComponent = "tUniqRow_16";

										/**
										 * [tUniqRow_16 process_data_end ] stop
										 */

									} // End of branch "q"

									/**
									 * [tMap_50 process_data_end ] start
									 */

									currentComponent = "tMap_50";

									/**
									 * [tMap_50 process_data_end ] stop
									 */

								} // End of branch "Extension_id"

// Start of branch "Dim_nature_offre_mobile"
								if (Dim_nature_offre_mobile != null) {

									/**
									 * [tMap_47 main ] start
									 */

									currentComponent = "tMap_47";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "Dim_nature_offre_mobile"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_47 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_47 = false;
									boolean mainRowRejected_tMap_47 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row65"
									///////////////////////////////////////////////

									boolean forceLooprow65 = false;

									row65Struct row65ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_47) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_47 = false;

										row65HashKey.Nature_Offre = Dim_nature_offre_mobile.Nature_Offre;

										row65HashKey.hashCodeDirty = true;

										tHash_Lookup_row65.lookup(row65HashKey);

										if (!tHash_Lookup_row65.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_47 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row65 != null && tHash_Lookup_row65.getCount(row65HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row65' and it contains more one result from keys : row65.Nature_Offre = '" +
										// row65HashKey.Nature_Offre + "'");
									} // G 071

									row65Struct row65 = null;

									row65Struct fromLookup_row65 = null;
									row65 = row65Default;

									if (tHash_Lookup_row65 != null && tHash_Lookup_row65.hasNext()) { // G 099

										fromLookup_row65 = tHash_Lookup_row65.next();

									} // G 099

									if (fromLookup_row65 != null) {
										row65 = fromLookup_row65;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_47__Struct Var = Var__tMap_47;// ###############################
										// ###############################
										// # Output tables

										v = null;

										if (!rejectedInnerJoin_tMap_47) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'v'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_47) {
											v_tmp.Nature_Offre = Dim_nature_offre_mobile.Nature_Offre;
											v = v_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_47 = false;

									tos_count_tMap_47++;

									/**
									 * [tMap_47 main ] stop
									 */

									/**
									 * [tMap_47 process_data_begin ] start
									 */

									currentComponent = "tMap_47";

									/**
									 * [tMap_47 process_data_begin ] stop
									 */
// Start of branch "v"
									if (v != null) {

										/**
										 * [tUniqRow_13 main ] start
										 */

										currentComponent = "tUniqRow_13";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "v"

											);
										}

										row66 = null;
										finder_tUniqRow_13.Nature_Offre = v.Nature_Offre;
										finder_tUniqRow_13.hashCodeDirty = true;
										if (!keystUniqRow_13.contains(finder_tUniqRow_13)) {
											KeyStruct_tUniqRow_13 new_tUniqRow_13 = new KeyStruct_tUniqRow_13();

											new_tUniqRow_13.Nature_Offre = v.Nature_Offre;

											keystUniqRow_13.add(new_tUniqRow_13);
											if (row66 == null) {

												row66 = new row66Struct();
											}
											row66.Nature_Offre = v.Nature_Offre;
											nb_uniques_tUniqRow_13++;
										} else {
											nb_duplicates_tUniqRow_13++;
										}

										tos_count_tUniqRow_13++;

										/**
										 * [tUniqRow_13 main ] stop
										 */

										/**
										 * [tUniqRow_13 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_13";

										/**
										 * [tUniqRow_13 process_data_begin ] stop
										 */
// Start of branch "row66"
										if (row66 != null) {

											/**
											 * [tDBOutput_14 main ] start
											 */

											currentComponent = "tDBOutput_14";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row66"

												);
											}

											whetherReject_tDBOutput_14 = false;
											if (row66.Nature_Offre == null) {
												pstmt_tDBOutput_14.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_14.setString(1, row66.Nature_Offre);
											}

											pstmt_tDBOutput_14.addBatch();
											nb_line_tDBOutput_14++;

											batchSizeCounter_tDBOutput_14++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_14 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_14)
														throws Exception {
													try {

														for (int countEach_tDBOutput_14 : pstmt_tDBOutput_14
																.executeBatch()) {
															if (countEach_tDBOutput_14 == -2
																	|| countEach_tDBOutput_14 == -3) {
																break;
															}
															counter += countEach_tDBOutput_14;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_14_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_14 = 0;
														for (int countEach_tDBOutput_14 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_14 < 0 ? 0
																	: countEach_tDBOutput_14);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_14)
														throws Exception {
													try {

														for (int countEach_tDBOutput_14 : pstmt_tDBOutput_14
																.executeBatch()) {
															if (countEach_tDBOutput_14 == -2
																	|| countEach_tDBOutput_14 == -3) {
																break;
															}
															counter += countEach_tDBOutput_14;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_14_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_14 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_14 < 0 ? 0
																	: countEach_tDBOutput_14);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_14 > 0)
													&& (batchSize_tDBOutput_14 <= batchSizeCounter_tDBOutput_14)) {

												insertedCount_tDBOutput_14 = new LimitBytesHelper_tDBOutput_14()
														.limitBytePart1(insertedCount_tDBOutput_14, pstmt_tDBOutput_14);
												rowsToCommitCount_tDBOutput_14 = insertedCount_tDBOutput_14;

												batchSizeCounter_tDBOutput_14 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_14++;
											if (commitEvery_tDBOutput_14 <= commitCounter_tDBOutput_14) {
												if ((batchSize_tDBOutput_14 > 0)
														&& (batchSizeCounter_tDBOutput_14 > 0)) {

													insertedCount_tDBOutput_14 = new LimitBytesHelper_tDBOutput_14()
															.limitBytePart1(insertedCount_tDBOutput_14,
																	pstmt_tDBOutput_14);

													batchSizeCounter_tDBOutput_14 = 0;
												}
												if (rowsToCommitCount_tDBOutput_14 != 0) {

												}
												conn_tDBOutput_14.commit();
												if (rowsToCommitCount_tDBOutput_14 != 0) {

													rowsToCommitCount_tDBOutput_14 = 0;
												}
												commitCounter_tDBOutput_14 = 0;
											}

											tos_count_tDBOutput_14++;

											/**
											 * [tDBOutput_14 main ] stop
											 */

											/**
											 * [tDBOutput_14 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_14";

											/**
											 * [tDBOutput_14 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_14 process_data_end ] start
											 */

											currentComponent = "tDBOutput_14";

											/**
											 * [tDBOutput_14 process_data_end ] stop
											 */

										} // End of branch "row66"

										/**
										 * [tUniqRow_13 process_data_end ] start
										 */

										currentComponent = "tUniqRow_13";

										/**
										 * [tUniqRow_13 process_data_end ] stop
										 */

									} // End of branch "v"

									/**
									 * [tMap_47 process_data_end ] start
									 */

									currentComponent = "tMap_47";

									/**
									 * [tMap_47 process_data_end ] stop
									 */

								} // End of branch "Dim_nature_offre_mobile"

// Start of branch "Dim_offre_mobile"
								if (Dim_offre_mobile != null) {

									/**
									 * [tMap_46 main ] start
									 */

									currentComponent = "tMap_46";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "Dim_offre_mobile"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_46 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_46 = false;
									boolean mainRowRejected_tMap_46 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row63"
									///////////////////////////////////////////////

									boolean forceLooprow63 = false;

									row63Struct row63ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_46) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_46 = false;

										row63HashKey.Offre = Dim_offre_mobile.Offre;

										row63HashKey.hashCodeDirty = true;

										tHash_Lookup_row63.lookup(row63HashKey);

										if (!tHash_Lookup_row63.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_46 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row63 != null && tHash_Lookup_row63.getCount(row63HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row63' and it contains more one result from keys : row63.Offre = '" +
										// row63HashKey.Offre + "'");
									} // G 071

									row63Struct row63 = null;

									row63Struct fromLookup_row63 = null;
									row63 = row63Default;

									if (tHash_Lookup_row63 != null && tHash_Lookup_row63.hasNext()) { // G 099

										fromLookup_row63 = tHash_Lookup_row63.next();

									} // G 099

									if (fromLookup_row63 != null) {
										row63 = fromLookup_row63;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_46__Struct Var = Var__tMap_46;// ###############################
										// ###############################
										// # Output tables

										c = null;

										if (!rejectedInnerJoin_tMap_46) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'c'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_46) {
											c_tmp.Offre = Dim_offre_mobile.Offre;
											c = c_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_46 = false;

									tos_count_tMap_46++;

									/**
									 * [tMap_46 main ] stop
									 */

									/**
									 * [tMap_46 process_data_begin ] start
									 */

									currentComponent = "tMap_46";

									/**
									 * [tMap_46 process_data_begin ] stop
									 */
// Start of branch "c"
									if (c != null) {

										/**
										 * [tUniqRow_12 main ] start
										 */

										currentComponent = "tUniqRow_12";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "c"

											);
										}

										row64 = null;
										finder_tUniqRow_12.Offre = c.Offre;
										finder_tUniqRow_12.hashCodeDirty = true;
										if (!keystUniqRow_12.contains(finder_tUniqRow_12)) {
											KeyStruct_tUniqRow_12 new_tUniqRow_12 = new KeyStruct_tUniqRow_12();

											new_tUniqRow_12.Offre = c.Offre;

											keystUniqRow_12.add(new_tUniqRow_12);
											if (row64 == null) {

												row64 = new row64Struct();
											}
											row64.Offre = c.Offre;
											nb_uniques_tUniqRow_12++;
										} else {
											nb_duplicates_tUniqRow_12++;
										}

										tos_count_tUniqRow_12++;

										/**
										 * [tUniqRow_12 main ] stop
										 */

										/**
										 * [tUniqRow_12 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_12";

										/**
										 * [tUniqRow_12 process_data_begin ] stop
										 */
// Start of branch "row64"
										if (row64 != null) {

											/**
											 * [tDBOutput_13 main ] start
											 */

											currentComponent = "tDBOutput_13";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row64"

												);
											}

											whetherReject_tDBOutput_13 = false;
											if (row64.Offre == null) {
												pstmt_tDBOutput_13.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_13.setString(1, row64.Offre);
											}

											pstmt_tDBOutput_13.addBatch();
											nb_line_tDBOutput_13++;

											batchSizeCounter_tDBOutput_13++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_13 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_13)
														throws Exception {
													try {

														for (int countEach_tDBOutput_13 : pstmt_tDBOutput_13
																.executeBatch()) {
															if (countEach_tDBOutput_13 == -2
																	|| countEach_tDBOutput_13 == -3) {
																break;
															}
															counter += countEach_tDBOutput_13;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_13_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_13 = 0;
														for (int countEach_tDBOutput_13 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_13 < 0 ? 0
																	: countEach_tDBOutput_13);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_13)
														throws Exception {
													try {

														for (int countEach_tDBOutput_13 : pstmt_tDBOutput_13
																.executeBatch()) {
															if (countEach_tDBOutput_13 == -2
																	|| countEach_tDBOutput_13 == -3) {
																break;
															}
															counter += countEach_tDBOutput_13;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_13_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_13 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_13 < 0 ? 0
																	: countEach_tDBOutput_13);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_13 > 0)
													&& (batchSize_tDBOutput_13 <= batchSizeCounter_tDBOutput_13)) {

												insertedCount_tDBOutput_13 = new LimitBytesHelper_tDBOutput_13()
														.limitBytePart1(insertedCount_tDBOutput_13, pstmt_tDBOutput_13);
												rowsToCommitCount_tDBOutput_13 = insertedCount_tDBOutput_13;

												batchSizeCounter_tDBOutput_13 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_13++;
											if (commitEvery_tDBOutput_13 <= commitCounter_tDBOutput_13) {
												if ((batchSize_tDBOutput_13 > 0)
														&& (batchSizeCounter_tDBOutput_13 > 0)) {

													insertedCount_tDBOutput_13 = new LimitBytesHelper_tDBOutput_13()
															.limitBytePart1(insertedCount_tDBOutput_13,
																	pstmt_tDBOutput_13);

													batchSizeCounter_tDBOutput_13 = 0;
												}
												if (rowsToCommitCount_tDBOutput_13 != 0) {

												}
												conn_tDBOutput_13.commit();
												if (rowsToCommitCount_tDBOutput_13 != 0) {

													rowsToCommitCount_tDBOutput_13 = 0;
												}
												commitCounter_tDBOutput_13 = 0;
											}

											tos_count_tDBOutput_13++;

											/**
											 * [tDBOutput_13 main ] stop
											 */

											/**
											 * [tDBOutput_13 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_13";

											/**
											 * [tDBOutput_13 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_13 process_data_end ] start
											 */

											currentComponent = "tDBOutput_13";

											/**
											 * [tDBOutput_13 process_data_end ] stop
											 */

										} // End of branch "row64"

										/**
										 * [tUniqRow_12 process_data_end ] start
										 */

										currentComponent = "tUniqRow_12";

										/**
										 * [tUniqRow_12 process_data_end ] stop
										 */

									} // End of branch "c"

									/**
									 * [tMap_46 process_data_end ] start
									 */

									currentComponent = "tMap_46";

									/**
									 * [tMap_46 process_data_end ] stop
									 */

								} // End of branch "Dim_offre_mobile"

								/**
								 * [tMap_45 process_data_end ] start
								 */

								currentComponent = "tMap_45";

								/**
								 * [tMap_45 process_data_end ] stop
								 */

							} // End of branch "row58"

							/**
							 * [tFileInputExcel_9 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_9";

							/**
							 * [tFileInputExcel_9 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_9 end ] start
							 */

							currentComponent = "tFileInputExcel_9";

						}

						globalMap.put("tFileInputExcel_9_NB_LINE", nb_line_tFileInputExcel_9);

					}

				} finally {

					if (!(source_tFileInputExcel_9 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_9.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_9", true);
				end_Hash.put("tFileInputExcel_9", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_9 end ] stop
				 */

				/**
				 * [tMap_45 end ] start
				 */

				currentComponent = "tMap_45";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row58");
				}

				ok_Hash.put("tMap_45", true);
				end_Hash.put("tMap_45", System.currentTimeMillis());

				/**
				 * [tMap_45 end ] stop
				 */

				/**
				 * [tMap_48 end ] start
				 */

				currentComponent = "tMap_48";

// ###############################
// # Lookup hashes releasing
				if (tHash_Lookup_row67 != null) {
					tHash_Lookup_row67.endGet();
				}
				globalMap.remove("tHash_Lookup_row67");

// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "Dim_Reference_OSM_Opportunite_mobile");
				}

				ok_Hash.put("tMap_48", true);
				end_Hash.put("tMap_48", System.currentTimeMillis());

				/**
				 * [tMap_48 end ] stop
				 */

				/**
				 * [tUniqRow_14 end ] start
				 */

				currentComponent = "tUniqRow_14";

				globalMap.put("tUniqRow_14_NB_UNIQUES", nb_uniques_tUniqRow_14);
				globalMap.put("tUniqRow_14_NB_DUPLICATES", nb_duplicates_tUniqRow_14);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "b");
				}

				ok_Hash.put("tUniqRow_14", true);
				end_Hash.put("tUniqRow_14", System.currentTimeMillis());

				/**
				 * [tUniqRow_14 end ] stop
				 */

				/**
				 * [tDBOutput_15 end ] start
				 */

				currentComponent = "tDBOutput_15";

				try {
					int countSum_tDBOutput_15 = 0;
					if (pstmt_tDBOutput_15 != null && batchSizeCounter_tDBOutput_15 > 0) {

						for (int countEach_tDBOutput_15 : pstmt_tDBOutput_15.executeBatch()) {
							if (countEach_tDBOutput_15 == -2 || countEach_tDBOutput_15 == -3) {
								break;
							}
							countSum_tDBOutput_15 += countEach_tDBOutput_15;
						}
						rowsToCommitCount_tDBOutput_15 += countSum_tDBOutput_15;

					}

					insertedCount_tDBOutput_15 += countSum_tDBOutput_15;

				} catch (java.sql.BatchUpdateException e) {
					globalMap.put("tDBOutput_15_ERROR_MESSAGE", e.getMessage());

					int countSum_tDBOutput_15 = 0;
					for (int countEach_tDBOutput_15 : e.getUpdateCounts()) {
						countSum_tDBOutput_15 += (countEach_tDBOutput_15 < 0 ? 0 : countEach_tDBOutput_15);
					}
					rowsToCommitCount_tDBOutput_15 += countSum_tDBOutput_15;

					insertedCount_tDBOutput_15 += countSum_tDBOutput_15;

					System.err.println(e.getMessage());

				}
				if (pstmt_tDBOutput_15 != null) {

					pstmt_tDBOutput_15.close();
					resourceMap.remove("pstmt_tDBOutput_15");

				}
				resourceMap.put("statementClosed_tDBOutput_15", true);
				if (rowsToCommitCount_tDBOutput_15 != 0) {

				}
				conn_tDBOutput_15.commit();
				if (rowsToCommitCount_tDBOutput_15 != 0) {

					rowsToCommitCount_tDBOutput_15 = 0;
				}
				commitCounter_tDBOutput_15 = 0;
				conn_tDBOutput_15.close();
				resourceMap.put("finish_tDBOutput_15", true);

				nb_line_deleted_tDBOutput_15 = nb_line_deleted_tDBOutput_15 + deletedCount_tDBOutput_15;
				nb_line_update_tDBOutput_15 = nb_line_update_tDBOutput_15 + updatedCount_tDBOutput_15;
				nb_line_inserted_tDBOutput_15 = nb_line_inserted_tDBOutput_15 + insertedCount_tDBOutput_15;
				nb_line_rejected_tDBOutput_15 = nb_line_rejected_tDBOutput_15 + rejectedCount_tDBOutput_15;

				globalMap.put("tDBOutput_15_NB_LINE", nb_line_tDBOutput_15);
				globalMap.put("tDBOutput_15_NB_LINE_UPDATED", nb_line_update_tDBOutput_15);
				globalMap.put("tDBOutput_15_NB_LINE_INSERTED", nb_line_inserted_tDBOutput_15);
				globalMap.put("tDBOutput_15_NB_LINE_DELETED", nb_line_deleted_tDBOutput_15);
				globalMap.put("tDBOutput_15_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_15);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row68");
				}

				ok_Hash.put("tDBOutput_15", true);
				end_Hash.put("tDBOutput_15", System.currentTimeMillis());

				/**
				 * [tDBOutput_15 end ] stop
				 */

				/**
				 * [tMap_49 end ] start
				 */

				currentComponent = "tMap_49";

// ###############################
// # Lookup hashes releasing
				if (tHash_Lookup_row69 != null) {
					tHash_Lookup_row69.endGet();
				}
				globalMap.remove("tHash_Lookup_row69");

// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "Dim_type_engagement_mobile");
				}

				ok_Hash.put("tMap_49", true);
				end_Hash.put("tMap_49", System.currentTimeMillis());

				/**
				 * [tMap_49 end ] stop
				 */

				/**
				 * [tUniqRow_15 end ] start
				 */

				currentComponent = "tUniqRow_15";

				globalMap.put("tUniqRow_15_NB_UNIQUES", nb_uniques_tUniqRow_15);
				globalMap.put("tUniqRow_15_NB_DUPLICATES", nb_duplicates_tUniqRow_15);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "n");
				}

				ok_Hash.put("tUniqRow_15", true);
				end_Hash.put("tUniqRow_15", System.currentTimeMillis());

				/**
				 * [tUniqRow_15 end ] stop
				 */

				/**
				 * [tDBOutput_16 end ] start
				 */

				currentComponent = "tDBOutput_16";

				try {
					int countSum_tDBOutput_16 = 0;
					if (pstmt_tDBOutput_16 != null && batchSizeCounter_tDBOutput_16 > 0) {

						for (int countEach_tDBOutput_16 : pstmt_tDBOutput_16.executeBatch()) {
							if (countEach_tDBOutput_16 == -2 || countEach_tDBOutput_16 == -3) {
								break;
							}
							countSum_tDBOutput_16 += countEach_tDBOutput_16;
						}
						rowsToCommitCount_tDBOutput_16 += countSum_tDBOutput_16;

					}

					insertedCount_tDBOutput_16 += countSum_tDBOutput_16;

				} catch (java.sql.BatchUpdateException e) {
					globalMap.put("tDBOutput_16_ERROR_MESSAGE", e.getMessage());

					int countSum_tDBOutput_16 = 0;
					for (int countEach_tDBOutput_16 : e.getUpdateCounts()) {
						countSum_tDBOutput_16 += (countEach_tDBOutput_16 < 0 ? 0 : countEach_tDBOutput_16);
					}
					rowsToCommitCount_tDBOutput_16 += countSum_tDBOutput_16;

					insertedCount_tDBOutput_16 += countSum_tDBOutput_16;

					System.err.println(e.getMessage());

				}
				if (pstmt_tDBOutput_16 != null) {

					pstmt_tDBOutput_16.close();
					resourceMap.remove("pstmt_tDBOutput_16");

				}
				resourceMap.put("statementClosed_tDBOutput_16", true);
				if (rowsToCommitCount_tDBOutput_16 != 0) {

				}
				conn_tDBOutput_16.commit();
				if (rowsToCommitCount_tDBOutput_16 != 0) {

					rowsToCommitCount_tDBOutput_16 = 0;
				}
				commitCounter_tDBOutput_16 = 0;
				conn_tDBOutput_16.close();
				resourceMap.put("finish_tDBOutput_16", true);

				nb_line_deleted_tDBOutput_16 = nb_line_deleted_tDBOutput_16 + deletedCount_tDBOutput_16;
				nb_line_update_tDBOutput_16 = nb_line_update_tDBOutput_16 + updatedCount_tDBOutput_16;
				nb_line_inserted_tDBOutput_16 = nb_line_inserted_tDBOutput_16 + insertedCount_tDBOutput_16;
				nb_line_rejected_tDBOutput_16 = nb_line_rejected_tDBOutput_16 + rejectedCount_tDBOutput_16;

				globalMap.put("tDBOutput_16_NB_LINE", nb_line_tDBOutput_16);
				globalMap.put("tDBOutput_16_NB_LINE_UPDATED", nb_line_update_tDBOutput_16);
				globalMap.put("tDBOutput_16_NB_LINE_INSERTED", nb_line_inserted_tDBOutput_16);
				globalMap.put("tDBOutput_16_NB_LINE_DELETED", nb_line_deleted_tDBOutput_16);
				globalMap.put("tDBOutput_16_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_16);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row70");
				}

				ok_Hash.put("tDBOutput_16", true);
				end_Hash.put("tDBOutput_16", System.currentTimeMillis());

				/**
				 * [tDBOutput_16 end ] stop
				 */

				/**
				 * [tMap_50 end ] start
				 */

				currentComponent = "tMap_50";

// ###############################
// # Lookup hashes releasing
				if (tHash_Lookup_row72 != null) {
					tHash_Lookup_row72.endGet();
				}
				globalMap.remove("tHash_Lookup_row72");

// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "Extension_id");
				}

				ok_Hash.put("tMap_50", true);
				end_Hash.put("tMap_50", System.currentTimeMillis());

				/**
				 * [tMap_50 end ] stop
				 */

				/**
				 * [tUniqRow_16 end ] start
				 */

				currentComponent = "tUniqRow_16";

				globalMap.put("tUniqRow_16_NB_UNIQUES", nb_uniques_tUniqRow_16);
				globalMap.put("tUniqRow_16_NB_DUPLICATES", nb_duplicates_tUniqRow_16);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "q");
				}

				ok_Hash.put("tUniqRow_16", true);
				end_Hash.put("tUniqRow_16", System.currentTimeMillis());

				/**
				 * [tUniqRow_16 end ] stop
				 */

				/**
				 * [tDBOutput_17 end ] start
				 */

				currentComponent = "tDBOutput_17";

				try {
					int countSum_tDBOutput_17 = 0;
					if (pstmt_tDBOutput_17 != null && batchSizeCounter_tDBOutput_17 > 0) {

						for (int countEach_tDBOutput_17 : pstmt_tDBOutput_17.executeBatch()) {
							if (countEach_tDBOutput_17 == -2 || countEach_tDBOutput_17 == -3) {
								break;
							}
							countSum_tDBOutput_17 += countEach_tDBOutput_17;
						}
						rowsToCommitCount_tDBOutput_17 += countSum_tDBOutput_17;

					}

					insertedCount_tDBOutput_17 += countSum_tDBOutput_17;

				} catch (java.sql.BatchUpdateException e) {
					globalMap.put("tDBOutput_17_ERROR_MESSAGE", e.getMessage());

					int countSum_tDBOutput_17 = 0;
					for (int countEach_tDBOutput_17 : e.getUpdateCounts()) {
						countSum_tDBOutput_17 += (countEach_tDBOutput_17 < 0 ? 0 : countEach_tDBOutput_17);
					}
					rowsToCommitCount_tDBOutput_17 += countSum_tDBOutput_17;

					insertedCount_tDBOutput_17 += countSum_tDBOutput_17;

					System.err.println(e.getMessage());

				}
				if (pstmt_tDBOutput_17 != null) {

					pstmt_tDBOutput_17.close();
					resourceMap.remove("pstmt_tDBOutput_17");

				}
				resourceMap.put("statementClosed_tDBOutput_17", true);
				if (rowsToCommitCount_tDBOutput_17 != 0) {

				}
				conn_tDBOutput_17.commit();
				if (rowsToCommitCount_tDBOutput_17 != 0) {

					rowsToCommitCount_tDBOutput_17 = 0;
				}
				commitCounter_tDBOutput_17 = 0;
				conn_tDBOutput_17.close();
				resourceMap.put("finish_tDBOutput_17", true);

				nb_line_deleted_tDBOutput_17 = nb_line_deleted_tDBOutput_17 + deletedCount_tDBOutput_17;
				nb_line_update_tDBOutput_17 = nb_line_update_tDBOutput_17 + updatedCount_tDBOutput_17;
				nb_line_inserted_tDBOutput_17 = nb_line_inserted_tDBOutput_17 + insertedCount_tDBOutput_17;
				nb_line_rejected_tDBOutput_17 = nb_line_rejected_tDBOutput_17 + rejectedCount_tDBOutput_17;

				globalMap.put("tDBOutput_17_NB_LINE", nb_line_tDBOutput_17);
				globalMap.put("tDBOutput_17_NB_LINE_UPDATED", nb_line_update_tDBOutput_17);
				globalMap.put("tDBOutput_17_NB_LINE_INSERTED", nb_line_inserted_tDBOutput_17);
				globalMap.put("tDBOutput_17_NB_LINE_DELETED", nb_line_deleted_tDBOutput_17);
				globalMap.put("tDBOutput_17_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_17);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row71");
				}

				ok_Hash.put("tDBOutput_17", true);
				end_Hash.put("tDBOutput_17", System.currentTimeMillis());

				/**
				 * [tDBOutput_17 end ] stop
				 */

				/**
				 * [tMap_47 end ] start
				 */

				currentComponent = "tMap_47";

// ###############################
// # Lookup hashes releasing
				if (tHash_Lookup_row65 != null) {
					tHash_Lookup_row65.endGet();
				}
				globalMap.remove("tHash_Lookup_row65");

// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "Dim_nature_offre_mobile");
				}

				ok_Hash.put("tMap_47", true);
				end_Hash.put("tMap_47", System.currentTimeMillis());

				/**
				 * [tMap_47 end ] stop
				 */

				/**
				 * [tUniqRow_13 end ] start
				 */

				currentComponent = "tUniqRow_13";

				globalMap.put("tUniqRow_13_NB_UNIQUES", nb_uniques_tUniqRow_13);
				globalMap.put("tUniqRow_13_NB_DUPLICATES", nb_duplicates_tUniqRow_13);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "v");
				}

				ok_Hash.put("tUniqRow_13", true);
				end_Hash.put("tUniqRow_13", System.currentTimeMillis());

				/**
				 * [tUniqRow_13 end ] stop
				 */

				/**
				 * [tDBOutput_14 end ] start
				 */

				currentComponent = "tDBOutput_14";

				try {
					int countSum_tDBOutput_14 = 0;
					if (pstmt_tDBOutput_14 != null && batchSizeCounter_tDBOutput_14 > 0) {

						for (int countEach_tDBOutput_14 : pstmt_tDBOutput_14.executeBatch()) {
							if (countEach_tDBOutput_14 == -2 || countEach_tDBOutput_14 == -3) {
								break;
							}
							countSum_tDBOutput_14 += countEach_tDBOutput_14;
						}
						rowsToCommitCount_tDBOutput_14 += countSum_tDBOutput_14;

					}

					insertedCount_tDBOutput_14 += countSum_tDBOutput_14;

				} catch (java.sql.BatchUpdateException e) {
					globalMap.put("tDBOutput_14_ERROR_MESSAGE", e.getMessage());

					int countSum_tDBOutput_14 = 0;
					for (int countEach_tDBOutput_14 : e.getUpdateCounts()) {
						countSum_tDBOutput_14 += (countEach_tDBOutput_14 < 0 ? 0 : countEach_tDBOutput_14);
					}
					rowsToCommitCount_tDBOutput_14 += countSum_tDBOutput_14;

					insertedCount_tDBOutput_14 += countSum_tDBOutput_14;

					System.err.println(e.getMessage());

				}
				if (pstmt_tDBOutput_14 != null) {

					pstmt_tDBOutput_14.close();
					resourceMap.remove("pstmt_tDBOutput_14");

				}
				resourceMap.put("statementClosed_tDBOutput_14", true);
				if (rowsToCommitCount_tDBOutput_14 != 0) {

				}
				conn_tDBOutput_14.commit();
				if (rowsToCommitCount_tDBOutput_14 != 0) {

					rowsToCommitCount_tDBOutput_14 = 0;
				}
				commitCounter_tDBOutput_14 = 0;
				conn_tDBOutput_14.close();
				resourceMap.put("finish_tDBOutput_14", true);

				nb_line_deleted_tDBOutput_14 = nb_line_deleted_tDBOutput_14 + deletedCount_tDBOutput_14;
				nb_line_update_tDBOutput_14 = nb_line_update_tDBOutput_14 + updatedCount_tDBOutput_14;
				nb_line_inserted_tDBOutput_14 = nb_line_inserted_tDBOutput_14 + insertedCount_tDBOutput_14;
				nb_line_rejected_tDBOutput_14 = nb_line_rejected_tDBOutput_14 + rejectedCount_tDBOutput_14;

				globalMap.put("tDBOutput_14_NB_LINE", nb_line_tDBOutput_14);
				globalMap.put("tDBOutput_14_NB_LINE_UPDATED", nb_line_update_tDBOutput_14);
				globalMap.put("tDBOutput_14_NB_LINE_INSERTED", nb_line_inserted_tDBOutput_14);
				globalMap.put("tDBOutput_14_NB_LINE_DELETED", nb_line_deleted_tDBOutput_14);
				globalMap.put("tDBOutput_14_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_14);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row66");
				}

				ok_Hash.put("tDBOutput_14", true);
				end_Hash.put("tDBOutput_14", System.currentTimeMillis());

				/**
				 * [tDBOutput_14 end ] stop
				 */

				/**
				 * [tMap_46 end ] start
				 */

				currentComponent = "tMap_46";

// ###############################
// # Lookup hashes releasing
				if (tHash_Lookup_row63 != null) {
					tHash_Lookup_row63.endGet();
				}
				globalMap.remove("tHash_Lookup_row63");

// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "Dim_offre_mobile");
				}

				ok_Hash.put("tMap_46", true);
				end_Hash.put("tMap_46", System.currentTimeMillis());

				/**
				 * [tMap_46 end ] stop
				 */

				/**
				 * [tUniqRow_12 end ] start
				 */

				currentComponent = "tUniqRow_12";

				globalMap.put("tUniqRow_12_NB_UNIQUES", nb_uniques_tUniqRow_12);
				globalMap.put("tUniqRow_12_NB_DUPLICATES", nb_duplicates_tUniqRow_12);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "c");
				}

				ok_Hash.put("tUniqRow_12", true);
				end_Hash.put("tUniqRow_12", System.currentTimeMillis());

				/**
				 * [tUniqRow_12 end ] stop
				 */

				/**
				 * [tDBOutput_13 end ] start
				 */

				currentComponent = "tDBOutput_13";

				try {
					int countSum_tDBOutput_13 = 0;
					if (pstmt_tDBOutput_13 != null && batchSizeCounter_tDBOutput_13 > 0) {

						for (int countEach_tDBOutput_13 : pstmt_tDBOutput_13.executeBatch()) {
							if (countEach_tDBOutput_13 == -2 || countEach_tDBOutput_13 == -3) {
								break;
							}
							countSum_tDBOutput_13 += countEach_tDBOutput_13;
						}
						rowsToCommitCount_tDBOutput_13 += countSum_tDBOutput_13;

					}

					insertedCount_tDBOutput_13 += countSum_tDBOutput_13;

				} catch (java.sql.BatchUpdateException e) {
					globalMap.put("tDBOutput_13_ERROR_MESSAGE", e.getMessage());

					int countSum_tDBOutput_13 = 0;
					for (int countEach_tDBOutput_13 : e.getUpdateCounts()) {
						countSum_tDBOutput_13 += (countEach_tDBOutput_13 < 0 ? 0 : countEach_tDBOutput_13);
					}
					rowsToCommitCount_tDBOutput_13 += countSum_tDBOutput_13;

					insertedCount_tDBOutput_13 += countSum_tDBOutput_13;

					System.err.println(e.getMessage());

				}
				if (pstmt_tDBOutput_13 != null) {

					pstmt_tDBOutput_13.close();
					resourceMap.remove("pstmt_tDBOutput_13");

				}
				resourceMap.put("statementClosed_tDBOutput_13", true);
				if (rowsToCommitCount_tDBOutput_13 != 0) {

				}
				conn_tDBOutput_13.commit();
				if (rowsToCommitCount_tDBOutput_13 != 0) {

					rowsToCommitCount_tDBOutput_13 = 0;
				}
				commitCounter_tDBOutput_13 = 0;
				conn_tDBOutput_13.close();
				resourceMap.put("finish_tDBOutput_13", true);

				nb_line_deleted_tDBOutput_13 = nb_line_deleted_tDBOutput_13 + deletedCount_tDBOutput_13;
				nb_line_update_tDBOutput_13 = nb_line_update_tDBOutput_13 + updatedCount_tDBOutput_13;
				nb_line_inserted_tDBOutput_13 = nb_line_inserted_tDBOutput_13 + insertedCount_tDBOutput_13;
				nb_line_rejected_tDBOutput_13 = nb_line_rejected_tDBOutput_13 + rejectedCount_tDBOutput_13;

				globalMap.put("tDBOutput_13_NB_LINE", nb_line_tDBOutput_13);
				globalMap.put("tDBOutput_13_NB_LINE_UPDATED", nb_line_update_tDBOutput_13);
				globalMap.put("tDBOutput_13_NB_LINE_INSERTED", nb_line_inserted_tDBOutput_13);
				globalMap.put("tDBOutput_13_NB_LINE_DELETED", nb_line_deleted_tDBOutput_13);
				globalMap.put("tDBOutput_13_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_13);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row64");
				}

				ok_Hash.put("tDBOutput_13", true);
				end_Hash.put("tDBOutput_13", System.currentTimeMillis());

				/**
				 * [tDBOutput_13 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			// free memory for "tMap_46"
			globalMap.remove("tHash_Lookup_row63");

			// free memory for "tMap_47"
			globalMap.remove("tHash_Lookup_row65");

			// free memory for "tMap_50"
			globalMap.remove("tHash_Lookup_row72");

			// free memory for "tMap_49"
			globalMap.remove("tHash_Lookup_row69");

			// free memory for "tMap_48"
			globalMap.remove("tHash_Lookup_row67");

			try {

				/**
				 * [tFileInputExcel_9 finally ] start
				 */

				currentComponent = "tFileInputExcel_9";

				/**
				 * [tFileInputExcel_9 finally ] stop
				 */

				/**
				 * [tMap_45 finally ] start
				 */

				currentComponent = "tMap_45";

				/**
				 * [tMap_45 finally ] stop
				 */

				/**
				 * [tMap_48 finally ] start
				 */

				currentComponent = "tMap_48";

				/**
				 * [tMap_48 finally ] stop
				 */

				/**
				 * [tUniqRow_14 finally ] start
				 */

				currentComponent = "tUniqRow_14";

				/**
				 * [tUniqRow_14 finally ] stop
				 */

				/**
				 * [tDBOutput_15 finally ] start
				 */

				currentComponent = "tDBOutput_15";

				try {
					if (resourceMap.get("statementClosed_tDBOutput_15") == null) {
						java.sql.PreparedStatement pstmtToClose_tDBOutput_15 = null;
						if ((pstmtToClose_tDBOutput_15 = (java.sql.PreparedStatement) resourceMap
								.remove("pstmt_tDBOutput_15")) != null) {
							pstmtToClose_tDBOutput_15.close();
						}
					}
				} finally {
					if (resourceMap.get("finish_tDBOutput_15") == null) {
						java.sql.Connection ctn_tDBOutput_15 = null;
						if ((ctn_tDBOutput_15 = (java.sql.Connection) resourceMap.get("conn_tDBOutput_15")) != null) {
							try {
								ctn_tDBOutput_15.close();
							} catch (java.sql.SQLException sqlEx_tDBOutput_15) {
								String errorMessage_tDBOutput_15 = "failed to close the connection in tDBOutput_15 :"
										+ sqlEx_tDBOutput_15.getMessage();
								System.err.println(errorMessage_tDBOutput_15);
							}
						}
					}
				}

				/**
				 * [tDBOutput_15 finally ] stop
				 */

				/**
				 * [tMap_49 finally ] start
				 */

				currentComponent = "tMap_49";

				/**
				 * [tMap_49 finally ] stop
				 */

				/**
				 * [tUniqRow_15 finally ] start
				 */

				currentComponent = "tUniqRow_15";

				/**
				 * [tUniqRow_15 finally ] stop
				 */

				/**
				 * [tDBOutput_16 finally ] start
				 */

				currentComponent = "tDBOutput_16";

				try {
					if (resourceMap.get("statementClosed_tDBOutput_16") == null) {
						java.sql.PreparedStatement pstmtToClose_tDBOutput_16 = null;
						if ((pstmtToClose_tDBOutput_16 = (java.sql.PreparedStatement) resourceMap
								.remove("pstmt_tDBOutput_16")) != null) {
							pstmtToClose_tDBOutput_16.close();
						}
					}
				} finally {
					if (resourceMap.get("finish_tDBOutput_16") == null) {
						java.sql.Connection ctn_tDBOutput_16 = null;
						if ((ctn_tDBOutput_16 = (java.sql.Connection) resourceMap.get("conn_tDBOutput_16")) != null) {
							try {
								ctn_tDBOutput_16.close();
							} catch (java.sql.SQLException sqlEx_tDBOutput_16) {
								String errorMessage_tDBOutput_16 = "failed to close the connection in tDBOutput_16 :"
										+ sqlEx_tDBOutput_16.getMessage();
								System.err.println(errorMessage_tDBOutput_16);
							}
						}
					}
				}

				/**
				 * [tDBOutput_16 finally ] stop
				 */

				/**
				 * [tMap_50 finally ] start
				 */

				currentComponent = "tMap_50";

				/**
				 * [tMap_50 finally ] stop
				 */

				/**
				 * [tUniqRow_16 finally ] start
				 */

				currentComponent = "tUniqRow_16";

				/**
				 * [tUniqRow_16 finally ] stop
				 */

				/**
				 * [tDBOutput_17 finally ] start
				 */

				currentComponent = "tDBOutput_17";

				try {
					if (resourceMap.get("statementClosed_tDBOutput_17") == null) {
						java.sql.PreparedStatement pstmtToClose_tDBOutput_17 = null;
						if ((pstmtToClose_tDBOutput_17 = (java.sql.PreparedStatement) resourceMap
								.remove("pstmt_tDBOutput_17")) != null) {
							pstmtToClose_tDBOutput_17.close();
						}
					}
				} finally {
					if (resourceMap.get("finish_tDBOutput_17") == null) {
						java.sql.Connection ctn_tDBOutput_17 = null;
						if ((ctn_tDBOutput_17 = (java.sql.Connection) resourceMap.get("conn_tDBOutput_17")) != null) {
							try {
								ctn_tDBOutput_17.close();
							} catch (java.sql.SQLException sqlEx_tDBOutput_17) {
								String errorMessage_tDBOutput_17 = "failed to close the connection in tDBOutput_17 :"
										+ sqlEx_tDBOutput_17.getMessage();
								System.err.println(errorMessage_tDBOutput_17);
							}
						}
					}
				}

				/**
				 * [tDBOutput_17 finally ] stop
				 */

				/**
				 * [tMap_47 finally ] start
				 */

				currentComponent = "tMap_47";

				/**
				 * [tMap_47 finally ] stop
				 */

				/**
				 * [tUniqRow_13 finally ] start
				 */

				currentComponent = "tUniqRow_13";

				/**
				 * [tUniqRow_13 finally ] stop
				 */

				/**
				 * [tDBOutput_14 finally ] start
				 */

				currentComponent = "tDBOutput_14";

				try {
					if (resourceMap.get("statementClosed_tDBOutput_14") == null) {
						java.sql.PreparedStatement pstmtToClose_tDBOutput_14 = null;
						if ((pstmtToClose_tDBOutput_14 = (java.sql.PreparedStatement) resourceMap
								.remove("pstmt_tDBOutput_14")) != null) {
							pstmtToClose_tDBOutput_14.close();
						}
					}
				} finally {
					if (resourceMap.get("finish_tDBOutput_14") == null) {
						java.sql.Connection ctn_tDBOutput_14 = null;
						if ((ctn_tDBOutput_14 = (java.sql.Connection) resourceMap.get("conn_tDBOutput_14")) != null) {
							try {
								ctn_tDBOutput_14.close();
							} catch (java.sql.SQLException sqlEx_tDBOutput_14) {
								String errorMessage_tDBOutput_14 = "failed to close the connection in tDBOutput_14 :"
										+ sqlEx_tDBOutput_14.getMessage();
								System.err.println(errorMessage_tDBOutput_14);
							}
						}
					}
				}

				/**
				 * [tDBOutput_14 finally ] stop
				 */

				/**
				 * [tMap_46 finally ] start
				 */

				currentComponent = "tMap_46";

				/**
				 * [tMap_46 finally ] stop
				 */

				/**
				 * [tUniqRow_12 finally ] start
				 */

				currentComponent = "tUniqRow_12";

				/**
				 * [tUniqRow_12 finally ] stop
				 */

				/**
				 * [tDBOutput_13 finally ] start
				 */

				currentComponent = "tDBOutput_13";

				try {
					if (resourceMap.get("statementClosed_tDBOutput_13") == null) {
						java.sql.PreparedStatement pstmtToClose_tDBOutput_13 = null;
						if ((pstmtToClose_tDBOutput_13 = (java.sql.PreparedStatement) resourceMap
								.remove("pstmt_tDBOutput_13")) != null) {
							pstmtToClose_tDBOutput_13.close();
						}
					}
				} finally {
					if (resourceMap.get("finish_tDBOutput_13") == null) {
						java.sql.Connection ctn_tDBOutput_13 = null;
						if ((ctn_tDBOutput_13 = (java.sql.Connection) resourceMap.get("conn_tDBOutput_13")) != null) {
							try {
								ctn_tDBOutput_13.close();
							} catch (java.sql.SQLException sqlEx_tDBOutput_13) {
								String errorMessage_tDBOutput_13 = "failed to close the connection in tDBOutput_13 :"
										+ sqlEx_tDBOutput_13.getMessage();
								System.err.println(errorMessage_tDBOutput_13);
							}
						}
					}
				}

				/**
				 * [tDBOutput_13 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tFileInputExcel_9_SUBPROCESS_STATE", 1);
	}

	public static class row75Struct implements routines.system.IPersistableRow<row75Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Type_d_acces;

		public String getType_d_acces() {
			return this.Type_d_acces;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_d_acces = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_d_acces = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Type_d_acces, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Type_d_acces, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Type_d_acces=" + Type_d_acces);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row75Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class xStruct implements routines.system.IPersistableRow<xStruct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Type_d_acces;

		public String getType_d_acces() {
			return this.Type_d_acces;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_d_acces = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_d_acces = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Type_d_acces, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Type_d_acces, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Type_d_acces=" + Type_d_acces);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(xStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class Dim_type_d_acces_dataStruct
			implements routines.system.IPersistableRow<Dim_type_d_acces_dataStruct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Type_d_operation;

		public String getType_d_operation() {
			return this.Type_d_operation;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_d_operation = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_d_operation = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Type_d_operation, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Type_d_operation, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Type_d_operation=" + Type_d_operation);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(Dim_type_d_acces_dataStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row62Struct implements routines.system.IPersistableRow<row62Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Client_Prospect;

		public String getClient_Prospect() {
			return this.Client_Prospect;
		}

		public String Sujet;

		public String getSujet() {
			return this.Sujet;
		}

		public String Acces;

		public String getAcces() {
			return this.Acces;
		}

		public String Type_d_acces;

		public String getType_d_acces() {
			return this.Type_d_acces;
		}

		public String Account_Manager__Client_Prospect;

		public String getAccount_Manager__Client_Prospect() {
			return this.Account_Manager__Client_Prospect;
		}

		public String Cree_le;

		public String getCree_le() {
			return this.Cree_le;
		}

		public String Mois_et_annee_de_creation;

		public String getMois_et_annee_de_creation() {
			return this.Mois_et_annee_de_creation;
		}

		public String Cree_par;

		public String getCree_par() {
			return this.Cree_par;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public String Proprietaire;

		public String getProprietaire() {
			return this.Proprietaire;
		}

		public String Phase_de_l_opportunite;

		public String getPhase_de_l_opportunite() {
			return this.Phase_de_l_opportunite;
		}

		public Integer Valeur_ordering;

		public Integer getValeur_ordering() {
			return this.Valeur_ordering;
		}

		public String Statut;

		public String getStatut() {
			return this.Statut;
		}

		public String Staut_Final;

		public String getStaut_Final() {
			return this.Staut_Final;
		}

		public String Tarifs;

		public String getTarifs() {
			return this.Tarifs;
		}

		public String Montant_total;

		public String getMontant_total() {
			return this.Montant_total;
		}

		public String Parent__Produit_existant;

		public String getParent__Produit_existant() {
			return this.Parent__Produit_existant;
		}

		public String Produit_existant;

		public String getProduit_existant() {
			return this.Produit_existant;
		}

		public String Operation;

		public String getOperation() {
			return this.Operation;
		}

		public String Type_d_operation;

		public String getType_d_operation() {
			return this.Type_d_operation;
		}

		public String Prix_unitaire;

		public String getPrix_unitaire() {
			return this.Prix_unitaire;
		}

		public Integer Quantite;

		public Integer getQuantite() {
			return this.Quantite;
		}

		public String Remise;

		public String getRemise() {
			return this.Remise;
		}

		public String Montant_de_la_remise_manuelle;

		public String getMontant_de_la_remise_manuelle() {
			return this.Montant_de_la_remise_manuelle;
		}

		public String Total_final;

		public String getTotal_final() {
			return this.Total_final;
		}

		public String Mois_et_annee_de_modification;

		public String getMois_et_annee_de_modification() {
			return this.Mois_et_annee_de_modification;
		}

		public java.util.Date Modifie_le;

		public java.util.Date getModifie_le() {
			return this.Modifie_le;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		private java.util.Date readDate(ObjectInputStream dis) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(dis.readLong());
			}
			return dateReturn;
		}

		private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(unmarshaller.readLong());
			}
			return dateReturn;
		}

		private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException {
			if (date1 == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeLong(date1.getTime());
			}
		}

		private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (date1 == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeLong(date1.getTime());
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

					this.Sujet = readString(dis);

					this.Acces = readString(dis);

					this.Type_d_acces = readString(dis);

					this.Account_Manager__Client_Prospect = readString(dis);

					this.Cree_le = readString(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Proprietaire = readString(dis);

					this.Phase_de_l_opportunite = readString(dis);

					this.Valeur_ordering = readInteger(dis);

					this.Statut = readString(dis);

					this.Staut_Final = readString(dis);

					this.Tarifs = readString(dis);

					this.Montant_total = readString(dis);

					this.Parent__Produit_existant = readString(dis);

					this.Produit_existant = readString(dis);

					this.Operation = readString(dis);

					this.Type_d_operation = readString(dis);

					this.Prix_unitaire = readString(dis);

					this.Quantite = readInteger(dis);

					this.Remise = readString(dis);

					this.Montant_de_la_remise_manuelle = readString(dis);

					this.Total_final = readString(dis);

					this.Mois_et_annee_de_modification = readString(dis);

					this.Modifie_le = readDate(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

					this.Sujet = readString(dis);

					this.Acces = readString(dis);

					this.Type_d_acces = readString(dis);

					this.Account_Manager__Client_Prospect = readString(dis);

					this.Cree_le = readString(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Proprietaire = readString(dis);

					this.Phase_de_l_opportunite = readString(dis);

					this.Valeur_ordering = readInteger(dis);

					this.Statut = readString(dis);

					this.Staut_Final = readString(dis);

					this.Tarifs = readString(dis);

					this.Montant_total = readString(dis);

					this.Parent__Produit_existant = readString(dis);

					this.Produit_existant = readString(dis);

					this.Operation = readString(dis);

					this.Type_d_operation = readString(dis);

					this.Prix_unitaire = readString(dis);

					this.Quantite = readInteger(dis);

					this.Remise = readString(dis);

					this.Montant_de_la_remise_manuelle = readString(dis);

					this.Total_final = readString(dis);

					this.Mois_et_annee_de_modification = readString(dis);

					this.Modifie_le = readDate(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Acces, dos);

				// String

				writeString(this.Type_d_acces, dos);

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

				// String

				writeString(this.Cree_le, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Proprietaire, dos);

				// String

				writeString(this.Phase_de_l_opportunite, dos);

				// Integer

				writeInteger(this.Valeur_ordering, dos);

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Tarifs, dos);

				// String

				writeString(this.Montant_total, dos);

				// String

				writeString(this.Parent__Produit_existant, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Operation, dos);

				// String

				writeString(this.Type_d_operation, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// Integer

				writeInteger(this.Quantite, dos);

				// String

				writeString(this.Remise, dos);

				// String

				writeString(this.Montant_de_la_remise_manuelle, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Mois_et_annee_de_modification, dos);

				// java.util.Date

				writeDate(this.Modifie_le, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Acces, dos);

				// String

				writeString(this.Type_d_acces, dos);

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

				// String

				writeString(this.Cree_le, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Proprietaire, dos);

				// String

				writeString(this.Phase_de_l_opportunite, dos);

				// Integer

				writeInteger(this.Valeur_ordering, dos);

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Tarifs, dos);

				// String

				writeString(this.Montant_total, dos);

				// String

				writeString(this.Parent__Produit_existant, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Operation, dos);

				// String

				writeString(this.Type_d_operation, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// Integer

				writeInteger(this.Quantite, dos);

				// String

				writeString(this.Remise, dos);

				// String

				writeString(this.Montant_de_la_remise_manuelle, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Mois_et_annee_de_modification, dos);

				// java.util.Date

				writeDate(this.Modifie_le, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Client_Prospect=" + Client_Prospect);
			sb.append(",Sujet=" + Sujet);
			sb.append(",Acces=" + Acces);
			sb.append(",Type_d_acces=" + Type_d_acces);
			sb.append(",Account_Manager__Client_Prospect=" + Account_Manager__Client_Prospect);
			sb.append(",Cree_le=" + Cree_le);
			sb.append(",Mois_et_annee_de_creation=" + Mois_et_annee_de_creation);
			sb.append(",Cree_par=" + Cree_par);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Proprietaire=" + Proprietaire);
			sb.append(",Phase_de_l_opportunite=" + Phase_de_l_opportunite);
			sb.append(",Valeur_ordering=" + String.valueOf(Valeur_ordering));
			sb.append(",Statut=" + Statut);
			sb.append(",Staut_Final=" + Staut_Final);
			sb.append(",Tarifs=" + Tarifs);
			sb.append(",Montant_total=" + Montant_total);
			sb.append(",Parent__Produit_existant=" + Parent__Produit_existant);
			sb.append(",Produit_existant=" + Produit_existant);
			sb.append(",Operation=" + Operation);
			sb.append(",Type_d_operation=" + Type_d_operation);
			sb.append(",Prix_unitaire=" + Prix_unitaire);
			sb.append(",Quantite=" + String.valueOf(Quantite));
			sb.append(",Remise=" + Remise);
			sb.append(",Montant_de_la_remise_manuelle=" + Montant_de_la_remise_manuelle);
			sb.append(",Total_final=" + Total_final);
			sb.append(",Mois_et_annee_de_modification=" + Mois_et_annee_de_modification);
			sb.append(",Modifie_le=" + String.valueOf(Modifie_le));
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row62Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class after_tFileInputExcel_10Struct
			implements routines.system.IPersistableRow<after_tFileInputExcel_10Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Client_Prospect;

		public String getClient_Prospect() {
			return this.Client_Prospect;
		}

		public String Sujet;

		public String getSujet() {
			return this.Sujet;
		}

		public String Acces;

		public String getAcces() {
			return this.Acces;
		}

		public String Type_d_acces;

		public String getType_d_acces() {
			return this.Type_d_acces;
		}

		public String Account_Manager__Client_Prospect;

		public String getAccount_Manager__Client_Prospect() {
			return this.Account_Manager__Client_Prospect;
		}

		public String Cree_le;

		public String getCree_le() {
			return this.Cree_le;
		}

		public String Mois_et_annee_de_creation;

		public String getMois_et_annee_de_creation() {
			return this.Mois_et_annee_de_creation;
		}

		public String Cree_par;

		public String getCree_par() {
			return this.Cree_par;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public String Proprietaire;

		public String getProprietaire() {
			return this.Proprietaire;
		}

		public String Phase_de_l_opportunite;

		public String getPhase_de_l_opportunite() {
			return this.Phase_de_l_opportunite;
		}

		public Integer Valeur_ordering;

		public Integer getValeur_ordering() {
			return this.Valeur_ordering;
		}

		public String Statut;

		public String getStatut() {
			return this.Statut;
		}

		public String Staut_Final;

		public String getStaut_Final() {
			return this.Staut_Final;
		}

		public String Tarifs;

		public String getTarifs() {
			return this.Tarifs;
		}

		public String Montant_total;

		public String getMontant_total() {
			return this.Montant_total;
		}

		public String Parent__Produit_existant;

		public String getParent__Produit_existant() {
			return this.Parent__Produit_existant;
		}

		public String Produit_existant;

		public String getProduit_existant() {
			return this.Produit_existant;
		}

		public String Operation;

		public String getOperation() {
			return this.Operation;
		}

		public String Type_d_operation;

		public String getType_d_operation() {
			return this.Type_d_operation;
		}

		public String Prix_unitaire;

		public String getPrix_unitaire() {
			return this.Prix_unitaire;
		}

		public Integer Quantite;

		public Integer getQuantite() {
			return this.Quantite;
		}

		public String Remise;

		public String getRemise() {
			return this.Remise;
		}

		public String Montant_de_la_remise_manuelle;

		public String getMontant_de_la_remise_manuelle() {
			return this.Montant_de_la_remise_manuelle;
		}

		public String Total_final;

		public String getTotal_final() {
			return this.Total_final;
		}

		public String Mois_et_annee_de_modification;

		public String getMois_et_annee_de_modification() {
			return this.Mois_et_annee_de_modification;
		}

		public java.util.Date Modifie_le;

		public java.util.Date getModifie_le() {
			return this.Modifie_le;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		private java.util.Date readDate(ObjectInputStream dis) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(dis.readLong());
			}
			return dateReturn;
		}

		private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(unmarshaller.readLong());
			}
			return dateReturn;
		}

		private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException {
			if (date1 == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeLong(date1.getTime());
			}
		}

		private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (date1 == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeLong(date1.getTime());
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

					this.Sujet = readString(dis);

					this.Acces = readString(dis);

					this.Type_d_acces = readString(dis);

					this.Account_Manager__Client_Prospect = readString(dis);

					this.Cree_le = readString(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Proprietaire = readString(dis);

					this.Phase_de_l_opportunite = readString(dis);

					this.Valeur_ordering = readInteger(dis);

					this.Statut = readString(dis);

					this.Staut_Final = readString(dis);

					this.Tarifs = readString(dis);

					this.Montant_total = readString(dis);

					this.Parent__Produit_existant = readString(dis);

					this.Produit_existant = readString(dis);

					this.Operation = readString(dis);

					this.Type_d_operation = readString(dis);

					this.Prix_unitaire = readString(dis);

					this.Quantite = readInteger(dis);

					this.Remise = readString(dis);

					this.Montant_de_la_remise_manuelle = readString(dis);

					this.Total_final = readString(dis);

					this.Mois_et_annee_de_modification = readString(dis);

					this.Modifie_le = readDate(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

					this.Sujet = readString(dis);

					this.Acces = readString(dis);

					this.Type_d_acces = readString(dis);

					this.Account_Manager__Client_Prospect = readString(dis);

					this.Cree_le = readString(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Proprietaire = readString(dis);

					this.Phase_de_l_opportunite = readString(dis);

					this.Valeur_ordering = readInteger(dis);

					this.Statut = readString(dis);

					this.Staut_Final = readString(dis);

					this.Tarifs = readString(dis);

					this.Montant_total = readString(dis);

					this.Parent__Produit_existant = readString(dis);

					this.Produit_existant = readString(dis);

					this.Operation = readString(dis);

					this.Type_d_operation = readString(dis);

					this.Prix_unitaire = readString(dis);

					this.Quantite = readInteger(dis);

					this.Remise = readString(dis);

					this.Montant_de_la_remise_manuelle = readString(dis);

					this.Total_final = readString(dis);

					this.Mois_et_annee_de_modification = readString(dis);

					this.Modifie_le = readDate(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Acces, dos);

				// String

				writeString(this.Type_d_acces, dos);

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

				// String

				writeString(this.Cree_le, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Proprietaire, dos);

				// String

				writeString(this.Phase_de_l_opportunite, dos);

				// Integer

				writeInteger(this.Valeur_ordering, dos);

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Tarifs, dos);

				// String

				writeString(this.Montant_total, dos);

				// String

				writeString(this.Parent__Produit_existant, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Operation, dos);

				// String

				writeString(this.Type_d_operation, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// Integer

				writeInteger(this.Quantite, dos);

				// String

				writeString(this.Remise, dos);

				// String

				writeString(this.Montant_de_la_remise_manuelle, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Mois_et_annee_de_modification, dos);

				// java.util.Date

				writeDate(this.Modifie_le, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Acces, dos);

				// String

				writeString(this.Type_d_acces, dos);

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

				// String

				writeString(this.Cree_le, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Proprietaire, dos);

				// String

				writeString(this.Phase_de_l_opportunite, dos);

				// Integer

				writeInteger(this.Valeur_ordering, dos);

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Tarifs, dos);

				// String

				writeString(this.Montant_total, dos);

				// String

				writeString(this.Parent__Produit_existant, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Operation, dos);

				// String

				writeString(this.Type_d_operation, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// Integer

				writeInteger(this.Quantite, dos);

				// String

				writeString(this.Remise, dos);

				// String

				writeString(this.Montant_de_la_remise_manuelle, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Mois_et_annee_de_modification, dos);

				// java.util.Date

				writeDate(this.Modifie_le, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Client_Prospect=" + Client_Prospect);
			sb.append(",Sujet=" + Sujet);
			sb.append(",Acces=" + Acces);
			sb.append(",Type_d_acces=" + Type_d_acces);
			sb.append(",Account_Manager__Client_Prospect=" + Account_Manager__Client_Prospect);
			sb.append(",Cree_le=" + Cree_le);
			sb.append(",Mois_et_annee_de_creation=" + Mois_et_annee_de_creation);
			sb.append(",Cree_par=" + Cree_par);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Proprietaire=" + Proprietaire);
			sb.append(",Phase_de_l_opportunite=" + Phase_de_l_opportunite);
			sb.append(",Valeur_ordering=" + String.valueOf(Valeur_ordering));
			sb.append(",Statut=" + Statut);
			sb.append(",Staut_Final=" + Staut_Final);
			sb.append(",Tarifs=" + Tarifs);
			sb.append(",Montant_total=" + Montant_total);
			sb.append(",Parent__Produit_existant=" + Parent__Produit_existant);
			sb.append(",Produit_existant=" + Produit_existant);
			sb.append(",Operation=" + Operation);
			sb.append(",Type_d_operation=" + Type_d_operation);
			sb.append(",Prix_unitaire=" + Prix_unitaire);
			sb.append(",Quantite=" + String.valueOf(Quantite));
			sb.append(",Remise=" + Remise);
			sb.append(",Montant_de_la_remise_manuelle=" + Montant_de_la_remise_manuelle);
			sb.append(",Total_final=" + Total_final);
			sb.append(",Mois_et_annee_de_modification=" + Mois_et_annee_de_modification);
			sb.append(",Modifie_le=" + String.valueOf(Modifie_le));
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(after_tFileInputExcel_10Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tFileInputExcel_10Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tFileInputExcel_10_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				tDBInput_18Process(globalMap);

				row62Struct row62 = new row62Struct();
				Dim_type_d_acces_dataStruct Dim_type_d_acces_data = new Dim_type_d_acces_dataStruct();
				xStruct x = new xStruct();
				row75Struct row75 = new row75Struct();

				/**
				 * [tDBOutput_18 begin ] start
				 */

				ok_Hash.put("tDBOutput_18", false);
				start_Hash.put("tDBOutput_18", System.currentTimeMillis());

				currentComponent = "tDBOutput_18";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row75");
				}

				int tos_count_tDBOutput_18 = 0;

				int nb_line_tDBOutput_18 = 0;
				int nb_line_update_tDBOutput_18 = 0;
				int nb_line_inserted_tDBOutput_18 = 0;
				int nb_line_deleted_tDBOutput_18 = 0;
				int nb_line_rejected_tDBOutput_18 = 0;

				int deletedCount_tDBOutput_18 = 0;
				int updatedCount_tDBOutput_18 = 0;
				int insertedCount_tDBOutput_18 = 0;
				int rowsToCommitCount_tDBOutput_18 = 0;
				int rejectedCount_tDBOutput_18 = 0;
				String dbschema_tDBOutput_18 = null;
				String tableName_tDBOutput_18 = null;
				boolean whetherReject_tDBOutput_18 = false;

				java.util.Calendar calendar_tDBOutput_18 = java.util.Calendar.getInstance();
				long year1_tDBOutput_18 = TalendDate.parseDate("yyyy-MM-dd", "0001-01-01").getTime();
				long year2_tDBOutput_18 = TalendDate.parseDate("yyyy-MM-dd", "1753-01-01").getTime();
				long year10000_tDBOutput_18 = TalendDate.parseDate("yyyy-MM-dd HH:mm:ss", "9999-12-31 24:00:00")
						.getTime();
				long date_tDBOutput_18;

				java.util.Calendar calendar_datetimeoffset_tDBOutput_18 = java.util.Calendar
						.getInstance(java.util.TimeZone.getTimeZone("UTC"));

				java.sql.Connection conn_tDBOutput_18 = null;
				String dbUser_tDBOutput_18 = null;
				dbschema_tDBOutput_18 = "dbo";
				String driverClass_tDBOutput_18 = "net.sourceforge.jtds.jdbc.Driver";

				java.lang.Class.forName(driverClass_tDBOutput_18);
				String port_tDBOutput_18 = "1433";
				String dbname_tDBOutput_18 = "orange_DW__";
				String url_tDBOutput_18 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBOutput_18)) {
					url_tDBOutput_18 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBOutput_18)) {
					url_tDBOutput_18 += "//" + "orange_DW__";

				}
				url_tDBOutput_18 += ";appName=" + projectName + ";" + "";
				dbUser_tDBOutput_18 = "sa";

				final String decryptedPassword_tDBOutput_18 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:z4eKoXOnpijoUXl/KzNhybx855sKpLyilZApdF/E7lIlFrVtBZU=");

				String dbPwd_tDBOutput_18 = decryptedPassword_tDBOutput_18;
				conn_tDBOutput_18 = java.sql.DriverManager.getConnection(url_tDBOutput_18, dbUser_tDBOutput_18,
						dbPwd_tDBOutput_18);

				resourceMap.put("conn_tDBOutput_18", conn_tDBOutput_18);

				conn_tDBOutput_18.setAutoCommit(false);
				int commitEvery_tDBOutput_18 = 10000;
				int commitCounter_tDBOutput_18 = 0;

				int batchSize_tDBOutput_18 = 10000;
				int batchSizeCounter_tDBOutput_18 = 0;

				if (dbschema_tDBOutput_18 == null || dbschema_tDBOutput_18.trim().length() == 0) {
					tableName_tDBOutput_18 = "Dim_type_acces";
				} else {
					tableName_tDBOutput_18 = dbschema_tDBOutput_18 + "].[" + "Dim_type_acces";
				}
				int count_tDBOutput_18 = 0;

				String insert_tDBOutput_18 = "INSERT INTO [" + tableName_tDBOutput_18 + "] ([Type_d_acces]) VALUES (?)";
				java.sql.PreparedStatement pstmt_tDBOutput_18 = conn_tDBOutput_18.prepareStatement(insert_tDBOutput_18);
				resourceMap.put("pstmt_tDBOutput_18", pstmt_tDBOutput_18);

				/**
				 * [tDBOutput_18 begin ] stop
				 */

				/**
				 * [tUniqRow_17 begin ] start
				 */

				ok_Hash.put("tUniqRow_17", false);
				start_Hash.put("tUniqRow_17", System.currentTimeMillis());

				currentComponent = "tUniqRow_17";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "x");
				}

				int tos_count_tUniqRow_17 = 0;

				class KeyStruct_tUniqRow_17 {

					private static final int DEFAULT_HASHCODE = 1;
					private static final int PRIME = 31;
					private int hashCode = DEFAULT_HASHCODE;
					public boolean hashCodeDirty = true;

					String Type_d_acces;

					@Override
					public int hashCode() {
						if (this.hashCodeDirty) {
							final int prime = PRIME;
							int result = DEFAULT_HASHCODE;

							result = prime * result + ((this.Type_d_acces == null) ? 0 : this.Type_d_acces.hashCode());

							this.hashCode = result;
							this.hashCodeDirty = false;
						}
						return this.hashCode;
					}

					@Override
					public boolean equals(Object obj) {
						if (this == obj)
							return true;
						if (obj == null)
							return false;
						if (getClass() != obj.getClass())
							return false;
						final KeyStruct_tUniqRow_17 other = (KeyStruct_tUniqRow_17) obj;

						if (this.Type_d_acces == null) {
							if (other.Type_d_acces != null)
								return false;

						} else if (!this.Type_d_acces.equals(other.Type_d_acces))

							return false;

						return true;
					}

				}

				int nb_uniques_tUniqRow_17 = 0;
				int nb_duplicates_tUniqRow_17 = 0;
				KeyStruct_tUniqRow_17 finder_tUniqRow_17 = new KeyStruct_tUniqRow_17();
				java.util.Set<KeyStruct_tUniqRow_17> keystUniqRow_17 = new java.util.HashSet<KeyStruct_tUniqRow_17>();

				/**
				 * [tUniqRow_17 begin ] stop
				 */

				/**
				 * [tMap_52 begin ] start
				 */

				ok_Hash.put("tMap_52", false);
				start_Hash.put("tMap_52", System.currentTimeMillis());

				currentComponent = "tMap_52";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "Dim_type_d_acces_data");
				}

				int tos_count_tMap_52 = 0;

// ###############################
// # Lookup's keys initialization

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row74Struct> tHash_Lookup_row74 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row74Struct>) ((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row74Struct>) globalMap
						.get("tHash_Lookup_row74"));

				row74Struct row74HashKey = new row74Struct();
				row74Struct row74Default = new row74Struct();
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_52__Struct {
				}
				Var__tMap_52__Struct Var__tMap_52 = new Var__tMap_52__Struct();
// ###############################

// ###############################
// # Outputs initialization
				xStruct x_tmp = new xStruct();
// ###############################

				/**
				 * [tMap_52 begin ] stop
				 */

				/**
				 * [tMap_51 begin ] start
				 */

				ok_Hash.put("tMap_51", false);
				start_Hash.put("tMap_51", System.currentTimeMillis());

				currentComponent = "tMap_51";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row62");
				}

				int tos_count_tMap_51 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_51__Struct {
				}
				Var__tMap_51__Struct Var__tMap_51 = new Var__tMap_51__Struct();
// ###############################

// ###############################
// # Outputs initialization
				Dim_type_d_acces_dataStruct Dim_type_d_acces_data_tmp = new Dim_type_d_acces_dataStruct();
// ###############################

				/**
				 * [tMap_51 begin ] stop
				 */

				/**
				 * [tFileInputExcel_10 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_10", false);
				start_Hash.put("tFileInputExcel_10", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_10";

				int tos_count_tFileInputExcel_10 = 0;

				final String decryptedPassword_tFileInputExcel_10 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:hj1xoqR/ROej8dq8Cb6Cn2bupgbryvIyLDJN0w==");
				String password_tFileInputExcel_10 = decryptedPassword_tFileInputExcel_10;
				if (password_tFileInputExcel_10.isEmpty()) {
					password_tFileInputExcel_10 = null;
				}
				class RegexUtil_tFileInputExcel_10 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_10 regexUtil_tFileInputExcel_10 = new RegexUtil_tFileInputExcel_10();

				Object source_tFileInputExcel_10 = "C:/Users/DELL/Downloads/Copie de Rapport Pipe et realisations DME Data et VoIP (2).xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_10 = null;

				if (source_tFileInputExcel_10 instanceof String) {
					workbook_tFileInputExcel_10 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_10), password_tFileInputExcel_10,
									true);
				} else if (source_tFileInputExcel_10 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_10 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_10, password_tFileInputExcel_10);
				} else {
					workbook_tFileInputExcel_10 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_10 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_10.addAll(
							regexUtil_tFileInputExcel_10.getSheets(workbook_tFileInputExcel_10, "Source", false));
					if (sheetList_tFileInputExcel_10.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_10 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_10 : sheetList_tFileInputExcel_10) {
						if (sheet_FilterNull_tFileInputExcel_10 != null
								&& sheetList_FilterNull_tFileInputExcel_10.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_10.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_10.add(sheet_FilterNull_tFileInputExcel_10);
						}
					}
					sheetList_tFileInputExcel_10 = sheetList_FilterNull_tFileInputExcel_10;
					if (sheetList_tFileInputExcel_10.size() > 0) {
						int nb_line_tFileInputExcel_10 = 0;

						int begin_line_tFileInputExcel_10 = 1;

						int footer_input_tFileInputExcel_10 = 0;

						int end_line_tFileInputExcel_10 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_10 : sheetList_tFileInputExcel_10) {
							end_line_tFileInputExcel_10 += (sheet_tFileInputExcel_10.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_10 -= footer_input_tFileInputExcel_10;
						int limit_tFileInputExcel_10 = -1;
						int start_column_tFileInputExcel_10 = 1 - 1;
						int end_column_tFileInputExcel_10 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_10 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_10 = sheetList_tFileInputExcel_10
								.get(0);
						int rowCount_tFileInputExcel_10 = 0;
						int sheetIndex_tFileInputExcel_10 = 0;
						int currentRows_tFileInputExcel_10 = (sheetList_tFileInputExcel_10.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_10 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_10 = df_tFileInputExcel_10.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_10 = begin_line_tFileInputExcel_10; i_tFileInputExcel_10 < end_line_tFileInputExcel_10; i_tFileInputExcel_10++) {

							int emptyColumnCount_tFileInputExcel_10 = 0;

							if (limit_tFileInputExcel_10 != -1
									&& nb_line_tFileInputExcel_10 >= limit_tFileInputExcel_10) {
								break;
							}

							while (i_tFileInputExcel_10 >= rowCount_tFileInputExcel_10
									+ currentRows_tFileInputExcel_10) {
								rowCount_tFileInputExcel_10 += currentRows_tFileInputExcel_10;
								sheet_tFileInputExcel_10 = sheetList_tFileInputExcel_10
										.get(++sheetIndex_tFileInputExcel_10);
								currentRows_tFileInputExcel_10 = (sheet_tFileInputExcel_10.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_10_CURRENT_SHEET", sheet_tFileInputExcel_10.getSheetName());
							if (rowCount_tFileInputExcel_10 <= i_tFileInputExcel_10) {
								row_tFileInputExcel_10 = sheet_tFileInputExcel_10
										.getRow(i_tFileInputExcel_10 - rowCount_tFileInputExcel_10);
							}
							row62 = null;
							int tempRowLength_tFileInputExcel_10 = 27;

							int columnIndex_tFileInputExcel_10 = 0;

							String[] temp_row_tFileInputExcel_10 = new String[tempRowLength_tFileInputExcel_10];
							int excel_end_column_tFileInputExcel_10;
							if (row_tFileInputExcel_10 == null) {
								excel_end_column_tFileInputExcel_10 = 0;
							} else {
								excel_end_column_tFileInputExcel_10 = row_tFileInputExcel_10.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_10;
							if (end_column_tFileInputExcel_10 == -1) {
								actual_end_column_tFileInputExcel_10 = excel_end_column_tFileInputExcel_10;
							} else {
								actual_end_column_tFileInputExcel_10 = end_column_tFileInputExcel_10 > excel_end_column_tFileInputExcel_10
										? excel_end_column_tFileInputExcel_10
										: end_column_tFileInputExcel_10;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_10 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_10; i++) {
								if (i + start_column_tFileInputExcel_10 < actual_end_column_tFileInputExcel_10) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_10 = row_tFileInputExcel_10
											.getCell(i + start_column_tFileInputExcel_10);
									if (cell_tFileInputExcel_10 != null) {
										switch (cell_tFileInputExcel_10.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_10[i] = cell_tFileInputExcel_10
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_10)) {
												temp_row_tFileInputExcel_10[i] = cell_tFileInputExcel_10
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_10[i] = df_tFileInputExcel_10
														.format(cell_tFileInputExcel_10.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_10[i] = String
													.valueOf(cell_tFileInputExcel_10.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_10.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_10[i] = cell_tFileInputExcel_10
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_10)) {
													temp_row_tFileInputExcel_10[i] = cell_tFileInputExcel_10
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_10 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_10.getNumericCellValue());
													temp_row_tFileInputExcel_10[i] = ne_tFileInputExcel_10
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_10[i] = String
														.valueOf(cell_tFileInputExcel_10.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_10[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_10[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_10[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_10[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_10 = false;
							row62 = new row62Struct();
							int curColNum_tFileInputExcel_10 = -1;
							String curColName_tFileInputExcel_10 = "";
							try {
								columnIndex_tFileInputExcel_10 = 0;

								if (temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10].length() > 0) {
									curColNum_tFileInputExcel_10 = columnIndex_tFileInputExcel_10
											+ start_column_tFileInputExcel_10 + 1;
									curColName_tFileInputExcel_10 = "Client_Prospect";

									row62.Client_Prospect = temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10];
								} else {
									row62.Client_Prospect = null;
									emptyColumnCount_tFileInputExcel_10++;
								}
								columnIndex_tFileInputExcel_10 = 1;

								if (temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10].length() > 0) {
									curColNum_tFileInputExcel_10 = columnIndex_tFileInputExcel_10
											+ start_column_tFileInputExcel_10 + 1;
									curColName_tFileInputExcel_10 = "Sujet";

									row62.Sujet = temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10];
								} else {
									row62.Sujet = null;
									emptyColumnCount_tFileInputExcel_10++;
								}
								columnIndex_tFileInputExcel_10 = 2;

								if (temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10].length() > 0) {
									curColNum_tFileInputExcel_10 = columnIndex_tFileInputExcel_10
											+ start_column_tFileInputExcel_10 + 1;
									curColName_tFileInputExcel_10 = "Acces";

									row62.Acces = temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10];
								} else {
									row62.Acces = null;
									emptyColumnCount_tFileInputExcel_10++;
								}
								columnIndex_tFileInputExcel_10 = 3;

								if (temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10].length() > 0) {
									curColNum_tFileInputExcel_10 = columnIndex_tFileInputExcel_10
											+ start_column_tFileInputExcel_10 + 1;
									curColName_tFileInputExcel_10 = "Type_d_acces";

									row62.Type_d_acces = temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10];
								} else {
									row62.Type_d_acces = null;
									emptyColumnCount_tFileInputExcel_10++;
								}
								columnIndex_tFileInputExcel_10 = 4;

								if (temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10].length() > 0) {
									curColNum_tFileInputExcel_10 = columnIndex_tFileInputExcel_10
											+ start_column_tFileInputExcel_10 + 1;
									curColName_tFileInputExcel_10 = "Account_Manager__Client_Prospect";

									row62.Account_Manager__Client_Prospect = temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10];
								} else {
									row62.Account_Manager__Client_Prospect = null;
									emptyColumnCount_tFileInputExcel_10++;
								}
								columnIndex_tFileInputExcel_10 = 5;

								if (temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10].length() > 0) {
									curColNum_tFileInputExcel_10 = columnIndex_tFileInputExcel_10
											+ start_column_tFileInputExcel_10 + 1;
									curColName_tFileInputExcel_10 = "Cree_le";

									row62.Cree_le = temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10];
								} else {
									row62.Cree_le = null;
									emptyColumnCount_tFileInputExcel_10++;
								}
								columnIndex_tFileInputExcel_10 = 6;

								if (temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10].length() > 0) {
									curColNum_tFileInputExcel_10 = columnIndex_tFileInputExcel_10
											+ start_column_tFileInputExcel_10 + 1;
									curColName_tFileInputExcel_10 = "Mois_et_annee_de_creation";

									row62.Mois_et_annee_de_creation = temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10];
								} else {
									row62.Mois_et_annee_de_creation = null;
									emptyColumnCount_tFileInputExcel_10++;
								}
								columnIndex_tFileInputExcel_10 = 7;

								if (temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10].length() > 0) {
									curColNum_tFileInputExcel_10 = columnIndex_tFileInputExcel_10
											+ start_column_tFileInputExcel_10 + 1;
									curColName_tFileInputExcel_10 = "Cree_par";

									row62.Cree_par = temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10];
								} else {
									row62.Cree_par = null;
									emptyColumnCount_tFileInputExcel_10++;
								}
								columnIndex_tFileInputExcel_10 = 8;

								if (temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10].length() > 0) {
									curColNum_tFileInputExcel_10 = columnIndex_tFileInputExcel_10
											+ start_column_tFileInputExcel_10 + 1;
									curColName_tFileInputExcel_10 = "Equipe";

									row62.Equipe = temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10];
								} else {
									row62.Equipe = null;
									emptyColumnCount_tFileInputExcel_10++;
								}
								columnIndex_tFileInputExcel_10 = 9;

								if (temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10].length() > 0) {
									curColNum_tFileInputExcel_10 = columnIndex_tFileInputExcel_10
											+ start_column_tFileInputExcel_10 + 1;
									curColName_tFileInputExcel_10 = "Proprietaire";

									row62.Proprietaire = temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10];
								} else {
									row62.Proprietaire = null;
									emptyColumnCount_tFileInputExcel_10++;
								}
								columnIndex_tFileInputExcel_10 = 10;

								if (temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10].length() > 0) {
									curColNum_tFileInputExcel_10 = columnIndex_tFileInputExcel_10
											+ start_column_tFileInputExcel_10 + 1;
									curColName_tFileInputExcel_10 = "Phase_de_l_opportunite";

									row62.Phase_de_l_opportunite = temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10];
								} else {
									row62.Phase_de_l_opportunite = null;
									emptyColumnCount_tFileInputExcel_10++;
								}
								columnIndex_tFileInputExcel_10 = 11;

								if (temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10].length() > 0) {
									curColNum_tFileInputExcel_10 = columnIndex_tFileInputExcel_10
											+ start_column_tFileInputExcel_10 + 1;
									curColName_tFileInputExcel_10 = "Valeur_ordering";

									row62.Valeur_ordering = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10], null,
											'.' == decimalChar_tFileInputExcel_10 ? null
													: decimalChar_tFileInputExcel_10));
								} else {
									row62.Valeur_ordering = null;
									emptyColumnCount_tFileInputExcel_10++;
								}
								columnIndex_tFileInputExcel_10 = 12;

								if (temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10].length() > 0) {
									curColNum_tFileInputExcel_10 = columnIndex_tFileInputExcel_10
											+ start_column_tFileInputExcel_10 + 1;
									curColName_tFileInputExcel_10 = "Statut";

									row62.Statut = temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10];
								} else {
									row62.Statut = null;
									emptyColumnCount_tFileInputExcel_10++;
								}
								columnIndex_tFileInputExcel_10 = 13;

								if (temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10].length() > 0) {
									curColNum_tFileInputExcel_10 = columnIndex_tFileInputExcel_10
											+ start_column_tFileInputExcel_10 + 1;
									curColName_tFileInputExcel_10 = "Staut_Final";

									row62.Staut_Final = temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10];
								} else {
									row62.Staut_Final = null;
									emptyColumnCount_tFileInputExcel_10++;
								}
								columnIndex_tFileInputExcel_10 = 14;

								if (temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10].length() > 0) {
									curColNum_tFileInputExcel_10 = columnIndex_tFileInputExcel_10
											+ start_column_tFileInputExcel_10 + 1;
									curColName_tFileInputExcel_10 = "Tarifs";

									row62.Tarifs = temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10];
								} else {
									row62.Tarifs = null;
									emptyColumnCount_tFileInputExcel_10++;
								}
								columnIndex_tFileInputExcel_10 = 15;

								if (temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10].length() > 0) {
									curColNum_tFileInputExcel_10 = columnIndex_tFileInputExcel_10
											+ start_column_tFileInputExcel_10 + 1;
									curColName_tFileInputExcel_10 = "Montant_total";

									row62.Montant_total = temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10];
								} else {
									row62.Montant_total = null;
									emptyColumnCount_tFileInputExcel_10++;
								}
								columnIndex_tFileInputExcel_10 = 16;

								if (temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10].length() > 0) {
									curColNum_tFileInputExcel_10 = columnIndex_tFileInputExcel_10
											+ start_column_tFileInputExcel_10 + 1;
									curColName_tFileInputExcel_10 = "Parent__Produit_existant";

									row62.Parent__Produit_existant = temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10];
								} else {
									row62.Parent__Produit_existant = null;
									emptyColumnCount_tFileInputExcel_10++;
								}
								columnIndex_tFileInputExcel_10 = 17;

								if (temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10].length() > 0) {
									curColNum_tFileInputExcel_10 = columnIndex_tFileInputExcel_10
											+ start_column_tFileInputExcel_10 + 1;
									curColName_tFileInputExcel_10 = "Produit_existant";

									row62.Produit_existant = temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10];
								} else {
									row62.Produit_existant = null;
									emptyColumnCount_tFileInputExcel_10++;
								}
								columnIndex_tFileInputExcel_10 = 18;

								if (temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10].length() > 0) {
									curColNum_tFileInputExcel_10 = columnIndex_tFileInputExcel_10
											+ start_column_tFileInputExcel_10 + 1;
									curColName_tFileInputExcel_10 = "Operation";

									row62.Operation = temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10];
								} else {
									row62.Operation = null;
									emptyColumnCount_tFileInputExcel_10++;
								}
								columnIndex_tFileInputExcel_10 = 19;

								if (temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10].length() > 0) {
									curColNum_tFileInputExcel_10 = columnIndex_tFileInputExcel_10
											+ start_column_tFileInputExcel_10 + 1;
									curColName_tFileInputExcel_10 = "Type_d_operation";

									row62.Type_d_operation = temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10];
								} else {
									row62.Type_d_operation = null;
									emptyColumnCount_tFileInputExcel_10++;
								}
								columnIndex_tFileInputExcel_10 = 20;

								if (temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10].length() > 0) {
									curColNum_tFileInputExcel_10 = columnIndex_tFileInputExcel_10
											+ start_column_tFileInputExcel_10 + 1;
									curColName_tFileInputExcel_10 = "Prix_unitaire";

									row62.Prix_unitaire = temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10];
								} else {
									row62.Prix_unitaire = null;
									emptyColumnCount_tFileInputExcel_10++;
								}
								columnIndex_tFileInputExcel_10 = 21;

								if (temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10].length() > 0) {
									curColNum_tFileInputExcel_10 = columnIndex_tFileInputExcel_10
											+ start_column_tFileInputExcel_10 + 1;
									curColName_tFileInputExcel_10 = "Quantite";

									row62.Quantite = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10], null,
											'.' == decimalChar_tFileInputExcel_10 ? null
													: decimalChar_tFileInputExcel_10));
								} else {
									row62.Quantite = null;
									emptyColumnCount_tFileInputExcel_10++;
								}
								columnIndex_tFileInputExcel_10 = 22;

								if (temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10].length() > 0) {
									curColNum_tFileInputExcel_10 = columnIndex_tFileInputExcel_10
											+ start_column_tFileInputExcel_10 + 1;
									curColName_tFileInputExcel_10 = "Remise";

									row62.Remise = temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10];
								} else {
									row62.Remise = null;
									emptyColumnCount_tFileInputExcel_10++;
								}
								columnIndex_tFileInputExcel_10 = 23;

								if (temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10].length() > 0) {
									curColNum_tFileInputExcel_10 = columnIndex_tFileInputExcel_10
											+ start_column_tFileInputExcel_10 + 1;
									curColName_tFileInputExcel_10 = "Montant_de_la_remise_manuelle";

									row62.Montant_de_la_remise_manuelle = temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10];
								} else {
									row62.Montant_de_la_remise_manuelle = null;
									emptyColumnCount_tFileInputExcel_10++;
								}
								columnIndex_tFileInputExcel_10 = 24;

								if (temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10].length() > 0) {
									curColNum_tFileInputExcel_10 = columnIndex_tFileInputExcel_10
											+ start_column_tFileInputExcel_10 + 1;
									curColName_tFileInputExcel_10 = "Total_final";

									row62.Total_final = temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10];
								} else {
									row62.Total_final = null;
									emptyColumnCount_tFileInputExcel_10++;
								}
								columnIndex_tFileInputExcel_10 = 25;

								if (temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10].length() > 0) {
									curColNum_tFileInputExcel_10 = columnIndex_tFileInputExcel_10
											+ start_column_tFileInputExcel_10 + 1;
									curColName_tFileInputExcel_10 = "Mois_et_annee_de_modification";

									row62.Mois_et_annee_de_modification = temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10];
								} else {
									row62.Mois_et_annee_de_modification = null;
									emptyColumnCount_tFileInputExcel_10++;
								}
								columnIndex_tFileInputExcel_10 = 26;

								if (temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10].length() > 0) {
									curColNum_tFileInputExcel_10 = columnIndex_tFileInputExcel_10
											+ start_column_tFileInputExcel_10 + 1;
									curColName_tFileInputExcel_10 = "Modifie_le";

									if (26 < actual_end_column_tFileInputExcel_10) {
										try {
											if (row_tFileInputExcel_10
													.getCell(columnIndex_tFileInputExcel_10
															+ start_column_tFileInputExcel_10)
													.getCellType() == org.apache.poi.ss.usermodel.CellType.NUMERIC
													&& org.apache.poi.ss.usermodel.DateUtil
															.isCellDateFormatted(row_tFileInputExcel_10
																	.getCell(columnIndex_tFileInputExcel_10
																			+ start_column_tFileInputExcel_10))) {
												row62.Modifie_le = row_tFileInputExcel_10
														.getCell(columnIndex_tFileInputExcel_10
																+ start_column_tFileInputExcel_10)
														.getDateCellValue();
											} else {
												java.util.Date tempDate_tFileInputExcel_10 = ParserUtils.parseTo_Date(
														temp_row_tFileInputExcel_10[columnIndex_tFileInputExcel_10],
														"dd-MM-yyyy");
												if (tempDate_tFileInputExcel_10
														.after((new SimpleDateFormat("yyyy/MM/dd hh:mm:ss.SSS"))
																.parse("9999/12/31 23:59:59.999"))
														|| tempDate_tFileInputExcel_10
																.before((new SimpleDateFormat("yyyy/MM/dd"))
																		.parse("1900/01/01"))) {
													throw new RuntimeException("The cell format is not Date in ( Row. "
															+ (nb_line_tFileInputExcel_10 + 1) + " and ColumnNum. "
															+ curColNum_tFileInputExcel_10 + " )");
												} else {
													row62.Modifie_le = tempDate_tFileInputExcel_10;
												}
											}
										} catch (java.lang.Exception e) {
											globalMap.put("tFileInputExcel_10_ERROR_MESSAGE", e.getMessage());

											throw new RuntimeException("The cell format is not Date in ( Row. "
													+ (nb_line_tFileInputExcel_10 + 1) + " and ColumnNum. "
													+ curColNum_tFileInputExcel_10 + " )");
										}
									}

								} else {
									row62.Modifie_le = null;
									emptyColumnCount_tFileInputExcel_10++;
								}

								nb_line_tFileInputExcel_10++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_10_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_10 = true;
								System.err.println(e.getMessage());
								row62 = null;
							}

							/**
							 * [tFileInputExcel_10 begin ] stop
							 */

							/**
							 * [tFileInputExcel_10 main ] start
							 */

							currentComponent = "tFileInputExcel_10";

							tos_count_tFileInputExcel_10++;

							/**
							 * [tFileInputExcel_10 main ] stop
							 */

							/**
							 * [tFileInputExcel_10 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_10";

							/**
							 * [tFileInputExcel_10 process_data_begin ] stop
							 */
// Start of branch "row62"
							if (row62 != null) {

								/**
								 * [tMap_51 main ] start
								 */

								currentComponent = "tMap_51";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row62"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_51 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_51 = false;
								boolean mainRowRejected_tMap_51 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_51__Struct Var = Var__tMap_51;// ###############################
									// ###############################
									// # Output tables

									Dim_type_d_acces_data = null;

// # Output table : 'Dim_type_d_acces_data'
									Dim_type_d_acces_data_tmp.Type_d_operation = row62.Type_d_acces;
									Dim_type_d_acces_data = Dim_type_d_acces_data_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_51 = false;

								tos_count_tMap_51++;

								/**
								 * [tMap_51 main ] stop
								 */

								/**
								 * [tMap_51 process_data_begin ] start
								 */

								currentComponent = "tMap_51";

								/**
								 * [tMap_51 process_data_begin ] stop
								 */
// Start of branch "Dim_type_d_acces_data"
								if (Dim_type_d_acces_data != null) {

									/**
									 * [tMap_52 main ] start
									 */

									currentComponent = "tMap_52";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "Dim_type_d_acces_data"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_52 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_52 = false;
									boolean mainRowRejected_tMap_52 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row74"
									///////////////////////////////////////////////

									boolean forceLooprow74 = false;

									row74Struct row74ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_52) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_52 = false;

										row74HashKey.Type_d_acces = Dim_type_d_acces_data.Type_d_operation;

										row74HashKey.hashCodeDirty = true;

										tHash_Lookup_row74.lookup(row74HashKey);

										if (!tHash_Lookup_row74.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_52 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row74 != null && tHash_Lookup_row74.getCount(row74HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row74' and it contains more one result from keys : row74.Type_d_acces = '" +
										// row74HashKey.Type_d_acces + "'");
									} // G 071

									row74Struct row74 = null;

									row74Struct fromLookup_row74 = null;
									row74 = row74Default;

									if (tHash_Lookup_row74 != null && tHash_Lookup_row74.hasNext()) { // G 099

										fromLookup_row74 = tHash_Lookup_row74.next();

									} // G 099

									if (fromLookup_row74 != null) {
										row74 = fromLookup_row74;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_52__Struct Var = Var__tMap_52;// ###############################
										// ###############################
										// # Output tables

										x = null;

										if (!rejectedInnerJoin_tMap_52) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'x'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_52) {
											x_tmp.Type_d_acces = Dim_type_d_acces_data.Type_d_operation;
											x = x_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_52 = false;

									tos_count_tMap_52++;

									/**
									 * [tMap_52 main ] stop
									 */

									/**
									 * [tMap_52 process_data_begin ] start
									 */

									currentComponent = "tMap_52";

									/**
									 * [tMap_52 process_data_begin ] stop
									 */
// Start of branch "x"
									if (x != null) {

										/**
										 * [tUniqRow_17 main ] start
										 */

										currentComponent = "tUniqRow_17";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "x"

											);
										}

										row75 = null;
										finder_tUniqRow_17.Type_d_acces = x.Type_d_acces;
										finder_tUniqRow_17.hashCodeDirty = true;
										if (!keystUniqRow_17.contains(finder_tUniqRow_17)) {
											KeyStruct_tUniqRow_17 new_tUniqRow_17 = new KeyStruct_tUniqRow_17();

											new_tUniqRow_17.Type_d_acces = x.Type_d_acces;

											keystUniqRow_17.add(new_tUniqRow_17);
											if (row75 == null) {

												row75 = new row75Struct();
											}
											row75.Type_d_acces = x.Type_d_acces;
											nb_uniques_tUniqRow_17++;
										} else {
											nb_duplicates_tUniqRow_17++;
										}

										tos_count_tUniqRow_17++;

										/**
										 * [tUniqRow_17 main ] stop
										 */

										/**
										 * [tUniqRow_17 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_17";

										/**
										 * [tUniqRow_17 process_data_begin ] stop
										 */
// Start of branch "row75"
										if (row75 != null) {

											/**
											 * [tDBOutput_18 main ] start
											 */

											currentComponent = "tDBOutput_18";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row75"

												);
											}

											whetherReject_tDBOutput_18 = false;
											if (row75.Type_d_acces == null) {
												pstmt_tDBOutput_18.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_18.setString(1, row75.Type_d_acces);
											}

											pstmt_tDBOutput_18.addBatch();
											nb_line_tDBOutput_18++;

											batchSizeCounter_tDBOutput_18++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_18 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_18)
														throws Exception {
													try {

														for (int countEach_tDBOutput_18 : pstmt_tDBOutput_18
																.executeBatch()) {
															if (countEach_tDBOutput_18 == -2
																	|| countEach_tDBOutput_18 == -3) {
																break;
															}
															counter += countEach_tDBOutput_18;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_18_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_18 = 0;
														for (int countEach_tDBOutput_18 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_18 < 0 ? 0
																	: countEach_tDBOutput_18);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_18)
														throws Exception {
													try {

														for (int countEach_tDBOutput_18 : pstmt_tDBOutput_18
																.executeBatch()) {
															if (countEach_tDBOutput_18 == -2
																	|| countEach_tDBOutput_18 == -3) {
																break;
															}
															counter += countEach_tDBOutput_18;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_18_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_18 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_18 < 0 ? 0
																	: countEach_tDBOutput_18);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_18 > 0)
													&& (batchSize_tDBOutput_18 <= batchSizeCounter_tDBOutput_18)) {

												insertedCount_tDBOutput_18 = new LimitBytesHelper_tDBOutput_18()
														.limitBytePart1(insertedCount_tDBOutput_18, pstmt_tDBOutput_18);
												rowsToCommitCount_tDBOutput_18 = insertedCount_tDBOutput_18;

												batchSizeCounter_tDBOutput_18 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_18++;
											if (commitEvery_tDBOutput_18 <= commitCounter_tDBOutput_18) {
												if ((batchSize_tDBOutput_18 > 0)
														&& (batchSizeCounter_tDBOutput_18 > 0)) {

													insertedCount_tDBOutput_18 = new LimitBytesHelper_tDBOutput_18()
															.limitBytePart1(insertedCount_tDBOutput_18,
																	pstmt_tDBOutput_18);

													batchSizeCounter_tDBOutput_18 = 0;
												}
												if (rowsToCommitCount_tDBOutput_18 != 0) {

												}
												conn_tDBOutput_18.commit();
												if (rowsToCommitCount_tDBOutput_18 != 0) {

													rowsToCommitCount_tDBOutput_18 = 0;
												}
												commitCounter_tDBOutput_18 = 0;
											}

											tos_count_tDBOutput_18++;

											/**
											 * [tDBOutput_18 main ] stop
											 */

											/**
											 * [tDBOutput_18 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_18";

											/**
											 * [tDBOutput_18 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_18 process_data_end ] start
											 */

											currentComponent = "tDBOutput_18";

											/**
											 * [tDBOutput_18 process_data_end ] stop
											 */

										} // End of branch "row75"

										/**
										 * [tUniqRow_17 process_data_end ] start
										 */

										currentComponent = "tUniqRow_17";

										/**
										 * [tUniqRow_17 process_data_end ] stop
										 */

									} // End of branch "x"

									/**
									 * [tMap_52 process_data_end ] start
									 */

									currentComponent = "tMap_52";

									/**
									 * [tMap_52 process_data_end ] stop
									 */

								} // End of branch "Dim_type_d_acces_data"

								/**
								 * [tMap_51 process_data_end ] start
								 */

								currentComponent = "tMap_51";

								/**
								 * [tMap_51 process_data_end ] stop
								 */

							} // End of branch "row62"

							/**
							 * [tFileInputExcel_10 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_10";

							/**
							 * [tFileInputExcel_10 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_10 end ] start
							 */

							currentComponent = "tFileInputExcel_10";

						}

						globalMap.put("tFileInputExcel_10_NB_LINE", nb_line_tFileInputExcel_10);

					}

				} finally {

					if (!(source_tFileInputExcel_10 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_10.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_10", true);
				end_Hash.put("tFileInputExcel_10", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_10 end ] stop
				 */

				/**
				 * [tMap_51 end ] start
				 */

				currentComponent = "tMap_51";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row62");
				}

				ok_Hash.put("tMap_51", true);
				end_Hash.put("tMap_51", System.currentTimeMillis());

				/**
				 * [tMap_51 end ] stop
				 */

				/**
				 * [tMap_52 end ] start
				 */

				currentComponent = "tMap_52";

// ###############################
// # Lookup hashes releasing
				if (tHash_Lookup_row74 != null) {
					tHash_Lookup_row74.endGet();
				}
				globalMap.remove("tHash_Lookup_row74");

// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "Dim_type_d_acces_data");
				}

				ok_Hash.put("tMap_52", true);
				end_Hash.put("tMap_52", System.currentTimeMillis());

				/**
				 * [tMap_52 end ] stop
				 */

				/**
				 * [tUniqRow_17 end ] start
				 */

				currentComponent = "tUniqRow_17";

				globalMap.put("tUniqRow_17_NB_UNIQUES", nb_uniques_tUniqRow_17);
				globalMap.put("tUniqRow_17_NB_DUPLICATES", nb_duplicates_tUniqRow_17);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "x");
				}

				ok_Hash.put("tUniqRow_17", true);
				end_Hash.put("tUniqRow_17", System.currentTimeMillis());

				/**
				 * [tUniqRow_17 end ] stop
				 */

				/**
				 * [tDBOutput_18 end ] start
				 */

				currentComponent = "tDBOutput_18";

				try {
					int countSum_tDBOutput_18 = 0;
					if (pstmt_tDBOutput_18 != null && batchSizeCounter_tDBOutput_18 > 0) {

						for (int countEach_tDBOutput_18 : pstmt_tDBOutput_18.executeBatch()) {
							if (countEach_tDBOutput_18 == -2 || countEach_tDBOutput_18 == -3) {
								break;
							}
							countSum_tDBOutput_18 += countEach_tDBOutput_18;
						}
						rowsToCommitCount_tDBOutput_18 += countSum_tDBOutput_18;

					}

					insertedCount_tDBOutput_18 += countSum_tDBOutput_18;

				} catch (java.sql.BatchUpdateException e) {
					globalMap.put("tDBOutput_18_ERROR_MESSAGE", e.getMessage());

					int countSum_tDBOutput_18 = 0;
					for (int countEach_tDBOutput_18 : e.getUpdateCounts()) {
						countSum_tDBOutput_18 += (countEach_tDBOutput_18 < 0 ? 0 : countEach_tDBOutput_18);
					}
					rowsToCommitCount_tDBOutput_18 += countSum_tDBOutput_18;

					insertedCount_tDBOutput_18 += countSum_tDBOutput_18;

					System.err.println(e.getMessage());

				}
				if (pstmt_tDBOutput_18 != null) {

					pstmt_tDBOutput_18.close();
					resourceMap.remove("pstmt_tDBOutput_18");

				}
				resourceMap.put("statementClosed_tDBOutput_18", true);
				if (rowsToCommitCount_tDBOutput_18 != 0) {

				}
				conn_tDBOutput_18.commit();
				if (rowsToCommitCount_tDBOutput_18 != 0) {

					rowsToCommitCount_tDBOutput_18 = 0;
				}
				commitCounter_tDBOutput_18 = 0;
				conn_tDBOutput_18.close();
				resourceMap.put("finish_tDBOutput_18", true);

				nb_line_deleted_tDBOutput_18 = nb_line_deleted_tDBOutput_18 + deletedCount_tDBOutput_18;
				nb_line_update_tDBOutput_18 = nb_line_update_tDBOutput_18 + updatedCount_tDBOutput_18;
				nb_line_inserted_tDBOutput_18 = nb_line_inserted_tDBOutput_18 + insertedCount_tDBOutput_18;
				nb_line_rejected_tDBOutput_18 = nb_line_rejected_tDBOutput_18 + rejectedCount_tDBOutput_18;

				globalMap.put("tDBOutput_18_NB_LINE", nb_line_tDBOutput_18);
				globalMap.put("tDBOutput_18_NB_LINE_UPDATED", nb_line_update_tDBOutput_18);
				globalMap.put("tDBOutput_18_NB_LINE_INSERTED", nb_line_inserted_tDBOutput_18);
				globalMap.put("tDBOutput_18_NB_LINE_DELETED", nb_line_deleted_tDBOutput_18);
				globalMap.put("tDBOutput_18_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_18);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row75");
				}

				ok_Hash.put("tDBOutput_18", true);
				end_Hash.put("tDBOutput_18", System.currentTimeMillis());

				/**
				 * [tDBOutput_18 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			// free memory for "tMap_52"
			globalMap.remove("tHash_Lookup_row74");

			try {

				/**
				 * [tFileInputExcel_10 finally ] start
				 */

				currentComponent = "tFileInputExcel_10";

				/**
				 * [tFileInputExcel_10 finally ] stop
				 */

				/**
				 * [tMap_51 finally ] start
				 */

				currentComponent = "tMap_51";

				/**
				 * [tMap_51 finally ] stop
				 */

				/**
				 * [tMap_52 finally ] start
				 */

				currentComponent = "tMap_52";

				/**
				 * [tMap_52 finally ] stop
				 */

				/**
				 * [tUniqRow_17 finally ] start
				 */

				currentComponent = "tUniqRow_17";

				/**
				 * [tUniqRow_17 finally ] stop
				 */

				/**
				 * [tDBOutput_18 finally ] start
				 */

				currentComponent = "tDBOutput_18";

				try {
					if (resourceMap.get("statementClosed_tDBOutput_18") == null) {
						java.sql.PreparedStatement pstmtToClose_tDBOutput_18 = null;
						if ((pstmtToClose_tDBOutput_18 = (java.sql.PreparedStatement) resourceMap
								.remove("pstmt_tDBOutput_18")) != null) {
							pstmtToClose_tDBOutput_18.close();
						}
					}
				} finally {
					if (resourceMap.get("finish_tDBOutput_18") == null) {
						java.sql.Connection ctn_tDBOutput_18 = null;
						if ((ctn_tDBOutput_18 = (java.sql.Connection) resourceMap.get("conn_tDBOutput_18")) != null) {
							try {
								ctn_tDBOutput_18.close();
							} catch (java.sql.SQLException sqlEx_tDBOutput_18) {
								String errorMessage_tDBOutput_18 = "failed to close the connection in tDBOutput_18 :"
										+ sqlEx_tDBOutput_18.getMessage();
								System.err.println(errorMessage_tDBOutput_18);
							}
						}
					}
				}

				/**
				 * [tDBOutput_18 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tFileInputExcel_10_SUBPROCESS_STATE", 1);
	}

	public static class row78Struct implements routines.system.IPersistableRow<row78Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Type_d_operation;

		public String getType_d_operation() {
			return this.Type_d_operation;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_d_operation = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_d_operation = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Type_d_operation, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Type_d_operation, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Type_d_operation=" + Type_d_operation);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row78Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class wStruct implements routines.system.IPersistableRow<wStruct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Type_d_operation;

		public String getType_d_operation() {
			return this.Type_d_operation;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_d_operation = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_d_operation = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Type_d_operation, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Type_d_operation, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Type_d_operation=" + Type_d_operation);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(wStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class copyOfDim_type_operation_data_0Struct
			implements routines.system.IPersistableRow<copyOfDim_type_operation_data_0Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Type_d_operation;

		public String getType_d_operation() {
			return this.Type_d_operation;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_d_operation = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Type_d_operation = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Type_d_operation, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Type_d_operation, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Type_d_operation=" + Type_d_operation);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(copyOfDim_type_operation_data_0Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row76Struct implements routines.system.IPersistableRow<row76Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public Integer Index;

		public Integer getIndex() {
			return this.Index;
		}

		public String Client_Prospect;

		public String getClient_Prospect() {
			return this.Client_Prospect;
		}

		public String Sujet;

		public String getSujet() {
			return this.Sujet;
		}

		public String Acces;

		public String getAcces() {
			return this.Acces;
		}

		public String Type_d_acces;

		public String getType_d_acces() {
			return this.Type_d_acces;
		}

		public String Account_Manager__Client_Prospect;

		public String getAccount_Manager__Client_Prospect() {
			return this.Account_Manager__Client_Prospect;
		}

		public java.util.Date Cree_le;

		public java.util.Date getCree_le() {
			return this.Cree_le;
		}

		public String Mois_et_annee_de_creation;

		public String getMois_et_annee_de_creation() {
			return this.Mois_et_annee_de_creation;
		}

		public String Cree_par;

		public String getCree_par() {
			return this.Cree_par;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public String Proprietaire;

		public String getProprietaire() {
			return this.Proprietaire;
		}

		public String Phase_de_l_opportunite;

		public String getPhase_de_l_opportunite() {
			return this.Phase_de_l_opportunite;
		}

		public Float Valeur_ordering;

		public Float getValeur_ordering() {
			return this.Valeur_ordering;
		}

		public String Statut;

		public String getStatut() {
			return this.Statut;
		}

		public String Staut_Final;

		public String getStaut_Final() {
			return this.Staut_Final;
		}

		public String Tarifs;

		public String getTarifs() {
			return this.Tarifs;
		}

		public String Montant_total;

		public String getMontant_total() {
			return this.Montant_total;
		}

		public String Parent__Produit_existant;

		public String getParent__Produit_existant() {
			return this.Parent__Produit_existant;
		}

		public String Produit_existant;

		public String getProduit_existant() {
			return this.Produit_existant;
		}

		public String Operation;

		public String getOperation() {
			return this.Operation;
		}

		public String Type_d_operation;

		public String getType_d_operation() {
			return this.Type_d_operation;
		}

		public String Prix_unitaire;

		public String getPrix_unitaire() {
			return this.Prix_unitaire;
		}

		public Float Quantite;

		public Float getQuantite() {
			return this.Quantite;
		}

		public String Remise;

		public String getRemise() {
			return this.Remise;
		}

		public String Montant_de_la_remise_manuelle;

		public String getMontant_de_la_remise_manuelle() {
			return this.Montant_de_la_remise_manuelle;
		}

		public String Total_final;

		public String getTotal_final() {
			return this.Total_final;
		}

		public java.util.Date Modifie_le;

		public java.util.Date getModifie_le() {
			return this.Modifie_le;
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private java.util.Date readDate(ObjectInputStream dis) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(dis.readLong());
			}
			return dateReturn;
		}

		private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(unmarshaller.readLong());
			}
			return dateReturn;
		}

		private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException {
			if (date1 == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeLong(date1.getTime());
			}
		}

		private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (date1 == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeLong(date1.getTime());
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Index = readInteger(dis);

					this.Client_Prospect = readString(dis);

					this.Sujet = readString(dis);

					this.Acces = readString(dis);

					this.Type_d_acces = readString(dis);

					this.Account_Manager__Client_Prospect = readString(dis);

					this.Cree_le = readDate(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Proprietaire = readString(dis);

					this.Phase_de_l_opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Valeur_ordering = null;
					} else {
						this.Valeur_ordering = dis.readFloat();
					}

					this.Statut = readString(dis);

					this.Staut_Final = readString(dis);

					this.Tarifs = readString(dis);

					this.Montant_total = readString(dis);

					this.Parent__Produit_existant = readString(dis);

					this.Produit_existant = readString(dis);

					this.Operation = readString(dis);

					this.Type_d_operation = readString(dis);

					this.Prix_unitaire = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Quantite = null;
					} else {
						this.Quantite = dis.readFloat();
					}

					this.Remise = readString(dis);

					this.Montant_de_la_remise_manuelle = readString(dis);

					this.Total_final = readString(dis);

					this.Modifie_le = readDate(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Index = readInteger(dis);

					this.Client_Prospect = readString(dis);

					this.Sujet = readString(dis);

					this.Acces = readString(dis);

					this.Type_d_acces = readString(dis);

					this.Account_Manager__Client_Prospect = readString(dis);

					this.Cree_le = readDate(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Proprietaire = readString(dis);

					this.Phase_de_l_opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Valeur_ordering = null;
					} else {
						this.Valeur_ordering = dis.readFloat();
					}

					this.Statut = readString(dis);

					this.Staut_Final = readString(dis);

					this.Tarifs = readString(dis);

					this.Montant_total = readString(dis);

					this.Parent__Produit_existant = readString(dis);

					this.Produit_existant = readString(dis);

					this.Operation = readString(dis);

					this.Type_d_operation = readString(dis);

					this.Prix_unitaire = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Quantite = null;
					} else {
						this.Quantite = dis.readFloat();
					}

					this.Remise = readString(dis);

					this.Montant_de_la_remise_manuelle = readString(dis);

					this.Total_final = readString(dis);

					this.Modifie_le = readDate(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// Integer

				writeInteger(this.Index, dos);

				// String

				writeString(this.Client_Prospect, dos);

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Acces, dos);

				// String

				writeString(this.Type_d_acces, dos);

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

				// java.util.Date

				writeDate(this.Cree_le, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Proprietaire, dos);

				// String

				writeString(this.Phase_de_l_opportunite, dos);

				// Float

				if (this.Valeur_ordering == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Valeur_ordering);
				}

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Tarifs, dos);

				// String

				writeString(this.Montant_total, dos);

				// String

				writeString(this.Parent__Produit_existant, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Operation, dos);

				// String

				writeString(this.Type_d_operation, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// Float

				if (this.Quantite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Quantite);
				}

				// String

				writeString(this.Remise, dos);

				// String

				writeString(this.Montant_de_la_remise_manuelle, dos);

				// String

				writeString(this.Total_final, dos);

				// java.util.Date

				writeDate(this.Modifie_le, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// Integer

				writeInteger(this.Index, dos);

				// String

				writeString(this.Client_Prospect, dos);

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Acces, dos);

				// String

				writeString(this.Type_d_acces, dos);

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

				// java.util.Date

				writeDate(this.Cree_le, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Proprietaire, dos);

				// String

				writeString(this.Phase_de_l_opportunite, dos);

				// Float

				if (this.Valeur_ordering == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Valeur_ordering);
				}

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Tarifs, dos);

				// String

				writeString(this.Montant_total, dos);

				// String

				writeString(this.Parent__Produit_existant, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Operation, dos);

				// String

				writeString(this.Type_d_operation, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// Float

				if (this.Quantite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Quantite);
				}

				// String

				writeString(this.Remise, dos);

				// String

				writeString(this.Montant_de_la_remise_manuelle, dos);

				// String

				writeString(this.Total_final, dos);

				// java.util.Date

				writeDate(this.Modifie_le, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Index=" + String.valueOf(Index));
			sb.append(",Client_Prospect=" + Client_Prospect);
			sb.append(",Sujet=" + Sujet);
			sb.append(",Acces=" + Acces);
			sb.append(",Type_d_acces=" + Type_d_acces);
			sb.append(",Account_Manager__Client_Prospect=" + Account_Manager__Client_Prospect);
			sb.append(",Cree_le=" + String.valueOf(Cree_le));
			sb.append(",Mois_et_annee_de_creation=" + Mois_et_annee_de_creation);
			sb.append(",Cree_par=" + Cree_par);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Proprietaire=" + Proprietaire);
			sb.append(",Phase_de_l_opportunite=" + Phase_de_l_opportunite);
			sb.append(",Valeur_ordering=" + String.valueOf(Valeur_ordering));
			sb.append(",Statut=" + Statut);
			sb.append(",Staut_Final=" + Staut_Final);
			sb.append(",Tarifs=" + Tarifs);
			sb.append(",Montant_total=" + Montant_total);
			sb.append(",Parent__Produit_existant=" + Parent__Produit_existant);
			sb.append(",Produit_existant=" + Produit_existant);
			sb.append(",Operation=" + Operation);
			sb.append(",Type_d_operation=" + Type_d_operation);
			sb.append(",Prix_unitaire=" + Prix_unitaire);
			sb.append(",Quantite=" + String.valueOf(Quantite));
			sb.append(",Remise=" + Remise);
			sb.append(",Montant_de_la_remise_manuelle=" + Montant_de_la_remise_manuelle);
			sb.append(",Total_final=" + Total_final);
			sb.append(",Modifie_le=" + String.valueOf(Modifie_le));
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row76Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class after_tFileInputExcel_12Struct
			implements routines.system.IPersistableRow<after_tFileInputExcel_12Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public Integer Index;

		public Integer getIndex() {
			return this.Index;
		}

		public String Client_Prospect;

		public String getClient_Prospect() {
			return this.Client_Prospect;
		}

		public String Sujet;

		public String getSujet() {
			return this.Sujet;
		}

		public String Acces;

		public String getAcces() {
			return this.Acces;
		}

		public String Type_d_acces;

		public String getType_d_acces() {
			return this.Type_d_acces;
		}

		public String Account_Manager__Client_Prospect;

		public String getAccount_Manager__Client_Prospect() {
			return this.Account_Manager__Client_Prospect;
		}

		public java.util.Date Cree_le;

		public java.util.Date getCree_le() {
			return this.Cree_le;
		}

		public String Mois_et_annee_de_creation;

		public String getMois_et_annee_de_creation() {
			return this.Mois_et_annee_de_creation;
		}

		public String Cree_par;

		public String getCree_par() {
			return this.Cree_par;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public String Proprietaire;

		public String getProprietaire() {
			return this.Proprietaire;
		}

		public String Phase_de_l_opportunite;

		public String getPhase_de_l_opportunite() {
			return this.Phase_de_l_opportunite;
		}

		public Float Valeur_ordering;

		public Float getValeur_ordering() {
			return this.Valeur_ordering;
		}

		public String Statut;

		public String getStatut() {
			return this.Statut;
		}

		public String Staut_Final;

		public String getStaut_Final() {
			return this.Staut_Final;
		}

		public String Tarifs;

		public String getTarifs() {
			return this.Tarifs;
		}

		public String Montant_total;

		public String getMontant_total() {
			return this.Montant_total;
		}

		public String Parent__Produit_existant;

		public String getParent__Produit_existant() {
			return this.Parent__Produit_existant;
		}

		public String Produit_existant;

		public String getProduit_existant() {
			return this.Produit_existant;
		}

		public String Operation;

		public String getOperation() {
			return this.Operation;
		}

		public String Type_d_operation;

		public String getType_d_operation() {
			return this.Type_d_operation;
		}

		public String Prix_unitaire;

		public String getPrix_unitaire() {
			return this.Prix_unitaire;
		}

		public Float Quantite;

		public Float getQuantite() {
			return this.Quantite;
		}

		public String Remise;

		public String getRemise() {
			return this.Remise;
		}

		public String Montant_de_la_remise_manuelle;

		public String getMontant_de_la_remise_manuelle() {
			return this.Montant_de_la_remise_manuelle;
		}

		public String Total_final;

		public String getTotal_final() {
			return this.Total_final;
		}

		public java.util.Date Modifie_le;

		public java.util.Date getModifie_le() {
			return this.Modifie_le;
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private java.util.Date readDate(ObjectInputStream dis) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(dis.readLong());
			}
			return dateReturn;
		}

		private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(unmarshaller.readLong());
			}
			return dateReturn;
		}

		private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException {
			if (date1 == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeLong(date1.getTime());
			}
		}

		private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (date1 == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeLong(date1.getTime());
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Index = readInteger(dis);

					this.Client_Prospect = readString(dis);

					this.Sujet = readString(dis);

					this.Acces = readString(dis);

					this.Type_d_acces = readString(dis);

					this.Account_Manager__Client_Prospect = readString(dis);

					this.Cree_le = readDate(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Proprietaire = readString(dis);

					this.Phase_de_l_opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Valeur_ordering = null;
					} else {
						this.Valeur_ordering = dis.readFloat();
					}

					this.Statut = readString(dis);

					this.Staut_Final = readString(dis);

					this.Tarifs = readString(dis);

					this.Montant_total = readString(dis);

					this.Parent__Produit_existant = readString(dis);

					this.Produit_existant = readString(dis);

					this.Operation = readString(dis);

					this.Type_d_operation = readString(dis);

					this.Prix_unitaire = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Quantite = null;
					} else {
						this.Quantite = dis.readFloat();
					}

					this.Remise = readString(dis);

					this.Montant_de_la_remise_manuelle = readString(dis);

					this.Total_final = readString(dis);

					this.Modifie_le = readDate(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Index = readInteger(dis);

					this.Client_Prospect = readString(dis);

					this.Sujet = readString(dis);

					this.Acces = readString(dis);

					this.Type_d_acces = readString(dis);

					this.Account_Manager__Client_Prospect = readString(dis);

					this.Cree_le = readDate(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Proprietaire = readString(dis);

					this.Phase_de_l_opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Valeur_ordering = null;
					} else {
						this.Valeur_ordering = dis.readFloat();
					}

					this.Statut = readString(dis);

					this.Staut_Final = readString(dis);

					this.Tarifs = readString(dis);

					this.Montant_total = readString(dis);

					this.Parent__Produit_existant = readString(dis);

					this.Produit_existant = readString(dis);

					this.Operation = readString(dis);

					this.Type_d_operation = readString(dis);

					this.Prix_unitaire = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Quantite = null;
					} else {
						this.Quantite = dis.readFloat();
					}

					this.Remise = readString(dis);

					this.Montant_de_la_remise_manuelle = readString(dis);

					this.Total_final = readString(dis);

					this.Modifie_le = readDate(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// Integer

				writeInteger(this.Index, dos);

				// String

				writeString(this.Client_Prospect, dos);

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Acces, dos);

				// String

				writeString(this.Type_d_acces, dos);

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

				// java.util.Date

				writeDate(this.Cree_le, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Proprietaire, dos);

				// String

				writeString(this.Phase_de_l_opportunite, dos);

				// Float

				if (this.Valeur_ordering == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Valeur_ordering);
				}

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Tarifs, dos);

				// String

				writeString(this.Montant_total, dos);

				// String

				writeString(this.Parent__Produit_existant, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Operation, dos);

				// String

				writeString(this.Type_d_operation, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// Float

				if (this.Quantite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Quantite);
				}

				// String

				writeString(this.Remise, dos);

				// String

				writeString(this.Montant_de_la_remise_manuelle, dos);

				// String

				writeString(this.Total_final, dos);

				// java.util.Date

				writeDate(this.Modifie_le, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// Integer

				writeInteger(this.Index, dos);

				// String

				writeString(this.Client_Prospect, dos);

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Acces, dos);

				// String

				writeString(this.Type_d_acces, dos);

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

				// java.util.Date

				writeDate(this.Cree_le, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Proprietaire, dos);

				// String

				writeString(this.Phase_de_l_opportunite, dos);

				// Float

				if (this.Valeur_ordering == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Valeur_ordering);
				}

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Tarifs, dos);

				// String

				writeString(this.Montant_total, dos);

				// String

				writeString(this.Parent__Produit_existant, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Operation, dos);

				// String

				writeString(this.Type_d_operation, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// Float

				if (this.Quantite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Quantite);
				}

				// String

				writeString(this.Remise, dos);

				// String

				writeString(this.Montant_de_la_remise_manuelle, dos);

				// String

				writeString(this.Total_final, dos);

				// java.util.Date

				writeDate(this.Modifie_le, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Index=" + String.valueOf(Index));
			sb.append(",Client_Prospect=" + Client_Prospect);
			sb.append(",Sujet=" + Sujet);
			sb.append(",Acces=" + Acces);
			sb.append(",Type_d_acces=" + Type_d_acces);
			sb.append(",Account_Manager__Client_Prospect=" + Account_Manager__Client_Prospect);
			sb.append(",Cree_le=" + String.valueOf(Cree_le));
			sb.append(",Mois_et_annee_de_creation=" + Mois_et_annee_de_creation);
			sb.append(",Cree_par=" + Cree_par);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Proprietaire=" + Proprietaire);
			sb.append(",Phase_de_l_opportunite=" + Phase_de_l_opportunite);
			sb.append(",Valeur_ordering=" + String.valueOf(Valeur_ordering));
			sb.append(",Statut=" + Statut);
			sb.append(",Staut_Final=" + Staut_Final);
			sb.append(",Tarifs=" + Tarifs);
			sb.append(",Montant_total=" + Montant_total);
			sb.append(",Parent__Produit_existant=" + Parent__Produit_existant);
			sb.append(",Produit_existant=" + Produit_existant);
			sb.append(",Operation=" + Operation);
			sb.append(",Type_d_operation=" + Type_d_operation);
			sb.append(",Prix_unitaire=" + Prix_unitaire);
			sb.append(",Quantite=" + String.valueOf(Quantite));
			sb.append(",Remise=" + Remise);
			sb.append(",Montant_de_la_remise_manuelle=" + Montant_de_la_remise_manuelle);
			sb.append(",Total_final=" + Total_final);
			sb.append(",Modifie_le=" + String.valueOf(Modifie_le));
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(after_tFileInputExcel_12Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tFileInputExcel_12Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tFileInputExcel_12_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				tDBInput_19Process(globalMap);

				row76Struct row76 = new row76Struct();
				copyOfDim_type_operation_data_0Struct copyOfDim_type_operation_data_0 = new copyOfDim_type_operation_data_0Struct();
				wStruct w = new wStruct();
				row78Struct row78 = new row78Struct();

				/**
				 * [tDBOutput_19 begin ] start
				 */

				ok_Hash.put("tDBOutput_19", false);
				start_Hash.put("tDBOutput_19", System.currentTimeMillis());

				currentComponent = "tDBOutput_19";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row78");
				}

				int tos_count_tDBOutput_19 = 0;

				int nb_line_tDBOutput_19 = 0;
				int nb_line_update_tDBOutput_19 = 0;
				int nb_line_inserted_tDBOutput_19 = 0;
				int nb_line_deleted_tDBOutput_19 = 0;
				int nb_line_rejected_tDBOutput_19 = 0;

				int deletedCount_tDBOutput_19 = 0;
				int updatedCount_tDBOutput_19 = 0;
				int insertedCount_tDBOutput_19 = 0;
				int rowsToCommitCount_tDBOutput_19 = 0;
				int rejectedCount_tDBOutput_19 = 0;
				String dbschema_tDBOutput_19 = null;
				String tableName_tDBOutput_19 = null;
				boolean whetherReject_tDBOutput_19 = false;

				java.util.Calendar calendar_tDBOutput_19 = java.util.Calendar.getInstance();
				long year1_tDBOutput_19 = TalendDate.parseDate("yyyy-MM-dd", "0001-01-01").getTime();
				long year2_tDBOutput_19 = TalendDate.parseDate("yyyy-MM-dd", "1753-01-01").getTime();
				long year10000_tDBOutput_19 = TalendDate.parseDate("yyyy-MM-dd HH:mm:ss", "9999-12-31 24:00:00")
						.getTime();
				long date_tDBOutput_19;

				java.util.Calendar calendar_datetimeoffset_tDBOutput_19 = java.util.Calendar
						.getInstance(java.util.TimeZone.getTimeZone("UTC"));

				java.sql.Connection conn_tDBOutput_19 = null;
				String dbUser_tDBOutput_19 = null;
				dbschema_tDBOutput_19 = "dbo";
				String driverClass_tDBOutput_19 = "net.sourceforge.jtds.jdbc.Driver";

				java.lang.Class.forName(driverClass_tDBOutput_19);
				String port_tDBOutput_19 = "1433";
				String dbname_tDBOutput_19 = "orange_DW__";
				String url_tDBOutput_19 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBOutput_19)) {
					url_tDBOutput_19 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBOutput_19)) {
					url_tDBOutput_19 += "//" + "orange_DW__";

				}
				url_tDBOutput_19 += ";appName=" + projectName + ";" + "";
				dbUser_tDBOutput_19 = "sa";

				final String decryptedPassword_tDBOutput_19 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:TmA5Qnm5RuEdjuM0Zf5uYf/1LD6w/fD6jvY0NaQwekI6aNDFPYI=");

				String dbPwd_tDBOutput_19 = decryptedPassword_tDBOutput_19;
				conn_tDBOutput_19 = java.sql.DriverManager.getConnection(url_tDBOutput_19, dbUser_tDBOutput_19,
						dbPwd_tDBOutput_19);

				resourceMap.put("conn_tDBOutput_19", conn_tDBOutput_19);

				conn_tDBOutput_19.setAutoCommit(false);
				int commitEvery_tDBOutput_19 = 10000;
				int commitCounter_tDBOutput_19 = 0;

				int batchSize_tDBOutput_19 = 10000;
				int batchSizeCounter_tDBOutput_19 = 0;

				if (dbschema_tDBOutput_19 == null || dbschema_tDBOutput_19.trim().length() == 0) {
					tableName_tDBOutput_19 = "Dim_type_operation";
				} else {
					tableName_tDBOutput_19 = dbschema_tDBOutput_19 + "].[" + "Dim_type_operation";
				}
				int count_tDBOutput_19 = 0;

				String insert_tDBOutput_19 = "INSERT INTO [" + tableName_tDBOutput_19
						+ "] ([Type_d_operation]) VALUES (?)";
				java.sql.PreparedStatement pstmt_tDBOutput_19 = conn_tDBOutput_19.prepareStatement(insert_tDBOutput_19);
				resourceMap.put("pstmt_tDBOutput_19", pstmt_tDBOutput_19);

				/**
				 * [tDBOutput_19 begin ] stop
				 */

				/**
				 * [tUniqRow_18 begin ] start
				 */

				ok_Hash.put("tUniqRow_18", false);
				start_Hash.put("tUniqRow_18", System.currentTimeMillis());

				currentComponent = "tUniqRow_18";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "w");
				}

				int tos_count_tUniqRow_18 = 0;

				class KeyStruct_tUniqRow_18 {

					private static final int DEFAULT_HASHCODE = 1;
					private static final int PRIME = 31;
					private int hashCode = DEFAULT_HASHCODE;
					public boolean hashCodeDirty = true;

					String Type_d_operation;

					@Override
					public int hashCode() {
						if (this.hashCodeDirty) {
							final int prime = PRIME;
							int result = DEFAULT_HASHCODE;

							result = prime * result
									+ ((this.Type_d_operation == null) ? 0 : this.Type_d_operation.hashCode());

							this.hashCode = result;
							this.hashCodeDirty = false;
						}
						return this.hashCode;
					}

					@Override
					public boolean equals(Object obj) {
						if (this == obj)
							return true;
						if (obj == null)
							return false;
						if (getClass() != obj.getClass())
							return false;
						final KeyStruct_tUniqRow_18 other = (KeyStruct_tUniqRow_18) obj;

						if (this.Type_d_operation == null) {
							if (other.Type_d_operation != null)
								return false;

						} else if (!this.Type_d_operation.equals(other.Type_d_operation))

							return false;

						return true;
					}

				}

				int nb_uniques_tUniqRow_18 = 0;
				int nb_duplicates_tUniqRow_18 = 0;
				KeyStruct_tUniqRow_18 finder_tUniqRow_18 = new KeyStruct_tUniqRow_18();
				java.util.Set<KeyStruct_tUniqRow_18> keystUniqRow_18 = new java.util.HashSet<KeyStruct_tUniqRow_18>();

				/**
				 * [tUniqRow_18 begin ] stop
				 */

				/**
				 * [tMap_54 begin ] start
				 */

				ok_Hash.put("tMap_54", false);
				start_Hash.put("tMap_54", System.currentTimeMillis());

				currentComponent = "tMap_54";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "copyOfDim_type_operation_data_0");
				}

				int tos_count_tMap_54 = 0;

// ###############################
// # Lookup's keys initialization

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row77Struct> tHash_Lookup_row77 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row77Struct>) ((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row77Struct>) globalMap
						.get("tHash_Lookup_row77"));

				row77Struct row77HashKey = new row77Struct();
				row77Struct row77Default = new row77Struct();
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_54__Struct {
				}
				Var__tMap_54__Struct Var__tMap_54 = new Var__tMap_54__Struct();
// ###############################

// ###############################
// # Outputs initialization
				wStruct w_tmp = new wStruct();
// ###############################

				/**
				 * [tMap_54 begin ] stop
				 */

				/**
				 * [tMap_53 begin ] start
				 */

				ok_Hash.put("tMap_53", false);
				start_Hash.put("tMap_53", System.currentTimeMillis());

				currentComponent = "tMap_53";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row76");
				}

				int tos_count_tMap_53 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_53__Struct {
				}
				Var__tMap_53__Struct Var__tMap_53 = new Var__tMap_53__Struct();
// ###############################

// ###############################
// # Outputs initialization
				copyOfDim_type_operation_data_0Struct copyOfDim_type_operation_data_0_tmp = new copyOfDim_type_operation_data_0Struct();
// ###############################

				/**
				 * [tMap_53 begin ] stop
				 */

				/**
				 * [tFileInputExcel_12 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_12", false);
				start_Hash.put("tFileInputExcel_12", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_12";

				int tos_count_tFileInputExcel_12 = 0;

				final String decryptedPassword_tFileInputExcel_12 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:q5/m5hR87p3logS7vMzIpPUa2k6lvaqnH/9FwQ==");
				String password_tFileInputExcel_12 = decryptedPassword_tFileInputExcel_12;
				if (password_tFileInputExcel_12.isEmpty()) {
					password_tFileInputExcel_12 = null;
				}
				class RegexUtil_tFileInputExcel_12 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_12 regexUtil_tFileInputExcel_12 = new RegexUtil_tFileInputExcel_12();

				Object source_tFileInputExcel_12 = "C:/Users/DELL/Downloads/Copie de Rapport Pipe et realisations DME Data et VoIP (1).xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_12 = null;

				if (source_tFileInputExcel_12 instanceof String) {
					workbook_tFileInputExcel_12 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_12), password_tFileInputExcel_12,
									true);
				} else if (source_tFileInputExcel_12 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_12 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_12, password_tFileInputExcel_12);
				} else {
					workbook_tFileInputExcel_12 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_12 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_12.addAll(
							regexUtil_tFileInputExcel_12.getSheets(workbook_tFileInputExcel_12, "Source", false));
					if (sheetList_tFileInputExcel_12.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_12 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_12 : sheetList_tFileInputExcel_12) {
						if (sheet_FilterNull_tFileInputExcel_12 != null
								&& sheetList_FilterNull_tFileInputExcel_12.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_12.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_12.add(sheet_FilterNull_tFileInputExcel_12);
						}
					}
					sheetList_tFileInputExcel_12 = sheetList_FilterNull_tFileInputExcel_12;
					if (sheetList_tFileInputExcel_12.size() > 0) {
						int nb_line_tFileInputExcel_12 = 0;

						int begin_line_tFileInputExcel_12 = 1;

						int footer_input_tFileInputExcel_12 = 0;

						int end_line_tFileInputExcel_12 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_12 : sheetList_tFileInputExcel_12) {
							end_line_tFileInputExcel_12 += (sheet_tFileInputExcel_12.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_12 -= footer_input_tFileInputExcel_12;
						int limit_tFileInputExcel_12 = -1;
						int start_column_tFileInputExcel_12 = 1 - 1;
						int end_column_tFileInputExcel_12 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_12 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_12 = sheetList_tFileInputExcel_12
								.get(0);
						int rowCount_tFileInputExcel_12 = 0;
						int sheetIndex_tFileInputExcel_12 = 0;
						int currentRows_tFileInputExcel_12 = (sheetList_tFileInputExcel_12.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_12 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_12 = df_tFileInputExcel_12.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_12 = begin_line_tFileInputExcel_12; i_tFileInputExcel_12 < end_line_tFileInputExcel_12; i_tFileInputExcel_12++) {

							int emptyColumnCount_tFileInputExcel_12 = 0;

							if (limit_tFileInputExcel_12 != -1
									&& nb_line_tFileInputExcel_12 >= limit_tFileInputExcel_12) {
								break;
							}

							while (i_tFileInputExcel_12 >= rowCount_tFileInputExcel_12
									+ currentRows_tFileInputExcel_12) {
								rowCount_tFileInputExcel_12 += currentRows_tFileInputExcel_12;
								sheet_tFileInputExcel_12 = sheetList_tFileInputExcel_12
										.get(++sheetIndex_tFileInputExcel_12);
								currentRows_tFileInputExcel_12 = (sheet_tFileInputExcel_12.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_12_CURRENT_SHEET", sheet_tFileInputExcel_12.getSheetName());
							if (rowCount_tFileInputExcel_12 <= i_tFileInputExcel_12) {
								row_tFileInputExcel_12 = sheet_tFileInputExcel_12
										.getRow(i_tFileInputExcel_12 - rowCount_tFileInputExcel_12);
							}
							row76 = null;
							int tempRowLength_tFileInputExcel_12 = 27;

							int columnIndex_tFileInputExcel_12 = 0;

							String[] temp_row_tFileInputExcel_12 = new String[tempRowLength_tFileInputExcel_12];
							int excel_end_column_tFileInputExcel_12;
							if (row_tFileInputExcel_12 == null) {
								excel_end_column_tFileInputExcel_12 = 0;
							} else {
								excel_end_column_tFileInputExcel_12 = row_tFileInputExcel_12.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_12;
							if (end_column_tFileInputExcel_12 == -1) {
								actual_end_column_tFileInputExcel_12 = excel_end_column_tFileInputExcel_12;
							} else {
								actual_end_column_tFileInputExcel_12 = end_column_tFileInputExcel_12 > excel_end_column_tFileInputExcel_12
										? excel_end_column_tFileInputExcel_12
										: end_column_tFileInputExcel_12;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_12 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_12; i++) {
								if (i + start_column_tFileInputExcel_12 < actual_end_column_tFileInputExcel_12) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_12 = row_tFileInputExcel_12
											.getCell(i + start_column_tFileInputExcel_12);
									if (cell_tFileInputExcel_12 != null) {
										switch (cell_tFileInputExcel_12.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_12[i] = cell_tFileInputExcel_12
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_12)) {
												temp_row_tFileInputExcel_12[i] = cell_tFileInputExcel_12
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_12[i] = df_tFileInputExcel_12
														.format(cell_tFileInputExcel_12.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_12[i] = String
													.valueOf(cell_tFileInputExcel_12.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_12.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_12[i] = cell_tFileInputExcel_12
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_12)) {
													temp_row_tFileInputExcel_12[i] = cell_tFileInputExcel_12
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_12 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_12.getNumericCellValue());
													temp_row_tFileInputExcel_12[i] = ne_tFileInputExcel_12
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_12[i] = String
														.valueOf(cell_tFileInputExcel_12.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_12[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_12[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_12[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_12[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_12 = false;
							row76 = new row76Struct();
							int curColNum_tFileInputExcel_12 = -1;
							String curColName_tFileInputExcel_12 = "";
							try {
								columnIndex_tFileInputExcel_12 = 0;

								if (temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12].length() > 0) {
									curColNum_tFileInputExcel_12 = columnIndex_tFileInputExcel_12
											+ start_column_tFileInputExcel_12 + 1;
									curColName_tFileInputExcel_12 = "Index";

									row76.Index = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12], null,
											'.' == decimalChar_tFileInputExcel_12 ? null
													: decimalChar_tFileInputExcel_12));
								} else {
									row76.Index = null;
									emptyColumnCount_tFileInputExcel_12++;
								}
								columnIndex_tFileInputExcel_12 = 1;

								if (temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12].length() > 0) {
									curColNum_tFileInputExcel_12 = columnIndex_tFileInputExcel_12
											+ start_column_tFileInputExcel_12 + 1;
									curColName_tFileInputExcel_12 = "Client_Prospect";

									row76.Client_Prospect = temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12];
								} else {
									row76.Client_Prospect = null;
									emptyColumnCount_tFileInputExcel_12++;
								}
								columnIndex_tFileInputExcel_12 = 2;

								if (temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12].length() > 0) {
									curColNum_tFileInputExcel_12 = columnIndex_tFileInputExcel_12
											+ start_column_tFileInputExcel_12 + 1;
									curColName_tFileInputExcel_12 = "Sujet";

									row76.Sujet = temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12];
								} else {
									row76.Sujet = null;
									emptyColumnCount_tFileInputExcel_12++;
								}
								columnIndex_tFileInputExcel_12 = 3;

								if (temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12].length() > 0) {
									curColNum_tFileInputExcel_12 = columnIndex_tFileInputExcel_12
											+ start_column_tFileInputExcel_12 + 1;
									curColName_tFileInputExcel_12 = "Acces";

									row76.Acces = temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12];
								} else {
									row76.Acces = null;
									emptyColumnCount_tFileInputExcel_12++;
								}
								columnIndex_tFileInputExcel_12 = 4;

								if (temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12].length() > 0) {
									curColNum_tFileInputExcel_12 = columnIndex_tFileInputExcel_12
											+ start_column_tFileInputExcel_12 + 1;
									curColName_tFileInputExcel_12 = "Type_d_acces";

									row76.Type_d_acces = temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12];
								} else {
									row76.Type_d_acces = null;
									emptyColumnCount_tFileInputExcel_12++;
								}
								columnIndex_tFileInputExcel_12 = 5;

								if (temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12].length() > 0) {
									curColNum_tFileInputExcel_12 = columnIndex_tFileInputExcel_12
											+ start_column_tFileInputExcel_12 + 1;
									curColName_tFileInputExcel_12 = "Account_Manager__Client_Prospect";

									row76.Account_Manager__Client_Prospect = temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12];
								} else {
									row76.Account_Manager__Client_Prospect = null;
									emptyColumnCount_tFileInputExcel_12++;
								}
								columnIndex_tFileInputExcel_12 = 6;

								if (temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12].length() > 0) {
									curColNum_tFileInputExcel_12 = columnIndex_tFileInputExcel_12
											+ start_column_tFileInputExcel_12 + 1;
									curColName_tFileInputExcel_12 = "Cree_le";

									if (6 < actual_end_column_tFileInputExcel_12) {
										try {
											if (row_tFileInputExcel_12
													.getCell(columnIndex_tFileInputExcel_12
															+ start_column_tFileInputExcel_12)
													.getCellType() == org.apache.poi.ss.usermodel.CellType.NUMERIC
													&& org.apache.poi.ss.usermodel.DateUtil
															.isCellDateFormatted(row_tFileInputExcel_12
																	.getCell(columnIndex_tFileInputExcel_12
																			+ start_column_tFileInputExcel_12))) {
												row76.Cree_le = row_tFileInputExcel_12
														.getCell(columnIndex_tFileInputExcel_12
																+ start_column_tFileInputExcel_12)
														.getDateCellValue();
											} else {
												java.util.Date tempDate_tFileInputExcel_12 = ParserUtils.parseTo_Date(
														temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12],
														"dd/MM/yyyy");
												if (tempDate_tFileInputExcel_12
														.after((new SimpleDateFormat("yyyy/MM/dd hh:mm:ss.SSS"))
																.parse("9999/12/31 23:59:59.999"))
														|| tempDate_tFileInputExcel_12
																.before((new SimpleDateFormat("yyyy/MM/dd"))
																		.parse("1900/01/01"))) {
													throw new RuntimeException("The cell format is not Date in ( Row. "
															+ (nb_line_tFileInputExcel_12 + 1) + " and ColumnNum. "
															+ curColNum_tFileInputExcel_12 + " )");
												} else {
													row76.Cree_le = tempDate_tFileInputExcel_12;
												}
											}
										} catch (java.lang.Exception e) {
											globalMap.put("tFileInputExcel_12_ERROR_MESSAGE", e.getMessage());

											throw new RuntimeException("The cell format is not Date in ( Row. "
													+ (nb_line_tFileInputExcel_12 + 1) + " and ColumnNum. "
													+ curColNum_tFileInputExcel_12 + " )");
										}
									}

								} else {
									row76.Cree_le = null;
									emptyColumnCount_tFileInputExcel_12++;
								}
								columnIndex_tFileInputExcel_12 = 7;

								if (temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12].length() > 0) {
									curColNum_tFileInputExcel_12 = columnIndex_tFileInputExcel_12
											+ start_column_tFileInputExcel_12 + 1;
									curColName_tFileInputExcel_12 = "Mois_et_annee_de_creation";

									row76.Mois_et_annee_de_creation = temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12];
								} else {
									row76.Mois_et_annee_de_creation = null;
									emptyColumnCount_tFileInputExcel_12++;
								}
								columnIndex_tFileInputExcel_12 = 8;

								if (temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12].length() > 0) {
									curColNum_tFileInputExcel_12 = columnIndex_tFileInputExcel_12
											+ start_column_tFileInputExcel_12 + 1;
									curColName_tFileInputExcel_12 = "Cree_par";

									row76.Cree_par = temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12];
								} else {
									row76.Cree_par = null;
									emptyColumnCount_tFileInputExcel_12++;
								}
								columnIndex_tFileInputExcel_12 = 9;

								if (temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12].length() > 0) {
									curColNum_tFileInputExcel_12 = columnIndex_tFileInputExcel_12
											+ start_column_tFileInputExcel_12 + 1;
									curColName_tFileInputExcel_12 = "Equipe";

									row76.Equipe = temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12];
								} else {
									row76.Equipe = null;
									emptyColumnCount_tFileInputExcel_12++;
								}
								columnIndex_tFileInputExcel_12 = 10;

								if (temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12].length() > 0) {
									curColNum_tFileInputExcel_12 = columnIndex_tFileInputExcel_12
											+ start_column_tFileInputExcel_12 + 1;
									curColName_tFileInputExcel_12 = "Proprietaire";

									row76.Proprietaire = temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12];
								} else {
									row76.Proprietaire = null;
									emptyColumnCount_tFileInputExcel_12++;
								}
								columnIndex_tFileInputExcel_12 = 11;

								if (temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12].length() > 0) {
									curColNum_tFileInputExcel_12 = columnIndex_tFileInputExcel_12
											+ start_column_tFileInputExcel_12 + 1;
									curColName_tFileInputExcel_12 = "Phase_de_l_opportunite";

									row76.Phase_de_l_opportunite = temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12];
								} else {
									row76.Phase_de_l_opportunite = null;
									emptyColumnCount_tFileInputExcel_12++;
								}
								columnIndex_tFileInputExcel_12 = 12;

								if (temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12].length() > 0) {
									curColNum_tFileInputExcel_12 = columnIndex_tFileInputExcel_12
											+ start_column_tFileInputExcel_12 + 1;
									curColName_tFileInputExcel_12 = "Valeur_ordering";

									row76.Valeur_ordering = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12], null,
											'.' == decimalChar_tFileInputExcel_12 ? null
													: decimalChar_tFileInputExcel_12));
								} else {
									row76.Valeur_ordering = null;
									emptyColumnCount_tFileInputExcel_12++;
								}
								columnIndex_tFileInputExcel_12 = 13;

								if (temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12].length() > 0) {
									curColNum_tFileInputExcel_12 = columnIndex_tFileInputExcel_12
											+ start_column_tFileInputExcel_12 + 1;
									curColName_tFileInputExcel_12 = "Statut";

									row76.Statut = temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12];
								} else {
									row76.Statut = null;
									emptyColumnCount_tFileInputExcel_12++;
								}
								columnIndex_tFileInputExcel_12 = 14;

								if (temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12].length() > 0) {
									curColNum_tFileInputExcel_12 = columnIndex_tFileInputExcel_12
											+ start_column_tFileInputExcel_12 + 1;
									curColName_tFileInputExcel_12 = "Staut_Final";

									row76.Staut_Final = temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12];
								} else {
									row76.Staut_Final = null;
									emptyColumnCount_tFileInputExcel_12++;
								}
								columnIndex_tFileInputExcel_12 = 15;

								if (temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12].length() > 0) {
									curColNum_tFileInputExcel_12 = columnIndex_tFileInputExcel_12
											+ start_column_tFileInputExcel_12 + 1;
									curColName_tFileInputExcel_12 = "Tarifs";

									row76.Tarifs = temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12];
								} else {
									row76.Tarifs = null;
									emptyColumnCount_tFileInputExcel_12++;
								}
								columnIndex_tFileInputExcel_12 = 16;

								if (temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12].length() > 0) {
									curColNum_tFileInputExcel_12 = columnIndex_tFileInputExcel_12
											+ start_column_tFileInputExcel_12 + 1;
									curColName_tFileInputExcel_12 = "Montant_total";

									row76.Montant_total = temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12];
								} else {
									row76.Montant_total = null;
									emptyColumnCount_tFileInputExcel_12++;
								}
								columnIndex_tFileInputExcel_12 = 17;

								if (temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12].length() > 0) {
									curColNum_tFileInputExcel_12 = columnIndex_tFileInputExcel_12
											+ start_column_tFileInputExcel_12 + 1;
									curColName_tFileInputExcel_12 = "Parent__Produit_existant";

									row76.Parent__Produit_existant = temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12];
								} else {
									row76.Parent__Produit_existant = null;
									emptyColumnCount_tFileInputExcel_12++;
								}
								columnIndex_tFileInputExcel_12 = 18;

								if (temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12].length() > 0) {
									curColNum_tFileInputExcel_12 = columnIndex_tFileInputExcel_12
											+ start_column_tFileInputExcel_12 + 1;
									curColName_tFileInputExcel_12 = "Produit_existant";

									row76.Produit_existant = temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12];
								} else {
									row76.Produit_existant = null;
									emptyColumnCount_tFileInputExcel_12++;
								}
								columnIndex_tFileInputExcel_12 = 19;

								if (temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12].length() > 0) {
									curColNum_tFileInputExcel_12 = columnIndex_tFileInputExcel_12
											+ start_column_tFileInputExcel_12 + 1;
									curColName_tFileInputExcel_12 = "Operation";

									row76.Operation = temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12];
								} else {
									row76.Operation = null;
									emptyColumnCount_tFileInputExcel_12++;
								}
								columnIndex_tFileInputExcel_12 = 20;

								if (temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12].length() > 0) {
									curColNum_tFileInputExcel_12 = columnIndex_tFileInputExcel_12
											+ start_column_tFileInputExcel_12 + 1;
									curColName_tFileInputExcel_12 = "Type_d_operation";

									row76.Type_d_operation = temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12];
								} else {
									row76.Type_d_operation = null;
									emptyColumnCount_tFileInputExcel_12++;
								}
								columnIndex_tFileInputExcel_12 = 21;

								if (temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12].length() > 0) {
									curColNum_tFileInputExcel_12 = columnIndex_tFileInputExcel_12
											+ start_column_tFileInputExcel_12 + 1;
									curColName_tFileInputExcel_12 = "Prix_unitaire";

									row76.Prix_unitaire = temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12];
								} else {
									row76.Prix_unitaire = null;
									emptyColumnCount_tFileInputExcel_12++;
								}
								columnIndex_tFileInputExcel_12 = 22;

								if (temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12].length() > 0) {
									curColNum_tFileInputExcel_12 = columnIndex_tFileInputExcel_12
											+ start_column_tFileInputExcel_12 + 1;
									curColName_tFileInputExcel_12 = "Quantite";

									row76.Quantite = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12], null,
											'.' == decimalChar_tFileInputExcel_12 ? null
													: decimalChar_tFileInputExcel_12));
								} else {
									row76.Quantite = null;
									emptyColumnCount_tFileInputExcel_12++;
								}
								columnIndex_tFileInputExcel_12 = 23;

								if (temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12].length() > 0) {
									curColNum_tFileInputExcel_12 = columnIndex_tFileInputExcel_12
											+ start_column_tFileInputExcel_12 + 1;
									curColName_tFileInputExcel_12 = "Remise";

									row76.Remise = temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12];
								} else {
									row76.Remise = null;
									emptyColumnCount_tFileInputExcel_12++;
								}
								columnIndex_tFileInputExcel_12 = 24;

								if (temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12].length() > 0) {
									curColNum_tFileInputExcel_12 = columnIndex_tFileInputExcel_12
											+ start_column_tFileInputExcel_12 + 1;
									curColName_tFileInputExcel_12 = "Montant_de_la_remise_manuelle";

									row76.Montant_de_la_remise_manuelle = temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12];
								} else {
									row76.Montant_de_la_remise_manuelle = null;
									emptyColumnCount_tFileInputExcel_12++;
								}
								columnIndex_tFileInputExcel_12 = 25;

								if (temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12].length() > 0) {
									curColNum_tFileInputExcel_12 = columnIndex_tFileInputExcel_12
											+ start_column_tFileInputExcel_12 + 1;
									curColName_tFileInputExcel_12 = "Total_final";

									row76.Total_final = temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12];
								} else {
									row76.Total_final = null;
									emptyColumnCount_tFileInputExcel_12++;
								}
								columnIndex_tFileInputExcel_12 = 26;

								if (temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12].length() > 0) {
									curColNum_tFileInputExcel_12 = columnIndex_tFileInputExcel_12
											+ start_column_tFileInputExcel_12 + 1;
									curColName_tFileInputExcel_12 = "Modifie_le";

									if (26 < actual_end_column_tFileInputExcel_12) {
										try {
											if (row_tFileInputExcel_12
													.getCell(columnIndex_tFileInputExcel_12
															+ start_column_tFileInputExcel_12)
													.getCellType() == org.apache.poi.ss.usermodel.CellType.NUMERIC
													&& org.apache.poi.ss.usermodel.DateUtil
															.isCellDateFormatted(row_tFileInputExcel_12
																	.getCell(columnIndex_tFileInputExcel_12
																			+ start_column_tFileInputExcel_12))) {
												row76.Modifie_le = row_tFileInputExcel_12
														.getCell(columnIndex_tFileInputExcel_12
																+ start_column_tFileInputExcel_12)
														.getDateCellValue();
											} else {
												java.util.Date tempDate_tFileInputExcel_12 = ParserUtils.parseTo_Date(
														temp_row_tFileInputExcel_12[columnIndex_tFileInputExcel_12],
														"dd/MM/yyyy HH:mm");
												if (tempDate_tFileInputExcel_12
														.after((new SimpleDateFormat("yyyy/MM/dd hh:mm:ss.SSS"))
																.parse("9999/12/31 23:59:59.999"))
														|| tempDate_tFileInputExcel_12
																.before((new SimpleDateFormat("yyyy/MM/dd"))
																		.parse("1900/01/01"))) {
													throw new RuntimeException("The cell format is not Date in ( Row. "
															+ (nb_line_tFileInputExcel_12 + 1) + " and ColumnNum. "
															+ curColNum_tFileInputExcel_12 + " )");
												} else {
													row76.Modifie_le = tempDate_tFileInputExcel_12;
												}
											}
										} catch (java.lang.Exception e) {
											globalMap.put("tFileInputExcel_12_ERROR_MESSAGE", e.getMessage());

											throw new RuntimeException("The cell format is not Date in ( Row. "
													+ (nb_line_tFileInputExcel_12 + 1) + " and ColumnNum. "
													+ curColNum_tFileInputExcel_12 + " )");
										}
									}

								} else {
									row76.Modifie_le = null;
									emptyColumnCount_tFileInputExcel_12++;
								}

								nb_line_tFileInputExcel_12++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_12_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_12 = true;
								System.err.println(e.getMessage());
								row76 = null;
							}

							/**
							 * [tFileInputExcel_12 begin ] stop
							 */

							/**
							 * [tFileInputExcel_12 main ] start
							 */

							currentComponent = "tFileInputExcel_12";

							tos_count_tFileInputExcel_12++;

							/**
							 * [tFileInputExcel_12 main ] stop
							 */

							/**
							 * [tFileInputExcel_12 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_12";

							/**
							 * [tFileInputExcel_12 process_data_begin ] stop
							 */
// Start of branch "row76"
							if (row76 != null) {

								/**
								 * [tMap_53 main ] start
								 */

								currentComponent = "tMap_53";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row76"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_53 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_53 = false;
								boolean mainRowRejected_tMap_53 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_53__Struct Var = Var__tMap_53;// ###############################
									// ###############################
									// # Output tables

									copyOfDim_type_operation_data_0 = null;

// # Output table : 'copyOfDim_type_operation_data_0'
									copyOfDim_type_operation_data_0_tmp.Type_d_operation = row76.Type_d_operation;
									copyOfDim_type_operation_data_0 = copyOfDim_type_operation_data_0_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_53 = false;

								tos_count_tMap_53++;

								/**
								 * [tMap_53 main ] stop
								 */

								/**
								 * [tMap_53 process_data_begin ] start
								 */

								currentComponent = "tMap_53";

								/**
								 * [tMap_53 process_data_begin ] stop
								 */
// Start of branch "copyOfDim_type_operation_data_0"
								if (copyOfDim_type_operation_data_0 != null) {

									/**
									 * [tMap_54 main ] start
									 */

									currentComponent = "tMap_54";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "copyOfDim_type_operation_data_0"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_54 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_54 = false;
									boolean mainRowRejected_tMap_54 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row77"
									///////////////////////////////////////////////

									boolean forceLooprow77 = false;

									row77Struct row77ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_54) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_54 = false;

										row77HashKey.Type_d_operation = copyOfDim_type_operation_data_0.Type_d_operation;

										row77HashKey.hashCodeDirty = true;

										tHash_Lookup_row77.lookup(row77HashKey);

										if (!tHash_Lookup_row77.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_54 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row77 != null && tHash_Lookup_row77.getCount(row77HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row77' and it contains more one result from keys : row77.Type_d_operation =
										// '" + row77HashKey.Type_d_operation + "'");
									} // G 071

									row77Struct row77 = null;

									row77Struct fromLookup_row77 = null;
									row77 = row77Default;

									if (tHash_Lookup_row77 != null && tHash_Lookup_row77.hasNext()) { // G 099

										fromLookup_row77 = tHash_Lookup_row77.next();

									} // G 099

									if (fromLookup_row77 != null) {
										row77 = fromLookup_row77;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_54__Struct Var = Var__tMap_54;// ###############################
										// ###############################
										// # Output tables

										w = null;

										if (!rejectedInnerJoin_tMap_54) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'w'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_54) {
											w_tmp.Type_d_operation = copyOfDim_type_operation_data_0.Type_d_operation;
											w = w_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_54 = false;

									tos_count_tMap_54++;

									/**
									 * [tMap_54 main ] stop
									 */

									/**
									 * [tMap_54 process_data_begin ] start
									 */

									currentComponent = "tMap_54";

									/**
									 * [tMap_54 process_data_begin ] stop
									 */
// Start of branch "w"
									if (w != null) {

										/**
										 * [tUniqRow_18 main ] start
										 */

										currentComponent = "tUniqRow_18";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "w"

											);
										}

										row78 = null;
										finder_tUniqRow_18.Type_d_operation = w.Type_d_operation;
										finder_tUniqRow_18.hashCodeDirty = true;
										if (!keystUniqRow_18.contains(finder_tUniqRow_18)) {
											KeyStruct_tUniqRow_18 new_tUniqRow_18 = new KeyStruct_tUniqRow_18();

											new_tUniqRow_18.Type_d_operation = w.Type_d_operation;

											keystUniqRow_18.add(new_tUniqRow_18);
											if (row78 == null) {

												row78 = new row78Struct();
											}
											row78.Type_d_operation = w.Type_d_operation;
											nb_uniques_tUniqRow_18++;
										} else {
											nb_duplicates_tUniqRow_18++;
										}

										tos_count_tUniqRow_18++;

										/**
										 * [tUniqRow_18 main ] stop
										 */

										/**
										 * [tUniqRow_18 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_18";

										/**
										 * [tUniqRow_18 process_data_begin ] stop
										 */
// Start of branch "row78"
										if (row78 != null) {

											/**
											 * [tDBOutput_19 main ] start
											 */

											currentComponent = "tDBOutput_19";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row78"

												);
											}

											whetherReject_tDBOutput_19 = false;
											if (row78.Type_d_operation == null) {
												pstmt_tDBOutput_19.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_19.setString(1, row78.Type_d_operation);
											}

											pstmt_tDBOutput_19.addBatch();
											nb_line_tDBOutput_19++;

											batchSizeCounter_tDBOutput_19++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_19 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_19)
														throws Exception {
													try {

														for (int countEach_tDBOutput_19 : pstmt_tDBOutput_19
																.executeBatch()) {
															if (countEach_tDBOutput_19 == -2
																	|| countEach_tDBOutput_19 == -3) {
																break;
															}
															counter += countEach_tDBOutput_19;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_19_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_19 = 0;
														for (int countEach_tDBOutput_19 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_19 < 0 ? 0
																	: countEach_tDBOutput_19);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_19)
														throws Exception {
													try {

														for (int countEach_tDBOutput_19 : pstmt_tDBOutput_19
																.executeBatch()) {
															if (countEach_tDBOutput_19 == -2
																	|| countEach_tDBOutput_19 == -3) {
																break;
															}
															counter += countEach_tDBOutput_19;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_19_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_19 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_19 < 0 ? 0
																	: countEach_tDBOutput_19);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_19 > 0)
													&& (batchSize_tDBOutput_19 <= batchSizeCounter_tDBOutput_19)) {

												insertedCount_tDBOutput_19 = new LimitBytesHelper_tDBOutput_19()
														.limitBytePart1(insertedCount_tDBOutput_19, pstmt_tDBOutput_19);
												rowsToCommitCount_tDBOutput_19 = insertedCount_tDBOutput_19;

												batchSizeCounter_tDBOutput_19 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_19++;
											if (commitEvery_tDBOutput_19 <= commitCounter_tDBOutput_19) {
												if ((batchSize_tDBOutput_19 > 0)
														&& (batchSizeCounter_tDBOutput_19 > 0)) {

													insertedCount_tDBOutput_19 = new LimitBytesHelper_tDBOutput_19()
															.limitBytePart1(insertedCount_tDBOutput_19,
																	pstmt_tDBOutput_19);

													batchSizeCounter_tDBOutput_19 = 0;
												}
												if (rowsToCommitCount_tDBOutput_19 != 0) {

												}
												conn_tDBOutput_19.commit();
												if (rowsToCommitCount_tDBOutput_19 != 0) {

													rowsToCommitCount_tDBOutput_19 = 0;
												}
												commitCounter_tDBOutput_19 = 0;
											}

											tos_count_tDBOutput_19++;

											/**
											 * [tDBOutput_19 main ] stop
											 */

											/**
											 * [tDBOutput_19 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_19";

											/**
											 * [tDBOutput_19 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_19 process_data_end ] start
											 */

											currentComponent = "tDBOutput_19";

											/**
											 * [tDBOutput_19 process_data_end ] stop
											 */

										} // End of branch "row78"

										/**
										 * [tUniqRow_18 process_data_end ] start
										 */

										currentComponent = "tUniqRow_18";

										/**
										 * [tUniqRow_18 process_data_end ] stop
										 */

									} // End of branch "w"

									/**
									 * [tMap_54 process_data_end ] start
									 */

									currentComponent = "tMap_54";

									/**
									 * [tMap_54 process_data_end ] stop
									 */

								} // End of branch "copyOfDim_type_operation_data_0"

								/**
								 * [tMap_53 process_data_end ] start
								 */

								currentComponent = "tMap_53";

								/**
								 * [tMap_53 process_data_end ] stop
								 */

							} // End of branch "row76"

							/**
							 * [tFileInputExcel_12 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_12";

							/**
							 * [tFileInputExcel_12 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_12 end ] start
							 */

							currentComponent = "tFileInputExcel_12";

						}

						globalMap.put("tFileInputExcel_12_NB_LINE", nb_line_tFileInputExcel_12);

					}

				} finally {

					if (!(source_tFileInputExcel_12 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_12.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_12", true);
				end_Hash.put("tFileInputExcel_12", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_12 end ] stop
				 */

				/**
				 * [tMap_53 end ] start
				 */

				currentComponent = "tMap_53";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row76");
				}

				ok_Hash.put("tMap_53", true);
				end_Hash.put("tMap_53", System.currentTimeMillis());

				/**
				 * [tMap_53 end ] stop
				 */

				/**
				 * [tMap_54 end ] start
				 */

				currentComponent = "tMap_54";

// ###############################
// # Lookup hashes releasing
				if (tHash_Lookup_row77 != null) {
					tHash_Lookup_row77.endGet();
				}
				globalMap.remove("tHash_Lookup_row77");

// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "copyOfDim_type_operation_data_0");
				}

				ok_Hash.put("tMap_54", true);
				end_Hash.put("tMap_54", System.currentTimeMillis());

				/**
				 * [tMap_54 end ] stop
				 */

				/**
				 * [tUniqRow_18 end ] start
				 */

				currentComponent = "tUniqRow_18";

				globalMap.put("tUniqRow_18_NB_UNIQUES", nb_uniques_tUniqRow_18);
				globalMap.put("tUniqRow_18_NB_DUPLICATES", nb_duplicates_tUniqRow_18);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "w");
				}

				ok_Hash.put("tUniqRow_18", true);
				end_Hash.put("tUniqRow_18", System.currentTimeMillis());

				/**
				 * [tUniqRow_18 end ] stop
				 */

				/**
				 * [tDBOutput_19 end ] start
				 */

				currentComponent = "tDBOutput_19";

				try {
					int countSum_tDBOutput_19 = 0;
					if (pstmt_tDBOutput_19 != null && batchSizeCounter_tDBOutput_19 > 0) {

						for (int countEach_tDBOutput_19 : pstmt_tDBOutput_19.executeBatch()) {
							if (countEach_tDBOutput_19 == -2 || countEach_tDBOutput_19 == -3) {
								break;
							}
							countSum_tDBOutput_19 += countEach_tDBOutput_19;
						}
						rowsToCommitCount_tDBOutput_19 += countSum_tDBOutput_19;

					}

					insertedCount_tDBOutput_19 += countSum_tDBOutput_19;

				} catch (java.sql.BatchUpdateException e) {
					globalMap.put("tDBOutput_19_ERROR_MESSAGE", e.getMessage());

					int countSum_tDBOutput_19 = 0;
					for (int countEach_tDBOutput_19 : e.getUpdateCounts()) {
						countSum_tDBOutput_19 += (countEach_tDBOutput_19 < 0 ? 0 : countEach_tDBOutput_19);
					}
					rowsToCommitCount_tDBOutput_19 += countSum_tDBOutput_19;

					insertedCount_tDBOutput_19 += countSum_tDBOutput_19;

					System.err.println(e.getMessage());

				}
				if (pstmt_tDBOutput_19 != null) {

					pstmt_tDBOutput_19.close();
					resourceMap.remove("pstmt_tDBOutput_19");

				}
				resourceMap.put("statementClosed_tDBOutput_19", true);
				if (rowsToCommitCount_tDBOutput_19 != 0) {

				}
				conn_tDBOutput_19.commit();
				if (rowsToCommitCount_tDBOutput_19 != 0) {

					rowsToCommitCount_tDBOutput_19 = 0;
				}
				commitCounter_tDBOutput_19 = 0;
				conn_tDBOutput_19.close();
				resourceMap.put("finish_tDBOutput_19", true);

				nb_line_deleted_tDBOutput_19 = nb_line_deleted_tDBOutput_19 + deletedCount_tDBOutput_19;
				nb_line_update_tDBOutput_19 = nb_line_update_tDBOutput_19 + updatedCount_tDBOutput_19;
				nb_line_inserted_tDBOutput_19 = nb_line_inserted_tDBOutput_19 + insertedCount_tDBOutput_19;
				nb_line_rejected_tDBOutput_19 = nb_line_rejected_tDBOutput_19 + rejectedCount_tDBOutput_19;

				globalMap.put("tDBOutput_19_NB_LINE", nb_line_tDBOutput_19);
				globalMap.put("tDBOutput_19_NB_LINE_UPDATED", nb_line_update_tDBOutput_19);
				globalMap.put("tDBOutput_19_NB_LINE_INSERTED", nb_line_inserted_tDBOutput_19);
				globalMap.put("tDBOutput_19_NB_LINE_DELETED", nb_line_deleted_tDBOutput_19);
				globalMap.put("tDBOutput_19_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_19);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row78");
				}

				ok_Hash.put("tDBOutput_19", true);
				end_Hash.put("tDBOutput_19", System.currentTimeMillis());

				/**
				 * [tDBOutput_19 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			// free memory for "tMap_54"
			globalMap.remove("tHash_Lookup_row77");

			try {

				/**
				 * [tFileInputExcel_12 finally ] start
				 */

				currentComponent = "tFileInputExcel_12";

				/**
				 * [tFileInputExcel_12 finally ] stop
				 */

				/**
				 * [tMap_53 finally ] start
				 */

				currentComponent = "tMap_53";

				/**
				 * [tMap_53 finally ] stop
				 */

				/**
				 * [tMap_54 finally ] start
				 */

				currentComponent = "tMap_54";

				/**
				 * [tMap_54 finally ] stop
				 */

				/**
				 * [tUniqRow_18 finally ] start
				 */

				currentComponent = "tUniqRow_18";

				/**
				 * [tUniqRow_18 finally ] stop
				 */

				/**
				 * [tDBOutput_19 finally ] start
				 */

				currentComponent = "tDBOutput_19";

				try {
					if (resourceMap.get("statementClosed_tDBOutput_19") == null) {
						java.sql.PreparedStatement pstmtToClose_tDBOutput_19 = null;
						if ((pstmtToClose_tDBOutput_19 = (java.sql.PreparedStatement) resourceMap
								.remove("pstmt_tDBOutput_19")) != null) {
							pstmtToClose_tDBOutput_19.close();
						}
					}
				} finally {
					if (resourceMap.get("finish_tDBOutput_19") == null) {
						java.sql.Connection ctn_tDBOutput_19 = null;
						if ((ctn_tDBOutput_19 = (java.sql.Connection) resourceMap.get("conn_tDBOutput_19")) != null) {
							try {
								ctn_tDBOutput_19.close();
							} catch (java.sql.SQLException sqlEx_tDBOutput_19) {
								String errorMessage_tDBOutput_19 = "failed to close the connection in tDBOutput_19 :"
										+ sqlEx_tDBOutput_19.getMessage();
								System.err.println(errorMessage_tDBOutput_19);
							}
						}
					}
				}

				/**
				 * [tDBOutput_19 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tFileInputExcel_12_SUBPROCESS_STATE", 1);
	}

	public static class row81Struct implements routines.system.IPersistableRow<row81Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Sujet;

		public String getSujet() {
			return this.Sujet;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Sujet = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Sujet = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Sujet, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Sujet, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Sujet=" + Sujet);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row81Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class copyOfqStruct implements routines.system.IPersistableRow<copyOfqStruct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Sujet;

		public String getSujet() {
			return this.Sujet;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Sujet = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Sujet = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Sujet, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Sujet, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Sujet=" + Sujet);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(copyOfqStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class copyOfDim_sujet_dataStruct
			implements routines.system.IPersistableRow<copyOfDim_sujet_dataStruct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Sujet;

		public String getSujet() {
			return this.Sujet;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Sujet = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Sujet = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Sujet, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Sujet, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Sujet=" + Sujet);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(copyOfDim_sujet_dataStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row59Struct implements routines.system.IPersistableRow<row59Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Client_Prospect;

		public String getClient_Prospect() {
			return this.Client_Prospect;
		}

		public String Sujet;

		public String getSujet() {
			return this.Sujet;
		}

		public String Acces;

		public String getAcces() {
			return this.Acces;
		}

		public String Type_d_acces;

		public String getType_d_acces() {
			return this.Type_d_acces;
		}

		public String Account_Manager__Client_Prospect;

		public String getAccount_Manager__Client_Prospect() {
			return this.Account_Manager__Client_Prospect;
		}

		public String Cree_le;

		public String getCree_le() {
			return this.Cree_le;
		}

		public String Mois_et_annee_de_creation;

		public String getMois_et_annee_de_creation() {
			return this.Mois_et_annee_de_creation;
		}

		public String Cree_par;

		public String getCree_par() {
			return this.Cree_par;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public String Proprietaire;

		public String getProprietaire() {
			return this.Proprietaire;
		}

		public String Phase_de_l_opportunite;

		public String getPhase_de_l_opportunite() {
			return this.Phase_de_l_opportunite;
		}

		public Integer Valeur_ordering;

		public Integer getValeur_ordering() {
			return this.Valeur_ordering;
		}

		public String Statut;

		public String getStatut() {
			return this.Statut;
		}

		public String Staut_Final;

		public String getStaut_Final() {
			return this.Staut_Final;
		}

		public String Tarifs;

		public String getTarifs() {
			return this.Tarifs;
		}

		public String Montant_total;

		public String getMontant_total() {
			return this.Montant_total;
		}

		public String Parent__Produit_existant;

		public String getParent__Produit_existant() {
			return this.Parent__Produit_existant;
		}

		public String Produit_existant;

		public String getProduit_existant() {
			return this.Produit_existant;
		}

		public String Operation;

		public String getOperation() {
			return this.Operation;
		}

		public String Type_d_operation;

		public String getType_d_operation() {
			return this.Type_d_operation;
		}

		public String Prix_unitaire;

		public String getPrix_unitaire() {
			return this.Prix_unitaire;
		}

		public Integer Quantite;

		public Integer getQuantite() {
			return this.Quantite;
		}

		public String Remise;

		public String getRemise() {
			return this.Remise;
		}

		public String Montant_de_la_remise_manuelle;

		public String getMontant_de_la_remise_manuelle() {
			return this.Montant_de_la_remise_manuelle;
		}

		public String Total_final;

		public String getTotal_final() {
			return this.Total_final;
		}

		public String Mois_et_annee_de_modification;

		public String getMois_et_annee_de_modification() {
			return this.Mois_et_annee_de_modification;
		}

		public java.util.Date Modifie_le;

		public java.util.Date getModifie_le() {
			return this.Modifie_le;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		private java.util.Date readDate(ObjectInputStream dis) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(dis.readLong());
			}
			return dateReturn;
		}

		private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(unmarshaller.readLong());
			}
			return dateReturn;
		}

		private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException {
			if (date1 == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeLong(date1.getTime());
			}
		}

		private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (date1 == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeLong(date1.getTime());
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

					this.Sujet = readString(dis);

					this.Acces = readString(dis);

					this.Type_d_acces = readString(dis);

					this.Account_Manager__Client_Prospect = readString(dis);

					this.Cree_le = readString(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Proprietaire = readString(dis);

					this.Phase_de_l_opportunite = readString(dis);

					this.Valeur_ordering = readInteger(dis);

					this.Statut = readString(dis);

					this.Staut_Final = readString(dis);

					this.Tarifs = readString(dis);

					this.Montant_total = readString(dis);

					this.Parent__Produit_existant = readString(dis);

					this.Produit_existant = readString(dis);

					this.Operation = readString(dis);

					this.Type_d_operation = readString(dis);

					this.Prix_unitaire = readString(dis);

					this.Quantite = readInteger(dis);

					this.Remise = readString(dis);

					this.Montant_de_la_remise_manuelle = readString(dis);

					this.Total_final = readString(dis);

					this.Mois_et_annee_de_modification = readString(dis);

					this.Modifie_le = readDate(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

					this.Sujet = readString(dis);

					this.Acces = readString(dis);

					this.Type_d_acces = readString(dis);

					this.Account_Manager__Client_Prospect = readString(dis);

					this.Cree_le = readString(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Proprietaire = readString(dis);

					this.Phase_de_l_opportunite = readString(dis);

					this.Valeur_ordering = readInteger(dis);

					this.Statut = readString(dis);

					this.Staut_Final = readString(dis);

					this.Tarifs = readString(dis);

					this.Montant_total = readString(dis);

					this.Parent__Produit_existant = readString(dis);

					this.Produit_existant = readString(dis);

					this.Operation = readString(dis);

					this.Type_d_operation = readString(dis);

					this.Prix_unitaire = readString(dis);

					this.Quantite = readInteger(dis);

					this.Remise = readString(dis);

					this.Montant_de_la_remise_manuelle = readString(dis);

					this.Total_final = readString(dis);

					this.Mois_et_annee_de_modification = readString(dis);

					this.Modifie_le = readDate(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Acces, dos);

				// String

				writeString(this.Type_d_acces, dos);

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

				// String

				writeString(this.Cree_le, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Proprietaire, dos);

				// String

				writeString(this.Phase_de_l_opportunite, dos);

				// Integer

				writeInteger(this.Valeur_ordering, dos);

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Tarifs, dos);

				// String

				writeString(this.Montant_total, dos);

				// String

				writeString(this.Parent__Produit_existant, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Operation, dos);

				// String

				writeString(this.Type_d_operation, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// Integer

				writeInteger(this.Quantite, dos);

				// String

				writeString(this.Remise, dos);

				// String

				writeString(this.Montant_de_la_remise_manuelle, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Mois_et_annee_de_modification, dos);

				// java.util.Date

				writeDate(this.Modifie_le, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Acces, dos);

				// String

				writeString(this.Type_d_acces, dos);

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

				// String

				writeString(this.Cree_le, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Proprietaire, dos);

				// String

				writeString(this.Phase_de_l_opportunite, dos);

				// Integer

				writeInteger(this.Valeur_ordering, dos);

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Tarifs, dos);

				// String

				writeString(this.Montant_total, dos);

				// String

				writeString(this.Parent__Produit_existant, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Operation, dos);

				// String

				writeString(this.Type_d_operation, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// Integer

				writeInteger(this.Quantite, dos);

				// String

				writeString(this.Remise, dos);

				// String

				writeString(this.Montant_de_la_remise_manuelle, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Mois_et_annee_de_modification, dos);

				// java.util.Date

				writeDate(this.Modifie_le, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Client_Prospect=" + Client_Prospect);
			sb.append(",Sujet=" + Sujet);
			sb.append(",Acces=" + Acces);
			sb.append(",Type_d_acces=" + Type_d_acces);
			sb.append(",Account_Manager__Client_Prospect=" + Account_Manager__Client_Prospect);
			sb.append(",Cree_le=" + Cree_le);
			sb.append(",Mois_et_annee_de_creation=" + Mois_et_annee_de_creation);
			sb.append(",Cree_par=" + Cree_par);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Proprietaire=" + Proprietaire);
			sb.append(",Phase_de_l_opportunite=" + Phase_de_l_opportunite);
			sb.append(",Valeur_ordering=" + String.valueOf(Valeur_ordering));
			sb.append(",Statut=" + Statut);
			sb.append(",Staut_Final=" + Staut_Final);
			sb.append(",Tarifs=" + Tarifs);
			sb.append(",Montant_total=" + Montant_total);
			sb.append(",Parent__Produit_existant=" + Parent__Produit_existant);
			sb.append(",Produit_existant=" + Produit_existant);
			sb.append(",Operation=" + Operation);
			sb.append(",Type_d_operation=" + Type_d_operation);
			sb.append(",Prix_unitaire=" + Prix_unitaire);
			sb.append(",Quantite=" + String.valueOf(Quantite));
			sb.append(",Remise=" + Remise);
			sb.append(",Montant_de_la_remise_manuelle=" + Montant_de_la_remise_manuelle);
			sb.append(",Total_final=" + Total_final);
			sb.append(",Mois_et_annee_de_modification=" + Mois_et_annee_de_modification);
			sb.append(",Modifie_le=" + String.valueOf(Modifie_le));
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row59Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class after_tFileInputExcel_13Struct
			implements routines.system.IPersistableRow<after_tFileInputExcel_13Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Client_Prospect;

		public String getClient_Prospect() {
			return this.Client_Prospect;
		}

		public String Sujet;

		public String getSujet() {
			return this.Sujet;
		}

		public String Acces;

		public String getAcces() {
			return this.Acces;
		}

		public String Type_d_acces;

		public String getType_d_acces() {
			return this.Type_d_acces;
		}

		public String Account_Manager__Client_Prospect;

		public String getAccount_Manager__Client_Prospect() {
			return this.Account_Manager__Client_Prospect;
		}

		public String Cree_le;

		public String getCree_le() {
			return this.Cree_le;
		}

		public String Mois_et_annee_de_creation;

		public String getMois_et_annee_de_creation() {
			return this.Mois_et_annee_de_creation;
		}

		public String Cree_par;

		public String getCree_par() {
			return this.Cree_par;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public String Proprietaire;

		public String getProprietaire() {
			return this.Proprietaire;
		}

		public String Phase_de_l_opportunite;

		public String getPhase_de_l_opportunite() {
			return this.Phase_de_l_opportunite;
		}

		public Integer Valeur_ordering;

		public Integer getValeur_ordering() {
			return this.Valeur_ordering;
		}

		public String Statut;

		public String getStatut() {
			return this.Statut;
		}

		public String Staut_Final;

		public String getStaut_Final() {
			return this.Staut_Final;
		}

		public String Tarifs;

		public String getTarifs() {
			return this.Tarifs;
		}

		public String Montant_total;

		public String getMontant_total() {
			return this.Montant_total;
		}

		public String Parent__Produit_existant;

		public String getParent__Produit_existant() {
			return this.Parent__Produit_existant;
		}

		public String Produit_existant;

		public String getProduit_existant() {
			return this.Produit_existant;
		}

		public String Operation;

		public String getOperation() {
			return this.Operation;
		}

		public String Type_d_operation;

		public String getType_d_operation() {
			return this.Type_d_operation;
		}

		public String Prix_unitaire;

		public String getPrix_unitaire() {
			return this.Prix_unitaire;
		}

		public Integer Quantite;

		public Integer getQuantite() {
			return this.Quantite;
		}

		public String Remise;

		public String getRemise() {
			return this.Remise;
		}

		public String Montant_de_la_remise_manuelle;

		public String getMontant_de_la_remise_manuelle() {
			return this.Montant_de_la_remise_manuelle;
		}

		public String Total_final;

		public String getTotal_final() {
			return this.Total_final;
		}

		public String Mois_et_annee_de_modification;

		public String getMois_et_annee_de_modification() {
			return this.Mois_et_annee_de_modification;
		}

		public java.util.Date Modifie_le;

		public java.util.Date getModifie_le() {
			return this.Modifie_le;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		private java.util.Date readDate(ObjectInputStream dis) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(dis.readLong());
			}
			return dateReturn;
		}

		private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(unmarshaller.readLong());
			}
			return dateReturn;
		}

		private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException {
			if (date1 == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeLong(date1.getTime());
			}
		}

		private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (date1 == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeLong(date1.getTime());
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

					this.Sujet = readString(dis);

					this.Acces = readString(dis);

					this.Type_d_acces = readString(dis);

					this.Account_Manager__Client_Prospect = readString(dis);

					this.Cree_le = readString(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Proprietaire = readString(dis);

					this.Phase_de_l_opportunite = readString(dis);

					this.Valeur_ordering = readInteger(dis);

					this.Statut = readString(dis);

					this.Staut_Final = readString(dis);

					this.Tarifs = readString(dis);

					this.Montant_total = readString(dis);

					this.Parent__Produit_existant = readString(dis);

					this.Produit_existant = readString(dis);

					this.Operation = readString(dis);

					this.Type_d_operation = readString(dis);

					this.Prix_unitaire = readString(dis);

					this.Quantite = readInteger(dis);

					this.Remise = readString(dis);

					this.Montant_de_la_remise_manuelle = readString(dis);

					this.Total_final = readString(dis);

					this.Mois_et_annee_de_modification = readString(dis);

					this.Modifie_le = readDate(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

					this.Sujet = readString(dis);

					this.Acces = readString(dis);

					this.Type_d_acces = readString(dis);

					this.Account_Manager__Client_Prospect = readString(dis);

					this.Cree_le = readString(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Proprietaire = readString(dis);

					this.Phase_de_l_opportunite = readString(dis);

					this.Valeur_ordering = readInteger(dis);

					this.Statut = readString(dis);

					this.Staut_Final = readString(dis);

					this.Tarifs = readString(dis);

					this.Montant_total = readString(dis);

					this.Parent__Produit_existant = readString(dis);

					this.Produit_existant = readString(dis);

					this.Operation = readString(dis);

					this.Type_d_operation = readString(dis);

					this.Prix_unitaire = readString(dis);

					this.Quantite = readInteger(dis);

					this.Remise = readString(dis);

					this.Montant_de_la_remise_manuelle = readString(dis);

					this.Total_final = readString(dis);

					this.Mois_et_annee_de_modification = readString(dis);

					this.Modifie_le = readDate(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Acces, dos);

				// String

				writeString(this.Type_d_acces, dos);

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

				// String

				writeString(this.Cree_le, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Proprietaire, dos);

				// String

				writeString(this.Phase_de_l_opportunite, dos);

				// Integer

				writeInteger(this.Valeur_ordering, dos);

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Tarifs, dos);

				// String

				writeString(this.Montant_total, dos);

				// String

				writeString(this.Parent__Produit_existant, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Operation, dos);

				// String

				writeString(this.Type_d_operation, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// Integer

				writeInteger(this.Quantite, dos);

				// String

				writeString(this.Remise, dos);

				// String

				writeString(this.Montant_de_la_remise_manuelle, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Mois_et_annee_de_modification, dos);

				// java.util.Date

				writeDate(this.Modifie_le, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Acces, dos);

				// String

				writeString(this.Type_d_acces, dos);

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

				// String

				writeString(this.Cree_le, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Proprietaire, dos);

				// String

				writeString(this.Phase_de_l_opportunite, dos);

				// Integer

				writeInteger(this.Valeur_ordering, dos);

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Tarifs, dos);

				// String

				writeString(this.Montant_total, dos);

				// String

				writeString(this.Parent__Produit_existant, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Operation, dos);

				// String

				writeString(this.Type_d_operation, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// Integer

				writeInteger(this.Quantite, dos);

				// String

				writeString(this.Remise, dos);

				// String

				writeString(this.Montant_de_la_remise_manuelle, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Mois_et_annee_de_modification, dos);

				// java.util.Date

				writeDate(this.Modifie_le, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Client_Prospect=" + Client_Prospect);
			sb.append(",Sujet=" + Sujet);
			sb.append(",Acces=" + Acces);
			sb.append(",Type_d_acces=" + Type_d_acces);
			sb.append(",Account_Manager__Client_Prospect=" + Account_Manager__Client_Prospect);
			sb.append(",Cree_le=" + Cree_le);
			sb.append(",Mois_et_annee_de_creation=" + Mois_et_annee_de_creation);
			sb.append(",Cree_par=" + Cree_par);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Proprietaire=" + Proprietaire);
			sb.append(",Phase_de_l_opportunite=" + Phase_de_l_opportunite);
			sb.append(",Valeur_ordering=" + String.valueOf(Valeur_ordering));
			sb.append(",Statut=" + Statut);
			sb.append(",Staut_Final=" + Staut_Final);
			sb.append(",Tarifs=" + Tarifs);
			sb.append(",Montant_total=" + Montant_total);
			sb.append(",Parent__Produit_existant=" + Parent__Produit_existant);
			sb.append(",Produit_existant=" + Produit_existant);
			sb.append(",Operation=" + Operation);
			sb.append(",Type_d_operation=" + Type_d_operation);
			sb.append(",Prix_unitaire=" + Prix_unitaire);
			sb.append(",Quantite=" + String.valueOf(Quantite));
			sb.append(",Remise=" + Remise);
			sb.append(",Montant_de_la_remise_manuelle=" + Montant_de_la_remise_manuelle);
			sb.append(",Total_final=" + Total_final);
			sb.append(",Mois_et_annee_de_modification=" + Mois_et_annee_de_modification);
			sb.append(",Modifie_le=" + String.valueOf(Modifie_le));
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(after_tFileInputExcel_13Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tFileInputExcel_13Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tFileInputExcel_13_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				tDBInput_20Process(globalMap);

				row59Struct row59 = new row59Struct();
				copyOfDim_sujet_dataStruct copyOfDim_sujet_data = new copyOfDim_sujet_dataStruct();
				copyOfqStruct copyOfq = new copyOfqStruct();
				row81Struct row81 = new row81Struct();

				/**
				 * [tDBOutput_20 begin ] start
				 */

				ok_Hash.put("tDBOutput_20", false);
				start_Hash.put("tDBOutput_20", System.currentTimeMillis());

				currentComponent = "tDBOutput_20";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row81");
				}

				int tos_count_tDBOutput_20 = 0;

				int nb_line_tDBOutput_20 = 0;
				int nb_line_update_tDBOutput_20 = 0;
				int nb_line_inserted_tDBOutput_20 = 0;
				int nb_line_deleted_tDBOutput_20 = 0;
				int nb_line_rejected_tDBOutput_20 = 0;

				int deletedCount_tDBOutput_20 = 0;
				int updatedCount_tDBOutput_20 = 0;
				int insertedCount_tDBOutput_20 = 0;
				int rowsToCommitCount_tDBOutput_20 = 0;
				int rejectedCount_tDBOutput_20 = 0;
				String dbschema_tDBOutput_20 = null;
				String tableName_tDBOutput_20 = null;
				boolean whetherReject_tDBOutput_20 = false;

				java.util.Calendar calendar_tDBOutput_20 = java.util.Calendar.getInstance();
				long year1_tDBOutput_20 = TalendDate.parseDate("yyyy-MM-dd", "0001-01-01").getTime();
				long year2_tDBOutput_20 = TalendDate.parseDate("yyyy-MM-dd", "1753-01-01").getTime();
				long year10000_tDBOutput_20 = TalendDate.parseDate("yyyy-MM-dd HH:mm:ss", "9999-12-31 24:00:00")
						.getTime();
				long date_tDBOutput_20;

				java.util.Calendar calendar_datetimeoffset_tDBOutput_20 = java.util.Calendar
						.getInstance(java.util.TimeZone.getTimeZone("UTC"));

				java.sql.Connection conn_tDBOutput_20 = null;
				String dbUser_tDBOutput_20 = null;
				dbschema_tDBOutput_20 = "dbo";
				String driverClass_tDBOutput_20 = "net.sourceforge.jtds.jdbc.Driver";

				java.lang.Class.forName(driverClass_tDBOutput_20);
				String port_tDBOutput_20 = "1433";
				String dbname_tDBOutput_20 = "orange_DW__";
				String url_tDBOutput_20 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBOutput_20)) {
					url_tDBOutput_20 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBOutput_20)) {
					url_tDBOutput_20 += "//" + "orange_DW__";

				}
				url_tDBOutput_20 += ";appName=" + projectName + ";" + "";
				dbUser_tDBOutput_20 = "sa";

				final String decryptedPassword_tDBOutput_20 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:qhqH29RaIuJpIkyW9gpYP/jbRV6s0oPl5RWDhm6gNF6AEAF3WDQ=");

				String dbPwd_tDBOutput_20 = decryptedPassword_tDBOutput_20;
				conn_tDBOutput_20 = java.sql.DriverManager.getConnection(url_tDBOutput_20, dbUser_tDBOutput_20,
						dbPwd_tDBOutput_20);

				resourceMap.put("conn_tDBOutput_20", conn_tDBOutput_20);

				conn_tDBOutput_20.setAutoCommit(false);
				int commitEvery_tDBOutput_20 = 10000;
				int commitCounter_tDBOutput_20 = 0;

				int batchSize_tDBOutput_20 = 10000;
				int batchSizeCounter_tDBOutput_20 = 0;

				if (dbschema_tDBOutput_20 == null || dbschema_tDBOutput_20.trim().length() == 0) {
					tableName_tDBOutput_20 = "Dim_sujet";
				} else {
					tableName_tDBOutput_20 = dbschema_tDBOutput_20 + "].[" + "Dim_sujet";
				}
				int count_tDBOutput_20 = 0;

				String insert_tDBOutput_20 = "INSERT INTO [" + tableName_tDBOutput_20 + "] ([Sujet]) VALUES (?)";
				java.sql.PreparedStatement pstmt_tDBOutput_20 = conn_tDBOutput_20.prepareStatement(insert_tDBOutput_20);
				resourceMap.put("pstmt_tDBOutput_20", pstmt_tDBOutput_20);

				/**
				 * [tDBOutput_20 begin ] stop
				 */

				/**
				 * [tUniqRow_19 begin ] start
				 */

				ok_Hash.put("tUniqRow_19", false);
				start_Hash.put("tUniqRow_19", System.currentTimeMillis());

				currentComponent = "tUniqRow_19";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "copyOfq");
				}

				int tos_count_tUniqRow_19 = 0;

				class KeyStruct_tUniqRow_19 {

					private static final int DEFAULT_HASHCODE = 1;
					private static final int PRIME = 31;
					private int hashCode = DEFAULT_HASHCODE;
					public boolean hashCodeDirty = true;

					String Sujet;

					@Override
					public int hashCode() {
						if (this.hashCodeDirty) {
							final int prime = PRIME;
							int result = DEFAULT_HASHCODE;

							result = prime * result + ((this.Sujet == null) ? 0 : this.Sujet.hashCode());

							this.hashCode = result;
							this.hashCodeDirty = false;
						}
						return this.hashCode;
					}

					@Override
					public boolean equals(Object obj) {
						if (this == obj)
							return true;
						if (obj == null)
							return false;
						if (getClass() != obj.getClass())
							return false;
						final KeyStruct_tUniqRow_19 other = (KeyStruct_tUniqRow_19) obj;

						if (this.Sujet == null) {
							if (other.Sujet != null)
								return false;

						} else if (!this.Sujet.equals(other.Sujet))

							return false;

						return true;
					}

				}

				int nb_uniques_tUniqRow_19 = 0;
				int nb_duplicates_tUniqRow_19 = 0;
				KeyStruct_tUniqRow_19 finder_tUniqRow_19 = new KeyStruct_tUniqRow_19();
				java.util.Set<KeyStruct_tUniqRow_19> keystUniqRow_19 = new java.util.HashSet<KeyStruct_tUniqRow_19>();

				/**
				 * [tUniqRow_19 begin ] stop
				 */

				/**
				 * [tMap_56 begin ] start
				 */

				ok_Hash.put("tMap_56", false);
				start_Hash.put("tMap_56", System.currentTimeMillis());

				currentComponent = "tMap_56";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "copyOfDim_sujet_data");
				}

				int tos_count_tMap_56 = 0;

// ###############################
// # Lookup's keys initialization

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row80Struct> tHash_Lookup_row80 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row80Struct>) ((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row80Struct>) globalMap
						.get("tHash_Lookup_row80"));

				row80Struct row80HashKey = new row80Struct();
				row80Struct row80Default = new row80Struct();
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_56__Struct {
				}
				Var__tMap_56__Struct Var__tMap_56 = new Var__tMap_56__Struct();
// ###############################

// ###############################
// # Outputs initialization
				copyOfqStruct copyOfq_tmp = new copyOfqStruct();
// ###############################

				/**
				 * [tMap_56 begin ] stop
				 */

				/**
				 * [tMap_55 begin ] start
				 */

				ok_Hash.put("tMap_55", false);
				start_Hash.put("tMap_55", System.currentTimeMillis());

				currentComponent = "tMap_55";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row59");
				}

				int tos_count_tMap_55 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_55__Struct {
				}
				Var__tMap_55__Struct Var__tMap_55 = new Var__tMap_55__Struct();
// ###############################

// ###############################
// # Outputs initialization
				copyOfDim_sujet_dataStruct copyOfDim_sujet_data_tmp = new copyOfDim_sujet_dataStruct();
// ###############################

				/**
				 * [tMap_55 begin ] stop
				 */

				/**
				 * [tFileInputExcel_13 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_13", false);
				start_Hash.put("tFileInputExcel_13", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_13";

				int tos_count_tFileInputExcel_13 = 0;

				final String decryptedPassword_tFileInputExcel_13 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:eyCYjAo90ZMCfi6fi97toLP+66i+p7xntoLlTQ==");
				String password_tFileInputExcel_13 = decryptedPassword_tFileInputExcel_13;
				if (password_tFileInputExcel_13.isEmpty()) {
					password_tFileInputExcel_13 = null;
				}
				class RegexUtil_tFileInputExcel_13 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_13 regexUtil_tFileInputExcel_13 = new RegexUtil_tFileInputExcel_13();

				Object source_tFileInputExcel_13 = "C:/Users/DELL/Downloads/Copie de Rapport Pipe et realisations DME Data et VoIP (2).xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_13 = null;

				if (source_tFileInputExcel_13 instanceof String) {
					workbook_tFileInputExcel_13 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_13), password_tFileInputExcel_13,
									true);
				} else if (source_tFileInputExcel_13 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_13 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_13, password_tFileInputExcel_13);
				} else {
					workbook_tFileInputExcel_13 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_13 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_13.addAll(
							regexUtil_tFileInputExcel_13.getSheets(workbook_tFileInputExcel_13, "Source", false));
					if (sheetList_tFileInputExcel_13.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_13 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_13 : sheetList_tFileInputExcel_13) {
						if (sheet_FilterNull_tFileInputExcel_13 != null
								&& sheetList_FilterNull_tFileInputExcel_13.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_13.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_13.add(sheet_FilterNull_tFileInputExcel_13);
						}
					}
					sheetList_tFileInputExcel_13 = sheetList_FilterNull_tFileInputExcel_13;
					if (sheetList_tFileInputExcel_13.size() > 0) {
						int nb_line_tFileInputExcel_13 = 0;

						int begin_line_tFileInputExcel_13 = 1;

						int footer_input_tFileInputExcel_13 = 0;

						int end_line_tFileInputExcel_13 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_13 : sheetList_tFileInputExcel_13) {
							end_line_tFileInputExcel_13 += (sheet_tFileInputExcel_13.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_13 -= footer_input_tFileInputExcel_13;
						int limit_tFileInputExcel_13 = -1;
						int start_column_tFileInputExcel_13 = 1 - 1;
						int end_column_tFileInputExcel_13 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_13 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_13 = sheetList_tFileInputExcel_13
								.get(0);
						int rowCount_tFileInputExcel_13 = 0;
						int sheetIndex_tFileInputExcel_13 = 0;
						int currentRows_tFileInputExcel_13 = (sheetList_tFileInputExcel_13.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_13 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_13 = df_tFileInputExcel_13.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_13 = begin_line_tFileInputExcel_13; i_tFileInputExcel_13 < end_line_tFileInputExcel_13; i_tFileInputExcel_13++) {

							int emptyColumnCount_tFileInputExcel_13 = 0;

							if (limit_tFileInputExcel_13 != -1
									&& nb_line_tFileInputExcel_13 >= limit_tFileInputExcel_13) {
								break;
							}

							while (i_tFileInputExcel_13 >= rowCount_tFileInputExcel_13
									+ currentRows_tFileInputExcel_13) {
								rowCount_tFileInputExcel_13 += currentRows_tFileInputExcel_13;
								sheet_tFileInputExcel_13 = sheetList_tFileInputExcel_13
										.get(++sheetIndex_tFileInputExcel_13);
								currentRows_tFileInputExcel_13 = (sheet_tFileInputExcel_13.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_13_CURRENT_SHEET", sheet_tFileInputExcel_13.getSheetName());
							if (rowCount_tFileInputExcel_13 <= i_tFileInputExcel_13) {
								row_tFileInputExcel_13 = sheet_tFileInputExcel_13
										.getRow(i_tFileInputExcel_13 - rowCount_tFileInputExcel_13);
							}
							row59 = null;
							int tempRowLength_tFileInputExcel_13 = 27;

							int columnIndex_tFileInputExcel_13 = 0;

							String[] temp_row_tFileInputExcel_13 = new String[tempRowLength_tFileInputExcel_13];
							int excel_end_column_tFileInputExcel_13;
							if (row_tFileInputExcel_13 == null) {
								excel_end_column_tFileInputExcel_13 = 0;
							} else {
								excel_end_column_tFileInputExcel_13 = row_tFileInputExcel_13.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_13;
							if (end_column_tFileInputExcel_13 == -1) {
								actual_end_column_tFileInputExcel_13 = excel_end_column_tFileInputExcel_13;
							} else {
								actual_end_column_tFileInputExcel_13 = end_column_tFileInputExcel_13 > excel_end_column_tFileInputExcel_13
										? excel_end_column_tFileInputExcel_13
										: end_column_tFileInputExcel_13;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_13 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_13; i++) {
								if (i + start_column_tFileInputExcel_13 < actual_end_column_tFileInputExcel_13) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_13 = row_tFileInputExcel_13
											.getCell(i + start_column_tFileInputExcel_13);
									if (cell_tFileInputExcel_13 != null) {
										switch (cell_tFileInputExcel_13.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_13[i] = cell_tFileInputExcel_13
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_13)) {
												temp_row_tFileInputExcel_13[i] = cell_tFileInputExcel_13
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_13[i] = df_tFileInputExcel_13
														.format(cell_tFileInputExcel_13.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_13[i] = String
													.valueOf(cell_tFileInputExcel_13.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_13.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_13[i] = cell_tFileInputExcel_13
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_13)) {
													temp_row_tFileInputExcel_13[i] = cell_tFileInputExcel_13
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_13 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_13.getNumericCellValue());
													temp_row_tFileInputExcel_13[i] = ne_tFileInputExcel_13
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_13[i] = String
														.valueOf(cell_tFileInputExcel_13.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_13[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_13[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_13[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_13[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_13 = false;
							row59 = new row59Struct();
							int curColNum_tFileInputExcel_13 = -1;
							String curColName_tFileInputExcel_13 = "";
							try {
								columnIndex_tFileInputExcel_13 = 0;

								if (temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13].length() > 0) {
									curColNum_tFileInputExcel_13 = columnIndex_tFileInputExcel_13
											+ start_column_tFileInputExcel_13 + 1;
									curColName_tFileInputExcel_13 = "Client_Prospect";

									row59.Client_Prospect = temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13];
								} else {
									row59.Client_Prospect = null;
									emptyColumnCount_tFileInputExcel_13++;
								}
								columnIndex_tFileInputExcel_13 = 1;

								if (temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13].length() > 0) {
									curColNum_tFileInputExcel_13 = columnIndex_tFileInputExcel_13
											+ start_column_tFileInputExcel_13 + 1;
									curColName_tFileInputExcel_13 = "Sujet";

									row59.Sujet = temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13];
								} else {
									row59.Sujet = null;
									emptyColumnCount_tFileInputExcel_13++;
								}
								columnIndex_tFileInputExcel_13 = 2;

								if (temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13].length() > 0) {
									curColNum_tFileInputExcel_13 = columnIndex_tFileInputExcel_13
											+ start_column_tFileInputExcel_13 + 1;
									curColName_tFileInputExcel_13 = "Acces";

									row59.Acces = temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13];
								} else {
									row59.Acces = null;
									emptyColumnCount_tFileInputExcel_13++;
								}
								columnIndex_tFileInputExcel_13 = 3;

								if (temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13].length() > 0) {
									curColNum_tFileInputExcel_13 = columnIndex_tFileInputExcel_13
											+ start_column_tFileInputExcel_13 + 1;
									curColName_tFileInputExcel_13 = "Type_d_acces";

									row59.Type_d_acces = temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13];
								} else {
									row59.Type_d_acces = null;
									emptyColumnCount_tFileInputExcel_13++;
								}
								columnIndex_tFileInputExcel_13 = 4;

								if (temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13].length() > 0) {
									curColNum_tFileInputExcel_13 = columnIndex_tFileInputExcel_13
											+ start_column_tFileInputExcel_13 + 1;
									curColName_tFileInputExcel_13 = "Account_Manager__Client_Prospect";

									row59.Account_Manager__Client_Prospect = temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13];
								} else {
									row59.Account_Manager__Client_Prospect = null;
									emptyColumnCount_tFileInputExcel_13++;
								}
								columnIndex_tFileInputExcel_13 = 5;

								if (temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13].length() > 0) {
									curColNum_tFileInputExcel_13 = columnIndex_tFileInputExcel_13
											+ start_column_tFileInputExcel_13 + 1;
									curColName_tFileInputExcel_13 = "Cree_le";

									row59.Cree_le = temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13];
								} else {
									row59.Cree_le = null;
									emptyColumnCount_tFileInputExcel_13++;
								}
								columnIndex_tFileInputExcel_13 = 6;

								if (temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13].length() > 0) {
									curColNum_tFileInputExcel_13 = columnIndex_tFileInputExcel_13
											+ start_column_tFileInputExcel_13 + 1;
									curColName_tFileInputExcel_13 = "Mois_et_annee_de_creation";

									row59.Mois_et_annee_de_creation = temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13];
								} else {
									row59.Mois_et_annee_de_creation = null;
									emptyColumnCount_tFileInputExcel_13++;
								}
								columnIndex_tFileInputExcel_13 = 7;

								if (temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13].length() > 0) {
									curColNum_tFileInputExcel_13 = columnIndex_tFileInputExcel_13
											+ start_column_tFileInputExcel_13 + 1;
									curColName_tFileInputExcel_13 = "Cree_par";

									row59.Cree_par = temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13];
								} else {
									row59.Cree_par = null;
									emptyColumnCount_tFileInputExcel_13++;
								}
								columnIndex_tFileInputExcel_13 = 8;

								if (temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13].length() > 0) {
									curColNum_tFileInputExcel_13 = columnIndex_tFileInputExcel_13
											+ start_column_tFileInputExcel_13 + 1;
									curColName_tFileInputExcel_13 = "Equipe";

									row59.Equipe = temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13];
								} else {
									row59.Equipe = null;
									emptyColumnCount_tFileInputExcel_13++;
								}
								columnIndex_tFileInputExcel_13 = 9;

								if (temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13].length() > 0) {
									curColNum_tFileInputExcel_13 = columnIndex_tFileInputExcel_13
											+ start_column_tFileInputExcel_13 + 1;
									curColName_tFileInputExcel_13 = "Proprietaire";

									row59.Proprietaire = temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13];
								} else {
									row59.Proprietaire = null;
									emptyColumnCount_tFileInputExcel_13++;
								}
								columnIndex_tFileInputExcel_13 = 10;

								if (temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13].length() > 0) {
									curColNum_tFileInputExcel_13 = columnIndex_tFileInputExcel_13
											+ start_column_tFileInputExcel_13 + 1;
									curColName_tFileInputExcel_13 = "Phase_de_l_opportunite";

									row59.Phase_de_l_opportunite = temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13];
								} else {
									row59.Phase_de_l_opportunite = null;
									emptyColumnCount_tFileInputExcel_13++;
								}
								columnIndex_tFileInputExcel_13 = 11;

								if (temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13].length() > 0) {
									curColNum_tFileInputExcel_13 = columnIndex_tFileInputExcel_13
											+ start_column_tFileInputExcel_13 + 1;
									curColName_tFileInputExcel_13 = "Valeur_ordering";

									row59.Valeur_ordering = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13], null,
											'.' == decimalChar_tFileInputExcel_13 ? null
													: decimalChar_tFileInputExcel_13));
								} else {
									row59.Valeur_ordering = null;
									emptyColumnCount_tFileInputExcel_13++;
								}
								columnIndex_tFileInputExcel_13 = 12;

								if (temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13].length() > 0) {
									curColNum_tFileInputExcel_13 = columnIndex_tFileInputExcel_13
											+ start_column_tFileInputExcel_13 + 1;
									curColName_tFileInputExcel_13 = "Statut";

									row59.Statut = temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13];
								} else {
									row59.Statut = null;
									emptyColumnCount_tFileInputExcel_13++;
								}
								columnIndex_tFileInputExcel_13 = 13;

								if (temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13].length() > 0) {
									curColNum_tFileInputExcel_13 = columnIndex_tFileInputExcel_13
											+ start_column_tFileInputExcel_13 + 1;
									curColName_tFileInputExcel_13 = "Staut_Final";

									row59.Staut_Final = temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13];
								} else {
									row59.Staut_Final = null;
									emptyColumnCount_tFileInputExcel_13++;
								}
								columnIndex_tFileInputExcel_13 = 14;

								if (temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13].length() > 0) {
									curColNum_tFileInputExcel_13 = columnIndex_tFileInputExcel_13
											+ start_column_tFileInputExcel_13 + 1;
									curColName_tFileInputExcel_13 = "Tarifs";

									row59.Tarifs = temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13];
								} else {
									row59.Tarifs = null;
									emptyColumnCount_tFileInputExcel_13++;
								}
								columnIndex_tFileInputExcel_13 = 15;

								if (temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13].length() > 0) {
									curColNum_tFileInputExcel_13 = columnIndex_tFileInputExcel_13
											+ start_column_tFileInputExcel_13 + 1;
									curColName_tFileInputExcel_13 = "Montant_total";

									row59.Montant_total = temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13];
								} else {
									row59.Montant_total = null;
									emptyColumnCount_tFileInputExcel_13++;
								}
								columnIndex_tFileInputExcel_13 = 16;

								if (temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13].length() > 0) {
									curColNum_tFileInputExcel_13 = columnIndex_tFileInputExcel_13
											+ start_column_tFileInputExcel_13 + 1;
									curColName_tFileInputExcel_13 = "Parent__Produit_existant";

									row59.Parent__Produit_existant = temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13];
								} else {
									row59.Parent__Produit_existant = null;
									emptyColumnCount_tFileInputExcel_13++;
								}
								columnIndex_tFileInputExcel_13 = 17;

								if (temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13].length() > 0) {
									curColNum_tFileInputExcel_13 = columnIndex_tFileInputExcel_13
											+ start_column_tFileInputExcel_13 + 1;
									curColName_tFileInputExcel_13 = "Produit_existant";

									row59.Produit_existant = temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13];
								} else {
									row59.Produit_existant = null;
									emptyColumnCount_tFileInputExcel_13++;
								}
								columnIndex_tFileInputExcel_13 = 18;

								if (temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13].length() > 0) {
									curColNum_tFileInputExcel_13 = columnIndex_tFileInputExcel_13
											+ start_column_tFileInputExcel_13 + 1;
									curColName_tFileInputExcel_13 = "Operation";

									row59.Operation = temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13];
								} else {
									row59.Operation = null;
									emptyColumnCount_tFileInputExcel_13++;
								}
								columnIndex_tFileInputExcel_13 = 19;

								if (temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13].length() > 0) {
									curColNum_tFileInputExcel_13 = columnIndex_tFileInputExcel_13
											+ start_column_tFileInputExcel_13 + 1;
									curColName_tFileInputExcel_13 = "Type_d_operation";

									row59.Type_d_operation = temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13];
								} else {
									row59.Type_d_operation = null;
									emptyColumnCount_tFileInputExcel_13++;
								}
								columnIndex_tFileInputExcel_13 = 20;

								if (temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13].length() > 0) {
									curColNum_tFileInputExcel_13 = columnIndex_tFileInputExcel_13
											+ start_column_tFileInputExcel_13 + 1;
									curColName_tFileInputExcel_13 = "Prix_unitaire";

									row59.Prix_unitaire = temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13];
								} else {
									row59.Prix_unitaire = null;
									emptyColumnCount_tFileInputExcel_13++;
								}
								columnIndex_tFileInputExcel_13 = 21;

								if (temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13].length() > 0) {
									curColNum_tFileInputExcel_13 = columnIndex_tFileInputExcel_13
											+ start_column_tFileInputExcel_13 + 1;
									curColName_tFileInputExcel_13 = "Quantite";

									row59.Quantite = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13], null,
											'.' == decimalChar_tFileInputExcel_13 ? null
													: decimalChar_tFileInputExcel_13));
								} else {
									row59.Quantite = null;
									emptyColumnCount_tFileInputExcel_13++;
								}
								columnIndex_tFileInputExcel_13 = 22;

								if (temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13].length() > 0) {
									curColNum_tFileInputExcel_13 = columnIndex_tFileInputExcel_13
											+ start_column_tFileInputExcel_13 + 1;
									curColName_tFileInputExcel_13 = "Remise";

									row59.Remise = temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13];
								} else {
									row59.Remise = null;
									emptyColumnCount_tFileInputExcel_13++;
								}
								columnIndex_tFileInputExcel_13 = 23;

								if (temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13].length() > 0) {
									curColNum_tFileInputExcel_13 = columnIndex_tFileInputExcel_13
											+ start_column_tFileInputExcel_13 + 1;
									curColName_tFileInputExcel_13 = "Montant_de_la_remise_manuelle";

									row59.Montant_de_la_remise_manuelle = temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13];
								} else {
									row59.Montant_de_la_remise_manuelle = null;
									emptyColumnCount_tFileInputExcel_13++;
								}
								columnIndex_tFileInputExcel_13 = 24;

								if (temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13].length() > 0) {
									curColNum_tFileInputExcel_13 = columnIndex_tFileInputExcel_13
											+ start_column_tFileInputExcel_13 + 1;
									curColName_tFileInputExcel_13 = "Total_final";

									row59.Total_final = temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13];
								} else {
									row59.Total_final = null;
									emptyColumnCount_tFileInputExcel_13++;
								}
								columnIndex_tFileInputExcel_13 = 25;

								if (temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13].length() > 0) {
									curColNum_tFileInputExcel_13 = columnIndex_tFileInputExcel_13
											+ start_column_tFileInputExcel_13 + 1;
									curColName_tFileInputExcel_13 = "Mois_et_annee_de_modification";

									row59.Mois_et_annee_de_modification = temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13];
								} else {
									row59.Mois_et_annee_de_modification = null;
									emptyColumnCount_tFileInputExcel_13++;
								}
								columnIndex_tFileInputExcel_13 = 26;

								if (temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13].length() > 0) {
									curColNum_tFileInputExcel_13 = columnIndex_tFileInputExcel_13
											+ start_column_tFileInputExcel_13 + 1;
									curColName_tFileInputExcel_13 = "Modifie_le";

									if (26 < actual_end_column_tFileInputExcel_13) {
										try {
											if (row_tFileInputExcel_13
													.getCell(columnIndex_tFileInputExcel_13
															+ start_column_tFileInputExcel_13)
													.getCellType() == org.apache.poi.ss.usermodel.CellType.NUMERIC
													&& org.apache.poi.ss.usermodel.DateUtil
															.isCellDateFormatted(row_tFileInputExcel_13
																	.getCell(columnIndex_tFileInputExcel_13
																			+ start_column_tFileInputExcel_13))) {
												row59.Modifie_le = row_tFileInputExcel_13
														.getCell(columnIndex_tFileInputExcel_13
																+ start_column_tFileInputExcel_13)
														.getDateCellValue();
											} else {
												java.util.Date tempDate_tFileInputExcel_13 = ParserUtils.parseTo_Date(
														temp_row_tFileInputExcel_13[columnIndex_tFileInputExcel_13],
														"dd-MM-yyyy");
												if (tempDate_tFileInputExcel_13
														.after((new SimpleDateFormat("yyyy/MM/dd hh:mm:ss.SSS"))
																.parse("9999/12/31 23:59:59.999"))
														|| tempDate_tFileInputExcel_13
																.before((new SimpleDateFormat("yyyy/MM/dd"))
																		.parse("1900/01/01"))) {
													throw new RuntimeException("The cell format is not Date in ( Row. "
															+ (nb_line_tFileInputExcel_13 + 1) + " and ColumnNum. "
															+ curColNum_tFileInputExcel_13 + " )");
												} else {
													row59.Modifie_le = tempDate_tFileInputExcel_13;
												}
											}
										} catch (java.lang.Exception e) {
											globalMap.put("tFileInputExcel_13_ERROR_MESSAGE", e.getMessage());

											throw new RuntimeException("The cell format is not Date in ( Row. "
													+ (nb_line_tFileInputExcel_13 + 1) + " and ColumnNum. "
													+ curColNum_tFileInputExcel_13 + " )");
										}
									}

								} else {
									row59.Modifie_le = null;
									emptyColumnCount_tFileInputExcel_13++;
								}

								nb_line_tFileInputExcel_13++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_13_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_13 = true;
								System.err.println(e.getMessage());
								row59 = null;
							}

							/**
							 * [tFileInputExcel_13 begin ] stop
							 */

							/**
							 * [tFileInputExcel_13 main ] start
							 */

							currentComponent = "tFileInputExcel_13";

							tos_count_tFileInputExcel_13++;

							/**
							 * [tFileInputExcel_13 main ] stop
							 */

							/**
							 * [tFileInputExcel_13 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_13";

							/**
							 * [tFileInputExcel_13 process_data_begin ] stop
							 */
// Start of branch "row59"
							if (row59 != null) {

								/**
								 * [tMap_55 main ] start
								 */

								currentComponent = "tMap_55";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row59"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_55 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_55 = false;
								boolean mainRowRejected_tMap_55 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_55__Struct Var = Var__tMap_55;// ###############################
									// ###############################
									// # Output tables

									copyOfDim_sujet_data = null;

// # Output table : 'copyOfDim_sujet_data'
									copyOfDim_sujet_data_tmp.Sujet = row59.Sujet;
									copyOfDim_sujet_data = copyOfDim_sujet_data_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_55 = false;

								tos_count_tMap_55++;

								/**
								 * [tMap_55 main ] stop
								 */

								/**
								 * [tMap_55 process_data_begin ] start
								 */

								currentComponent = "tMap_55";

								/**
								 * [tMap_55 process_data_begin ] stop
								 */
// Start of branch "copyOfDim_sujet_data"
								if (copyOfDim_sujet_data != null) {

									/**
									 * [tMap_56 main ] start
									 */

									currentComponent = "tMap_56";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "copyOfDim_sujet_data"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_56 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_56 = false;
									boolean mainRowRejected_tMap_56 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row80"
									///////////////////////////////////////////////

									boolean forceLooprow80 = false;

									row80Struct row80ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_56) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_56 = false;

										row80HashKey.Sujet = copyOfDim_sujet_data.Sujet;

										row80HashKey.hashCodeDirty = true;

										tHash_Lookup_row80.lookup(row80HashKey);

										if (!tHash_Lookup_row80.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_56 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row80 != null && tHash_Lookup_row80.getCount(row80HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row80' and it contains more one result from keys : row80.Sujet = '" +
										// row80HashKey.Sujet + "'");
									} // G 071

									row80Struct row80 = null;

									row80Struct fromLookup_row80 = null;
									row80 = row80Default;

									if (tHash_Lookup_row80 != null && tHash_Lookup_row80.hasNext()) { // G 099

										fromLookup_row80 = tHash_Lookup_row80.next();

									} // G 099

									if (fromLookup_row80 != null) {
										row80 = fromLookup_row80;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_56__Struct Var = Var__tMap_56;// ###############################
										// ###############################
										// # Output tables

										copyOfq = null;

										if (!rejectedInnerJoin_tMap_56) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'copyOfq'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_56) {
											copyOfq_tmp.Sujet = copyOfDim_sujet_data.Sujet;
											copyOfq = copyOfq_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_56 = false;

									tos_count_tMap_56++;

									/**
									 * [tMap_56 main ] stop
									 */

									/**
									 * [tMap_56 process_data_begin ] start
									 */

									currentComponent = "tMap_56";

									/**
									 * [tMap_56 process_data_begin ] stop
									 */
// Start of branch "copyOfq"
									if (copyOfq != null) {

										/**
										 * [tUniqRow_19 main ] start
										 */

										currentComponent = "tUniqRow_19";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "copyOfq"

											);
										}

										row81 = null;
										finder_tUniqRow_19.Sujet = copyOfq.Sujet;
										finder_tUniqRow_19.hashCodeDirty = true;
										if (!keystUniqRow_19.contains(finder_tUniqRow_19)) {
											KeyStruct_tUniqRow_19 new_tUniqRow_19 = new KeyStruct_tUniqRow_19();

											new_tUniqRow_19.Sujet = copyOfq.Sujet;

											keystUniqRow_19.add(new_tUniqRow_19);
											if (row81 == null) {

												row81 = new row81Struct();
											}
											row81.Sujet = copyOfq.Sujet;
											nb_uniques_tUniqRow_19++;
										} else {
											nb_duplicates_tUniqRow_19++;
										}

										tos_count_tUniqRow_19++;

										/**
										 * [tUniqRow_19 main ] stop
										 */

										/**
										 * [tUniqRow_19 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_19";

										/**
										 * [tUniqRow_19 process_data_begin ] stop
										 */
// Start of branch "row81"
										if (row81 != null) {

											/**
											 * [tDBOutput_20 main ] start
											 */

											currentComponent = "tDBOutput_20";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row81"

												);
											}

											whetherReject_tDBOutput_20 = false;
											if (row81.Sujet == null) {
												pstmt_tDBOutput_20.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_20.setString(1, row81.Sujet);
											}

											pstmt_tDBOutput_20.addBatch();
											nb_line_tDBOutput_20++;

											batchSizeCounter_tDBOutput_20++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_20 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_20)
														throws Exception {
													try {

														for (int countEach_tDBOutput_20 : pstmt_tDBOutput_20
																.executeBatch()) {
															if (countEach_tDBOutput_20 == -2
																	|| countEach_tDBOutput_20 == -3) {
																break;
															}
															counter += countEach_tDBOutput_20;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_20_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_20 = 0;
														for (int countEach_tDBOutput_20 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_20 < 0 ? 0
																	: countEach_tDBOutput_20);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_20)
														throws Exception {
													try {

														for (int countEach_tDBOutput_20 : pstmt_tDBOutput_20
																.executeBatch()) {
															if (countEach_tDBOutput_20 == -2
																	|| countEach_tDBOutput_20 == -3) {
																break;
															}
															counter += countEach_tDBOutput_20;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_20_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_20 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_20 < 0 ? 0
																	: countEach_tDBOutput_20);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_20 > 0)
													&& (batchSize_tDBOutput_20 <= batchSizeCounter_tDBOutput_20)) {

												insertedCount_tDBOutput_20 = new LimitBytesHelper_tDBOutput_20()
														.limitBytePart1(insertedCount_tDBOutput_20, pstmt_tDBOutput_20);
												rowsToCommitCount_tDBOutput_20 = insertedCount_tDBOutput_20;

												batchSizeCounter_tDBOutput_20 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_20++;
											if (commitEvery_tDBOutput_20 <= commitCounter_tDBOutput_20) {
												if ((batchSize_tDBOutput_20 > 0)
														&& (batchSizeCounter_tDBOutput_20 > 0)) {

													insertedCount_tDBOutput_20 = new LimitBytesHelper_tDBOutput_20()
															.limitBytePart1(insertedCount_tDBOutput_20,
																	pstmt_tDBOutput_20);

													batchSizeCounter_tDBOutput_20 = 0;
												}
												if (rowsToCommitCount_tDBOutput_20 != 0) {

												}
												conn_tDBOutput_20.commit();
												if (rowsToCommitCount_tDBOutput_20 != 0) {

													rowsToCommitCount_tDBOutput_20 = 0;
												}
												commitCounter_tDBOutput_20 = 0;
											}

											tos_count_tDBOutput_20++;

											/**
											 * [tDBOutput_20 main ] stop
											 */

											/**
											 * [tDBOutput_20 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_20";

											/**
											 * [tDBOutput_20 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_20 process_data_end ] start
											 */

											currentComponent = "tDBOutput_20";

											/**
											 * [tDBOutput_20 process_data_end ] stop
											 */

										} // End of branch "row81"

										/**
										 * [tUniqRow_19 process_data_end ] start
										 */

										currentComponent = "tUniqRow_19";

										/**
										 * [tUniqRow_19 process_data_end ] stop
										 */

									} // End of branch "copyOfq"

									/**
									 * [tMap_56 process_data_end ] start
									 */

									currentComponent = "tMap_56";

									/**
									 * [tMap_56 process_data_end ] stop
									 */

								} // End of branch "copyOfDim_sujet_data"

								/**
								 * [tMap_55 process_data_end ] start
								 */

								currentComponent = "tMap_55";

								/**
								 * [tMap_55 process_data_end ] stop
								 */

							} // End of branch "row59"

							/**
							 * [tFileInputExcel_13 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_13";

							/**
							 * [tFileInputExcel_13 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_13 end ] start
							 */

							currentComponent = "tFileInputExcel_13";

						}

						globalMap.put("tFileInputExcel_13_NB_LINE", nb_line_tFileInputExcel_13);

					}

				} finally {

					if (!(source_tFileInputExcel_13 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_13.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_13", true);
				end_Hash.put("tFileInputExcel_13", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_13 end ] stop
				 */

				/**
				 * [tMap_55 end ] start
				 */

				currentComponent = "tMap_55";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row59");
				}

				ok_Hash.put("tMap_55", true);
				end_Hash.put("tMap_55", System.currentTimeMillis());

				/**
				 * [tMap_55 end ] stop
				 */

				/**
				 * [tMap_56 end ] start
				 */

				currentComponent = "tMap_56";

// ###############################
// # Lookup hashes releasing
				if (tHash_Lookup_row80 != null) {
					tHash_Lookup_row80.endGet();
				}
				globalMap.remove("tHash_Lookup_row80");

// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "copyOfDim_sujet_data");
				}

				ok_Hash.put("tMap_56", true);
				end_Hash.put("tMap_56", System.currentTimeMillis());

				/**
				 * [tMap_56 end ] stop
				 */

				/**
				 * [tUniqRow_19 end ] start
				 */

				currentComponent = "tUniqRow_19";

				globalMap.put("tUniqRow_19_NB_UNIQUES", nb_uniques_tUniqRow_19);
				globalMap.put("tUniqRow_19_NB_DUPLICATES", nb_duplicates_tUniqRow_19);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "copyOfq");
				}

				ok_Hash.put("tUniqRow_19", true);
				end_Hash.put("tUniqRow_19", System.currentTimeMillis());

				/**
				 * [tUniqRow_19 end ] stop
				 */

				/**
				 * [tDBOutput_20 end ] start
				 */

				currentComponent = "tDBOutput_20";

				try {
					int countSum_tDBOutput_20 = 0;
					if (pstmt_tDBOutput_20 != null && batchSizeCounter_tDBOutput_20 > 0) {

						for (int countEach_tDBOutput_20 : pstmt_tDBOutput_20.executeBatch()) {
							if (countEach_tDBOutput_20 == -2 || countEach_tDBOutput_20 == -3) {
								break;
							}
							countSum_tDBOutput_20 += countEach_tDBOutput_20;
						}
						rowsToCommitCount_tDBOutput_20 += countSum_tDBOutput_20;

					}

					insertedCount_tDBOutput_20 += countSum_tDBOutput_20;

				} catch (java.sql.BatchUpdateException e) {
					globalMap.put("tDBOutput_20_ERROR_MESSAGE", e.getMessage());

					int countSum_tDBOutput_20 = 0;
					for (int countEach_tDBOutput_20 : e.getUpdateCounts()) {
						countSum_tDBOutput_20 += (countEach_tDBOutput_20 < 0 ? 0 : countEach_tDBOutput_20);
					}
					rowsToCommitCount_tDBOutput_20 += countSum_tDBOutput_20;

					insertedCount_tDBOutput_20 += countSum_tDBOutput_20;

					System.err.println(e.getMessage());

				}
				if (pstmt_tDBOutput_20 != null) {

					pstmt_tDBOutput_20.close();
					resourceMap.remove("pstmt_tDBOutput_20");

				}
				resourceMap.put("statementClosed_tDBOutput_20", true);
				if (rowsToCommitCount_tDBOutput_20 != 0) {

				}
				conn_tDBOutput_20.commit();
				if (rowsToCommitCount_tDBOutput_20 != 0) {

					rowsToCommitCount_tDBOutput_20 = 0;
				}
				commitCounter_tDBOutput_20 = 0;
				conn_tDBOutput_20.close();
				resourceMap.put("finish_tDBOutput_20", true);

				nb_line_deleted_tDBOutput_20 = nb_line_deleted_tDBOutput_20 + deletedCount_tDBOutput_20;
				nb_line_update_tDBOutput_20 = nb_line_update_tDBOutput_20 + updatedCount_tDBOutput_20;
				nb_line_inserted_tDBOutput_20 = nb_line_inserted_tDBOutput_20 + insertedCount_tDBOutput_20;
				nb_line_rejected_tDBOutput_20 = nb_line_rejected_tDBOutput_20 + rejectedCount_tDBOutput_20;

				globalMap.put("tDBOutput_20_NB_LINE", nb_line_tDBOutput_20);
				globalMap.put("tDBOutput_20_NB_LINE_UPDATED", nb_line_update_tDBOutput_20);
				globalMap.put("tDBOutput_20_NB_LINE_INSERTED", nb_line_inserted_tDBOutput_20);
				globalMap.put("tDBOutput_20_NB_LINE_DELETED", nb_line_deleted_tDBOutput_20);
				globalMap.put("tDBOutput_20_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_20);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row81");
				}

				ok_Hash.put("tDBOutput_20", true);
				end_Hash.put("tDBOutput_20", System.currentTimeMillis());

				/**
				 * [tDBOutput_20 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			// free memory for "tMap_56"
			globalMap.remove("tHash_Lookup_row80");

			try {

				/**
				 * [tFileInputExcel_13 finally ] start
				 */

				currentComponent = "tFileInputExcel_13";

				/**
				 * [tFileInputExcel_13 finally ] stop
				 */

				/**
				 * [tMap_55 finally ] start
				 */

				currentComponent = "tMap_55";

				/**
				 * [tMap_55 finally ] stop
				 */

				/**
				 * [tMap_56 finally ] start
				 */

				currentComponent = "tMap_56";

				/**
				 * [tMap_56 finally ] stop
				 */

				/**
				 * [tUniqRow_19 finally ] start
				 */

				currentComponent = "tUniqRow_19";

				/**
				 * [tUniqRow_19 finally ] stop
				 */

				/**
				 * [tDBOutput_20 finally ] start
				 */

				currentComponent = "tDBOutput_20";

				try {
					if (resourceMap.get("statementClosed_tDBOutput_20") == null) {
						java.sql.PreparedStatement pstmtToClose_tDBOutput_20 = null;
						if ((pstmtToClose_tDBOutput_20 = (java.sql.PreparedStatement) resourceMap
								.remove("pstmt_tDBOutput_20")) != null) {
							pstmtToClose_tDBOutput_20.close();
						}
					}
				} finally {
					if (resourceMap.get("finish_tDBOutput_20") == null) {
						java.sql.Connection ctn_tDBOutput_20 = null;
						if ((ctn_tDBOutput_20 = (java.sql.Connection) resourceMap.get("conn_tDBOutput_20")) != null) {
							try {
								ctn_tDBOutput_20.close();
							} catch (java.sql.SQLException sqlEx_tDBOutput_20) {
								String errorMessage_tDBOutput_20 = "failed to close the connection in tDBOutput_20 :"
										+ sqlEx_tDBOutput_20.getMessage();
								System.err.println(errorMessage_tDBOutput_20);
							}
						}
					}
				}

				/**
				 * [tDBOutput_20 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tFileInputExcel_13_SUBPROCESS_STATE", 1);
	}

	public static class row28Struct implements routines.system.IPersistableRow<row28Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Client_Prospect;

		public String getClient_Prospect() {
			return this.Client_Prospect;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Client_Prospect=" + Client_Prospect);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row28Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class kStruct implements routines.system.IPersistableRow<kStruct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Client_Prospect;

		public String getClient_Prospect() {
			return this.Client_Prospect;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Client_Prospect=" + Client_Prospect);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(kStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row9Struct implements routines.system.IPersistableRow<row9Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Client_Prospect;

		public String getClient_Prospect() {
			return this.Client_Prospect;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Client_Prospect=" + Client_Prospect);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row9Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class copyOft18Struct implements routines.system.IPersistableRow<copyOft18Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Client_Prospect;

		public String getClient_Prospect() {
			return this.Client_Prospect;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Client_Prospect=" + Client_Prospect);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(copyOft18Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row26Struct implements routines.system.IPersistableRow<row26Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Client_Prospect;

		public String getClient_Prospect() {
			return this.Client_Prospect;
		}

		public String Sujet;

		public String getSujet() {
			return this.Sujet;
		}

		public String Acces;

		public String getAcces() {
			return this.Acces;
		}

		public String Type_d_acces;

		public String getType_d_acces() {
			return this.Type_d_acces;
		}

		public String Account_Manager__Client_Prospect;

		public String getAccount_Manager__Client_Prospect() {
			return this.Account_Manager__Client_Prospect;
		}

		public String Cree_le;

		public String getCree_le() {
			return this.Cree_le;
		}

		public String Mois_et_annee_de_creation;

		public String getMois_et_annee_de_creation() {
			return this.Mois_et_annee_de_creation;
		}

		public String Cree_par;

		public String getCree_par() {
			return this.Cree_par;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public String Proprietaire;

		public String getProprietaire() {
			return this.Proprietaire;
		}

		public String Phase_de_l_opportunite;

		public String getPhase_de_l_opportunite() {
			return this.Phase_de_l_opportunite;
		}

		public Float Valeur_ordering;

		public Float getValeur_ordering() {
			return this.Valeur_ordering;
		}

		public String Statut;

		public String getStatut() {
			return this.Statut;
		}

		public String Staut_Final;

		public String getStaut_Final() {
			return this.Staut_Final;
		}

		public String Tarifs;

		public String getTarifs() {
			return this.Tarifs;
		}

		public String Montant_total;

		public String getMontant_total() {
			return this.Montant_total;
		}

		public String Parent__Produit_existant;

		public String getParent__Produit_existant() {
			return this.Parent__Produit_existant;
		}

		public String Produit_existant;

		public String getProduit_existant() {
			return this.Produit_existant;
		}

		public String Operation;

		public String getOperation() {
			return this.Operation;
		}

		public String Type_d_operation;

		public String getType_d_operation() {
			return this.Type_d_operation;
		}

		public String Prix_unitaire;

		public String getPrix_unitaire() {
			return this.Prix_unitaire;
		}

		public Float Quantite;

		public Float getQuantite() {
			return this.Quantite;
		}

		public String Remise;

		public String getRemise() {
			return this.Remise;
		}

		public String Montant_de_la_remise_manuelle;

		public String getMontant_de_la_remise_manuelle() {
			return this.Montant_de_la_remise_manuelle;
		}

		public String Total_final;

		public String getTotal_final() {
			return this.Total_final;
		}

		public String Modifie_le;

		public String getModifie_le() {
			return this.Modifie_le;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

					this.Sujet = readString(dis);

					this.Acces = readString(dis);

					this.Type_d_acces = readString(dis);

					this.Account_Manager__Client_Prospect = readString(dis);

					this.Cree_le = readString(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Proprietaire = readString(dis);

					this.Phase_de_l_opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Valeur_ordering = null;
					} else {
						this.Valeur_ordering = dis.readFloat();
					}

					this.Statut = readString(dis);

					this.Staut_Final = readString(dis);

					this.Tarifs = readString(dis);

					this.Montant_total = readString(dis);

					this.Parent__Produit_existant = readString(dis);

					this.Produit_existant = readString(dis);

					this.Operation = readString(dis);

					this.Type_d_operation = readString(dis);

					this.Prix_unitaire = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Quantite = null;
					} else {
						this.Quantite = dis.readFloat();
					}

					this.Remise = readString(dis);

					this.Montant_de_la_remise_manuelle = readString(dis);

					this.Total_final = readString(dis);

					this.Modifie_le = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

					this.Sujet = readString(dis);

					this.Acces = readString(dis);

					this.Type_d_acces = readString(dis);

					this.Account_Manager__Client_Prospect = readString(dis);

					this.Cree_le = readString(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Proprietaire = readString(dis);

					this.Phase_de_l_opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Valeur_ordering = null;
					} else {
						this.Valeur_ordering = dis.readFloat();
					}

					this.Statut = readString(dis);

					this.Staut_Final = readString(dis);

					this.Tarifs = readString(dis);

					this.Montant_total = readString(dis);

					this.Parent__Produit_existant = readString(dis);

					this.Produit_existant = readString(dis);

					this.Operation = readString(dis);

					this.Type_d_operation = readString(dis);

					this.Prix_unitaire = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Quantite = null;
					} else {
						this.Quantite = dis.readFloat();
					}

					this.Remise = readString(dis);

					this.Montant_de_la_remise_manuelle = readString(dis);

					this.Total_final = readString(dis);

					this.Modifie_le = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Acces, dos);

				// String

				writeString(this.Type_d_acces, dos);

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

				// String

				writeString(this.Cree_le, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Proprietaire, dos);

				// String

				writeString(this.Phase_de_l_opportunite, dos);

				// Float

				if (this.Valeur_ordering == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Valeur_ordering);
				}

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Tarifs, dos);

				// String

				writeString(this.Montant_total, dos);

				// String

				writeString(this.Parent__Produit_existant, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Operation, dos);

				// String

				writeString(this.Type_d_operation, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// Float

				if (this.Quantite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Quantite);
				}

				// String

				writeString(this.Remise, dos);

				// String

				writeString(this.Montant_de_la_remise_manuelle, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Modifie_le, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Acces, dos);

				// String

				writeString(this.Type_d_acces, dos);

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

				// String

				writeString(this.Cree_le, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Proprietaire, dos);

				// String

				writeString(this.Phase_de_l_opportunite, dos);

				// Float

				if (this.Valeur_ordering == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Valeur_ordering);
				}

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Tarifs, dos);

				// String

				writeString(this.Montant_total, dos);

				// String

				writeString(this.Parent__Produit_existant, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Operation, dos);

				// String

				writeString(this.Type_d_operation, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// Float

				if (this.Quantite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Quantite);
				}

				// String

				writeString(this.Remise, dos);

				// String

				writeString(this.Montant_de_la_remise_manuelle, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Modifie_le, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Client_Prospect=" + Client_Prospect);
			sb.append(",Sujet=" + Sujet);
			sb.append(",Acces=" + Acces);
			sb.append(",Type_d_acces=" + Type_d_acces);
			sb.append(",Account_Manager__Client_Prospect=" + Account_Manager__Client_Prospect);
			sb.append(",Cree_le=" + Cree_le);
			sb.append(",Mois_et_annee_de_creation=" + Mois_et_annee_de_creation);
			sb.append(",Cree_par=" + Cree_par);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Proprietaire=" + Proprietaire);
			sb.append(",Phase_de_l_opportunite=" + Phase_de_l_opportunite);
			sb.append(",Valeur_ordering=" + String.valueOf(Valeur_ordering));
			sb.append(",Statut=" + Statut);
			sb.append(",Staut_Final=" + Staut_Final);
			sb.append(",Tarifs=" + Tarifs);
			sb.append(",Montant_total=" + Montant_total);
			sb.append(",Parent__Produit_existant=" + Parent__Produit_existant);
			sb.append(",Produit_existant=" + Produit_existant);
			sb.append(",Operation=" + Operation);
			sb.append(",Type_d_operation=" + Type_d_operation);
			sb.append(",Prix_unitaire=" + Prix_unitaire);
			sb.append(",Quantite=" + String.valueOf(Quantite));
			sb.append(",Remise=" + Remise);
			sb.append(",Montant_de_la_remise_manuelle=" + Montant_de_la_remise_manuelle);
			sb.append(",Total_final=" + Total_final);
			sb.append(",Modifie_le=" + Modifie_le);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row26Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class after_tFileInputExcel_14Struct
			implements routines.system.IPersistableRow<after_tFileInputExcel_14Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Client_Prospect;

		public String getClient_Prospect() {
			return this.Client_Prospect;
		}

		public String Sujet;

		public String getSujet() {
			return this.Sujet;
		}

		public String Acces;

		public String getAcces() {
			return this.Acces;
		}

		public String Type_d_acces;

		public String getType_d_acces() {
			return this.Type_d_acces;
		}

		public String Account_Manager__Client_Prospect;

		public String getAccount_Manager__Client_Prospect() {
			return this.Account_Manager__Client_Prospect;
		}

		public String Cree_le;

		public String getCree_le() {
			return this.Cree_le;
		}

		public String Mois_et_annee_de_creation;

		public String getMois_et_annee_de_creation() {
			return this.Mois_et_annee_de_creation;
		}

		public String Cree_par;

		public String getCree_par() {
			return this.Cree_par;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public String Proprietaire;

		public String getProprietaire() {
			return this.Proprietaire;
		}

		public String Phase_de_l_opportunite;

		public String getPhase_de_l_opportunite() {
			return this.Phase_de_l_opportunite;
		}

		public Float Valeur_ordering;

		public Float getValeur_ordering() {
			return this.Valeur_ordering;
		}

		public String Statut;

		public String getStatut() {
			return this.Statut;
		}

		public String Staut_Final;

		public String getStaut_Final() {
			return this.Staut_Final;
		}

		public String Tarifs;

		public String getTarifs() {
			return this.Tarifs;
		}

		public String Montant_total;

		public String getMontant_total() {
			return this.Montant_total;
		}

		public String Parent__Produit_existant;

		public String getParent__Produit_existant() {
			return this.Parent__Produit_existant;
		}

		public String Produit_existant;

		public String getProduit_existant() {
			return this.Produit_existant;
		}

		public String Operation;

		public String getOperation() {
			return this.Operation;
		}

		public String Type_d_operation;

		public String getType_d_operation() {
			return this.Type_d_operation;
		}

		public String Prix_unitaire;

		public String getPrix_unitaire() {
			return this.Prix_unitaire;
		}

		public Float Quantite;

		public Float getQuantite() {
			return this.Quantite;
		}

		public String Remise;

		public String getRemise() {
			return this.Remise;
		}

		public String Montant_de_la_remise_manuelle;

		public String getMontant_de_la_remise_manuelle() {
			return this.Montant_de_la_remise_manuelle;
		}

		public String Total_final;

		public String getTotal_final() {
			return this.Total_final;
		}

		public String Modifie_le;

		public String getModifie_le() {
			return this.Modifie_le;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

					this.Sujet = readString(dis);

					this.Acces = readString(dis);

					this.Type_d_acces = readString(dis);

					this.Account_Manager__Client_Prospect = readString(dis);

					this.Cree_le = readString(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Proprietaire = readString(dis);

					this.Phase_de_l_opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Valeur_ordering = null;
					} else {
						this.Valeur_ordering = dis.readFloat();
					}

					this.Statut = readString(dis);

					this.Staut_Final = readString(dis);

					this.Tarifs = readString(dis);

					this.Montant_total = readString(dis);

					this.Parent__Produit_existant = readString(dis);

					this.Produit_existant = readString(dis);

					this.Operation = readString(dis);

					this.Type_d_operation = readString(dis);

					this.Prix_unitaire = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Quantite = null;
					} else {
						this.Quantite = dis.readFloat();
					}

					this.Remise = readString(dis);

					this.Montant_de_la_remise_manuelle = readString(dis);

					this.Total_final = readString(dis);

					this.Modifie_le = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

					this.Sujet = readString(dis);

					this.Acces = readString(dis);

					this.Type_d_acces = readString(dis);

					this.Account_Manager__Client_Prospect = readString(dis);

					this.Cree_le = readString(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Proprietaire = readString(dis);

					this.Phase_de_l_opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Valeur_ordering = null;
					} else {
						this.Valeur_ordering = dis.readFloat();
					}

					this.Statut = readString(dis);

					this.Staut_Final = readString(dis);

					this.Tarifs = readString(dis);

					this.Montant_total = readString(dis);

					this.Parent__Produit_existant = readString(dis);

					this.Produit_existant = readString(dis);

					this.Operation = readString(dis);

					this.Type_d_operation = readString(dis);

					this.Prix_unitaire = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Quantite = null;
					} else {
						this.Quantite = dis.readFloat();
					}

					this.Remise = readString(dis);

					this.Montant_de_la_remise_manuelle = readString(dis);

					this.Total_final = readString(dis);

					this.Modifie_le = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Acces, dos);

				// String

				writeString(this.Type_d_acces, dos);

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

				// String

				writeString(this.Cree_le, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Proprietaire, dos);

				// String

				writeString(this.Phase_de_l_opportunite, dos);

				// Float

				if (this.Valeur_ordering == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Valeur_ordering);
				}

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Tarifs, dos);

				// String

				writeString(this.Montant_total, dos);

				// String

				writeString(this.Parent__Produit_existant, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Operation, dos);

				// String

				writeString(this.Type_d_operation, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// Float

				if (this.Quantite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Quantite);
				}

				// String

				writeString(this.Remise, dos);

				// String

				writeString(this.Montant_de_la_remise_manuelle, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Modifie_le, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Acces, dos);

				// String

				writeString(this.Type_d_acces, dos);

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

				// String

				writeString(this.Cree_le, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Proprietaire, dos);

				// String

				writeString(this.Phase_de_l_opportunite, dos);

				// Float

				if (this.Valeur_ordering == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Valeur_ordering);
				}

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Tarifs, dos);

				// String

				writeString(this.Montant_total, dos);

				// String

				writeString(this.Parent__Produit_existant, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Operation, dos);

				// String

				writeString(this.Type_d_operation, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// Float

				if (this.Quantite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Quantite);
				}

				// String

				writeString(this.Remise, dos);

				// String

				writeString(this.Montant_de_la_remise_manuelle, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Modifie_le, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Client_Prospect=" + Client_Prospect);
			sb.append(",Sujet=" + Sujet);
			sb.append(",Acces=" + Acces);
			sb.append(",Type_d_acces=" + Type_d_acces);
			sb.append(",Account_Manager__Client_Prospect=" + Account_Manager__Client_Prospect);
			sb.append(",Cree_le=" + Cree_le);
			sb.append(",Mois_et_annee_de_creation=" + Mois_et_annee_de_creation);
			sb.append(",Cree_par=" + Cree_par);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Proprietaire=" + Proprietaire);
			sb.append(",Phase_de_l_opportunite=" + Phase_de_l_opportunite);
			sb.append(",Valeur_ordering=" + String.valueOf(Valeur_ordering));
			sb.append(",Statut=" + Statut);
			sb.append(",Staut_Final=" + Staut_Final);
			sb.append(",Tarifs=" + Tarifs);
			sb.append(",Montant_total=" + Montant_total);
			sb.append(",Parent__Produit_existant=" + Parent__Produit_existant);
			sb.append(",Produit_existant=" + Produit_existant);
			sb.append(",Operation=" + Operation);
			sb.append(",Type_d_operation=" + Type_d_operation);
			sb.append(",Prix_unitaire=" + Prix_unitaire);
			sb.append(",Quantite=" + String.valueOf(Quantite));
			sb.append(",Remise=" + Remise);
			sb.append(",Montant_de_la_remise_manuelle=" + Montant_de_la_remise_manuelle);
			sb.append(",Total_final=" + Total_final);
			sb.append(",Modifie_le=" + Modifie_le);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(after_tFileInputExcel_14Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class copyOfcopyOft5Struct implements routines.system.IPersistableRow<copyOfcopyOft5Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Client_Prospect__Opportunite;

		public String getClient_Prospect__Opportunite() {
			return this.Client_Prospect__Opportunite;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Client_Prospect__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Client_Prospect__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Client_Prospect__Opportunite=" + Client_Prospect__Opportunite);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(copyOfcopyOft5Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row27Struct implements routines.system.IPersistableRow<row27Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Reference_OSM_mere__Opportunite;

		public String getReference_OSM_mere__Opportunite() {
			return this.Reference_OSM_mere__Opportunite;
		}

		public String Reference_OSM__Opportunite;

		public String getReference_OSM__Opportunite() {
			return this.Reference_OSM__Opportunite;
		}

		public String Client_Prospect__Opportunite;

		public String getClient_Prospect__Opportunite() {
			return this.Client_Prospect__Opportunite;
		}

		public String Offre;

		public String getOffre() {
			return this.Offre;
		}

		public String Nature_Offre;

		public String getNature_Offre() {
			return this.Nature_Offre;
		}

		public String Produit_existant;

		public String getProduit_existant() {
			return this.Produit_existant;
		}

		public String Nature_produit__Produit_existant;

		public String getNature_produit__Produit_existant() {
			return this.Nature_produit__Produit_existant;
		}

		public Float Quantite;

		public Float getQuantite() {
			return this.Quantite;
		}

		public String Prix_unitaire;

		public String getPrix_unitaire() {
			return this.Prix_unitaire;
		}

		public String Total_final;

		public String getTotal_final() {
			return this.Total_final;
		}

		public String Remise______Opportunite;

		public String getRemise______Opportunite() {
			return this.Remise______Opportunite;
		}

		public Float Total_remise_HT;

		public Float getTotal_remise_HT() {
			return this.Total_remise_HT;
		}

		public String Extension__Opportunite;

		public String getExtension__Opportunite() {
			return this.Extension__Opportunite;
		}

		public String Budget_a_valider__Opportunite;

		public String getBudget_a_valider__Opportunite() {
			return this.Budget_a_valider__Opportunite;
		}

		public String Budget_a_valider_Extension__Opportunite;

		public String getBudget_a_valider_Extension__Opportunite() {
			return this.Budget_a_valider_Extension__Opportunite;
		}

		public String Duree_d_engagement__Opportunite;

		public String getDuree_d_engagement__Opportunite() {
			return this.Duree_d_engagement__Opportunite;
		}

		public String Type_d_engagement__Opportunite;

		public String getType_d_engagement__Opportunite() {
			return this.Type_d_engagement__Opportunite;
		}

		public String Demandeur__Opportunite;

		public String getDemandeur__Opportunite() {
			return this.Demandeur__Opportunite;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public String Cree_le__Opportunite;

		public String getCree_le__Opportunite() {
			return this.Cree_le__Opportunite;
		}

		public Integer Mois_de_creation;

		public Integer getMois_de_creation() {
			return this.Mois_de_creation;
		}

		public Integer Annee_de_creation;

		public Integer getAnnee_de_creation() {
			return this.Annee_de_creation;
		}

		public String Mois_et_annee_de_creation;

		public String getMois_et_annee_de_creation() {
			return this.Mois_et_annee_de_creation;
		}

		public String Raison_de_statut_OSM__Opportunite;

		public String getRaison_de_statut_OSM__Opportunite() {
			return this.Raison_de_statut_OSM__Opportunite;
		}

		public String Statut_OSM__Opportunite;

		public String getStatut_OSM__Opportunite() {
			return this.Statut_OSM__Opportunite;
		}

		public String Statut_activation__Commande;

		public String getStatut_activation__Commande() {
			return this.Statut_activation__Commande;
		}

		public String Date_d_activation__Commande;

		public String getDate_d_activation__Commande() {
			return this.Date_d_activation__Commande;
		}

		public Integer Mois_d_activation;

		public Integer getMois_d_activation() {
			return this.Mois_d_activation;
		}

		public String Staut_Final;

		public String getStaut_Final() {
			return this.Staut_Final;
		}

		public String Gouvernorat;

		public String getGouvernorat() {
			return this.Gouvernorat;
		}

		public String Phase_de_l_opportunite__Opportunite;

		public String getPhase_de_l_opportunite__Opportunite() {
			return this.Phase_de_l_opportunite__Opportunite;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Reference_OSM_mere__Opportunite = readString(dis);

					this.Reference_OSM__Opportunite = readString(dis);

					this.Client_Prospect__Opportunite = readString(dis);

					this.Offre = readString(dis);

					this.Nature_Offre = readString(dis);

					this.Produit_existant = readString(dis);

					this.Nature_produit__Produit_existant = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Quantite = null;
					} else {
						this.Quantite = dis.readFloat();
					}

					this.Prix_unitaire = readString(dis);

					this.Total_final = readString(dis);

					this.Remise______Opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Total_remise_HT = null;
					} else {
						this.Total_remise_HT = dis.readFloat();
					}

					this.Extension__Opportunite = readString(dis);

					this.Budget_a_valider__Opportunite = readString(dis);

					this.Budget_a_valider_Extension__Opportunite = readString(dis);

					this.Duree_d_engagement__Opportunite = readString(dis);

					this.Type_d_engagement__Opportunite = readString(dis);

					this.Demandeur__Opportunite = readString(dis);

					this.Equipe = readString(dis);

					this.Cree_le__Opportunite = readString(dis);

					this.Mois_de_creation = readInteger(dis);

					this.Annee_de_creation = readInteger(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Raison_de_statut_OSM__Opportunite = readString(dis);

					this.Statut_OSM__Opportunite = readString(dis);

					this.Statut_activation__Commande = readString(dis);

					this.Date_d_activation__Commande = readString(dis);

					this.Mois_d_activation = readInteger(dis);

					this.Staut_Final = readString(dis);

					this.Gouvernorat = readString(dis);

					this.Phase_de_l_opportunite__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Reference_OSM_mere__Opportunite = readString(dis);

					this.Reference_OSM__Opportunite = readString(dis);

					this.Client_Prospect__Opportunite = readString(dis);

					this.Offre = readString(dis);

					this.Nature_Offre = readString(dis);

					this.Produit_existant = readString(dis);

					this.Nature_produit__Produit_existant = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Quantite = null;
					} else {
						this.Quantite = dis.readFloat();
					}

					this.Prix_unitaire = readString(dis);

					this.Total_final = readString(dis);

					this.Remise______Opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Total_remise_HT = null;
					} else {
						this.Total_remise_HT = dis.readFloat();
					}

					this.Extension__Opportunite = readString(dis);

					this.Budget_a_valider__Opportunite = readString(dis);

					this.Budget_a_valider_Extension__Opportunite = readString(dis);

					this.Duree_d_engagement__Opportunite = readString(dis);

					this.Type_d_engagement__Opportunite = readString(dis);

					this.Demandeur__Opportunite = readString(dis);

					this.Equipe = readString(dis);

					this.Cree_le__Opportunite = readString(dis);

					this.Mois_de_creation = readInteger(dis);

					this.Annee_de_creation = readInteger(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Raison_de_statut_OSM__Opportunite = readString(dis);

					this.Statut_OSM__Opportunite = readString(dis);

					this.Statut_activation__Commande = readString(dis);

					this.Date_d_activation__Commande = readString(dis);

					this.Mois_d_activation = readInteger(dis);

					this.Staut_Final = readString(dis);

					this.Gouvernorat = readString(dis);

					this.Phase_de_l_opportunite__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Reference_OSM_mere__Opportunite, dos);

				// String

				writeString(this.Reference_OSM__Opportunite, dos);

				// String

				writeString(this.Client_Prospect__Opportunite, dos);

				// String

				writeString(this.Offre, dos);

				// String

				writeString(this.Nature_Offre, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Nature_produit__Produit_existant, dos);

				// Float

				if (this.Quantite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Quantite);
				}

				// String

				writeString(this.Prix_unitaire, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Remise______Opportunite, dos);

				// Float

				if (this.Total_remise_HT == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Total_remise_HT);
				}

				// String

				writeString(this.Extension__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider_Extension__Opportunite, dos);

				// String

				writeString(this.Duree_d_engagement__Opportunite, dos);

				// String

				writeString(this.Type_d_engagement__Opportunite, dos);

				// String

				writeString(this.Demandeur__Opportunite, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Cree_le__Opportunite, dos);

				// Integer

				writeInteger(this.Mois_de_creation, dos);

				// Integer

				writeInteger(this.Annee_de_creation, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Raison_de_statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_activation__Commande, dos);

				// String

				writeString(this.Date_d_activation__Commande, dos);

				// Integer

				writeInteger(this.Mois_d_activation, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Gouvernorat, dos);

				// String

				writeString(this.Phase_de_l_opportunite__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Reference_OSM_mere__Opportunite, dos);

				// String

				writeString(this.Reference_OSM__Opportunite, dos);

				// String

				writeString(this.Client_Prospect__Opportunite, dos);

				// String

				writeString(this.Offre, dos);

				// String

				writeString(this.Nature_Offre, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Nature_produit__Produit_existant, dos);

				// Float

				if (this.Quantite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Quantite);
				}

				// String

				writeString(this.Prix_unitaire, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Remise______Opportunite, dos);

				// Float

				if (this.Total_remise_HT == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Total_remise_HT);
				}

				// String

				writeString(this.Extension__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider_Extension__Opportunite, dos);

				// String

				writeString(this.Duree_d_engagement__Opportunite, dos);

				// String

				writeString(this.Type_d_engagement__Opportunite, dos);

				// String

				writeString(this.Demandeur__Opportunite, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Cree_le__Opportunite, dos);

				// Integer

				writeInteger(this.Mois_de_creation, dos);

				// Integer

				writeInteger(this.Annee_de_creation, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Raison_de_statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_activation__Commande, dos);

				// String

				writeString(this.Date_d_activation__Commande, dos);

				// Integer

				writeInteger(this.Mois_d_activation, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Gouvernorat, dos);

				// String

				writeString(this.Phase_de_l_opportunite__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Reference_OSM_mere__Opportunite=" + Reference_OSM_mere__Opportunite);
			sb.append(",Reference_OSM__Opportunite=" + Reference_OSM__Opportunite);
			sb.append(",Client_Prospect__Opportunite=" + Client_Prospect__Opportunite);
			sb.append(",Offre=" + Offre);
			sb.append(",Nature_Offre=" + Nature_Offre);
			sb.append(",Produit_existant=" + Produit_existant);
			sb.append(",Nature_produit__Produit_existant=" + Nature_produit__Produit_existant);
			sb.append(",Quantite=" + String.valueOf(Quantite));
			sb.append(",Prix_unitaire=" + Prix_unitaire);
			sb.append(",Total_final=" + Total_final);
			sb.append(",Remise______Opportunite=" + Remise______Opportunite);
			sb.append(",Total_remise_HT=" + String.valueOf(Total_remise_HT));
			sb.append(",Extension__Opportunite=" + Extension__Opportunite);
			sb.append(",Budget_a_valider__Opportunite=" + Budget_a_valider__Opportunite);
			sb.append(",Budget_a_valider_Extension__Opportunite=" + Budget_a_valider_Extension__Opportunite);
			sb.append(",Duree_d_engagement__Opportunite=" + Duree_d_engagement__Opportunite);
			sb.append(",Type_d_engagement__Opportunite=" + Type_d_engagement__Opportunite);
			sb.append(",Demandeur__Opportunite=" + Demandeur__Opportunite);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Cree_le__Opportunite=" + Cree_le__Opportunite);
			sb.append(",Mois_de_creation=" + String.valueOf(Mois_de_creation));
			sb.append(",Annee_de_creation=" + String.valueOf(Annee_de_creation));
			sb.append(",Mois_et_annee_de_creation=" + Mois_et_annee_de_creation);
			sb.append(",Raison_de_statut_OSM__Opportunite=" + Raison_de_statut_OSM__Opportunite);
			sb.append(",Statut_OSM__Opportunite=" + Statut_OSM__Opportunite);
			sb.append(",Statut_activation__Commande=" + Statut_activation__Commande);
			sb.append(",Date_d_activation__Commande=" + Date_d_activation__Commande);
			sb.append(",Mois_d_activation=" + String.valueOf(Mois_d_activation));
			sb.append(",Staut_Final=" + Staut_Final);
			sb.append(",Gouvernorat=" + Gouvernorat);
			sb.append(",Phase_de_l_opportunite__Opportunite=" + Phase_de_l_opportunite__Opportunite);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row27Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class copyOfcopyOft8Struct implements routines.system.IPersistableRow<copyOfcopyOft8Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Raison_Sociale;

		public String getRaison_Sociale() {
			return this.Raison_Sociale;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Raison_Sociale = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Raison_Sociale = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Raison_Sociale, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Raison_Sociale, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Raison_Sociale=" + Raison_Sociale);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(copyOfcopyOft8Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row35Struct implements routines.system.IPersistableRow<row35Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public Float Custcode;

		public Float getCustcode() {
			return this.Custcode;
		}

		public String Raison_Sociale;

		public String getRaison_Sociale() {
			return this.Raison_Sociale;
		}

		public String Groupe_Client;

		public String getGroupe_Client() {
			return this.Groupe_Client;
		}

		public String Account_Manager;

		public String getAccount_Manager() {
			return this.Account_Manager;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public Integer Somme_de_Suspension;

		public Integer getSomme_de_Suspension() {
			return this.Somme_de_Suspension;
		}

		public String Type_de_suspension;

		public String getType_de_suspension() {
			return this.Type_de_suspension;
		}

		public String Motif;

		public String getMotif() {
			return this.Motif;
		}

		public String DFE;

		public String getDFE() {
			return this.DFE;
		}

		public String Engage_Oui_Non;

		public String getEngage_Oui_Non() {
			return this.Engage_Oui_Non;
		}

		public java.util.Date Date_Depot;

		public java.util.Date getDate_Depot() {
			return this.Date_Depot;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		private java.util.Date readDate(ObjectInputStream dis) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(dis.readLong());
			}
			return dateReturn;
		}

		private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(unmarshaller.readLong());
			}
			return dateReturn;
		}

		private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException {
			if (date1 == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeLong(date1.getTime());
			}
		}

		private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (date1 == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeLong(date1.getTime());
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Suspension = readInteger(dis);

					this.Type_de_suspension = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readDate(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Suspension = readInteger(dis);

					this.Type_de_suspension = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readDate(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Suspension, dos);

				// String

				writeString(this.Type_de_suspension, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// java.util.Date

				writeDate(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Suspension, dos);

				// String

				writeString(this.Type_de_suspension, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// java.util.Date

				writeDate(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Custcode=" + String.valueOf(Custcode));
			sb.append(",Raison_Sociale=" + Raison_Sociale);
			sb.append(",Groupe_Client=" + Groupe_Client);
			sb.append(",Account_Manager=" + Account_Manager);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Somme_de_Suspension=" + String.valueOf(Somme_de_Suspension));
			sb.append(",Type_de_suspension=" + Type_de_suspension);
			sb.append(",Motif=" + Motif);
			sb.append(",DFE=" + DFE);
			sb.append(",Engage_Oui_Non=" + Engage_Oui_Non);
			sb.append(",Date_Depot=" + String.valueOf(Date_Depot));
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row35Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class copyOfcopyOft7Struct implements routines.system.IPersistableRow<copyOfcopyOft7Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Raison_Sociale;

		public String getRaison_Sociale() {
			return this.Raison_Sociale;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Raison_Sociale = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Raison_Sociale = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Raison_Sociale, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Raison_Sociale, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Raison_Sociale=" + Raison_Sociale);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(copyOfcopyOft7Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row41Struct implements routines.system.IPersistableRow<row41Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public Float Custcode;

		public Float getCustcode() {
			return this.Custcode;
		}

		public String Raison_Sociale;

		public String getRaison_Sociale() {
			return this.Raison_Sociale;
		}

		public String Groupe_Client;

		public String getGroupe_Client() {
			return this.Groupe_Client;
		}

		public String Account_Manager;

		public String getAccount_Manager() {
			return this.Account_Manager;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public Integer Somme_de_Resiliation;

		public Integer getSomme_de_Resiliation() {
			return this.Somme_de_Resiliation;
		}

		public String Type_Resiliation;

		public String getType_Resiliation() {
			return this.Type_Resiliation;
		}

		public String Motif;

		public String getMotif() {
			return this.Motif;
		}

		public String DFE;

		public String getDFE() {
			return this.DFE;
		}

		public String Engage_Oui_Non;

		public String getEngage_Oui_Non() {
			return this.Engage_Oui_Non;
		}

		public java.util.Date Date_Depot;

		public java.util.Date getDate_Depot() {
			return this.Date_Depot;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		private java.util.Date readDate(ObjectInputStream dis) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(dis.readLong());
			}
			return dateReturn;
		}

		private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(unmarshaller.readLong());
			}
			return dateReturn;
		}

		private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException {
			if (date1 == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeLong(date1.getTime());
			}
		}

		private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (date1 == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeLong(date1.getTime());
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Resiliation = readInteger(dis);

					this.Type_Resiliation = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readDate(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Resiliation = readInteger(dis);

					this.Type_Resiliation = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readDate(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Resiliation, dos);

				// String

				writeString(this.Type_Resiliation, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// java.util.Date

				writeDate(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Resiliation, dos);

				// String

				writeString(this.Type_Resiliation, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// java.util.Date

				writeDate(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Custcode=" + String.valueOf(Custcode));
			sb.append(",Raison_Sociale=" + Raison_Sociale);
			sb.append(",Groupe_Client=" + Groupe_Client);
			sb.append(",Account_Manager=" + Account_Manager);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Somme_de_Resiliation=" + String.valueOf(Somme_de_Resiliation));
			sb.append(",Type_Resiliation=" + Type_Resiliation);
			sb.append(",Motif=" + Motif);
			sb.append(",DFE=" + DFE);
			sb.append(",Engage_Oui_Non=" + Engage_Oui_Non);
			sb.append(",Date_Depot=" + String.valueOf(Date_Depot));
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row41Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class copyOfcopyOft9Struct implements routines.system.IPersistableRow<copyOfcopyOft9Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Raison_sociale__Concernant;

		public String getRaison_sociale__Concernant() {
			return this.Raison_sociale__Concernant;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Raison_sociale__Concernant = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Raison_sociale__Concernant = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Raison_sociale__Concernant, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Raison_sociale__Concernant, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Raison_sociale__Concernant=" + Raison_sociale__Concernant);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(copyOfcopyOft9Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row44Struct implements routines.system.IPersistableRow<row44Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Sujet;

		public String getSujet() {
			return this.Sujet;
		}

		public java.util.Date Cree_le;

		public java.util.Date getCree_le() {
			return this.Cree_le;
		}

		public String Concernant;

		public String getConcernant() {
			return this.Concernant;
		}

		public String Cree_par;

		public String getCree_par() {
			return this.Cree_par;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public String Emplacement;

		public String getEmplacement() {
			return this.Emplacement;
		}

		public java.util.Date Heure_de_debut;

		public java.util.Date getHeure_de_debut() {
			return this.Heure_de_debut;
		}

		public String Heure_de_fin;

		public String getHeure_de_fin() {
			return this.Heure_de_fin;
		}

		public String Statut;

		public String getStatut() {
			return this.Statut;
		}

		public String Raison_sociale__Concernant;

		public String getRaison_sociale__Concernant() {
			return this.Raison_sociale__Concernant;
		}

		public String Delegation__Concernant;

		public String getDelegation__Concernant() {
			return this.Delegation__Concernant;
		}

		public String Gouvernorat__Concernant;

		public String getGouvernorat__Concernant() {
			return this.Gouvernorat__Concernant;
		}

		public String Jour_de_la_semaine;

		public String getJour_de_la_semaine() {
			return this.Jour_de_la_semaine;
		}

		public String Description;

		public String getDescription() {
			return this.Description;
		}

		public String Categorie;

		public String getCategorie() {
			return this.Categorie;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private java.util.Date readDate(ObjectInputStream dis) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(dis.readLong());
			}
			return dateReturn;
		}

		private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(unmarshaller.readLong());
			}
			return dateReturn;
		}

		private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException {
			if (date1 == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeLong(date1.getTime());
			}
		}

		private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (date1 == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeLong(date1.getTime());
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Sujet = readString(dis);

					this.Cree_le = readDate(dis);

					this.Concernant = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Emplacement = readString(dis);

					this.Heure_de_debut = readDate(dis);

					this.Heure_de_fin = readString(dis);

					this.Statut = readString(dis);

					this.Raison_sociale__Concernant = readString(dis);

					this.Delegation__Concernant = readString(dis);

					this.Gouvernorat__Concernant = readString(dis);

					this.Jour_de_la_semaine = readString(dis);

					this.Description = readString(dis);

					this.Categorie = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Sujet = readString(dis);

					this.Cree_le = readDate(dis);

					this.Concernant = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Emplacement = readString(dis);

					this.Heure_de_debut = readDate(dis);

					this.Heure_de_fin = readString(dis);

					this.Statut = readString(dis);

					this.Raison_sociale__Concernant = readString(dis);

					this.Delegation__Concernant = readString(dis);

					this.Gouvernorat__Concernant = readString(dis);

					this.Jour_de_la_semaine = readString(dis);

					this.Description = readString(dis);

					this.Categorie = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Sujet, dos);

				// java.util.Date

				writeDate(this.Cree_le, dos);

				// String

				writeString(this.Concernant, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Emplacement, dos);

				// java.util.Date

				writeDate(this.Heure_de_debut, dos);

				// String

				writeString(this.Heure_de_fin, dos);

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Raison_sociale__Concernant, dos);

				// String

				writeString(this.Delegation__Concernant, dos);

				// String

				writeString(this.Gouvernorat__Concernant, dos);

				// String

				writeString(this.Jour_de_la_semaine, dos);

				// String

				writeString(this.Description, dos);

				// String

				writeString(this.Categorie, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Sujet, dos);

				// java.util.Date

				writeDate(this.Cree_le, dos);

				// String

				writeString(this.Concernant, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Emplacement, dos);

				// java.util.Date

				writeDate(this.Heure_de_debut, dos);

				// String

				writeString(this.Heure_de_fin, dos);

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Raison_sociale__Concernant, dos);

				// String

				writeString(this.Delegation__Concernant, dos);

				// String

				writeString(this.Gouvernorat__Concernant, dos);

				// String

				writeString(this.Jour_de_la_semaine, dos);

				// String

				writeString(this.Description, dos);

				// String

				writeString(this.Categorie, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Sujet=" + Sujet);
			sb.append(",Cree_le=" + String.valueOf(Cree_le));
			sb.append(",Concernant=" + Concernant);
			sb.append(",Cree_par=" + Cree_par);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Emplacement=" + Emplacement);
			sb.append(",Heure_de_debut=" + String.valueOf(Heure_de_debut));
			sb.append(",Heure_de_fin=" + Heure_de_fin);
			sb.append(",Statut=" + Statut);
			sb.append(",Raison_sociale__Concernant=" + Raison_sociale__Concernant);
			sb.append(",Delegation__Concernant=" + Delegation__Concernant);
			sb.append(",Gouvernorat__Concernant=" + Gouvernorat__Concernant);
			sb.append(",Jour_de_la_semaine=" + Jour_de_la_semaine);
			sb.append(",Description=" + Description);
			sb.append(",Categorie=" + Categorie);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row44Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tFileInputExcel_14Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tFileInputExcel_14_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				tDBInput_2Process(globalMap);

				row26Struct row26 = new row26Struct();
				copyOft18Struct copyOft18 = new copyOft18Struct();

				row27Struct row27 = new row27Struct();
				copyOfcopyOft5Struct copyOfcopyOft5 = new copyOfcopyOft5Struct();

				row35Struct row35 = new row35Struct();
				copyOfcopyOft8Struct copyOfcopyOft8 = new copyOfcopyOft8Struct();

				row41Struct row41 = new row41Struct();
				copyOfcopyOft7Struct copyOfcopyOft7 = new copyOfcopyOft7Struct();

				row44Struct row44 = new row44Struct();
				copyOfcopyOft9Struct copyOfcopyOft9 = new copyOfcopyOft9Struct();

				row9Struct row9 = new row9Struct();
				kStruct k = new kStruct();
				row28Struct row28 = new row28Struct();

				/**
				 * [tDBOutput_3 begin ] start
				 */

				ok_Hash.put("tDBOutput_3", false);
				start_Hash.put("tDBOutput_3", System.currentTimeMillis());

				currentComponent = "tDBOutput_3";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row28");
				}

				int tos_count_tDBOutput_3 = 0;

				int nb_line_tDBOutput_3 = 0;
				int nb_line_update_tDBOutput_3 = 0;
				int nb_line_inserted_tDBOutput_3 = 0;
				int nb_line_deleted_tDBOutput_3 = 0;
				int nb_line_rejected_tDBOutput_3 = 0;

				int deletedCount_tDBOutput_3 = 0;
				int updatedCount_tDBOutput_3 = 0;
				int insertedCount_tDBOutput_3 = 0;
				int rowsToCommitCount_tDBOutput_3 = 0;
				int rejectedCount_tDBOutput_3 = 0;
				String dbschema_tDBOutput_3 = null;
				String tableName_tDBOutput_3 = null;
				boolean whetherReject_tDBOutput_3 = false;

				java.util.Calendar calendar_tDBOutput_3 = java.util.Calendar.getInstance();
				long year1_tDBOutput_3 = TalendDate.parseDate("yyyy-MM-dd", "0001-01-01").getTime();
				long year2_tDBOutput_3 = TalendDate.parseDate("yyyy-MM-dd", "1753-01-01").getTime();
				long year10000_tDBOutput_3 = TalendDate.parseDate("yyyy-MM-dd HH:mm:ss", "9999-12-31 24:00:00")
						.getTime();
				long date_tDBOutput_3;

				java.util.Calendar calendar_datetimeoffset_tDBOutput_3 = java.util.Calendar
						.getInstance(java.util.TimeZone.getTimeZone("UTC"));

				java.sql.Connection conn_tDBOutput_3 = null;
				String dbUser_tDBOutput_3 = null;
				dbschema_tDBOutput_3 = "dbo";
				String driverClass_tDBOutput_3 = "net.sourceforge.jtds.jdbc.Driver";

				java.lang.Class.forName(driverClass_tDBOutput_3);
				String port_tDBOutput_3 = "1433";
				String dbname_tDBOutput_3 = "orange_DW__";
				String url_tDBOutput_3 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBOutput_3)) {
					url_tDBOutput_3 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBOutput_3)) {
					url_tDBOutput_3 += "//" + "orange_DW__";

				}
				url_tDBOutput_3 += ";appName=" + projectName + ";" + "";
				dbUser_tDBOutput_3 = "sa";

				final String decryptedPassword_tDBOutput_3 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:2V8WirSpmNRsKGV48RWrwvWA8Cfc48J4qp6YRehK1NBTlO1Ndlo=");

				String dbPwd_tDBOutput_3 = decryptedPassword_tDBOutput_3;
				conn_tDBOutput_3 = java.sql.DriverManager.getConnection(url_tDBOutput_3, dbUser_tDBOutput_3,
						dbPwd_tDBOutput_3);

				resourceMap.put("conn_tDBOutput_3", conn_tDBOutput_3);

				conn_tDBOutput_3.setAutoCommit(false);
				int commitEvery_tDBOutput_3 = 10000;
				int commitCounter_tDBOutput_3 = 0;

				int batchSize_tDBOutput_3 = 10000;
				int batchSizeCounter_tDBOutput_3 = 0;

				if (dbschema_tDBOutput_3 == null || dbschema_tDBOutput_3.trim().length() == 0) {
					tableName_tDBOutput_3 = "Dim_Raison_sociale";
				} else {
					tableName_tDBOutput_3 = dbschema_tDBOutput_3 + "].[" + "Dim_Raison_sociale";
				}
				int count_tDBOutput_3 = 0;

				String insert_tDBOutput_3 = "INSERT INTO [" + tableName_tDBOutput_3
						+ "] ([Client_Prospect]) VALUES (?)";
				java.sql.PreparedStatement pstmt_tDBOutput_3 = conn_tDBOutput_3.prepareStatement(insert_tDBOutput_3);
				resourceMap.put("pstmt_tDBOutput_3", pstmt_tDBOutput_3);

				/**
				 * [tDBOutput_3 begin ] stop
				 */

				/**
				 * [tUniqRow_6 begin ] start
				 */

				ok_Hash.put("tUniqRow_6", false);
				start_Hash.put("tUniqRow_6", System.currentTimeMillis());

				currentComponent = "tUniqRow_6";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "k");
				}

				int tos_count_tUniqRow_6 = 0;

				class KeyStruct_tUniqRow_6 {

					private static final int DEFAULT_HASHCODE = 1;
					private static final int PRIME = 31;
					private int hashCode = DEFAULT_HASHCODE;
					public boolean hashCodeDirty = true;

					String Client_Prospect;

					@Override
					public int hashCode() {
						if (this.hashCodeDirty) {
							final int prime = PRIME;
							int result = DEFAULT_HASHCODE;

							result = prime * result
									+ ((this.Client_Prospect == null) ? 0 : this.Client_Prospect.hashCode());

							this.hashCode = result;
							this.hashCodeDirty = false;
						}
						return this.hashCode;
					}

					@Override
					public boolean equals(Object obj) {
						if (this == obj)
							return true;
						if (obj == null)
							return false;
						if (getClass() != obj.getClass())
							return false;
						final KeyStruct_tUniqRow_6 other = (KeyStruct_tUniqRow_6) obj;

						if (this.Client_Prospect == null) {
							if (other.Client_Prospect != null)
								return false;

						} else if (!this.Client_Prospect.equals(other.Client_Prospect))

							return false;

						return true;
					}

				}

				int nb_uniques_tUniqRow_6 = 0;
				int nb_duplicates_tUniqRow_6 = 0;
				KeyStruct_tUniqRow_6 finder_tUniqRow_6 = new KeyStruct_tUniqRow_6();
				java.util.Set<KeyStruct_tUniqRow_6> keystUniqRow_6 = new java.util.HashSet<KeyStruct_tUniqRow_6>();

				/**
				 * [tUniqRow_6 begin ] stop
				 */

				/**
				 * [tMap_7 begin ] start
				 */

				ok_Hash.put("tMap_7", false);
				start_Hash.put("tMap_7", System.currentTimeMillis());

				currentComponent = "tMap_7";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row9");
				}

				int tos_count_tMap_7 = 0;

// ###############################
// # Lookup's keys initialization

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row10Struct> tHash_Lookup_row10 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row10Struct>) ((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row10Struct>) globalMap
						.get("tHash_Lookup_row10"));

				row10Struct row10HashKey = new row10Struct();
				row10Struct row10Default = new row10Struct();
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_7__Struct {
				}
				Var__tMap_7__Struct Var__tMap_7 = new Var__tMap_7__Struct();
// ###############################

// ###############################
// # Outputs initialization
				kStruct k_tmp = new kStruct();
// ###############################

				/**
				 * [tMap_7 begin ] stop
				 */

				/**
				 * [tUnite_6 begin ] start
				 */

				ok_Hash.put("tUnite_6", false);
				start_Hash.put("tUnite_6", System.currentTimeMillis());

				currentComponent = "tUnite_6";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "copyOft18", "copyOfcopyOft8",
							"copyOfcopyOft7", "copyOfcopyOft9", "copyOfcopyOft5");
				}

				int tos_count_tUnite_6 = 0;

				int nb_line_tUnite_6 = 0;

				/**
				 * [tUnite_6 begin ] stop
				 */

				/**
				 * [tMap_19 begin ] start
				 */

				ok_Hash.put("tMap_19", false);
				start_Hash.put("tMap_19", System.currentTimeMillis());

				currentComponent = "tMap_19";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row26");
				}

				int tos_count_tMap_19 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_19__Struct {
				}
				Var__tMap_19__Struct Var__tMap_19 = new Var__tMap_19__Struct();
// ###############################

// ###############################
// # Outputs initialization
				copyOft18Struct copyOft18_tmp = new copyOft18Struct();
// ###############################

				/**
				 * [tMap_19 begin ] stop
				 */

				/**
				 * [tFileInputExcel_14 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_14", false);
				start_Hash.put("tFileInputExcel_14", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_14";

				int tos_count_tFileInputExcel_14 = 0;

				final String decryptedPassword_tFileInputExcel_14 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:iemSmYZxco7XGQ2Crqja9ezaqZFzH+19MZkPBQ==");
				String password_tFileInputExcel_14 = decryptedPassword_tFileInputExcel_14;
				if (password_tFileInputExcel_14.isEmpty()) {
					password_tFileInputExcel_14 = null;
				}
				class RegexUtil_tFileInputExcel_14 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_14 regexUtil_tFileInputExcel_14 = new RegexUtil_tFileInputExcel_14();

				Object source_tFileInputExcel_14 = "C:/Users/DELL/Downloads/Copie de Rapport Pipe et realisations DME Data et VoIP (2).xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_14 = null;

				if (source_tFileInputExcel_14 instanceof String) {
					workbook_tFileInputExcel_14 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_14), password_tFileInputExcel_14,
									true);
				} else if (source_tFileInputExcel_14 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_14 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_14, password_tFileInputExcel_14);
				} else {
					workbook_tFileInputExcel_14 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_14 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_14.addAll(
							regexUtil_tFileInputExcel_14.getSheets(workbook_tFileInputExcel_14, "Source", false));
					if (sheetList_tFileInputExcel_14.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_14 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_14 : sheetList_tFileInputExcel_14) {
						if (sheet_FilterNull_tFileInputExcel_14 != null
								&& sheetList_FilterNull_tFileInputExcel_14.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_14.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_14.add(sheet_FilterNull_tFileInputExcel_14);
						}
					}
					sheetList_tFileInputExcel_14 = sheetList_FilterNull_tFileInputExcel_14;
					if (sheetList_tFileInputExcel_14.size() > 0) {
						int nb_line_tFileInputExcel_14 = 0;

						int begin_line_tFileInputExcel_14 = 1;

						int footer_input_tFileInputExcel_14 = 0;

						int end_line_tFileInputExcel_14 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_14 : sheetList_tFileInputExcel_14) {
							end_line_tFileInputExcel_14 += (sheet_tFileInputExcel_14.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_14 -= footer_input_tFileInputExcel_14;
						int limit_tFileInputExcel_14 = -1;
						int start_column_tFileInputExcel_14 = 1 - 1;
						int end_column_tFileInputExcel_14 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_14 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_14 = sheetList_tFileInputExcel_14
								.get(0);
						int rowCount_tFileInputExcel_14 = 0;
						int sheetIndex_tFileInputExcel_14 = 0;
						int currentRows_tFileInputExcel_14 = (sheetList_tFileInputExcel_14.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_14 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_14 = df_tFileInputExcel_14.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_14 = begin_line_tFileInputExcel_14; i_tFileInputExcel_14 < end_line_tFileInputExcel_14; i_tFileInputExcel_14++) {

							int emptyColumnCount_tFileInputExcel_14 = 0;

							if (limit_tFileInputExcel_14 != -1
									&& nb_line_tFileInputExcel_14 >= limit_tFileInputExcel_14) {
								break;
							}

							while (i_tFileInputExcel_14 >= rowCount_tFileInputExcel_14
									+ currentRows_tFileInputExcel_14) {
								rowCount_tFileInputExcel_14 += currentRows_tFileInputExcel_14;
								sheet_tFileInputExcel_14 = sheetList_tFileInputExcel_14
										.get(++sheetIndex_tFileInputExcel_14);
								currentRows_tFileInputExcel_14 = (sheet_tFileInputExcel_14.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_14_CURRENT_SHEET", sheet_tFileInputExcel_14.getSheetName());
							if (rowCount_tFileInputExcel_14 <= i_tFileInputExcel_14) {
								row_tFileInputExcel_14 = sheet_tFileInputExcel_14
										.getRow(i_tFileInputExcel_14 - rowCount_tFileInputExcel_14);
							}
							row26 = null;
							int tempRowLength_tFileInputExcel_14 = 26;

							int columnIndex_tFileInputExcel_14 = 0;

							String[] temp_row_tFileInputExcel_14 = new String[tempRowLength_tFileInputExcel_14];
							int excel_end_column_tFileInputExcel_14;
							if (row_tFileInputExcel_14 == null) {
								excel_end_column_tFileInputExcel_14 = 0;
							} else {
								excel_end_column_tFileInputExcel_14 = row_tFileInputExcel_14.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_14;
							if (end_column_tFileInputExcel_14 == -1) {
								actual_end_column_tFileInputExcel_14 = excel_end_column_tFileInputExcel_14;
							} else {
								actual_end_column_tFileInputExcel_14 = end_column_tFileInputExcel_14 > excel_end_column_tFileInputExcel_14
										? excel_end_column_tFileInputExcel_14
										: end_column_tFileInputExcel_14;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_14 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_14; i++) {
								if (i + start_column_tFileInputExcel_14 < actual_end_column_tFileInputExcel_14) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_14 = row_tFileInputExcel_14
											.getCell(i + start_column_tFileInputExcel_14);
									if (cell_tFileInputExcel_14 != null) {
										switch (cell_tFileInputExcel_14.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_14[i] = cell_tFileInputExcel_14
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_14)) {
												temp_row_tFileInputExcel_14[i] = cell_tFileInputExcel_14
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_14[i] = df_tFileInputExcel_14
														.format(cell_tFileInputExcel_14.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_14[i] = String
													.valueOf(cell_tFileInputExcel_14.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_14.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_14[i] = cell_tFileInputExcel_14
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_14)) {
													temp_row_tFileInputExcel_14[i] = cell_tFileInputExcel_14
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_14 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_14.getNumericCellValue());
													temp_row_tFileInputExcel_14[i] = ne_tFileInputExcel_14
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_14[i] = String
														.valueOf(cell_tFileInputExcel_14.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_14[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_14[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_14[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_14[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_14 = false;
							row26 = new row26Struct();
							int curColNum_tFileInputExcel_14 = -1;
							String curColName_tFileInputExcel_14 = "";
							try {
								columnIndex_tFileInputExcel_14 = 0;

								if (temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14].length() > 0) {
									curColNum_tFileInputExcel_14 = columnIndex_tFileInputExcel_14
											+ start_column_tFileInputExcel_14 + 1;
									curColName_tFileInputExcel_14 = "Client_Prospect";

									row26.Client_Prospect = temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14];
								} else {
									row26.Client_Prospect = null;
									emptyColumnCount_tFileInputExcel_14++;
								}
								columnIndex_tFileInputExcel_14 = 1;

								if (temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14].length() > 0) {
									curColNum_tFileInputExcel_14 = columnIndex_tFileInputExcel_14
											+ start_column_tFileInputExcel_14 + 1;
									curColName_tFileInputExcel_14 = "Sujet";

									row26.Sujet = temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14];
								} else {
									row26.Sujet = null;
									emptyColumnCount_tFileInputExcel_14++;
								}
								columnIndex_tFileInputExcel_14 = 2;

								if (temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14].length() > 0) {
									curColNum_tFileInputExcel_14 = columnIndex_tFileInputExcel_14
											+ start_column_tFileInputExcel_14 + 1;
									curColName_tFileInputExcel_14 = "Acces";

									row26.Acces = temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14];
								} else {
									row26.Acces = null;
									emptyColumnCount_tFileInputExcel_14++;
								}
								columnIndex_tFileInputExcel_14 = 3;

								if (temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14].length() > 0) {
									curColNum_tFileInputExcel_14 = columnIndex_tFileInputExcel_14
											+ start_column_tFileInputExcel_14 + 1;
									curColName_tFileInputExcel_14 = "Type_d_acces";

									row26.Type_d_acces = temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14];
								} else {
									row26.Type_d_acces = null;
									emptyColumnCount_tFileInputExcel_14++;
								}
								columnIndex_tFileInputExcel_14 = 4;

								if (temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14].length() > 0) {
									curColNum_tFileInputExcel_14 = columnIndex_tFileInputExcel_14
											+ start_column_tFileInputExcel_14 + 1;
									curColName_tFileInputExcel_14 = "Account_Manager__Client_Prospect";

									row26.Account_Manager__Client_Prospect = temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14];
								} else {
									row26.Account_Manager__Client_Prospect = null;
									emptyColumnCount_tFileInputExcel_14++;
								}
								columnIndex_tFileInputExcel_14 = 5;

								if (temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14].length() > 0) {
									curColNum_tFileInputExcel_14 = columnIndex_tFileInputExcel_14
											+ start_column_tFileInputExcel_14 + 1;
									curColName_tFileInputExcel_14 = "Cree_le";

									row26.Cree_le = temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14];
								} else {
									row26.Cree_le = null;
									emptyColumnCount_tFileInputExcel_14++;
								}
								columnIndex_tFileInputExcel_14 = 6;

								if (temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14].length() > 0) {
									curColNum_tFileInputExcel_14 = columnIndex_tFileInputExcel_14
											+ start_column_tFileInputExcel_14 + 1;
									curColName_tFileInputExcel_14 = "Mois_et_annee_de_creation";

									row26.Mois_et_annee_de_creation = temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14];
								} else {
									row26.Mois_et_annee_de_creation = null;
									emptyColumnCount_tFileInputExcel_14++;
								}
								columnIndex_tFileInputExcel_14 = 7;

								if (temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14].length() > 0) {
									curColNum_tFileInputExcel_14 = columnIndex_tFileInputExcel_14
											+ start_column_tFileInputExcel_14 + 1;
									curColName_tFileInputExcel_14 = "Cree_par";

									row26.Cree_par = temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14];
								} else {
									row26.Cree_par = null;
									emptyColumnCount_tFileInputExcel_14++;
								}
								columnIndex_tFileInputExcel_14 = 8;

								if (temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14].length() > 0) {
									curColNum_tFileInputExcel_14 = columnIndex_tFileInputExcel_14
											+ start_column_tFileInputExcel_14 + 1;
									curColName_tFileInputExcel_14 = "Equipe";

									row26.Equipe = temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14];
								} else {
									row26.Equipe = null;
									emptyColumnCount_tFileInputExcel_14++;
								}
								columnIndex_tFileInputExcel_14 = 9;

								if (temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14].length() > 0) {
									curColNum_tFileInputExcel_14 = columnIndex_tFileInputExcel_14
											+ start_column_tFileInputExcel_14 + 1;
									curColName_tFileInputExcel_14 = "Proprietaire";

									row26.Proprietaire = temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14];
								} else {
									row26.Proprietaire = null;
									emptyColumnCount_tFileInputExcel_14++;
								}
								columnIndex_tFileInputExcel_14 = 10;

								if (temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14].length() > 0) {
									curColNum_tFileInputExcel_14 = columnIndex_tFileInputExcel_14
											+ start_column_tFileInputExcel_14 + 1;
									curColName_tFileInputExcel_14 = "Phase_de_l_opportunite";

									row26.Phase_de_l_opportunite = temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14];
								} else {
									row26.Phase_de_l_opportunite = null;
									emptyColumnCount_tFileInputExcel_14++;
								}
								columnIndex_tFileInputExcel_14 = 11;

								if (temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14].length() > 0) {
									curColNum_tFileInputExcel_14 = columnIndex_tFileInputExcel_14
											+ start_column_tFileInputExcel_14 + 1;
									curColName_tFileInputExcel_14 = "Valeur_ordering";

									row26.Valeur_ordering = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14], null,
											'.' == decimalChar_tFileInputExcel_14 ? null
													: decimalChar_tFileInputExcel_14));
								} else {
									row26.Valeur_ordering = null;
									emptyColumnCount_tFileInputExcel_14++;
								}
								columnIndex_tFileInputExcel_14 = 12;

								if (temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14].length() > 0) {
									curColNum_tFileInputExcel_14 = columnIndex_tFileInputExcel_14
											+ start_column_tFileInputExcel_14 + 1;
									curColName_tFileInputExcel_14 = "Statut";

									row26.Statut = temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14];
								} else {
									row26.Statut = null;
									emptyColumnCount_tFileInputExcel_14++;
								}
								columnIndex_tFileInputExcel_14 = 13;

								if (temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14].length() > 0) {
									curColNum_tFileInputExcel_14 = columnIndex_tFileInputExcel_14
											+ start_column_tFileInputExcel_14 + 1;
									curColName_tFileInputExcel_14 = "Staut_Final";

									row26.Staut_Final = temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14];
								} else {
									row26.Staut_Final = null;
									emptyColumnCount_tFileInputExcel_14++;
								}
								columnIndex_tFileInputExcel_14 = 14;

								if (temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14].length() > 0) {
									curColNum_tFileInputExcel_14 = columnIndex_tFileInputExcel_14
											+ start_column_tFileInputExcel_14 + 1;
									curColName_tFileInputExcel_14 = "Tarifs";

									row26.Tarifs = temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14];
								} else {
									row26.Tarifs = null;
									emptyColumnCount_tFileInputExcel_14++;
								}
								columnIndex_tFileInputExcel_14 = 15;

								if (temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14].length() > 0) {
									curColNum_tFileInputExcel_14 = columnIndex_tFileInputExcel_14
											+ start_column_tFileInputExcel_14 + 1;
									curColName_tFileInputExcel_14 = "Montant_total";

									row26.Montant_total = temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14];
								} else {
									row26.Montant_total = null;
									emptyColumnCount_tFileInputExcel_14++;
								}
								columnIndex_tFileInputExcel_14 = 16;

								if (temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14].length() > 0) {
									curColNum_tFileInputExcel_14 = columnIndex_tFileInputExcel_14
											+ start_column_tFileInputExcel_14 + 1;
									curColName_tFileInputExcel_14 = "Parent__Produit_existant";

									row26.Parent__Produit_existant = temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14];
								} else {
									row26.Parent__Produit_existant = null;
									emptyColumnCount_tFileInputExcel_14++;
								}
								columnIndex_tFileInputExcel_14 = 17;

								if (temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14].length() > 0) {
									curColNum_tFileInputExcel_14 = columnIndex_tFileInputExcel_14
											+ start_column_tFileInputExcel_14 + 1;
									curColName_tFileInputExcel_14 = "Produit_existant";

									row26.Produit_existant = temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14];
								} else {
									row26.Produit_existant = null;
									emptyColumnCount_tFileInputExcel_14++;
								}
								columnIndex_tFileInputExcel_14 = 18;

								if (temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14].length() > 0) {
									curColNum_tFileInputExcel_14 = columnIndex_tFileInputExcel_14
											+ start_column_tFileInputExcel_14 + 1;
									curColName_tFileInputExcel_14 = "Operation";

									row26.Operation = temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14];
								} else {
									row26.Operation = null;
									emptyColumnCount_tFileInputExcel_14++;
								}
								columnIndex_tFileInputExcel_14 = 19;

								if (temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14].length() > 0) {
									curColNum_tFileInputExcel_14 = columnIndex_tFileInputExcel_14
											+ start_column_tFileInputExcel_14 + 1;
									curColName_tFileInputExcel_14 = "Type_d_operation";

									row26.Type_d_operation = temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14];
								} else {
									row26.Type_d_operation = null;
									emptyColumnCount_tFileInputExcel_14++;
								}
								columnIndex_tFileInputExcel_14 = 20;

								if (temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14].length() > 0) {
									curColNum_tFileInputExcel_14 = columnIndex_tFileInputExcel_14
											+ start_column_tFileInputExcel_14 + 1;
									curColName_tFileInputExcel_14 = "Prix_unitaire";

									row26.Prix_unitaire = temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14];
								} else {
									row26.Prix_unitaire = null;
									emptyColumnCount_tFileInputExcel_14++;
								}
								columnIndex_tFileInputExcel_14 = 21;

								if (temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14].length() > 0) {
									curColNum_tFileInputExcel_14 = columnIndex_tFileInputExcel_14
											+ start_column_tFileInputExcel_14 + 1;
									curColName_tFileInputExcel_14 = "Quantite";

									row26.Quantite = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14], null,
											'.' == decimalChar_tFileInputExcel_14 ? null
													: decimalChar_tFileInputExcel_14));
								} else {
									row26.Quantite = null;
									emptyColumnCount_tFileInputExcel_14++;
								}
								columnIndex_tFileInputExcel_14 = 22;

								if (temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14].length() > 0) {
									curColNum_tFileInputExcel_14 = columnIndex_tFileInputExcel_14
											+ start_column_tFileInputExcel_14 + 1;
									curColName_tFileInputExcel_14 = "Remise";

									row26.Remise = temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14];
								} else {
									row26.Remise = null;
									emptyColumnCount_tFileInputExcel_14++;
								}
								columnIndex_tFileInputExcel_14 = 23;

								if (temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14].length() > 0) {
									curColNum_tFileInputExcel_14 = columnIndex_tFileInputExcel_14
											+ start_column_tFileInputExcel_14 + 1;
									curColName_tFileInputExcel_14 = "Montant_de_la_remise_manuelle";

									row26.Montant_de_la_remise_manuelle = temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14];
								} else {
									row26.Montant_de_la_remise_manuelle = null;
									emptyColumnCount_tFileInputExcel_14++;
								}
								columnIndex_tFileInputExcel_14 = 24;

								if (temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14].length() > 0) {
									curColNum_tFileInputExcel_14 = columnIndex_tFileInputExcel_14
											+ start_column_tFileInputExcel_14 + 1;
									curColName_tFileInputExcel_14 = "Total_final";

									row26.Total_final = temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14];
								} else {
									row26.Total_final = null;
									emptyColumnCount_tFileInputExcel_14++;
								}
								columnIndex_tFileInputExcel_14 = 25;

								if (temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14].length() > 0) {
									curColNum_tFileInputExcel_14 = columnIndex_tFileInputExcel_14
											+ start_column_tFileInputExcel_14 + 1;
									curColName_tFileInputExcel_14 = "Modifie_le";

									row26.Modifie_le = temp_row_tFileInputExcel_14[columnIndex_tFileInputExcel_14];
								} else {
									row26.Modifie_le = null;
									emptyColumnCount_tFileInputExcel_14++;
								}

								nb_line_tFileInputExcel_14++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_14_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_14 = true;
								System.err.println(e.getMessage());
								row26 = null;
							}

							/**
							 * [tFileInputExcel_14 begin ] stop
							 */

							/**
							 * [tFileInputExcel_14 main ] start
							 */

							currentComponent = "tFileInputExcel_14";

							tos_count_tFileInputExcel_14++;

							/**
							 * [tFileInputExcel_14 main ] stop
							 */

							/**
							 * [tFileInputExcel_14 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_14";

							/**
							 * [tFileInputExcel_14 process_data_begin ] stop
							 */
// Start of branch "row26"
							if (row26 != null) {

								/**
								 * [tMap_19 main ] start
								 */

								currentComponent = "tMap_19";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row26"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_19 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_19 = false;
								boolean mainRowRejected_tMap_19 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_19__Struct Var = Var__tMap_19;// ###############################
									// ###############################
									// # Output tables

									copyOft18 = null;

// # Output table : 'copyOft18'
									copyOft18_tmp.Client_Prospect = row26.Client_Prospect;
									copyOft18 = copyOft18_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_19 = false;

								tos_count_tMap_19++;

								/**
								 * [tMap_19 main ] stop
								 */

								/**
								 * [tMap_19 process_data_begin ] start
								 */

								currentComponent = "tMap_19";

								/**
								 * [tMap_19 process_data_begin ] stop
								 */
// Start of branch "copyOft18"
								if (copyOft18 != null) {

									/**
									 * [tUnite_6 main ] start
									 */

									currentComponent = "tUnite_6";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "copyOft18"

										);
									}

//////////

// for output
									row9 = new row9Struct();

									row9.Client_Prospect = copyOft18.Client_Prospect;

									nb_line_tUnite_6++;

//////////

									tos_count_tUnite_6++;

									/**
									 * [tUnite_6 main ] stop
									 */

									/**
									 * [tUnite_6 process_data_begin ] start
									 */

									currentComponent = "tUnite_6";

									/**
									 * [tUnite_6 process_data_begin ] stop
									 */

									/**
									 * [tMap_7 main ] start
									 */

									currentComponent = "tMap_7";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "row9"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_7 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_7 = false;
									boolean mainRowRejected_tMap_7 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row10"
									///////////////////////////////////////////////

									boolean forceLooprow10 = false;

									row10Struct row10ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_7) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_7 = false;

										row10HashKey.Client_Prospect = row9.Client_Prospect;

										row10HashKey.hashCodeDirty = true;

										tHash_Lookup_row10.lookup(row10HashKey);

										if (!tHash_Lookup_row10.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_7 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row10 != null && tHash_Lookup_row10.getCount(row10HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row10' and it contains more one result from keys : row10.Client_Prospect =
										// '" + row10HashKey.Client_Prospect + "'");
									} // G 071

									row10Struct row10 = null;

									row10Struct fromLookup_row10 = null;
									row10 = row10Default;

									if (tHash_Lookup_row10 != null && tHash_Lookup_row10.hasNext()) { // G 099

										fromLookup_row10 = tHash_Lookup_row10.next();

									} // G 099

									if (fromLookup_row10 != null) {
										row10 = fromLookup_row10;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_7__Struct Var = Var__tMap_7;// ###############################
										// ###############################
										// # Output tables

										k = null;

										if (!rejectedInnerJoin_tMap_7) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'k'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_7) {
											k_tmp.Client_Prospect = row9.Client_Prospect;
											k = k_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_7 = false;

									tos_count_tMap_7++;

									/**
									 * [tMap_7 main ] stop
									 */

									/**
									 * [tMap_7 process_data_begin ] start
									 */

									currentComponent = "tMap_7";

									/**
									 * [tMap_7 process_data_begin ] stop
									 */
// Start of branch "k"
									if (k != null) {

										/**
										 * [tUniqRow_6 main ] start
										 */

										currentComponent = "tUniqRow_6";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "k"

											);
										}

										row28 = null;
										finder_tUniqRow_6.Client_Prospect = k.Client_Prospect;
										finder_tUniqRow_6.hashCodeDirty = true;
										if (!keystUniqRow_6.contains(finder_tUniqRow_6)) {
											KeyStruct_tUniqRow_6 new_tUniqRow_6 = new KeyStruct_tUniqRow_6();

											new_tUniqRow_6.Client_Prospect = k.Client_Prospect;

											keystUniqRow_6.add(new_tUniqRow_6);
											if (row28 == null) {

												row28 = new row28Struct();
											}
											row28.Client_Prospect = k.Client_Prospect;
											nb_uniques_tUniqRow_6++;
										} else {
											nb_duplicates_tUniqRow_6++;
										}

										tos_count_tUniqRow_6++;

										/**
										 * [tUniqRow_6 main ] stop
										 */

										/**
										 * [tUniqRow_6 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_6";

										/**
										 * [tUniqRow_6 process_data_begin ] stop
										 */
// Start of branch "row28"
										if (row28 != null) {

											/**
											 * [tDBOutput_3 main ] start
											 */

											currentComponent = "tDBOutput_3";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row28"

												);
											}

											whetherReject_tDBOutput_3 = false;
											if (row28.Client_Prospect == null) {
												pstmt_tDBOutput_3.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_3.setString(1, row28.Client_Prospect);
											}

											pstmt_tDBOutput_3.addBatch();
											nb_line_tDBOutput_3++;

											batchSizeCounter_tDBOutput_3++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_3 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_3) throws Exception {
													try {

														for (int countEach_tDBOutput_3 : pstmt_tDBOutput_3
																.executeBatch()) {
															if (countEach_tDBOutput_3 == -2
																	|| countEach_tDBOutput_3 == -3) {
																break;
															}
															counter += countEach_tDBOutput_3;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_3_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_3 = 0;
														for (int countEach_tDBOutput_3 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_3 < 0 ? 0
																	: countEach_tDBOutput_3);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_3) throws Exception {
													try {

														for (int countEach_tDBOutput_3 : pstmt_tDBOutput_3
																.executeBatch()) {
															if (countEach_tDBOutput_3 == -2
																	|| countEach_tDBOutput_3 == -3) {
																break;
															}
															counter += countEach_tDBOutput_3;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_3_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_3 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_3 < 0 ? 0
																	: countEach_tDBOutput_3);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_3 > 0)
													&& (batchSize_tDBOutput_3 <= batchSizeCounter_tDBOutput_3)) {

												insertedCount_tDBOutput_3 = new LimitBytesHelper_tDBOutput_3()
														.limitBytePart1(insertedCount_tDBOutput_3, pstmt_tDBOutput_3);
												rowsToCommitCount_tDBOutput_3 = insertedCount_tDBOutput_3;

												batchSizeCounter_tDBOutput_3 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_3++;
											if (commitEvery_tDBOutput_3 <= commitCounter_tDBOutput_3) {
												if ((batchSize_tDBOutput_3 > 0) && (batchSizeCounter_tDBOutput_3 > 0)) {

													insertedCount_tDBOutput_3 = new LimitBytesHelper_tDBOutput_3()
															.limitBytePart1(insertedCount_tDBOutput_3,
																	pstmt_tDBOutput_3);

													batchSizeCounter_tDBOutput_3 = 0;
												}
												if (rowsToCommitCount_tDBOutput_3 != 0) {

												}
												conn_tDBOutput_3.commit();
												if (rowsToCommitCount_tDBOutput_3 != 0) {

													rowsToCommitCount_tDBOutput_3 = 0;
												}
												commitCounter_tDBOutput_3 = 0;
											}

											tos_count_tDBOutput_3++;

											/**
											 * [tDBOutput_3 main ] stop
											 */

											/**
											 * [tDBOutput_3 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_3";

											/**
											 * [tDBOutput_3 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_3 process_data_end ] start
											 */

											currentComponent = "tDBOutput_3";

											/**
											 * [tDBOutput_3 process_data_end ] stop
											 */

										} // End of branch "row28"

										/**
										 * [tUniqRow_6 process_data_end ] start
										 */

										currentComponent = "tUniqRow_6";

										/**
										 * [tUniqRow_6 process_data_end ] stop
										 */

									} // End of branch "k"

									/**
									 * [tMap_7 process_data_end ] start
									 */

									currentComponent = "tMap_7";

									/**
									 * [tMap_7 process_data_end ] stop
									 */

									/**
									 * [tUnite_6 process_data_end ] start
									 */

									currentComponent = "tUnite_6";

									/**
									 * [tUnite_6 process_data_end ] stop
									 */

								} // End of branch "copyOft18"

								/**
								 * [tMap_19 process_data_end ] start
								 */

								currentComponent = "tMap_19";

								/**
								 * [tMap_19 process_data_end ] stop
								 */

							} // End of branch "row26"

							/**
							 * [tFileInputExcel_14 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_14";

							/**
							 * [tFileInputExcel_14 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_14 end ] start
							 */

							currentComponent = "tFileInputExcel_14";

						}

						globalMap.put("tFileInputExcel_14_NB_LINE", nb_line_tFileInputExcel_14);

					}

				} finally {

					if (!(source_tFileInputExcel_14 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_14.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_14", true);
				end_Hash.put("tFileInputExcel_14", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_14 end ] stop
				 */

				/**
				 * [tMap_19 end ] start
				 */

				currentComponent = "tMap_19";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row26");
				}

				ok_Hash.put("tMap_19", true);
				end_Hash.put("tMap_19", System.currentTimeMillis());

				/**
				 * [tMap_19 end ] stop
				 */

				/**
				 * [tMap_20 begin ] start
				 */

				ok_Hash.put("tMap_20", false);
				start_Hash.put("tMap_20", System.currentTimeMillis());

				currentComponent = "tMap_20";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row27");
				}

				int tos_count_tMap_20 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_20__Struct {
				}
				Var__tMap_20__Struct Var__tMap_20 = new Var__tMap_20__Struct();
// ###############################

// ###############################
// # Outputs initialization
				copyOfcopyOft5Struct copyOfcopyOft5_tmp = new copyOfcopyOft5Struct();
// ###############################

				/**
				 * [tMap_20 begin ] stop
				 */

				/**
				 * [tFileInputExcel_19 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_19", false);
				start_Hash.put("tFileInputExcel_19", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_19";

				int tos_count_tFileInputExcel_19 = 0;

				final String decryptedPassword_tFileInputExcel_19 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:dNgs8z6PAFfTo88KIZgKtxjGVIH1VFXFOgjb3Q==");
				String password_tFileInputExcel_19 = decryptedPassword_tFileInputExcel_19;
				if (password_tFileInputExcel_19.isEmpty()) {
					password_tFileInputExcel_19 = null;
				}
				class RegexUtil_tFileInputExcel_19 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_19 regexUtil_tFileInputExcel_19 = new RegexUtil_tFileInputExcel_19();

				Object source_tFileInputExcel_19 = "C:/Users/DELL/Downloads/Copie_de_EXTRACT_OPPORTUNITES_MOBILE_BB_VF_090520222381_1ans.xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_19 = null;

				if (source_tFileInputExcel_19 instanceof String) {
					workbook_tFileInputExcel_19 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_19), password_tFileInputExcel_19,
									true);
				} else if (source_tFileInputExcel_19 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_19 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_19, password_tFileInputExcel_19);
				} else {
					workbook_tFileInputExcel_19 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_19 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_19.addAll(
							regexUtil_tFileInputExcel_19.getSheets(workbook_tFileInputExcel_19, "Source", false));
					if (sheetList_tFileInputExcel_19.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_19 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_19 : sheetList_tFileInputExcel_19) {
						if (sheet_FilterNull_tFileInputExcel_19 != null
								&& sheetList_FilterNull_tFileInputExcel_19.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_19.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_19.add(sheet_FilterNull_tFileInputExcel_19);
						}
					}
					sheetList_tFileInputExcel_19 = sheetList_FilterNull_tFileInputExcel_19;
					if (sheetList_tFileInputExcel_19.size() > 0) {
						int nb_line_tFileInputExcel_19 = 0;

						int begin_line_tFileInputExcel_19 = 1;

						int footer_input_tFileInputExcel_19 = 0;

						int end_line_tFileInputExcel_19 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_19 : sheetList_tFileInputExcel_19) {
							end_line_tFileInputExcel_19 += (sheet_tFileInputExcel_19.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_19 -= footer_input_tFileInputExcel_19;
						int limit_tFileInputExcel_19 = -1;
						int start_column_tFileInputExcel_19 = 1 - 1;
						int end_column_tFileInputExcel_19 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_19 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_19 = sheetList_tFileInputExcel_19
								.get(0);
						int rowCount_tFileInputExcel_19 = 0;
						int sheetIndex_tFileInputExcel_19 = 0;
						int currentRows_tFileInputExcel_19 = (sheetList_tFileInputExcel_19.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_19 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_19 = df_tFileInputExcel_19.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_19 = begin_line_tFileInputExcel_19; i_tFileInputExcel_19 < end_line_tFileInputExcel_19; i_tFileInputExcel_19++) {

							int emptyColumnCount_tFileInputExcel_19 = 0;

							if (limit_tFileInputExcel_19 != -1
									&& nb_line_tFileInputExcel_19 >= limit_tFileInputExcel_19) {
								break;
							}

							while (i_tFileInputExcel_19 >= rowCount_tFileInputExcel_19
									+ currentRows_tFileInputExcel_19) {
								rowCount_tFileInputExcel_19 += currentRows_tFileInputExcel_19;
								sheet_tFileInputExcel_19 = sheetList_tFileInputExcel_19
										.get(++sheetIndex_tFileInputExcel_19);
								currentRows_tFileInputExcel_19 = (sheet_tFileInputExcel_19.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_19_CURRENT_SHEET", sheet_tFileInputExcel_19.getSheetName());
							if (rowCount_tFileInputExcel_19 <= i_tFileInputExcel_19) {
								row_tFileInputExcel_19 = sheet_tFileInputExcel_19
										.getRow(i_tFileInputExcel_19 - rowCount_tFileInputExcel_19);
							}
							row27 = null;
							int tempRowLength_tFileInputExcel_19 = 31;

							int columnIndex_tFileInputExcel_19 = 0;

							String[] temp_row_tFileInputExcel_19 = new String[tempRowLength_tFileInputExcel_19];
							int excel_end_column_tFileInputExcel_19;
							if (row_tFileInputExcel_19 == null) {
								excel_end_column_tFileInputExcel_19 = 0;
							} else {
								excel_end_column_tFileInputExcel_19 = row_tFileInputExcel_19.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_19;
							if (end_column_tFileInputExcel_19 == -1) {
								actual_end_column_tFileInputExcel_19 = excel_end_column_tFileInputExcel_19;
							} else {
								actual_end_column_tFileInputExcel_19 = end_column_tFileInputExcel_19 > excel_end_column_tFileInputExcel_19
										? excel_end_column_tFileInputExcel_19
										: end_column_tFileInputExcel_19;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_19 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_19; i++) {
								if (i + start_column_tFileInputExcel_19 < actual_end_column_tFileInputExcel_19) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_19 = row_tFileInputExcel_19
											.getCell(i + start_column_tFileInputExcel_19);
									if (cell_tFileInputExcel_19 != null) {
										switch (cell_tFileInputExcel_19.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_19[i] = cell_tFileInputExcel_19
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_19)) {
												temp_row_tFileInputExcel_19[i] = cell_tFileInputExcel_19
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_19[i] = df_tFileInputExcel_19
														.format(cell_tFileInputExcel_19.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_19[i] = String
													.valueOf(cell_tFileInputExcel_19.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_19.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_19[i] = cell_tFileInputExcel_19
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_19)) {
													temp_row_tFileInputExcel_19[i] = cell_tFileInputExcel_19
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_19 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_19.getNumericCellValue());
													temp_row_tFileInputExcel_19[i] = ne_tFileInputExcel_19
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_19[i] = String
														.valueOf(cell_tFileInputExcel_19.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_19[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_19[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_19[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_19[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_19 = false;
							row27 = new row27Struct();
							int curColNum_tFileInputExcel_19 = -1;
							String curColName_tFileInputExcel_19 = "";
							try {
								columnIndex_tFileInputExcel_19 = 0;

								if (temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19].length() > 0) {
									curColNum_tFileInputExcel_19 = columnIndex_tFileInputExcel_19
											+ start_column_tFileInputExcel_19 + 1;
									curColName_tFileInputExcel_19 = "Reference_OSM_mere__Opportunite";

									row27.Reference_OSM_mere__Opportunite = temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19];
								} else {
									row27.Reference_OSM_mere__Opportunite = null;
									emptyColumnCount_tFileInputExcel_19++;
								}
								columnIndex_tFileInputExcel_19 = 1;

								if (temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19].length() > 0) {
									curColNum_tFileInputExcel_19 = columnIndex_tFileInputExcel_19
											+ start_column_tFileInputExcel_19 + 1;
									curColName_tFileInputExcel_19 = "Reference_OSM__Opportunite";

									row27.Reference_OSM__Opportunite = temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19];
								} else {
									row27.Reference_OSM__Opportunite = null;
									emptyColumnCount_tFileInputExcel_19++;
								}
								columnIndex_tFileInputExcel_19 = 2;

								if (temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19].length() > 0) {
									curColNum_tFileInputExcel_19 = columnIndex_tFileInputExcel_19
											+ start_column_tFileInputExcel_19 + 1;
									curColName_tFileInputExcel_19 = "Client_Prospect__Opportunite";

									row27.Client_Prospect__Opportunite = temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19];
								} else {
									row27.Client_Prospect__Opportunite = null;
									emptyColumnCount_tFileInputExcel_19++;
								}
								columnIndex_tFileInputExcel_19 = 3;

								if (temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19].length() > 0) {
									curColNum_tFileInputExcel_19 = columnIndex_tFileInputExcel_19
											+ start_column_tFileInputExcel_19 + 1;
									curColName_tFileInputExcel_19 = "Offre";

									row27.Offre = temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19];
								} else {
									row27.Offre = null;
									emptyColumnCount_tFileInputExcel_19++;
								}
								columnIndex_tFileInputExcel_19 = 4;

								if (temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19].length() > 0) {
									curColNum_tFileInputExcel_19 = columnIndex_tFileInputExcel_19
											+ start_column_tFileInputExcel_19 + 1;
									curColName_tFileInputExcel_19 = "Nature_Offre";

									row27.Nature_Offre = temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19];
								} else {
									row27.Nature_Offre = null;
									emptyColumnCount_tFileInputExcel_19++;
								}
								columnIndex_tFileInputExcel_19 = 5;

								if (temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19].length() > 0) {
									curColNum_tFileInputExcel_19 = columnIndex_tFileInputExcel_19
											+ start_column_tFileInputExcel_19 + 1;
									curColName_tFileInputExcel_19 = "Produit_existant";

									row27.Produit_existant = temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19];
								} else {
									row27.Produit_existant = null;
									emptyColumnCount_tFileInputExcel_19++;
								}
								columnIndex_tFileInputExcel_19 = 6;

								if (temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19].length() > 0) {
									curColNum_tFileInputExcel_19 = columnIndex_tFileInputExcel_19
											+ start_column_tFileInputExcel_19 + 1;
									curColName_tFileInputExcel_19 = "Nature_produit__Produit_existant";

									row27.Nature_produit__Produit_existant = temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19];
								} else {
									row27.Nature_produit__Produit_existant = null;
									emptyColumnCount_tFileInputExcel_19++;
								}
								columnIndex_tFileInputExcel_19 = 7;

								if (temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19].length() > 0) {
									curColNum_tFileInputExcel_19 = columnIndex_tFileInputExcel_19
											+ start_column_tFileInputExcel_19 + 1;
									curColName_tFileInputExcel_19 = "Quantite";

									row27.Quantite = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19], null,
											'.' == decimalChar_tFileInputExcel_19 ? null
													: decimalChar_tFileInputExcel_19));
								} else {
									row27.Quantite = null;
									emptyColumnCount_tFileInputExcel_19++;
								}
								columnIndex_tFileInputExcel_19 = 8;

								if (temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19].length() > 0) {
									curColNum_tFileInputExcel_19 = columnIndex_tFileInputExcel_19
											+ start_column_tFileInputExcel_19 + 1;
									curColName_tFileInputExcel_19 = "Prix_unitaire";

									row27.Prix_unitaire = temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19];
								} else {
									row27.Prix_unitaire = null;
									emptyColumnCount_tFileInputExcel_19++;
								}
								columnIndex_tFileInputExcel_19 = 9;

								if (temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19].length() > 0) {
									curColNum_tFileInputExcel_19 = columnIndex_tFileInputExcel_19
											+ start_column_tFileInputExcel_19 + 1;
									curColName_tFileInputExcel_19 = "Total_final";

									row27.Total_final = temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19];
								} else {
									row27.Total_final = null;
									emptyColumnCount_tFileInputExcel_19++;
								}
								columnIndex_tFileInputExcel_19 = 10;

								if (temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19].length() > 0) {
									curColNum_tFileInputExcel_19 = columnIndex_tFileInputExcel_19
											+ start_column_tFileInputExcel_19 + 1;
									curColName_tFileInputExcel_19 = "Remise______Opportunite";

									row27.Remise______Opportunite = temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19];
								} else {
									row27.Remise______Opportunite = null;
									emptyColumnCount_tFileInputExcel_19++;
								}
								columnIndex_tFileInputExcel_19 = 11;

								if (temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19].length() > 0) {
									curColNum_tFileInputExcel_19 = columnIndex_tFileInputExcel_19
											+ start_column_tFileInputExcel_19 + 1;
									curColName_tFileInputExcel_19 = "Total_remise_HT";

									row27.Total_remise_HT = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19], null,
											'.' == decimalChar_tFileInputExcel_19 ? null
													: decimalChar_tFileInputExcel_19));
								} else {
									row27.Total_remise_HT = null;
									emptyColumnCount_tFileInputExcel_19++;
								}
								columnIndex_tFileInputExcel_19 = 12;

								if (temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19].length() > 0) {
									curColNum_tFileInputExcel_19 = columnIndex_tFileInputExcel_19
											+ start_column_tFileInputExcel_19 + 1;
									curColName_tFileInputExcel_19 = "Extension__Opportunite";

									row27.Extension__Opportunite = temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19];
								} else {
									row27.Extension__Opportunite = null;
									emptyColumnCount_tFileInputExcel_19++;
								}
								columnIndex_tFileInputExcel_19 = 13;

								if (temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19].length() > 0) {
									curColNum_tFileInputExcel_19 = columnIndex_tFileInputExcel_19
											+ start_column_tFileInputExcel_19 + 1;
									curColName_tFileInputExcel_19 = "Budget_a_valider__Opportunite";

									row27.Budget_a_valider__Opportunite = temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19];
								} else {
									row27.Budget_a_valider__Opportunite = null;
									emptyColumnCount_tFileInputExcel_19++;
								}
								columnIndex_tFileInputExcel_19 = 14;

								if (temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19].length() > 0) {
									curColNum_tFileInputExcel_19 = columnIndex_tFileInputExcel_19
											+ start_column_tFileInputExcel_19 + 1;
									curColName_tFileInputExcel_19 = "Budget_a_valider_Extension__Opportunite";

									row27.Budget_a_valider_Extension__Opportunite = temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19];
								} else {
									row27.Budget_a_valider_Extension__Opportunite = null;
									emptyColumnCount_tFileInputExcel_19++;
								}
								columnIndex_tFileInputExcel_19 = 15;

								if (temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19].length() > 0) {
									curColNum_tFileInputExcel_19 = columnIndex_tFileInputExcel_19
											+ start_column_tFileInputExcel_19 + 1;
									curColName_tFileInputExcel_19 = "Duree_d_engagement__Opportunite";

									row27.Duree_d_engagement__Opportunite = temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19];
								} else {
									row27.Duree_d_engagement__Opportunite = null;
									emptyColumnCount_tFileInputExcel_19++;
								}
								columnIndex_tFileInputExcel_19 = 16;

								if (temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19].length() > 0) {
									curColNum_tFileInputExcel_19 = columnIndex_tFileInputExcel_19
											+ start_column_tFileInputExcel_19 + 1;
									curColName_tFileInputExcel_19 = "Type_d_engagement__Opportunite";

									row27.Type_d_engagement__Opportunite = temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19];
								} else {
									row27.Type_d_engagement__Opportunite = null;
									emptyColumnCount_tFileInputExcel_19++;
								}
								columnIndex_tFileInputExcel_19 = 17;

								if (temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19].length() > 0) {
									curColNum_tFileInputExcel_19 = columnIndex_tFileInputExcel_19
											+ start_column_tFileInputExcel_19 + 1;
									curColName_tFileInputExcel_19 = "Demandeur__Opportunite";

									row27.Demandeur__Opportunite = temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19];
								} else {
									row27.Demandeur__Opportunite = null;
									emptyColumnCount_tFileInputExcel_19++;
								}
								columnIndex_tFileInputExcel_19 = 18;

								if (temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19].length() > 0) {
									curColNum_tFileInputExcel_19 = columnIndex_tFileInputExcel_19
											+ start_column_tFileInputExcel_19 + 1;
									curColName_tFileInputExcel_19 = "Equipe";

									row27.Equipe = temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19];
								} else {
									row27.Equipe = null;
									emptyColumnCount_tFileInputExcel_19++;
								}
								columnIndex_tFileInputExcel_19 = 19;

								if (temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19].length() > 0) {
									curColNum_tFileInputExcel_19 = columnIndex_tFileInputExcel_19
											+ start_column_tFileInputExcel_19 + 1;
									curColName_tFileInputExcel_19 = "Cree_le__Opportunite";

									row27.Cree_le__Opportunite = temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19];
								} else {
									row27.Cree_le__Opportunite = null;
									emptyColumnCount_tFileInputExcel_19++;
								}
								columnIndex_tFileInputExcel_19 = 20;

								if (temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19].length() > 0) {
									curColNum_tFileInputExcel_19 = columnIndex_tFileInputExcel_19
											+ start_column_tFileInputExcel_19 + 1;
									curColName_tFileInputExcel_19 = "Mois_de_creation";

									row27.Mois_de_creation = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19], null,
											'.' == decimalChar_tFileInputExcel_19 ? null
													: decimalChar_tFileInputExcel_19));
								} else {
									row27.Mois_de_creation = null;
									emptyColumnCount_tFileInputExcel_19++;
								}
								columnIndex_tFileInputExcel_19 = 21;

								if (temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19].length() > 0) {
									curColNum_tFileInputExcel_19 = columnIndex_tFileInputExcel_19
											+ start_column_tFileInputExcel_19 + 1;
									curColName_tFileInputExcel_19 = "Annee_de_creation";

									row27.Annee_de_creation = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19], null,
											'.' == decimalChar_tFileInputExcel_19 ? null
													: decimalChar_tFileInputExcel_19));
								} else {
									row27.Annee_de_creation = null;
									emptyColumnCount_tFileInputExcel_19++;
								}
								columnIndex_tFileInputExcel_19 = 22;

								if (temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19].length() > 0) {
									curColNum_tFileInputExcel_19 = columnIndex_tFileInputExcel_19
											+ start_column_tFileInputExcel_19 + 1;
									curColName_tFileInputExcel_19 = "Mois_et_annee_de_creation";

									row27.Mois_et_annee_de_creation = temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19];
								} else {
									row27.Mois_et_annee_de_creation = null;
									emptyColumnCount_tFileInputExcel_19++;
								}
								columnIndex_tFileInputExcel_19 = 23;

								if (temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19].length() > 0) {
									curColNum_tFileInputExcel_19 = columnIndex_tFileInputExcel_19
											+ start_column_tFileInputExcel_19 + 1;
									curColName_tFileInputExcel_19 = "Raison_de_statut_OSM__Opportunite";

									row27.Raison_de_statut_OSM__Opportunite = temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19];
								} else {
									row27.Raison_de_statut_OSM__Opportunite = null;
									emptyColumnCount_tFileInputExcel_19++;
								}
								columnIndex_tFileInputExcel_19 = 24;

								if (temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19].length() > 0) {
									curColNum_tFileInputExcel_19 = columnIndex_tFileInputExcel_19
											+ start_column_tFileInputExcel_19 + 1;
									curColName_tFileInputExcel_19 = "Statut_OSM__Opportunite";

									row27.Statut_OSM__Opportunite = temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19];
								} else {
									row27.Statut_OSM__Opportunite = null;
									emptyColumnCount_tFileInputExcel_19++;
								}
								columnIndex_tFileInputExcel_19 = 25;

								if (temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19].length() > 0) {
									curColNum_tFileInputExcel_19 = columnIndex_tFileInputExcel_19
											+ start_column_tFileInputExcel_19 + 1;
									curColName_tFileInputExcel_19 = "Statut_activation__Commande";

									row27.Statut_activation__Commande = temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19];
								} else {
									row27.Statut_activation__Commande = null;
									emptyColumnCount_tFileInputExcel_19++;
								}
								columnIndex_tFileInputExcel_19 = 26;

								if (temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19].length() > 0) {
									curColNum_tFileInputExcel_19 = columnIndex_tFileInputExcel_19
											+ start_column_tFileInputExcel_19 + 1;
									curColName_tFileInputExcel_19 = "Date_d_activation__Commande";

									row27.Date_d_activation__Commande = temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19];
								} else {
									row27.Date_d_activation__Commande = null;
									emptyColumnCount_tFileInputExcel_19++;
								}
								columnIndex_tFileInputExcel_19 = 27;

								if (temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19].length() > 0) {
									curColNum_tFileInputExcel_19 = columnIndex_tFileInputExcel_19
											+ start_column_tFileInputExcel_19 + 1;
									curColName_tFileInputExcel_19 = "Mois_d_activation";

									row27.Mois_d_activation = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19], null,
											'.' == decimalChar_tFileInputExcel_19 ? null
													: decimalChar_tFileInputExcel_19));
								} else {
									row27.Mois_d_activation = null;
									emptyColumnCount_tFileInputExcel_19++;
								}
								columnIndex_tFileInputExcel_19 = 28;

								if (temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19].length() > 0) {
									curColNum_tFileInputExcel_19 = columnIndex_tFileInputExcel_19
											+ start_column_tFileInputExcel_19 + 1;
									curColName_tFileInputExcel_19 = "Staut_Final";

									row27.Staut_Final = temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19];
								} else {
									row27.Staut_Final = null;
									emptyColumnCount_tFileInputExcel_19++;
								}
								columnIndex_tFileInputExcel_19 = 29;

								if (temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19].length() > 0) {
									curColNum_tFileInputExcel_19 = columnIndex_tFileInputExcel_19
											+ start_column_tFileInputExcel_19 + 1;
									curColName_tFileInputExcel_19 = "Gouvernorat";

									row27.Gouvernorat = temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19];
								} else {
									row27.Gouvernorat = null;
									emptyColumnCount_tFileInputExcel_19++;
								}
								columnIndex_tFileInputExcel_19 = 30;

								if (temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19].length() > 0) {
									curColNum_tFileInputExcel_19 = columnIndex_tFileInputExcel_19
											+ start_column_tFileInputExcel_19 + 1;
									curColName_tFileInputExcel_19 = "Phase_de_l_opportunite__Opportunite";

									row27.Phase_de_l_opportunite__Opportunite = temp_row_tFileInputExcel_19[columnIndex_tFileInputExcel_19];
								} else {
									row27.Phase_de_l_opportunite__Opportunite = null;
									emptyColumnCount_tFileInputExcel_19++;
								}

								nb_line_tFileInputExcel_19++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_19_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_19 = true;
								System.err.println(e.getMessage());
								row27 = null;
							}

							/**
							 * [tFileInputExcel_19 begin ] stop
							 */

							/**
							 * [tFileInputExcel_19 main ] start
							 */

							currentComponent = "tFileInputExcel_19";

							tos_count_tFileInputExcel_19++;

							/**
							 * [tFileInputExcel_19 main ] stop
							 */

							/**
							 * [tFileInputExcel_19 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_19";

							/**
							 * [tFileInputExcel_19 process_data_begin ] stop
							 */
// Start of branch "row27"
							if (row27 != null) {

								/**
								 * [tMap_20 main ] start
								 */

								currentComponent = "tMap_20";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row27"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_20 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_20 = false;
								boolean mainRowRejected_tMap_20 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_20__Struct Var = Var__tMap_20;// ###############################
									// ###############################
									// # Output tables

									copyOfcopyOft5 = null;

// # Output table : 'copyOfcopyOft5'
									copyOfcopyOft5_tmp.Client_Prospect__Opportunite = row27.Client_Prospect__Opportunite;
									copyOfcopyOft5 = copyOfcopyOft5_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_20 = false;

								tos_count_tMap_20++;

								/**
								 * [tMap_20 main ] stop
								 */

								/**
								 * [tMap_20 process_data_begin ] start
								 */

								currentComponent = "tMap_20";

								/**
								 * [tMap_20 process_data_begin ] stop
								 */
// Start of branch "copyOfcopyOft5"
								if (copyOfcopyOft5 != null) {

									/**
									 * [tUnite_6 main ] start
									 */

									currentComponent = "tUnite_6";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "copyOfcopyOft5"

										);
									}

//////////

// for output
									row9 = new row9Struct();

									row9.Client_Prospect = copyOfcopyOft5.Client_Prospect__Opportunite;

									nb_line_tUnite_6++;

//////////

									tos_count_tUnite_6++;

									/**
									 * [tUnite_6 main ] stop
									 */

									/**
									 * [tUnite_6 process_data_begin ] start
									 */

									currentComponent = "tUnite_6";

									/**
									 * [tUnite_6 process_data_begin ] stop
									 */

									/**
									 * [tMap_7 main ] start
									 */

									currentComponent = "tMap_7";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "row9"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_7 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_7 = false;
									boolean mainRowRejected_tMap_7 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row10"
									///////////////////////////////////////////////

									boolean forceLooprow10 = false;

									row10Struct row10ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_7) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_7 = false;

										row10HashKey.Client_Prospect = row9.Client_Prospect;

										row10HashKey.hashCodeDirty = true;

										tHash_Lookup_row10.lookup(row10HashKey);

										if (!tHash_Lookup_row10.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_7 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row10 != null && tHash_Lookup_row10.getCount(row10HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row10' and it contains more one result from keys : row10.Client_Prospect =
										// '" + row10HashKey.Client_Prospect + "'");
									} // G 071

									row10Struct row10 = null;

									row10Struct fromLookup_row10 = null;
									row10 = row10Default;

									if (tHash_Lookup_row10 != null && tHash_Lookup_row10.hasNext()) { // G 099

										fromLookup_row10 = tHash_Lookup_row10.next();

									} // G 099

									if (fromLookup_row10 != null) {
										row10 = fromLookup_row10;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_7__Struct Var = Var__tMap_7;// ###############################
										// ###############################
										// # Output tables

										k = null;

										if (!rejectedInnerJoin_tMap_7) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'k'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_7) {
											k_tmp.Client_Prospect = row9.Client_Prospect;
											k = k_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_7 = false;

									tos_count_tMap_7++;

									/**
									 * [tMap_7 main ] stop
									 */

									/**
									 * [tMap_7 process_data_begin ] start
									 */

									currentComponent = "tMap_7";

									/**
									 * [tMap_7 process_data_begin ] stop
									 */
// Start of branch "k"
									if (k != null) {

										/**
										 * [tUniqRow_6 main ] start
										 */

										currentComponent = "tUniqRow_6";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "k"

											);
										}

										row28 = null;
										finder_tUniqRow_6.Client_Prospect = k.Client_Prospect;
										finder_tUniqRow_6.hashCodeDirty = true;
										if (!keystUniqRow_6.contains(finder_tUniqRow_6)) {
											KeyStruct_tUniqRow_6 new_tUniqRow_6 = new KeyStruct_tUniqRow_6();

											new_tUniqRow_6.Client_Prospect = k.Client_Prospect;

											keystUniqRow_6.add(new_tUniqRow_6);
											if (row28 == null) {

												row28 = new row28Struct();
											}
											row28.Client_Prospect = k.Client_Prospect;
											nb_uniques_tUniqRow_6++;
										} else {
											nb_duplicates_tUniqRow_6++;
										}

										tos_count_tUniqRow_6++;

										/**
										 * [tUniqRow_6 main ] stop
										 */

										/**
										 * [tUniqRow_6 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_6";

										/**
										 * [tUniqRow_6 process_data_begin ] stop
										 */
// Start of branch "row28"
										if (row28 != null) {

											/**
											 * [tDBOutput_3 main ] start
											 */

											currentComponent = "tDBOutput_3";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row28"

												);
											}

											whetherReject_tDBOutput_3 = false;
											if (row28.Client_Prospect == null) {
												pstmt_tDBOutput_3.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_3.setString(1, row28.Client_Prospect);
											}

											pstmt_tDBOutput_3.addBatch();
											nb_line_tDBOutput_3++;

											batchSizeCounter_tDBOutput_3++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_3 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_3) throws Exception {
													try {

														for (int countEach_tDBOutput_3 : pstmt_tDBOutput_3
																.executeBatch()) {
															if (countEach_tDBOutput_3 == -2
																	|| countEach_tDBOutput_3 == -3) {
																break;
															}
															counter += countEach_tDBOutput_3;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_3_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_3 = 0;
														for (int countEach_tDBOutput_3 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_3 < 0 ? 0
																	: countEach_tDBOutput_3);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_3) throws Exception {
													try {

														for (int countEach_tDBOutput_3 : pstmt_tDBOutput_3
																.executeBatch()) {
															if (countEach_tDBOutput_3 == -2
																	|| countEach_tDBOutput_3 == -3) {
																break;
															}
															counter += countEach_tDBOutput_3;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_3_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_3 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_3 < 0 ? 0
																	: countEach_tDBOutput_3);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_3 > 0)
													&& (batchSize_tDBOutput_3 <= batchSizeCounter_tDBOutput_3)) {

												insertedCount_tDBOutput_3 = new LimitBytesHelper_tDBOutput_3()
														.limitBytePart1(insertedCount_tDBOutput_3, pstmt_tDBOutput_3);
												rowsToCommitCount_tDBOutput_3 = insertedCount_tDBOutput_3;

												batchSizeCounter_tDBOutput_3 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_3++;
											if (commitEvery_tDBOutput_3 <= commitCounter_tDBOutput_3) {
												if ((batchSize_tDBOutput_3 > 0) && (batchSizeCounter_tDBOutput_3 > 0)) {

													insertedCount_tDBOutput_3 = new LimitBytesHelper_tDBOutput_3()
															.limitBytePart1(insertedCount_tDBOutput_3,
																	pstmt_tDBOutput_3);

													batchSizeCounter_tDBOutput_3 = 0;
												}
												if (rowsToCommitCount_tDBOutput_3 != 0) {

												}
												conn_tDBOutput_3.commit();
												if (rowsToCommitCount_tDBOutput_3 != 0) {

													rowsToCommitCount_tDBOutput_3 = 0;
												}
												commitCounter_tDBOutput_3 = 0;
											}

											tos_count_tDBOutput_3++;

											/**
											 * [tDBOutput_3 main ] stop
											 */

											/**
											 * [tDBOutput_3 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_3";

											/**
											 * [tDBOutput_3 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_3 process_data_end ] start
											 */

											currentComponent = "tDBOutput_3";

											/**
											 * [tDBOutput_3 process_data_end ] stop
											 */

										} // End of branch "row28"

										/**
										 * [tUniqRow_6 process_data_end ] start
										 */

										currentComponent = "tUniqRow_6";

										/**
										 * [tUniqRow_6 process_data_end ] stop
										 */

									} // End of branch "k"

									/**
									 * [tMap_7 process_data_end ] start
									 */

									currentComponent = "tMap_7";

									/**
									 * [tMap_7 process_data_end ] stop
									 */

									/**
									 * [tUnite_6 process_data_end ] start
									 */

									currentComponent = "tUnite_6";

									/**
									 * [tUnite_6 process_data_end ] stop
									 */

								} // End of branch "copyOfcopyOft5"

								/**
								 * [tMap_20 process_data_end ] start
								 */

								currentComponent = "tMap_20";

								/**
								 * [tMap_20 process_data_end ] stop
								 */

							} // End of branch "row27"

							/**
							 * [tFileInputExcel_19 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_19";

							/**
							 * [tFileInputExcel_19 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_19 end ] start
							 */

							currentComponent = "tFileInputExcel_19";

						}

						globalMap.put("tFileInputExcel_19_NB_LINE", nb_line_tFileInputExcel_19);

					}

				} finally {

					if (!(source_tFileInputExcel_19 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_19.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_19", true);
				end_Hash.put("tFileInputExcel_19", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_19 end ] stop
				 */

				/**
				 * [tMap_20 end ] start
				 */

				currentComponent = "tMap_20";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row27");
				}

				ok_Hash.put("tMap_20", true);
				end_Hash.put("tMap_20", System.currentTimeMillis());

				/**
				 * [tMap_20 end ] stop
				 */

				/**
				 * [tMap_26 begin ] start
				 */

				ok_Hash.put("tMap_26", false);
				start_Hash.put("tMap_26", System.currentTimeMillis());

				currentComponent = "tMap_26";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row35");
				}

				int tos_count_tMap_26 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_26__Struct {
				}
				Var__tMap_26__Struct Var__tMap_26 = new Var__tMap_26__Struct();
// ###############################

// ###############################
// # Outputs initialization
				copyOfcopyOft8Struct copyOfcopyOft8_tmp = new copyOfcopyOft8Struct();
// ###############################

				/**
				 * [tMap_26 begin ] stop
				 */

				/**
				 * [tFileInputExcel_26 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_26", false);
				start_Hash.put("tFileInputExcel_26", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_26";

				int tos_count_tFileInputExcel_26 = 0;

				final String decryptedPassword_tFileInputExcel_26 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:f9R2JZ7tWvnJlmb4OIUSOuYL3yJozmSW7Igyjg==");
				String password_tFileInputExcel_26 = decryptedPassword_tFileInputExcel_26;
				if (password_tFileInputExcel_26.isEmpty()) {
					password_tFileInputExcel_26 = null;
				}
				class RegexUtil_tFileInputExcel_26 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_26 regexUtil_tFileInputExcel_26 = new RegexUtil_tFileInputExcel_26();

				Object source_tFileInputExcel_26 = "C:/Users/DELL/Downloads/parc facturé Mars 2022 (1).xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_26 = null;

				if (source_tFileInputExcel_26 instanceof String) {
					workbook_tFileInputExcel_26 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_26), password_tFileInputExcel_26,
									true);
				} else if (source_tFileInputExcel_26 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_26 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_26, password_tFileInputExcel_26);
				} else {
					workbook_tFileInputExcel_26 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_26 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_26.addAll(
							regexUtil_tFileInputExcel_26.getSheets(workbook_tFileInputExcel_26, "Suspension", false));
					if (sheetList_tFileInputExcel_26.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_26 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_26 : sheetList_tFileInputExcel_26) {
						if (sheet_FilterNull_tFileInputExcel_26 != null
								&& sheetList_FilterNull_tFileInputExcel_26.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_26.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_26.add(sheet_FilterNull_tFileInputExcel_26);
						}
					}
					sheetList_tFileInputExcel_26 = sheetList_FilterNull_tFileInputExcel_26;
					if (sheetList_tFileInputExcel_26.size() > 0) {
						int nb_line_tFileInputExcel_26 = 0;

						int begin_line_tFileInputExcel_26 = 1;

						int footer_input_tFileInputExcel_26 = 0;

						int end_line_tFileInputExcel_26 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_26 : sheetList_tFileInputExcel_26) {
							end_line_tFileInputExcel_26 += (sheet_tFileInputExcel_26.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_26 -= footer_input_tFileInputExcel_26;
						int limit_tFileInputExcel_26 = -1;
						int start_column_tFileInputExcel_26 = 1 - 1;
						int end_column_tFileInputExcel_26 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_26 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_26 = sheetList_tFileInputExcel_26
								.get(0);
						int rowCount_tFileInputExcel_26 = 0;
						int sheetIndex_tFileInputExcel_26 = 0;
						int currentRows_tFileInputExcel_26 = (sheetList_tFileInputExcel_26.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_26 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_26 = df_tFileInputExcel_26.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_26 = begin_line_tFileInputExcel_26; i_tFileInputExcel_26 < end_line_tFileInputExcel_26; i_tFileInputExcel_26++) {

							int emptyColumnCount_tFileInputExcel_26 = 0;

							if (limit_tFileInputExcel_26 != -1
									&& nb_line_tFileInputExcel_26 >= limit_tFileInputExcel_26) {
								break;
							}

							while (i_tFileInputExcel_26 >= rowCount_tFileInputExcel_26
									+ currentRows_tFileInputExcel_26) {
								rowCount_tFileInputExcel_26 += currentRows_tFileInputExcel_26;
								sheet_tFileInputExcel_26 = sheetList_tFileInputExcel_26
										.get(++sheetIndex_tFileInputExcel_26);
								currentRows_tFileInputExcel_26 = (sheet_tFileInputExcel_26.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_26_CURRENT_SHEET", sheet_tFileInputExcel_26.getSheetName());
							if (rowCount_tFileInputExcel_26 <= i_tFileInputExcel_26) {
								row_tFileInputExcel_26 = sheet_tFileInputExcel_26
										.getRow(i_tFileInputExcel_26 - rowCount_tFileInputExcel_26);
							}
							row35 = null;
							int tempRowLength_tFileInputExcel_26 = 11;

							int columnIndex_tFileInputExcel_26 = 0;

							String[] temp_row_tFileInputExcel_26 = new String[tempRowLength_tFileInputExcel_26];
							int excel_end_column_tFileInputExcel_26;
							if (row_tFileInputExcel_26 == null) {
								excel_end_column_tFileInputExcel_26 = 0;
							} else {
								excel_end_column_tFileInputExcel_26 = row_tFileInputExcel_26.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_26;
							if (end_column_tFileInputExcel_26 == -1) {
								actual_end_column_tFileInputExcel_26 = excel_end_column_tFileInputExcel_26;
							} else {
								actual_end_column_tFileInputExcel_26 = end_column_tFileInputExcel_26 > excel_end_column_tFileInputExcel_26
										? excel_end_column_tFileInputExcel_26
										: end_column_tFileInputExcel_26;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_26 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_26; i++) {
								if (i + start_column_tFileInputExcel_26 < actual_end_column_tFileInputExcel_26) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_26 = row_tFileInputExcel_26
											.getCell(i + start_column_tFileInputExcel_26);
									if (cell_tFileInputExcel_26 != null) {
										switch (cell_tFileInputExcel_26.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_26[i] = cell_tFileInputExcel_26
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_26)) {
												temp_row_tFileInputExcel_26[i] = cell_tFileInputExcel_26
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_26[i] = df_tFileInputExcel_26
														.format(cell_tFileInputExcel_26.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_26[i] = String
													.valueOf(cell_tFileInputExcel_26.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_26.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_26[i] = cell_tFileInputExcel_26
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_26)) {
													temp_row_tFileInputExcel_26[i] = cell_tFileInputExcel_26
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_26 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_26.getNumericCellValue());
													temp_row_tFileInputExcel_26[i] = ne_tFileInputExcel_26
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_26[i] = String
														.valueOf(cell_tFileInputExcel_26.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_26[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_26[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_26[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_26[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_26 = false;
							row35 = new row35Struct();
							int curColNum_tFileInputExcel_26 = -1;
							String curColName_tFileInputExcel_26 = "";
							try {
								columnIndex_tFileInputExcel_26 = 0;

								if (temp_row_tFileInputExcel_26[columnIndex_tFileInputExcel_26].length() > 0) {
									curColNum_tFileInputExcel_26 = columnIndex_tFileInputExcel_26
											+ start_column_tFileInputExcel_26 + 1;
									curColName_tFileInputExcel_26 = "Custcode";

									row35.Custcode = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_26[columnIndex_tFileInputExcel_26], null,
											'.' == decimalChar_tFileInputExcel_26 ? null
													: decimalChar_tFileInputExcel_26));
								} else {
									row35.Custcode = null;
									emptyColumnCount_tFileInputExcel_26++;
								}
								columnIndex_tFileInputExcel_26 = 1;

								if (temp_row_tFileInputExcel_26[columnIndex_tFileInputExcel_26].length() > 0) {
									curColNum_tFileInputExcel_26 = columnIndex_tFileInputExcel_26
											+ start_column_tFileInputExcel_26 + 1;
									curColName_tFileInputExcel_26 = "Raison_Sociale";

									row35.Raison_Sociale = temp_row_tFileInputExcel_26[columnIndex_tFileInputExcel_26];
								} else {
									row35.Raison_Sociale = null;
									emptyColumnCount_tFileInputExcel_26++;
								}
								columnIndex_tFileInputExcel_26 = 2;

								if (temp_row_tFileInputExcel_26[columnIndex_tFileInputExcel_26].length() > 0) {
									curColNum_tFileInputExcel_26 = columnIndex_tFileInputExcel_26
											+ start_column_tFileInputExcel_26 + 1;
									curColName_tFileInputExcel_26 = "Groupe_Client";

									row35.Groupe_Client = temp_row_tFileInputExcel_26[columnIndex_tFileInputExcel_26];
								} else {
									row35.Groupe_Client = null;
									emptyColumnCount_tFileInputExcel_26++;
								}
								columnIndex_tFileInputExcel_26 = 3;

								if (temp_row_tFileInputExcel_26[columnIndex_tFileInputExcel_26].length() > 0) {
									curColNum_tFileInputExcel_26 = columnIndex_tFileInputExcel_26
											+ start_column_tFileInputExcel_26 + 1;
									curColName_tFileInputExcel_26 = "Account_Manager";

									row35.Account_Manager = temp_row_tFileInputExcel_26[columnIndex_tFileInputExcel_26];
								} else {
									row35.Account_Manager = null;
									emptyColumnCount_tFileInputExcel_26++;
								}
								columnIndex_tFileInputExcel_26 = 4;

								if (temp_row_tFileInputExcel_26[columnIndex_tFileInputExcel_26].length() > 0) {
									curColNum_tFileInputExcel_26 = columnIndex_tFileInputExcel_26
											+ start_column_tFileInputExcel_26 + 1;
									curColName_tFileInputExcel_26 = "Equipe";

									row35.Equipe = temp_row_tFileInputExcel_26[columnIndex_tFileInputExcel_26];
								} else {
									row35.Equipe = null;
									emptyColumnCount_tFileInputExcel_26++;
								}
								columnIndex_tFileInputExcel_26 = 5;

								if (temp_row_tFileInputExcel_26[columnIndex_tFileInputExcel_26].length() > 0) {
									curColNum_tFileInputExcel_26 = columnIndex_tFileInputExcel_26
											+ start_column_tFileInputExcel_26 + 1;
									curColName_tFileInputExcel_26 = "Somme_de_Suspension";

									row35.Somme_de_Suspension = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_26[columnIndex_tFileInputExcel_26], null,
											'.' == decimalChar_tFileInputExcel_26 ? null
													: decimalChar_tFileInputExcel_26));
								} else {
									row35.Somme_de_Suspension = null;
									emptyColumnCount_tFileInputExcel_26++;
								}
								columnIndex_tFileInputExcel_26 = 6;

								if (temp_row_tFileInputExcel_26[columnIndex_tFileInputExcel_26].length() > 0) {
									curColNum_tFileInputExcel_26 = columnIndex_tFileInputExcel_26
											+ start_column_tFileInputExcel_26 + 1;
									curColName_tFileInputExcel_26 = "Type_de_suspension";

									row35.Type_de_suspension = temp_row_tFileInputExcel_26[columnIndex_tFileInputExcel_26];
								} else {
									row35.Type_de_suspension = null;
									emptyColumnCount_tFileInputExcel_26++;
								}
								columnIndex_tFileInputExcel_26 = 7;

								if (temp_row_tFileInputExcel_26[columnIndex_tFileInputExcel_26].length() > 0) {
									curColNum_tFileInputExcel_26 = columnIndex_tFileInputExcel_26
											+ start_column_tFileInputExcel_26 + 1;
									curColName_tFileInputExcel_26 = "Motif";

									row35.Motif = temp_row_tFileInputExcel_26[columnIndex_tFileInputExcel_26];
								} else {
									row35.Motif = null;
									emptyColumnCount_tFileInputExcel_26++;
								}
								columnIndex_tFileInputExcel_26 = 8;

								if (temp_row_tFileInputExcel_26[columnIndex_tFileInputExcel_26].length() > 0) {
									curColNum_tFileInputExcel_26 = columnIndex_tFileInputExcel_26
											+ start_column_tFileInputExcel_26 + 1;
									curColName_tFileInputExcel_26 = "DFE";

									row35.DFE = temp_row_tFileInputExcel_26[columnIndex_tFileInputExcel_26];
								} else {
									row35.DFE = null;
									emptyColumnCount_tFileInputExcel_26++;
								}
								columnIndex_tFileInputExcel_26 = 9;

								if (temp_row_tFileInputExcel_26[columnIndex_tFileInputExcel_26].length() > 0) {
									curColNum_tFileInputExcel_26 = columnIndex_tFileInputExcel_26
											+ start_column_tFileInputExcel_26 + 1;
									curColName_tFileInputExcel_26 = "Engage_Oui_Non";

									row35.Engage_Oui_Non = temp_row_tFileInputExcel_26[columnIndex_tFileInputExcel_26];
								} else {
									row35.Engage_Oui_Non = null;
									emptyColumnCount_tFileInputExcel_26++;
								}
								columnIndex_tFileInputExcel_26 = 10;

								if (temp_row_tFileInputExcel_26[columnIndex_tFileInputExcel_26].length() > 0) {
									curColNum_tFileInputExcel_26 = columnIndex_tFileInputExcel_26
											+ start_column_tFileInputExcel_26 + 1;
									curColName_tFileInputExcel_26 = "Date_Depot";

									if (10 < actual_end_column_tFileInputExcel_26) {
										try {
											if (row_tFileInputExcel_26
													.getCell(columnIndex_tFileInputExcel_26
															+ start_column_tFileInputExcel_26)
													.getCellType() == org.apache.poi.ss.usermodel.CellType.NUMERIC
													&& org.apache.poi.ss.usermodel.DateUtil
															.isCellDateFormatted(row_tFileInputExcel_26
																	.getCell(columnIndex_tFileInputExcel_26
																			+ start_column_tFileInputExcel_26))) {
												row35.Date_Depot = row_tFileInputExcel_26
														.getCell(columnIndex_tFileInputExcel_26
																+ start_column_tFileInputExcel_26)
														.getDateCellValue();
											} else {
												java.util.Date tempDate_tFileInputExcel_26 = ParserUtils.parseTo_Date(
														temp_row_tFileInputExcel_26[columnIndex_tFileInputExcel_26],
														"yyyy-MM-dd HH:mm:ss");
												if (tempDate_tFileInputExcel_26
														.after((new SimpleDateFormat("yyyy/MM/dd hh:mm:ss.SSS"))
																.parse("9999/12/31 23:59:59.999"))
														|| tempDate_tFileInputExcel_26
																.before((new SimpleDateFormat("yyyy/MM/dd"))
																		.parse("1900/01/01"))) {
													throw new RuntimeException("The cell format is not Date in ( Row. "
															+ (nb_line_tFileInputExcel_26 + 1) + " and ColumnNum. "
															+ curColNum_tFileInputExcel_26 + " )");
												} else {
													row35.Date_Depot = tempDate_tFileInputExcel_26;
												}
											}
										} catch (java.lang.Exception e) {
											globalMap.put("tFileInputExcel_26_ERROR_MESSAGE", e.getMessage());

											throw new RuntimeException("The cell format is not Date in ( Row. "
													+ (nb_line_tFileInputExcel_26 + 1) + " and ColumnNum. "
													+ curColNum_tFileInputExcel_26 + " )");
										}
									}

								} else {
									row35.Date_Depot = null;
									emptyColumnCount_tFileInputExcel_26++;
								}

								nb_line_tFileInputExcel_26++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_26_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_26 = true;
								System.err.println(e.getMessage());
								row35 = null;
							}

							/**
							 * [tFileInputExcel_26 begin ] stop
							 */

							/**
							 * [tFileInputExcel_26 main ] start
							 */

							currentComponent = "tFileInputExcel_26";

							tos_count_tFileInputExcel_26++;

							/**
							 * [tFileInputExcel_26 main ] stop
							 */

							/**
							 * [tFileInputExcel_26 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_26";

							/**
							 * [tFileInputExcel_26 process_data_begin ] stop
							 */
// Start of branch "row35"
							if (row35 != null) {

								/**
								 * [tMap_26 main ] start
								 */

								currentComponent = "tMap_26";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row35"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_26 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_26 = false;
								boolean mainRowRejected_tMap_26 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_26__Struct Var = Var__tMap_26;// ###############################
									// ###############################
									// # Output tables

									copyOfcopyOft8 = null;

// # Output table : 'copyOfcopyOft8'
									copyOfcopyOft8_tmp.Raison_Sociale = row35.Raison_Sociale;
									copyOfcopyOft8 = copyOfcopyOft8_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_26 = false;

								tos_count_tMap_26++;

								/**
								 * [tMap_26 main ] stop
								 */

								/**
								 * [tMap_26 process_data_begin ] start
								 */

								currentComponent = "tMap_26";

								/**
								 * [tMap_26 process_data_begin ] stop
								 */
// Start of branch "copyOfcopyOft8"
								if (copyOfcopyOft8 != null) {

									/**
									 * [tUnite_6 main ] start
									 */

									currentComponent = "tUnite_6";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "copyOfcopyOft8"

										);
									}

//////////

// for output
									row9 = new row9Struct();

									row9.Client_Prospect = copyOfcopyOft8.Raison_Sociale;

									nb_line_tUnite_6++;

//////////

									tos_count_tUnite_6++;

									/**
									 * [tUnite_6 main ] stop
									 */

									/**
									 * [tUnite_6 process_data_begin ] start
									 */

									currentComponent = "tUnite_6";

									/**
									 * [tUnite_6 process_data_begin ] stop
									 */

									/**
									 * [tMap_7 main ] start
									 */

									currentComponent = "tMap_7";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "row9"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_7 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_7 = false;
									boolean mainRowRejected_tMap_7 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row10"
									///////////////////////////////////////////////

									boolean forceLooprow10 = false;

									row10Struct row10ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_7) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_7 = false;

										row10HashKey.Client_Prospect = row9.Client_Prospect;

										row10HashKey.hashCodeDirty = true;

										tHash_Lookup_row10.lookup(row10HashKey);

										if (!tHash_Lookup_row10.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_7 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row10 != null && tHash_Lookup_row10.getCount(row10HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row10' and it contains more one result from keys : row10.Client_Prospect =
										// '" + row10HashKey.Client_Prospect + "'");
									} // G 071

									row10Struct row10 = null;

									row10Struct fromLookup_row10 = null;
									row10 = row10Default;

									if (tHash_Lookup_row10 != null && tHash_Lookup_row10.hasNext()) { // G 099

										fromLookup_row10 = tHash_Lookup_row10.next();

									} // G 099

									if (fromLookup_row10 != null) {
										row10 = fromLookup_row10;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_7__Struct Var = Var__tMap_7;// ###############################
										// ###############################
										// # Output tables

										k = null;

										if (!rejectedInnerJoin_tMap_7) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'k'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_7) {
											k_tmp.Client_Prospect = row9.Client_Prospect;
											k = k_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_7 = false;

									tos_count_tMap_7++;

									/**
									 * [tMap_7 main ] stop
									 */

									/**
									 * [tMap_7 process_data_begin ] start
									 */

									currentComponent = "tMap_7";

									/**
									 * [tMap_7 process_data_begin ] stop
									 */
// Start of branch "k"
									if (k != null) {

										/**
										 * [tUniqRow_6 main ] start
										 */

										currentComponent = "tUniqRow_6";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "k"

											);
										}

										row28 = null;
										finder_tUniqRow_6.Client_Prospect = k.Client_Prospect;
										finder_tUniqRow_6.hashCodeDirty = true;
										if (!keystUniqRow_6.contains(finder_tUniqRow_6)) {
											KeyStruct_tUniqRow_6 new_tUniqRow_6 = new KeyStruct_tUniqRow_6();

											new_tUniqRow_6.Client_Prospect = k.Client_Prospect;

											keystUniqRow_6.add(new_tUniqRow_6);
											if (row28 == null) {

												row28 = new row28Struct();
											}
											row28.Client_Prospect = k.Client_Prospect;
											nb_uniques_tUniqRow_6++;
										} else {
											nb_duplicates_tUniqRow_6++;
										}

										tos_count_tUniqRow_6++;

										/**
										 * [tUniqRow_6 main ] stop
										 */

										/**
										 * [tUniqRow_6 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_6";

										/**
										 * [tUniqRow_6 process_data_begin ] stop
										 */
// Start of branch "row28"
										if (row28 != null) {

											/**
											 * [tDBOutput_3 main ] start
											 */

											currentComponent = "tDBOutput_3";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row28"

												);
											}

											whetherReject_tDBOutput_3 = false;
											if (row28.Client_Prospect == null) {
												pstmt_tDBOutput_3.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_3.setString(1, row28.Client_Prospect);
											}

											pstmt_tDBOutput_3.addBatch();
											nb_line_tDBOutput_3++;

											batchSizeCounter_tDBOutput_3++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_3 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_3) throws Exception {
													try {

														for (int countEach_tDBOutput_3 : pstmt_tDBOutput_3
																.executeBatch()) {
															if (countEach_tDBOutput_3 == -2
																	|| countEach_tDBOutput_3 == -3) {
																break;
															}
															counter += countEach_tDBOutput_3;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_3_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_3 = 0;
														for (int countEach_tDBOutput_3 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_3 < 0 ? 0
																	: countEach_tDBOutput_3);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_3) throws Exception {
													try {

														for (int countEach_tDBOutput_3 : pstmt_tDBOutput_3
																.executeBatch()) {
															if (countEach_tDBOutput_3 == -2
																	|| countEach_tDBOutput_3 == -3) {
																break;
															}
															counter += countEach_tDBOutput_3;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_3_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_3 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_3 < 0 ? 0
																	: countEach_tDBOutput_3);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_3 > 0)
													&& (batchSize_tDBOutput_3 <= batchSizeCounter_tDBOutput_3)) {

												insertedCount_tDBOutput_3 = new LimitBytesHelper_tDBOutput_3()
														.limitBytePart1(insertedCount_tDBOutput_3, pstmt_tDBOutput_3);
												rowsToCommitCount_tDBOutput_3 = insertedCount_tDBOutput_3;

												batchSizeCounter_tDBOutput_3 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_3++;
											if (commitEvery_tDBOutput_3 <= commitCounter_tDBOutput_3) {
												if ((batchSize_tDBOutput_3 > 0) && (batchSizeCounter_tDBOutput_3 > 0)) {

													insertedCount_tDBOutput_3 = new LimitBytesHelper_tDBOutput_3()
															.limitBytePart1(insertedCount_tDBOutput_3,
																	pstmt_tDBOutput_3);

													batchSizeCounter_tDBOutput_3 = 0;
												}
												if (rowsToCommitCount_tDBOutput_3 != 0) {

												}
												conn_tDBOutput_3.commit();
												if (rowsToCommitCount_tDBOutput_3 != 0) {

													rowsToCommitCount_tDBOutput_3 = 0;
												}
												commitCounter_tDBOutput_3 = 0;
											}

											tos_count_tDBOutput_3++;

											/**
											 * [tDBOutput_3 main ] stop
											 */

											/**
											 * [tDBOutput_3 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_3";

											/**
											 * [tDBOutput_3 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_3 process_data_end ] start
											 */

											currentComponent = "tDBOutput_3";

											/**
											 * [tDBOutput_3 process_data_end ] stop
											 */

										} // End of branch "row28"

										/**
										 * [tUniqRow_6 process_data_end ] start
										 */

										currentComponent = "tUniqRow_6";

										/**
										 * [tUniqRow_6 process_data_end ] stop
										 */

									} // End of branch "k"

									/**
									 * [tMap_7 process_data_end ] start
									 */

									currentComponent = "tMap_7";

									/**
									 * [tMap_7 process_data_end ] stop
									 */

									/**
									 * [tUnite_6 process_data_end ] start
									 */

									currentComponent = "tUnite_6";

									/**
									 * [tUnite_6 process_data_end ] stop
									 */

								} // End of branch "copyOfcopyOft8"

								/**
								 * [tMap_26 process_data_end ] start
								 */

								currentComponent = "tMap_26";

								/**
								 * [tMap_26 process_data_end ] stop
								 */

							} // End of branch "row35"

							/**
							 * [tFileInputExcel_26 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_26";

							/**
							 * [tFileInputExcel_26 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_26 end ] start
							 */

							currentComponent = "tFileInputExcel_26";

						}

						globalMap.put("tFileInputExcel_26_NB_LINE", nb_line_tFileInputExcel_26);

					}

				} finally {

					if (!(source_tFileInputExcel_26 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_26.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_26", true);
				end_Hash.put("tFileInputExcel_26", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_26 end ] stop
				 */

				/**
				 * [tMap_26 end ] start
				 */

				currentComponent = "tMap_26";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row35");
				}

				ok_Hash.put("tMap_26", true);
				end_Hash.put("tMap_26", System.currentTimeMillis());

				/**
				 * [tMap_26 end ] stop
				 */

				/**
				 * [tMap_27 begin ] start
				 */

				ok_Hash.put("tMap_27", false);
				start_Hash.put("tMap_27", System.currentTimeMillis());

				currentComponent = "tMap_27";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row41");
				}

				int tos_count_tMap_27 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_27__Struct {
				}
				Var__tMap_27__Struct Var__tMap_27 = new Var__tMap_27__Struct();
// ###############################

// ###############################
// # Outputs initialization
				copyOfcopyOft7Struct copyOfcopyOft7_tmp = new copyOfcopyOft7Struct();
// ###############################

				/**
				 * [tMap_27 begin ] stop
				 */

				/**
				 * [tFileInputExcel_27 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_27", false);
				start_Hash.put("tFileInputExcel_27", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_27";

				int tos_count_tFileInputExcel_27 = 0;

				final String decryptedPassword_tFileInputExcel_27 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:cCd4gzqfCaPk7bgvVVw0HkGcj8HFzw381KFyrQ==");
				String password_tFileInputExcel_27 = decryptedPassword_tFileInputExcel_27;
				if (password_tFileInputExcel_27.isEmpty()) {
					password_tFileInputExcel_27 = null;
				}
				class RegexUtil_tFileInputExcel_27 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_27 regexUtil_tFileInputExcel_27 = new RegexUtil_tFileInputExcel_27();

				Object source_tFileInputExcel_27 = "C:/Users/DELL/Downloads/parc facturé Mars 2022 (1).xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_27 = null;

				if (source_tFileInputExcel_27 instanceof String) {
					workbook_tFileInputExcel_27 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_27), password_tFileInputExcel_27,
									true);
				} else if (source_tFileInputExcel_27 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_27 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_27, password_tFileInputExcel_27);
				} else {
					workbook_tFileInputExcel_27 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_27 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_27.addAll(
							regexUtil_tFileInputExcel_27.getSheets(workbook_tFileInputExcel_27, "Résiliation", false));
					if (sheetList_tFileInputExcel_27.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_27 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_27 : sheetList_tFileInputExcel_27) {
						if (sheet_FilterNull_tFileInputExcel_27 != null
								&& sheetList_FilterNull_tFileInputExcel_27.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_27.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_27.add(sheet_FilterNull_tFileInputExcel_27);
						}
					}
					sheetList_tFileInputExcel_27 = sheetList_FilterNull_tFileInputExcel_27;
					if (sheetList_tFileInputExcel_27.size() > 0) {
						int nb_line_tFileInputExcel_27 = 0;

						int begin_line_tFileInputExcel_27 = 1;

						int footer_input_tFileInputExcel_27 = 0;

						int end_line_tFileInputExcel_27 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_27 : sheetList_tFileInputExcel_27) {
							end_line_tFileInputExcel_27 += (sheet_tFileInputExcel_27.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_27 -= footer_input_tFileInputExcel_27;
						int limit_tFileInputExcel_27 = -1;
						int start_column_tFileInputExcel_27 = 1 - 1;
						int end_column_tFileInputExcel_27 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_27 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_27 = sheetList_tFileInputExcel_27
								.get(0);
						int rowCount_tFileInputExcel_27 = 0;
						int sheetIndex_tFileInputExcel_27 = 0;
						int currentRows_tFileInputExcel_27 = (sheetList_tFileInputExcel_27.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_27 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_27 = df_tFileInputExcel_27.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_27 = begin_line_tFileInputExcel_27; i_tFileInputExcel_27 < end_line_tFileInputExcel_27; i_tFileInputExcel_27++) {

							int emptyColumnCount_tFileInputExcel_27 = 0;

							if (limit_tFileInputExcel_27 != -1
									&& nb_line_tFileInputExcel_27 >= limit_tFileInputExcel_27) {
								break;
							}

							while (i_tFileInputExcel_27 >= rowCount_tFileInputExcel_27
									+ currentRows_tFileInputExcel_27) {
								rowCount_tFileInputExcel_27 += currentRows_tFileInputExcel_27;
								sheet_tFileInputExcel_27 = sheetList_tFileInputExcel_27
										.get(++sheetIndex_tFileInputExcel_27);
								currentRows_tFileInputExcel_27 = (sheet_tFileInputExcel_27.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_27_CURRENT_SHEET", sheet_tFileInputExcel_27.getSheetName());
							if (rowCount_tFileInputExcel_27 <= i_tFileInputExcel_27) {
								row_tFileInputExcel_27 = sheet_tFileInputExcel_27
										.getRow(i_tFileInputExcel_27 - rowCount_tFileInputExcel_27);
							}
							row41 = null;
							int tempRowLength_tFileInputExcel_27 = 11;

							int columnIndex_tFileInputExcel_27 = 0;

							String[] temp_row_tFileInputExcel_27 = new String[tempRowLength_tFileInputExcel_27];
							int excel_end_column_tFileInputExcel_27;
							if (row_tFileInputExcel_27 == null) {
								excel_end_column_tFileInputExcel_27 = 0;
							} else {
								excel_end_column_tFileInputExcel_27 = row_tFileInputExcel_27.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_27;
							if (end_column_tFileInputExcel_27 == -1) {
								actual_end_column_tFileInputExcel_27 = excel_end_column_tFileInputExcel_27;
							} else {
								actual_end_column_tFileInputExcel_27 = end_column_tFileInputExcel_27 > excel_end_column_tFileInputExcel_27
										? excel_end_column_tFileInputExcel_27
										: end_column_tFileInputExcel_27;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_27 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_27; i++) {
								if (i + start_column_tFileInputExcel_27 < actual_end_column_tFileInputExcel_27) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_27 = row_tFileInputExcel_27
											.getCell(i + start_column_tFileInputExcel_27);
									if (cell_tFileInputExcel_27 != null) {
										switch (cell_tFileInputExcel_27.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_27[i] = cell_tFileInputExcel_27
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_27)) {
												temp_row_tFileInputExcel_27[i] = cell_tFileInputExcel_27
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_27[i] = df_tFileInputExcel_27
														.format(cell_tFileInputExcel_27.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_27[i] = String
													.valueOf(cell_tFileInputExcel_27.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_27.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_27[i] = cell_tFileInputExcel_27
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_27)) {
													temp_row_tFileInputExcel_27[i] = cell_tFileInputExcel_27
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_27 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_27.getNumericCellValue());
													temp_row_tFileInputExcel_27[i] = ne_tFileInputExcel_27
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_27[i] = String
														.valueOf(cell_tFileInputExcel_27.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_27[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_27[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_27[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_27[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_27 = false;
							row41 = new row41Struct();
							int curColNum_tFileInputExcel_27 = -1;
							String curColName_tFileInputExcel_27 = "";
							try {
								columnIndex_tFileInputExcel_27 = 0;

								if (temp_row_tFileInputExcel_27[columnIndex_tFileInputExcel_27].length() > 0) {
									curColNum_tFileInputExcel_27 = columnIndex_tFileInputExcel_27
											+ start_column_tFileInputExcel_27 + 1;
									curColName_tFileInputExcel_27 = "Custcode";

									row41.Custcode = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_27[columnIndex_tFileInputExcel_27], null,
											'.' == decimalChar_tFileInputExcel_27 ? null
													: decimalChar_tFileInputExcel_27));
								} else {
									row41.Custcode = null;
									emptyColumnCount_tFileInputExcel_27++;
								}
								columnIndex_tFileInputExcel_27 = 1;

								if (temp_row_tFileInputExcel_27[columnIndex_tFileInputExcel_27].length() > 0) {
									curColNum_tFileInputExcel_27 = columnIndex_tFileInputExcel_27
											+ start_column_tFileInputExcel_27 + 1;
									curColName_tFileInputExcel_27 = "Raison_Sociale";

									row41.Raison_Sociale = temp_row_tFileInputExcel_27[columnIndex_tFileInputExcel_27];
								} else {
									row41.Raison_Sociale = null;
									emptyColumnCount_tFileInputExcel_27++;
								}
								columnIndex_tFileInputExcel_27 = 2;

								if (temp_row_tFileInputExcel_27[columnIndex_tFileInputExcel_27].length() > 0) {
									curColNum_tFileInputExcel_27 = columnIndex_tFileInputExcel_27
											+ start_column_tFileInputExcel_27 + 1;
									curColName_tFileInputExcel_27 = "Groupe_Client";

									row41.Groupe_Client = temp_row_tFileInputExcel_27[columnIndex_tFileInputExcel_27];
								} else {
									row41.Groupe_Client = null;
									emptyColumnCount_tFileInputExcel_27++;
								}
								columnIndex_tFileInputExcel_27 = 3;

								if (temp_row_tFileInputExcel_27[columnIndex_tFileInputExcel_27].length() > 0) {
									curColNum_tFileInputExcel_27 = columnIndex_tFileInputExcel_27
											+ start_column_tFileInputExcel_27 + 1;
									curColName_tFileInputExcel_27 = "Account_Manager";

									row41.Account_Manager = temp_row_tFileInputExcel_27[columnIndex_tFileInputExcel_27];
								} else {
									row41.Account_Manager = null;
									emptyColumnCount_tFileInputExcel_27++;
								}
								columnIndex_tFileInputExcel_27 = 4;

								if (temp_row_tFileInputExcel_27[columnIndex_tFileInputExcel_27].length() > 0) {
									curColNum_tFileInputExcel_27 = columnIndex_tFileInputExcel_27
											+ start_column_tFileInputExcel_27 + 1;
									curColName_tFileInputExcel_27 = "Equipe";

									row41.Equipe = temp_row_tFileInputExcel_27[columnIndex_tFileInputExcel_27];
								} else {
									row41.Equipe = null;
									emptyColumnCount_tFileInputExcel_27++;
								}
								columnIndex_tFileInputExcel_27 = 5;

								if (temp_row_tFileInputExcel_27[columnIndex_tFileInputExcel_27].length() > 0) {
									curColNum_tFileInputExcel_27 = columnIndex_tFileInputExcel_27
											+ start_column_tFileInputExcel_27 + 1;
									curColName_tFileInputExcel_27 = "Somme_de_Resiliation";

									row41.Somme_de_Resiliation = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_27[columnIndex_tFileInputExcel_27], null,
											'.' == decimalChar_tFileInputExcel_27 ? null
													: decimalChar_tFileInputExcel_27));
								} else {
									row41.Somme_de_Resiliation = null;
									emptyColumnCount_tFileInputExcel_27++;
								}
								columnIndex_tFileInputExcel_27 = 6;

								if (temp_row_tFileInputExcel_27[columnIndex_tFileInputExcel_27].length() > 0) {
									curColNum_tFileInputExcel_27 = columnIndex_tFileInputExcel_27
											+ start_column_tFileInputExcel_27 + 1;
									curColName_tFileInputExcel_27 = "Type_Resiliation";

									row41.Type_Resiliation = temp_row_tFileInputExcel_27[columnIndex_tFileInputExcel_27];
								} else {
									row41.Type_Resiliation = null;
									emptyColumnCount_tFileInputExcel_27++;
								}
								columnIndex_tFileInputExcel_27 = 7;

								if (temp_row_tFileInputExcel_27[columnIndex_tFileInputExcel_27].length() > 0) {
									curColNum_tFileInputExcel_27 = columnIndex_tFileInputExcel_27
											+ start_column_tFileInputExcel_27 + 1;
									curColName_tFileInputExcel_27 = "Motif";

									row41.Motif = temp_row_tFileInputExcel_27[columnIndex_tFileInputExcel_27];
								} else {
									row41.Motif = null;
									emptyColumnCount_tFileInputExcel_27++;
								}
								columnIndex_tFileInputExcel_27 = 8;

								if (temp_row_tFileInputExcel_27[columnIndex_tFileInputExcel_27].length() > 0) {
									curColNum_tFileInputExcel_27 = columnIndex_tFileInputExcel_27
											+ start_column_tFileInputExcel_27 + 1;
									curColName_tFileInputExcel_27 = "DFE";

									row41.DFE = temp_row_tFileInputExcel_27[columnIndex_tFileInputExcel_27];
								} else {
									row41.DFE = null;
									emptyColumnCount_tFileInputExcel_27++;
								}
								columnIndex_tFileInputExcel_27 = 9;

								if (temp_row_tFileInputExcel_27[columnIndex_tFileInputExcel_27].length() > 0) {
									curColNum_tFileInputExcel_27 = columnIndex_tFileInputExcel_27
											+ start_column_tFileInputExcel_27 + 1;
									curColName_tFileInputExcel_27 = "Engage_Oui_Non";

									row41.Engage_Oui_Non = temp_row_tFileInputExcel_27[columnIndex_tFileInputExcel_27];
								} else {
									row41.Engage_Oui_Non = null;
									emptyColumnCount_tFileInputExcel_27++;
								}
								columnIndex_tFileInputExcel_27 = 10;

								if (temp_row_tFileInputExcel_27[columnIndex_tFileInputExcel_27].length() > 0) {
									curColNum_tFileInputExcel_27 = columnIndex_tFileInputExcel_27
											+ start_column_tFileInputExcel_27 + 1;
									curColName_tFileInputExcel_27 = "Date_Depot";

									if (10 < actual_end_column_tFileInputExcel_27) {
										try {
											if (row_tFileInputExcel_27
													.getCell(columnIndex_tFileInputExcel_27
															+ start_column_tFileInputExcel_27)
													.getCellType() == org.apache.poi.ss.usermodel.CellType.NUMERIC
													&& org.apache.poi.ss.usermodel.DateUtil
															.isCellDateFormatted(row_tFileInputExcel_27
																	.getCell(columnIndex_tFileInputExcel_27
																			+ start_column_tFileInputExcel_27))) {
												row41.Date_Depot = row_tFileInputExcel_27
														.getCell(columnIndex_tFileInputExcel_27
																+ start_column_tFileInputExcel_27)
														.getDateCellValue();
											} else {
												java.util.Date tempDate_tFileInputExcel_27 = ParserUtils.parseTo_Date(
														temp_row_tFileInputExcel_27[columnIndex_tFileInputExcel_27],
														"yyyy-MM-dd HH:mm:ss");
												if (tempDate_tFileInputExcel_27
														.after((new SimpleDateFormat("yyyy/MM/dd hh:mm:ss.SSS"))
																.parse("9999/12/31 23:59:59.999"))
														|| tempDate_tFileInputExcel_27
																.before((new SimpleDateFormat("yyyy/MM/dd"))
																		.parse("1900/01/01"))) {
													throw new RuntimeException("The cell format is not Date in ( Row. "
															+ (nb_line_tFileInputExcel_27 + 1) + " and ColumnNum. "
															+ curColNum_tFileInputExcel_27 + " )");
												} else {
													row41.Date_Depot = tempDate_tFileInputExcel_27;
												}
											}
										} catch (java.lang.Exception e) {
											globalMap.put("tFileInputExcel_27_ERROR_MESSAGE", e.getMessage());

											throw new RuntimeException("The cell format is not Date in ( Row. "
													+ (nb_line_tFileInputExcel_27 + 1) + " and ColumnNum. "
													+ curColNum_tFileInputExcel_27 + " )");
										}
									}

								} else {
									row41.Date_Depot = null;
									emptyColumnCount_tFileInputExcel_27++;
								}

								nb_line_tFileInputExcel_27++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_27_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_27 = true;
								System.err.println(e.getMessage());
								row41 = null;
							}

							/**
							 * [tFileInputExcel_27 begin ] stop
							 */

							/**
							 * [tFileInputExcel_27 main ] start
							 */

							currentComponent = "tFileInputExcel_27";

							tos_count_tFileInputExcel_27++;

							/**
							 * [tFileInputExcel_27 main ] stop
							 */

							/**
							 * [tFileInputExcel_27 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_27";

							/**
							 * [tFileInputExcel_27 process_data_begin ] stop
							 */
// Start of branch "row41"
							if (row41 != null) {

								/**
								 * [tMap_27 main ] start
								 */

								currentComponent = "tMap_27";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row41"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_27 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_27 = false;
								boolean mainRowRejected_tMap_27 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_27__Struct Var = Var__tMap_27;// ###############################
									// ###############################
									// # Output tables

									copyOfcopyOft7 = null;

// # Output table : 'copyOfcopyOft7'
									copyOfcopyOft7_tmp.Raison_Sociale = row41.Raison_Sociale;
									copyOfcopyOft7 = copyOfcopyOft7_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_27 = false;

								tos_count_tMap_27++;

								/**
								 * [tMap_27 main ] stop
								 */

								/**
								 * [tMap_27 process_data_begin ] start
								 */

								currentComponent = "tMap_27";

								/**
								 * [tMap_27 process_data_begin ] stop
								 */
// Start of branch "copyOfcopyOft7"
								if (copyOfcopyOft7 != null) {

									/**
									 * [tUnite_6 main ] start
									 */

									currentComponent = "tUnite_6";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "copyOfcopyOft7"

										);
									}

//////////

// for output
									row9 = new row9Struct();

									row9.Client_Prospect = copyOfcopyOft7.Raison_Sociale;

									nb_line_tUnite_6++;

//////////

									tos_count_tUnite_6++;

									/**
									 * [tUnite_6 main ] stop
									 */

									/**
									 * [tUnite_6 process_data_begin ] start
									 */

									currentComponent = "tUnite_6";

									/**
									 * [tUnite_6 process_data_begin ] stop
									 */

									/**
									 * [tMap_7 main ] start
									 */

									currentComponent = "tMap_7";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "row9"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_7 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_7 = false;
									boolean mainRowRejected_tMap_7 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row10"
									///////////////////////////////////////////////

									boolean forceLooprow10 = false;

									row10Struct row10ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_7) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_7 = false;

										row10HashKey.Client_Prospect = row9.Client_Prospect;

										row10HashKey.hashCodeDirty = true;

										tHash_Lookup_row10.lookup(row10HashKey);

										if (!tHash_Lookup_row10.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_7 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row10 != null && tHash_Lookup_row10.getCount(row10HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row10' and it contains more one result from keys : row10.Client_Prospect =
										// '" + row10HashKey.Client_Prospect + "'");
									} // G 071

									row10Struct row10 = null;

									row10Struct fromLookup_row10 = null;
									row10 = row10Default;

									if (tHash_Lookup_row10 != null && tHash_Lookup_row10.hasNext()) { // G 099

										fromLookup_row10 = tHash_Lookup_row10.next();

									} // G 099

									if (fromLookup_row10 != null) {
										row10 = fromLookup_row10;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_7__Struct Var = Var__tMap_7;// ###############################
										// ###############################
										// # Output tables

										k = null;

										if (!rejectedInnerJoin_tMap_7) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'k'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_7) {
											k_tmp.Client_Prospect = row9.Client_Prospect;
											k = k_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_7 = false;

									tos_count_tMap_7++;

									/**
									 * [tMap_7 main ] stop
									 */

									/**
									 * [tMap_7 process_data_begin ] start
									 */

									currentComponent = "tMap_7";

									/**
									 * [tMap_7 process_data_begin ] stop
									 */
// Start of branch "k"
									if (k != null) {

										/**
										 * [tUniqRow_6 main ] start
										 */

										currentComponent = "tUniqRow_6";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "k"

											);
										}

										row28 = null;
										finder_tUniqRow_6.Client_Prospect = k.Client_Prospect;
										finder_tUniqRow_6.hashCodeDirty = true;
										if (!keystUniqRow_6.contains(finder_tUniqRow_6)) {
											KeyStruct_tUniqRow_6 new_tUniqRow_6 = new KeyStruct_tUniqRow_6();

											new_tUniqRow_6.Client_Prospect = k.Client_Prospect;

											keystUniqRow_6.add(new_tUniqRow_6);
											if (row28 == null) {

												row28 = new row28Struct();
											}
											row28.Client_Prospect = k.Client_Prospect;
											nb_uniques_tUniqRow_6++;
										} else {
											nb_duplicates_tUniqRow_6++;
										}

										tos_count_tUniqRow_6++;

										/**
										 * [tUniqRow_6 main ] stop
										 */

										/**
										 * [tUniqRow_6 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_6";

										/**
										 * [tUniqRow_6 process_data_begin ] stop
										 */
// Start of branch "row28"
										if (row28 != null) {

											/**
											 * [tDBOutput_3 main ] start
											 */

											currentComponent = "tDBOutput_3";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row28"

												);
											}

											whetherReject_tDBOutput_3 = false;
											if (row28.Client_Prospect == null) {
												pstmt_tDBOutput_3.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_3.setString(1, row28.Client_Prospect);
											}

											pstmt_tDBOutput_3.addBatch();
											nb_line_tDBOutput_3++;

											batchSizeCounter_tDBOutput_3++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_3 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_3) throws Exception {
													try {

														for (int countEach_tDBOutput_3 : pstmt_tDBOutput_3
																.executeBatch()) {
															if (countEach_tDBOutput_3 == -2
																	|| countEach_tDBOutput_3 == -3) {
																break;
															}
															counter += countEach_tDBOutput_3;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_3_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_3 = 0;
														for (int countEach_tDBOutput_3 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_3 < 0 ? 0
																	: countEach_tDBOutput_3);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_3) throws Exception {
													try {

														for (int countEach_tDBOutput_3 : pstmt_tDBOutput_3
																.executeBatch()) {
															if (countEach_tDBOutput_3 == -2
																	|| countEach_tDBOutput_3 == -3) {
																break;
															}
															counter += countEach_tDBOutput_3;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_3_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_3 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_3 < 0 ? 0
																	: countEach_tDBOutput_3);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_3 > 0)
													&& (batchSize_tDBOutput_3 <= batchSizeCounter_tDBOutput_3)) {

												insertedCount_tDBOutput_3 = new LimitBytesHelper_tDBOutput_3()
														.limitBytePart1(insertedCount_tDBOutput_3, pstmt_tDBOutput_3);
												rowsToCommitCount_tDBOutput_3 = insertedCount_tDBOutput_3;

												batchSizeCounter_tDBOutput_3 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_3++;
											if (commitEvery_tDBOutput_3 <= commitCounter_tDBOutput_3) {
												if ((batchSize_tDBOutput_3 > 0) && (batchSizeCounter_tDBOutput_3 > 0)) {

													insertedCount_tDBOutput_3 = new LimitBytesHelper_tDBOutput_3()
															.limitBytePart1(insertedCount_tDBOutput_3,
																	pstmt_tDBOutput_3);

													batchSizeCounter_tDBOutput_3 = 0;
												}
												if (rowsToCommitCount_tDBOutput_3 != 0) {

												}
												conn_tDBOutput_3.commit();
												if (rowsToCommitCount_tDBOutput_3 != 0) {

													rowsToCommitCount_tDBOutput_3 = 0;
												}
												commitCounter_tDBOutput_3 = 0;
											}

											tos_count_tDBOutput_3++;

											/**
											 * [tDBOutput_3 main ] stop
											 */

											/**
											 * [tDBOutput_3 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_3";

											/**
											 * [tDBOutput_3 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_3 process_data_end ] start
											 */

											currentComponent = "tDBOutput_3";

											/**
											 * [tDBOutput_3 process_data_end ] stop
											 */

										} // End of branch "row28"

										/**
										 * [tUniqRow_6 process_data_end ] start
										 */

										currentComponent = "tUniqRow_6";

										/**
										 * [tUniqRow_6 process_data_end ] stop
										 */

									} // End of branch "k"

									/**
									 * [tMap_7 process_data_end ] start
									 */

									currentComponent = "tMap_7";

									/**
									 * [tMap_7 process_data_end ] stop
									 */

									/**
									 * [tUnite_6 process_data_end ] start
									 */

									currentComponent = "tUnite_6";

									/**
									 * [tUnite_6 process_data_end ] stop
									 */

								} // End of branch "copyOfcopyOft7"

								/**
								 * [tMap_27 process_data_end ] start
								 */

								currentComponent = "tMap_27";

								/**
								 * [tMap_27 process_data_end ] stop
								 */

							} // End of branch "row41"

							/**
							 * [tFileInputExcel_27 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_27";

							/**
							 * [tFileInputExcel_27 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_27 end ] start
							 */

							currentComponent = "tFileInputExcel_27";

						}

						globalMap.put("tFileInputExcel_27_NB_LINE", nb_line_tFileInputExcel_27);

					}

				} finally {

					if (!(source_tFileInputExcel_27 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_27.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_27", true);
				end_Hash.put("tFileInputExcel_27", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_27 end ] stop
				 */

				/**
				 * [tMap_27 end ] start
				 */

				currentComponent = "tMap_27";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row41");
				}

				ok_Hash.put("tMap_27", true);
				end_Hash.put("tMap_27", System.currentTimeMillis());

				/**
				 * [tMap_27 end ] stop
				 */

				/**
				 * [tMap_28 begin ] start
				 */

				ok_Hash.put("tMap_28", false);
				start_Hash.put("tMap_28", System.currentTimeMillis());

				currentComponent = "tMap_28";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row44");
				}

				int tos_count_tMap_28 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_28__Struct {
				}
				Var__tMap_28__Struct Var__tMap_28 = new Var__tMap_28__Struct();
// ###############################

// ###############################
// # Outputs initialization
				copyOfcopyOft9Struct copyOfcopyOft9_tmp = new copyOfcopyOft9Struct();
// ###############################

				/**
				 * [tMap_28 begin ] stop
				 */

				/**
				 * [tFileInputExcel_28 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_28", false);
				start_Hash.put("tFileInputExcel_28", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_28";

				int tos_count_tFileInputExcel_28 = 0;

				final String decryptedPassword_tFileInputExcel_28 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:g62DYBfRrDkxkhOWrWeqsyPezr01QKDcZKnIag==");
				String password_tFileInputExcel_28 = decryptedPassword_tFileInputExcel_28;
				if (password_tFileInputExcel_28.isEmpty()) {
					password_tFileInputExcel_28 = null;
				}
				class RegexUtil_tFileInputExcel_28 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_28 regexUtil_tFileInputExcel_28 = new RegexUtil_tFileInputExcel_28();

				Object source_tFileInputExcel_28 = "C:/Users/DELL/Downloads/suivi rdv slide test (Enregistré automatiquement) VF (1).xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_28 = null;

				if (source_tFileInputExcel_28 instanceof String) {
					workbook_tFileInputExcel_28 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_28), password_tFileInputExcel_28,
									true);
				} else if (source_tFileInputExcel_28 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_28 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_28, password_tFileInputExcel_28);
				} else {
					workbook_tFileInputExcel_28 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_28 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_28.addAll(regexUtil_tFileInputExcel_28
							.getSheets(workbook_tFileInputExcel_28, "{40AAA5D9-FC5C-EC11-80E1-005056", false));
					if (sheetList_tFileInputExcel_28.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_28 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_28 : sheetList_tFileInputExcel_28) {
						if (sheet_FilterNull_tFileInputExcel_28 != null
								&& sheetList_FilterNull_tFileInputExcel_28.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_28.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_28.add(sheet_FilterNull_tFileInputExcel_28);
						}
					}
					sheetList_tFileInputExcel_28 = sheetList_FilterNull_tFileInputExcel_28;
					if (sheetList_tFileInputExcel_28.size() > 0) {
						int nb_line_tFileInputExcel_28 = 0;

						int begin_line_tFileInputExcel_28 = 1;

						int footer_input_tFileInputExcel_28 = 0;

						int end_line_tFileInputExcel_28 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_28 : sheetList_tFileInputExcel_28) {
							end_line_tFileInputExcel_28 += (sheet_tFileInputExcel_28.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_28 -= footer_input_tFileInputExcel_28;
						int limit_tFileInputExcel_28 = -1;
						int start_column_tFileInputExcel_28 = 1 - 1;
						int end_column_tFileInputExcel_28 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_28 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_28 = sheetList_tFileInputExcel_28
								.get(0);
						int rowCount_tFileInputExcel_28 = 0;
						int sheetIndex_tFileInputExcel_28 = 0;
						int currentRows_tFileInputExcel_28 = (sheetList_tFileInputExcel_28.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_28 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_28 = df_tFileInputExcel_28.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_28 = begin_line_tFileInputExcel_28; i_tFileInputExcel_28 < end_line_tFileInputExcel_28; i_tFileInputExcel_28++) {

							int emptyColumnCount_tFileInputExcel_28 = 0;

							if (limit_tFileInputExcel_28 != -1
									&& nb_line_tFileInputExcel_28 >= limit_tFileInputExcel_28) {
								break;
							}

							while (i_tFileInputExcel_28 >= rowCount_tFileInputExcel_28
									+ currentRows_tFileInputExcel_28) {
								rowCount_tFileInputExcel_28 += currentRows_tFileInputExcel_28;
								sheet_tFileInputExcel_28 = sheetList_tFileInputExcel_28
										.get(++sheetIndex_tFileInputExcel_28);
								currentRows_tFileInputExcel_28 = (sheet_tFileInputExcel_28.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_28_CURRENT_SHEET", sheet_tFileInputExcel_28.getSheetName());
							if (rowCount_tFileInputExcel_28 <= i_tFileInputExcel_28) {
								row_tFileInputExcel_28 = sheet_tFileInputExcel_28
										.getRow(i_tFileInputExcel_28 - rowCount_tFileInputExcel_28);
							}
							row44 = null;
							int tempRowLength_tFileInputExcel_28 = 15;

							int columnIndex_tFileInputExcel_28 = 0;

							String[] temp_row_tFileInputExcel_28 = new String[tempRowLength_tFileInputExcel_28];
							int excel_end_column_tFileInputExcel_28;
							if (row_tFileInputExcel_28 == null) {
								excel_end_column_tFileInputExcel_28 = 0;
							} else {
								excel_end_column_tFileInputExcel_28 = row_tFileInputExcel_28.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_28;
							if (end_column_tFileInputExcel_28 == -1) {
								actual_end_column_tFileInputExcel_28 = excel_end_column_tFileInputExcel_28;
							} else {
								actual_end_column_tFileInputExcel_28 = end_column_tFileInputExcel_28 > excel_end_column_tFileInputExcel_28
										? excel_end_column_tFileInputExcel_28
										: end_column_tFileInputExcel_28;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_28 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_28; i++) {
								if (i + start_column_tFileInputExcel_28 < actual_end_column_tFileInputExcel_28) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_28 = row_tFileInputExcel_28
											.getCell(i + start_column_tFileInputExcel_28);
									if (cell_tFileInputExcel_28 != null) {
										switch (cell_tFileInputExcel_28.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_28[i] = cell_tFileInputExcel_28
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_28)) {
												temp_row_tFileInputExcel_28[i] = cell_tFileInputExcel_28
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_28[i] = df_tFileInputExcel_28
														.format(cell_tFileInputExcel_28.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_28[i] = String
													.valueOf(cell_tFileInputExcel_28.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_28.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_28[i] = cell_tFileInputExcel_28
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_28)) {
													temp_row_tFileInputExcel_28[i] = cell_tFileInputExcel_28
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_28 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_28.getNumericCellValue());
													temp_row_tFileInputExcel_28[i] = ne_tFileInputExcel_28
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_28[i] = String
														.valueOf(cell_tFileInputExcel_28.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_28[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_28[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_28[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_28[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_28 = false;
							row44 = new row44Struct();
							int curColNum_tFileInputExcel_28 = -1;
							String curColName_tFileInputExcel_28 = "";
							try {
								columnIndex_tFileInputExcel_28 = 0;

								if (temp_row_tFileInputExcel_28[columnIndex_tFileInputExcel_28].length() > 0) {
									curColNum_tFileInputExcel_28 = columnIndex_tFileInputExcel_28
											+ start_column_tFileInputExcel_28 + 1;
									curColName_tFileInputExcel_28 = "Sujet";

									row44.Sujet = temp_row_tFileInputExcel_28[columnIndex_tFileInputExcel_28];
								} else {
									row44.Sujet = null;
									emptyColumnCount_tFileInputExcel_28++;
								}
								columnIndex_tFileInputExcel_28 = 1;

								if (temp_row_tFileInputExcel_28[columnIndex_tFileInputExcel_28].length() > 0) {
									curColNum_tFileInputExcel_28 = columnIndex_tFileInputExcel_28
											+ start_column_tFileInputExcel_28 + 1;
									curColName_tFileInputExcel_28 = "Cree_le";

									if (1 < actual_end_column_tFileInputExcel_28) {
										try {
											if (row_tFileInputExcel_28
													.getCell(columnIndex_tFileInputExcel_28
															+ start_column_tFileInputExcel_28)
													.getCellType() == org.apache.poi.ss.usermodel.CellType.NUMERIC
													&& org.apache.poi.ss.usermodel.DateUtil
															.isCellDateFormatted(row_tFileInputExcel_28
																	.getCell(columnIndex_tFileInputExcel_28
																			+ start_column_tFileInputExcel_28))) {
												row44.Cree_le = row_tFileInputExcel_28
														.getCell(columnIndex_tFileInputExcel_28
																+ start_column_tFileInputExcel_28)
														.getDateCellValue();
											} else {
												java.util.Date tempDate_tFileInputExcel_28 = ParserUtils.parseTo_Date(
														temp_row_tFileInputExcel_28[columnIndex_tFileInputExcel_28],
														"dd-MM-yyyy");
												if (tempDate_tFileInputExcel_28
														.after((new SimpleDateFormat("yyyy/MM/dd hh:mm:ss.SSS"))
																.parse("9999/12/31 23:59:59.999"))
														|| tempDate_tFileInputExcel_28
																.before((new SimpleDateFormat("yyyy/MM/dd"))
																		.parse("1900/01/01"))) {
													throw new RuntimeException("The cell format is not Date in ( Row. "
															+ (nb_line_tFileInputExcel_28 + 1) + " and ColumnNum. "
															+ curColNum_tFileInputExcel_28 + " )");
												} else {
													row44.Cree_le = tempDate_tFileInputExcel_28;
												}
											}
										} catch (java.lang.Exception e) {
											globalMap.put("tFileInputExcel_28_ERROR_MESSAGE", e.getMessage());

											throw new RuntimeException("The cell format is not Date in ( Row. "
													+ (nb_line_tFileInputExcel_28 + 1) + " and ColumnNum. "
													+ curColNum_tFileInputExcel_28 + " )");
										}
									}

								} else {
									row44.Cree_le = null;
									emptyColumnCount_tFileInputExcel_28++;
								}
								columnIndex_tFileInputExcel_28 = 2;

								if (temp_row_tFileInputExcel_28[columnIndex_tFileInputExcel_28].length() > 0) {
									curColNum_tFileInputExcel_28 = columnIndex_tFileInputExcel_28
											+ start_column_tFileInputExcel_28 + 1;
									curColName_tFileInputExcel_28 = "Concernant";

									row44.Concernant = temp_row_tFileInputExcel_28[columnIndex_tFileInputExcel_28];
								} else {
									row44.Concernant = null;
									emptyColumnCount_tFileInputExcel_28++;
								}
								columnIndex_tFileInputExcel_28 = 3;

								if (temp_row_tFileInputExcel_28[columnIndex_tFileInputExcel_28].length() > 0) {
									curColNum_tFileInputExcel_28 = columnIndex_tFileInputExcel_28
											+ start_column_tFileInputExcel_28 + 1;
									curColName_tFileInputExcel_28 = "Cree_par";

									row44.Cree_par = temp_row_tFileInputExcel_28[columnIndex_tFileInputExcel_28];
								} else {
									row44.Cree_par = null;
									emptyColumnCount_tFileInputExcel_28++;
								}
								columnIndex_tFileInputExcel_28 = 4;

								if (temp_row_tFileInputExcel_28[columnIndex_tFileInputExcel_28].length() > 0) {
									curColNum_tFileInputExcel_28 = columnIndex_tFileInputExcel_28
											+ start_column_tFileInputExcel_28 + 1;
									curColName_tFileInputExcel_28 = "Equipe";

									row44.Equipe = temp_row_tFileInputExcel_28[columnIndex_tFileInputExcel_28];
								} else {
									row44.Equipe = null;
									emptyColumnCount_tFileInputExcel_28++;
								}
								columnIndex_tFileInputExcel_28 = 5;

								if (temp_row_tFileInputExcel_28[columnIndex_tFileInputExcel_28].length() > 0) {
									curColNum_tFileInputExcel_28 = columnIndex_tFileInputExcel_28
											+ start_column_tFileInputExcel_28 + 1;
									curColName_tFileInputExcel_28 = "Emplacement";

									row44.Emplacement = temp_row_tFileInputExcel_28[columnIndex_tFileInputExcel_28];
								} else {
									row44.Emplacement = null;
									emptyColumnCount_tFileInputExcel_28++;
								}
								columnIndex_tFileInputExcel_28 = 6;

								if (temp_row_tFileInputExcel_28[columnIndex_tFileInputExcel_28].length() > 0) {
									curColNum_tFileInputExcel_28 = columnIndex_tFileInputExcel_28
											+ start_column_tFileInputExcel_28 + 1;
									curColName_tFileInputExcel_28 = "Heure_de_debut";

									if (6 < actual_end_column_tFileInputExcel_28) {
										try {
											if (row_tFileInputExcel_28
													.getCell(columnIndex_tFileInputExcel_28
															+ start_column_tFileInputExcel_28)
													.getCellType() == org.apache.poi.ss.usermodel.CellType.NUMERIC
													&& org.apache.poi.ss.usermodel.DateUtil
															.isCellDateFormatted(row_tFileInputExcel_28
																	.getCell(columnIndex_tFileInputExcel_28
																			+ start_column_tFileInputExcel_28))) {
												row44.Heure_de_debut = row_tFileInputExcel_28
														.getCell(columnIndex_tFileInputExcel_28
																+ start_column_tFileInputExcel_28)
														.getDateCellValue();
											} else {
												java.util.Date tempDate_tFileInputExcel_28 = ParserUtils.parseTo_Date(
														temp_row_tFileInputExcel_28[columnIndex_tFileInputExcel_28],
														"yyyy-MM-dd HH:mm:ss");
												if (tempDate_tFileInputExcel_28
														.after((new SimpleDateFormat("yyyy/MM/dd hh:mm:ss.SSS"))
																.parse("9999/12/31 23:59:59.999"))
														|| tempDate_tFileInputExcel_28
																.before((new SimpleDateFormat("yyyy/MM/dd"))
																		.parse("1900/01/01"))) {
													throw new RuntimeException("The cell format is not Date in ( Row. "
															+ (nb_line_tFileInputExcel_28 + 1) + " and ColumnNum. "
															+ curColNum_tFileInputExcel_28 + " )");
												} else {
													row44.Heure_de_debut = tempDate_tFileInputExcel_28;
												}
											}
										} catch (java.lang.Exception e) {
											globalMap.put("tFileInputExcel_28_ERROR_MESSAGE", e.getMessage());

											throw new RuntimeException("The cell format is not Date in ( Row. "
													+ (nb_line_tFileInputExcel_28 + 1) + " and ColumnNum. "
													+ curColNum_tFileInputExcel_28 + " )");
										}
									}

								} else {
									row44.Heure_de_debut = null;
									emptyColumnCount_tFileInputExcel_28++;
								}
								columnIndex_tFileInputExcel_28 = 7;

								if (temp_row_tFileInputExcel_28[columnIndex_tFileInputExcel_28].length() > 0) {
									curColNum_tFileInputExcel_28 = columnIndex_tFileInputExcel_28
											+ start_column_tFileInputExcel_28 + 1;
									curColName_tFileInputExcel_28 = "Heure_de_fin";

									row44.Heure_de_fin = temp_row_tFileInputExcel_28[columnIndex_tFileInputExcel_28];
								} else {
									row44.Heure_de_fin = null;
									emptyColumnCount_tFileInputExcel_28++;
								}
								columnIndex_tFileInputExcel_28 = 8;

								if (temp_row_tFileInputExcel_28[columnIndex_tFileInputExcel_28].length() > 0) {
									curColNum_tFileInputExcel_28 = columnIndex_tFileInputExcel_28
											+ start_column_tFileInputExcel_28 + 1;
									curColName_tFileInputExcel_28 = "Statut";

									row44.Statut = temp_row_tFileInputExcel_28[columnIndex_tFileInputExcel_28];
								} else {
									row44.Statut = null;
									emptyColumnCount_tFileInputExcel_28++;
								}
								columnIndex_tFileInputExcel_28 = 9;

								if (temp_row_tFileInputExcel_28[columnIndex_tFileInputExcel_28].length() > 0) {
									curColNum_tFileInputExcel_28 = columnIndex_tFileInputExcel_28
											+ start_column_tFileInputExcel_28 + 1;
									curColName_tFileInputExcel_28 = "Raison_sociale__Concernant";

									row44.Raison_sociale__Concernant = temp_row_tFileInputExcel_28[columnIndex_tFileInputExcel_28];
								} else {
									row44.Raison_sociale__Concernant = null;
									emptyColumnCount_tFileInputExcel_28++;
								}
								columnIndex_tFileInputExcel_28 = 10;

								if (temp_row_tFileInputExcel_28[columnIndex_tFileInputExcel_28].length() > 0) {
									curColNum_tFileInputExcel_28 = columnIndex_tFileInputExcel_28
											+ start_column_tFileInputExcel_28 + 1;
									curColName_tFileInputExcel_28 = "Delegation__Concernant";

									row44.Delegation__Concernant = temp_row_tFileInputExcel_28[columnIndex_tFileInputExcel_28];
								} else {
									row44.Delegation__Concernant = null;
									emptyColumnCount_tFileInputExcel_28++;
								}
								columnIndex_tFileInputExcel_28 = 11;

								if (temp_row_tFileInputExcel_28[columnIndex_tFileInputExcel_28].length() > 0) {
									curColNum_tFileInputExcel_28 = columnIndex_tFileInputExcel_28
											+ start_column_tFileInputExcel_28 + 1;
									curColName_tFileInputExcel_28 = "Gouvernorat__Concernant";

									row44.Gouvernorat__Concernant = temp_row_tFileInputExcel_28[columnIndex_tFileInputExcel_28];
								} else {
									row44.Gouvernorat__Concernant = null;
									emptyColumnCount_tFileInputExcel_28++;
								}
								columnIndex_tFileInputExcel_28 = 12;

								if (temp_row_tFileInputExcel_28[columnIndex_tFileInputExcel_28].length() > 0) {
									curColNum_tFileInputExcel_28 = columnIndex_tFileInputExcel_28
											+ start_column_tFileInputExcel_28 + 1;
									curColName_tFileInputExcel_28 = "Jour_de_la_semaine";

									row44.Jour_de_la_semaine = temp_row_tFileInputExcel_28[columnIndex_tFileInputExcel_28];
								} else {
									row44.Jour_de_la_semaine = null;
									emptyColumnCount_tFileInputExcel_28++;
								}
								columnIndex_tFileInputExcel_28 = 13;

								if (temp_row_tFileInputExcel_28[columnIndex_tFileInputExcel_28].length() > 0) {
									curColNum_tFileInputExcel_28 = columnIndex_tFileInputExcel_28
											+ start_column_tFileInputExcel_28 + 1;
									curColName_tFileInputExcel_28 = "Description";

									row44.Description = temp_row_tFileInputExcel_28[columnIndex_tFileInputExcel_28];
								} else {
									row44.Description = null;
									emptyColumnCount_tFileInputExcel_28++;
								}
								columnIndex_tFileInputExcel_28 = 14;

								if (temp_row_tFileInputExcel_28[columnIndex_tFileInputExcel_28].length() > 0) {
									curColNum_tFileInputExcel_28 = columnIndex_tFileInputExcel_28
											+ start_column_tFileInputExcel_28 + 1;
									curColName_tFileInputExcel_28 = "Categorie";

									row44.Categorie = temp_row_tFileInputExcel_28[columnIndex_tFileInputExcel_28];
								} else {
									row44.Categorie = null;
									emptyColumnCount_tFileInputExcel_28++;
								}

								nb_line_tFileInputExcel_28++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_28_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_28 = true;
								System.err.println(e.getMessage());
								row44 = null;
							}

							/**
							 * [tFileInputExcel_28 begin ] stop
							 */

							/**
							 * [tFileInputExcel_28 main ] start
							 */

							currentComponent = "tFileInputExcel_28";

							tos_count_tFileInputExcel_28++;

							/**
							 * [tFileInputExcel_28 main ] stop
							 */

							/**
							 * [tFileInputExcel_28 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_28";

							/**
							 * [tFileInputExcel_28 process_data_begin ] stop
							 */
// Start of branch "row44"
							if (row44 != null) {

								/**
								 * [tMap_28 main ] start
								 */

								currentComponent = "tMap_28";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row44"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_28 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_28 = false;
								boolean mainRowRejected_tMap_28 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_28__Struct Var = Var__tMap_28;// ###############################
									// ###############################
									// # Output tables

									copyOfcopyOft9 = null;

// # Output table : 'copyOfcopyOft9'
									copyOfcopyOft9_tmp.Raison_sociale__Concernant = row44.Raison_sociale__Concernant;
									copyOfcopyOft9 = copyOfcopyOft9_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_28 = false;

								tos_count_tMap_28++;

								/**
								 * [tMap_28 main ] stop
								 */

								/**
								 * [tMap_28 process_data_begin ] start
								 */

								currentComponent = "tMap_28";

								/**
								 * [tMap_28 process_data_begin ] stop
								 */
// Start of branch "copyOfcopyOft9"
								if (copyOfcopyOft9 != null) {

									/**
									 * [tUnite_6 main ] start
									 */

									currentComponent = "tUnite_6";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "copyOfcopyOft9"

										);
									}

//////////

// for output
									row9 = new row9Struct();

									row9.Client_Prospect = copyOfcopyOft9.Raison_sociale__Concernant;

									nb_line_tUnite_6++;

//////////

									tos_count_tUnite_6++;

									/**
									 * [tUnite_6 main ] stop
									 */

									/**
									 * [tUnite_6 process_data_begin ] start
									 */

									currentComponent = "tUnite_6";

									/**
									 * [tUnite_6 process_data_begin ] stop
									 */

									/**
									 * [tMap_7 main ] start
									 */

									currentComponent = "tMap_7";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "row9"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_7 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_7 = false;
									boolean mainRowRejected_tMap_7 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row10"
									///////////////////////////////////////////////

									boolean forceLooprow10 = false;

									row10Struct row10ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_7) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_7 = false;

										row10HashKey.Client_Prospect = row9.Client_Prospect;

										row10HashKey.hashCodeDirty = true;

										tHash_Lookup_row10.lookup(row10HashKey);

										if (!tHash_Lookup_row10.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_7 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row10 != null && tHash_Lookup_row10.getCount(row10HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row10' and it contains more one result from keys : row10.Client_Prospect =
										// '" + row10HashKey.Client_Prospect + "'");
									} // G 071

									row10Struct row10 = null;

									row10Struct fromLookup_row10 = null;
									row10 = row10Default;

									if (tHash_Lookup_row10 != null && tHash_Lookup_row10.hasNext()) { // G 099

										fromLookup_row10 = tHash_Lookup_row10.next();

									} // G 099

									if (fromLookup_row10 != null) {
										row10 = fromLookup_row10;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_7__Struct Var = Var__tMap_7;// ###############################
										// ###############################
										// # Output tables

										k = null;

										if (!rejectedInnerJoin_tMap_7) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'k'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_7) {
											k_tmp.Client_Prospect = row9.Client_Prospect;
											k = k_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_7 = false;

									tos_count_tMap_7++;

									/**
									 * [tMap_7 main ] stop
									 */

									/**
									 * [tMap_7 process_data_begin ] start
									 */

									currentComponent = "tMap_7";

									/**
									 * [tMap_7 process_data_begin ] stop
									 */
// Start of branch "k"
									if (k != null) {

										/**
										 * [tUniqRow_6 main ] start
										 */

										currentComponent = "tUniqRow_6";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "k"

											);
										}

										row28 = null;
										finder_tUniqRow_6.Client_Prospect = k.Client_Prospect;
										finder_tUniqRow_6.hashCodeDirty = true;
										if (!keystUniqRow_6.contains(finder_tUniqRow_6)) {
											KeyStruct_tUniqRow_6 new_tUniqRow_6 = new KeyStruct_tUniqRow_6();

											new_tUniqRow_6.Client_Prospect = k.Client_Prospect;

											keystUniqRow_6.add(new_tUniqRow_6);
											if (row28 == null) {

												row28 = new row28Struct();
											}
											row28.Client_Prospect = k.Client_Prospect;
											nb_uniques_tUniqRow_6++;
										} else {
											nb_duplicates_tUniqRow_6++;
										}

										tos_count_tUniqRow_6++;

										/**
										 * [tUniqRow_6 main ] stop
										 */

										/**
										 * [tUniqRow_6 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_6";

										/**
										 * [tUniqRow_6 process_data_begin ] stop
										 */
// Start of branch "row28"
										if (row28 != null) {

											/**
											 * [tDBOutput_3 main ] start
											 */

											currentComponent = "tDBOutput_3";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row28"

												);
											}

											whetherReject_tDBOutput_3 = false;
											if (row28.Client_Prospect == null) {
												pstmt_tDBOutput_3.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_3.setString(1, row28.Client_Prospect);
											}

											pstmt_tDBOutput_3.addBatch();
											nb_line_tDBOutput_3++;

											batchSizeCounter_tDBOutput_3++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_3 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_3) throws Exception {
													try {

														for (int countEach_tDBOutput_3 : pstmt_tDBOutput_3
																.executeBatch()) {
															if (countEach_tDBOutput_3 == -2
																	|| countEach_tDBOutput_3 == -3) {
																break;
															}
															counter += countEach_tDBOutput_3;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_3_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_3 = 0;
														for (int countEach_tDBOutput_3 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_3 < 0 ? 0
																	: countEach_tDBOutput_3);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_3) throws Exception {
													try {

														for (int countEach_tDBOutput_3 : pstmt_tDBOutput_3
																.executeBatch()) {
															if (countEach_tDBOutput_3 == -2
																	|| countEach_tDBOutput_3 == -3) {
																break;
															}
															counter += countEach_tDBOutput_3;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_3_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_3 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_3 < 0 ? 0
																	: countEach_tDBOutput_3);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_3 > 0)
													&& (batchSize_tDBOutput_3 <= batchSizeCounter_tDBOutput_3)) {

												insertedCount_tDBOutput_3 = new LimitBytesHelper_tDBOutput_3()
														.limitBytePart1(insertedCount_tDBOutput_3, pstmt_tDBOutput_3);
												rowsToCommitCount_tDBOutput_3 = insertedCount_tDBOutput_3;

												batchSizeCounter_tDBOutput_3 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_3++;
											if (commitEvery_tDBOutput_3 <= commitCounter_tDBOutput_3) {
												if ((batchSize_tDBOutput_3 > 0) && (batchSizeCounter_tDBOutput_3 > 0)) {

													insertedCount_tDBOutput_3 = new LimitBytesHelper_tDBOutput_3()
															.limitBytePart1(insertedCount_tDBOutput_3,
																	pstmt_tDBOutput_3);

													batchSizeCounter_tDBOutput_3 = 0;
												}
												if (rowsToCommitCount_tDBOutput_3 != 0) {

												}
												conn_tDBOutput_3.commit();
												if (rowsToCommitCount_tDBOutput_3 != 0) {

													rowsToCommitCount_tDBOutput_3 = 0;
												}
												commitCounter_tDBOutput_3 = 0;
											}

											tos_count_tDBOutput_3++;

											/**
											 * [tDBOutput_3 main ] stop
											 */

											/**
											 * [tDBOutput_3 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_3";

											/**
											 * [tDBOutput_3 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_3 process_data_end ] start
											 */

											currentComponent = "tDBOutput_3";

											/**
											 * [tDBOutput_3 process_data_end ] stop
											 */

										} // End of branch "row28"

										/**
										 * [tUniqRow_6 process_data_end ] start
										 */

										currentComponent = "tUniqRow_6";

										/**
										 * [tUniqRow_6 process_data_end ] stop
										 */

									} // End of branch "k"

									/**
									 * [tMap_7 process_data_end ] start
									 */

									currentComponent = "tMap_7";

									/**
									 * [tMap_7 process_data_end ] stop
									 */

									/**
									 * [tUnite_6 process_data_end ] start
									 */

									currentComponent = "tUnite_6";

									/**
									 * [tUnite_6 process_data_end ] stop
									 */

								} // End of branch "copyOfcopyOft9"

								/**
								 * [tMap_28 process_data_end ] start
								 */

								currentComponent = "tMap_28";

								/**
								 * [tMap_28 process_data_end ] stop
								 */

							} // End of branch "row44"

							/**
							 * [tFileInputExcel_28 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_28";

							/**
							 * [tFileInputExcel_28 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_28 end ] start
							 */

							currentComponent = "tFileInputExcel_28";

						}

						globalMap.put("tFileInputExcel_28_NB_LINE", nb_line_tFileInputExcel_28);

					}

				} finally {

					if (!(source_tFileInputExcel_28 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_28.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_28", true);
				end_Hash.put("tFileInputExcel_28", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_28 end ] stop
				 */

				/**
				 * [tMap_28 end ] start
				 */

				currentComponent = "tMap_28";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row44");
				}

				ok_Hash.put("tMap_28", true);
				end_Hash.put("tMap_28", System.currentTimeMillis());

				/**
				 * [tMap_28 end ] stop
				 */

				/**
				 * [tUnite_6 end ] start
				 */

				currentComponent = "tUnite_6";

				globalMap.put("tUnite_6_NB_LINE", nb_line_tUnite_6);
				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "copyOft18", "copyOfcopyOft8", "copyOfcopyOft7",
							"copyOfcopyOft9", "copyOfcopyOft5");
				}

				ok_Hash.put("tUnite_6", true);
				end_Hash.put("tUnite_6", System.currentTimeMillis());

				/**
				 * [tUnite_6 end ] stop
				 */

				/**
				 * [tMap_7 end ] start
				 */

				currentComponent = "tMap_7";

// ###############################
// # Lookup hashes releasing
				if (tHash_Lookup_row10 != null) {
					tHash_Lookup_row10.endGet();
				}
				globalMap.remove("tHash_Lookup_row10");

// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row9");
				}

				ok_Hash.put("tMap_7", true);
				end_Hash.put("tMap_7", System.currentTimeMillis());

				/**
				 * [tMap_7 end ] stop
				 */

				/**
				 * [tUniqRow_6 end ] start
				 */

				currentComponent = "tUniqRow_6";

				globalMap.put("tUniqRow_6_NB_UNIQUES", nb_uniques_tUniqRow_6);
				globalMap.put("tUniqRow_6_NB_DUPLICATES", nb_duplicates_tUniqRow_6);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "k");
				}

				ok_Hash.put("tUniqRow_6", true);
				end_Hash.put("tUniqRow_6", System.currentTimeMillis());

				/**
				 * [tUniqRow_6 end ] stop
				 */

				/**
				 * [tDBOutput_3 end ] start
				 */

				currentComponent = "tDBOutput_3";

				try {
					int countSum_tDBOutput_3 = 0;
					if (pstmt_tDBOutput_3 != null && batchSizeCounter_tDBOutput_3 > 0) {

						for (int countEach_tDBOutput_3 : pstmt_tDBOutput_3.executeBatch()) {
							if (countEach_tDBOutput_3 == -2 || countEach_tDBOutput_3 == -3) {
								break;
							}
							countSum_tDBOutput_3 += countEach_tDBOutput_3;
						}
						rowsToCommitCount_tDBOutput_3 += countSum_tDBOutput_3;

					}

					insertedCount_tDBOutput_3 += countSum_tDBOutput_3;

				} catch (java.sql.BatchUpdateException e) {
					globalMap.put("tDBOutput_3_ERROR_MESSAGE", e.getMessage());

					int countSum_tDBOutput_3 = 0;
					for (int countEach_tDBOutput_3 : e.getUpdateCounts()) {
						countSum_tDBOutput_3 += (countEach_tDBOutput_3 < 0 ? 0 : countEach_tDBOutput_3);
					}
					rowsToCommitCount_tDBOutput_3 += countSum_tDBOutput_3;

					insertedCount_tDBOutput_3 += countSum_tDBOutput_3;

					System.err.println(e.getMessage());

				}
				if (pstmt_tDBOutput_3 != null) {

					pstmt_tDBOutput_3.close();
					resourceMap.remove("pstmt_tDBOutput_3");

				}
				resourceMap.put("statementClosed_tDBOutput_3", true);
				if (rowsToCommitCount_tDBOutput_3 != 0) {

				}
				conn_tDBOutput_3.commit();
				if (rowsToCommitCount_tDBOutput_3 != 0) {

					rowsToCommitCount_tDBOutput_3 = 0;
				}
				commitCounter_tDBOutput_3 = 0;
				conn_tDBOutput_3.close();
				resourceMap.put("finish_tDBOutput_3", true);

				nb_line_deleted_tDBOutput_3 = nb_line_deleted_tDBOutput_3 + deletedCount_tDBOutput_3;
				nb_line_update_tDBOutput_3 = nb_line_update_tDBOutput_3 + updatedCount_tDBOutput_3;
				nb_line_inserted_tDBOutput_3 = nb_line_inserted_tDBOutput_3 + insertedCount_tDBOutput_3;
				nb_line_rejected_tDBOutput_3 = nb_line_rejected_tDBOutput_3 + rejectedCount_tDBOutput_3;

				globalMap.put("tDBOutput_3_NB_LINE", nb_line_tDBOutput_3);
				globalMap.put("tDBOutput_3_NB_LINE_UPDATED", nb_line_update_tDBOutput_3);
				globalMap.put("tDBOutput_3_NB_LINE_INSERTED", nb_line_inserted_tDBOutput_3);
				globalMap.put("tDBOutput_3_NB_LINE_DELETED", nb_line_deleted_tDBOutput_3);
				globalMap.put("tDBOutput_3_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_3);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row28");
				}

				ok_Hash.put("tDBOutput_3", true);
				end_Hash.put("tDBOutput_3", System.currentTimeMillis());

				/**
				 * [tDBOutput_3 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			// free memory for "tMap_7"
			globalMap.remove("tHash_Lookup_row10");

			try {

				/**
				 * [tFileInputExcel_14 finally ] start
				 */

				currentComponent = "tFileInputExcel_14";

				/**
				 * [tFileInputExcel_14 finally ] stop
				 */

				/**
				 * [tMap_19 finally ] start
				 */

				currentComponent = "tMap_19";

				/**
				 * [tMap_19 finally ] stop
				 */

				/**
				 * [tFileInputExcel_19 finally ] start
				 */

				currentComponent = "tFileInputExcel_19";

				/**
				 * [tFileInputExcel_19 finally ] stop
				 */

				/**
				 * [tMap_20 finally ] start
				 */

				currentComponent = "tMap_20";

				/**
				 * [tMap_20 finally ] stop
				 */

				/**
				 * [tFileInputExcel_26 finally ] start
				 */

				currentComponent = "tFileInputExcel_26";

				/**
				 * [tFileInputExcel_26 finally ] stop
				 */

				/**
				 * [tMap_26 finally ] start
				 */

				currentComponent = "tMap_26";

				/**
				 * [tMap_26 finally ] stop
				 */

				/**
				 * [tFileInputExcel_27 finally ] start
				 */

				currentComponent = "tFileInputExcel_27";

				/**
				 * [tFileInputExcel_27 finally ] stop
				 */

				/**
				 * [tMap_27 finally ] start
				 */

				currentComponent = "tMap_27";

				/**
				 * [tMap_27 finally ] stop
				 */

				/**
				 * [tFileInputExcel_28 finally ] start
				 */

				currentComponent = "tFileInputExcel_28";

				/**
				 * [tFileInputExcel_28 finally ] stop
				 */

				/**
				 * [tMap_28 finally ] start
				 */

				currentComponent = "tMap_28";

				/**
				 * [tMap_28 finally ] stop
				 */

				/**
				 * [tUnite_6 finally ] start
				 */

				currentComponent = "tUnite_6";

				/**
				 * [tUnite_6 finally ] stop
				 */

				/**
				 * [tMap_7 finally ] start
				 */

				currentComponent = "tMap_7";

				/**
				 * [tMap_7 finally ] stop
				 */

				/**
				 * [tUniqRow_6 finally ] start
				 */

				currentComponent = "tUniqRow_6";

				/**
				 * [tUniqRow_6 finally ] stop
				 */

				/**
				 * [tDBOutput_3 finally ] start
				 */

				currentComponent = "tDBOutput_3";

				try {
					if (resourceMap.get("statementClosed_tDBOutput_3") == null) {
						java.sql.PreparedStatement pstmtToClose_tDBOutput_3 = null;
						if ((pstmtToClose_tDBOutput_3 = (java.sql.PreparedStatement) resourceMap
								.remove("pstmt_tDBOutput_3")) != null) {
							pstmtToClose_tDBOutput_3.close();
						}
					}
				} finally {
					if (resourceMap.get("finish_tDBOutput_3") == null) {
						java.sql.Connection ctn_tDBOutput_3 = null;
						if ((ctn_tDBOutput_3 = (java.sql.Connection) resourceMap.get("conn_tDBOutput_3")) != null) {
							try {
								ctn_tDBOutput_3.close();
							} catch (java.sql.SQLException sqlEx_tDBOutput_3) {
								String errorMessage_tDBOutput_3 = "failed to close the connection in tDBOutput_3 :"
										+ sqlEx_tDBOutput_3.getMessage();
								System.err.println(errorMessage_tDBOutput_3);
							}
						}
					}
				}

				/**
				 * [tDBOutput_3 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tFileInputExcel_14_SUBPROCESS_STATE", 1);
	}

	public static class row24Struct implements routines.system.IPersistableRow<row24Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Engage_Oui_Non;

		public String getEngage_Oui_Non() {
			return this.Engage_Oui_Non;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Engage_Oui_Non = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Engage_Oui_Non = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Engage_Oui_Non, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Engage_Oui_Non, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Engage_Oui_Non=" + Engage_Oui_Non);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row24Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class uStruct implements routines.system.IPersistableRow<uStruct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Engage_Oui_Non;

		public String getEngage_Oui_Non() {
			return this.Engage_Oui_Non;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Engage_Oui_Non = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Engage_Oui_Non = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Engage_Oui_Non, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Engage_Oui_Non, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Engage_Oui_Non=" + Engage_Oui_Non);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(uStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row22Struct implements routines.system.IPersistableRow<row22Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Engage_Oui_Non;

		public String getEngage_Oui_Non() {
			return this.Engage_Oui_Non;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Engage_Oui_Non = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Engage_Oui_Non = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Engage_Oui_Non, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Engage_Oui_Non, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Engage_Oui_Non=" + Engage_Oui_Non);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row22Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class copyOft8_0Struct implements routines.system.IPersistableRow<copyOft8_0Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Engage_Oui_Non;

		public String getEngage_Oui_Non() {
			return this.Engage_Oui_Non;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Engage_Oui_Non = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Engage_Oui_Non = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Engage_Oui_Non, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Engage_Oui_Non, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Engage_Oui_Non=" + Engage_Oui_Non);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(copyOft8_0Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row19Struct implements routines.system.IPersistableRow<row19Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public Float Custcode;

		public Float getCustcode() {
			return this.Custcode;
		}

		public String Raison_Sociale;

		public String getRaison_Sociale() {
			return this.Raison_Sociale;
		}

		public String Groupe_Client;

		public String getGroupe_Client() {
			return this.Groupe_Client;
		}

		public String Account_Manager;

		public String getAccount_Manager() {
			return this.Account_Manager;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public Integer Somme_de_Suspension;

		public Integer getSomme_de_Suspension() {
			return this.Somme_de_Suspension;
		}

		public String Type_de_suspension;

		public String getType_de_suspension() {
			return this.Type_de_suspension;
		}

		public String Motif;

		public String getMotif() {
			return this.Motif;
		}

		public String DFE;

		public String getDFE() {
			return this.DFE;
		}

		public String Engage_Oui_Non;

		public String getEngage_Oui_Non() {
			return this.Engage_Oui_Non;
		}

		public String Date_Depot;

		public String getDate_Depot() {
			return this.Date_Depot;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Suspension = readInteger(dis);

					this.Type_de_suspension = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Suspension = readInteger(dis);

					this.Type_de_suspension = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Suspension, dos);

				// String

				writeString(this.Type_de_suspension, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// String

				writeString(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Suspension, dos);

				// String

				writeString(this.Type_de_suspension, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// String

				writeString(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Custcode=" + String.valueOf(Custcode));
			sb.append(",Raison_Sociale=" + Raison_Sociale);
			sb.append(",Groupe_Client=" + Groupe_Client);
			sb.append(",Account_Manager=" + Account_Manager);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Somme_de_Suspension=" + String.valueOf(Somme_de_Suspension));
			sb.append(",Type_de_suspension=" + Type_de_suspension);
			sb.append(",Motif=" + Motif);
			sb.append(",DFE=" + DFE);
			sb.append(",Engage_Oui_Non=" + Engage_Oui_Non);
			sb.append(",Date_Depot=" + Date_Depot);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row19Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class after_tFileInputExcel_15Struct
			implements routines.system.IPersistableRow<after_tFileInputExcel_15Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public Float Custcode;

		public Float getCustcode() {
			return this.Custcode;
		}

		public String Raison_Sociale;

		public String getRaison_Sociale() {
			return this.Raison_Sociale;
		}

		public String Groupe_Client;

		public String getGroupe_Client() {
			return this.Groupe_Client;
		}

		public String Account_Manager;

		public String getAccount_Manager() {
			return this.Account_Manager;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public Integer Somme_de_Suspension;

		public Integer getSomme_de_Suspension() {
			return this.Somme_de_Suspension;
		}

		public String Type_de_suspension;

		public String getType_de_suspension() {
			return this.Type_de_suspension;
		}

		public String Motif;

		public String getMotif() {
			return this.Motif;
		}

		public String DFE;

		public String getDFE() {
			return this.DFE;
		}

		public String Engage_Oui_Non;

		public String getEngage_Oui_Non() {
			return this.Engage_Oui_Non;
		}

		public String Date_Depot;

		public String getDate_Depot() {
			return this.Date_Depot;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Suspension = readInteger(dis);

					this.Type_de_suspension = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Suspension = readInteger(dis);

					this.Type_de_suspension = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Suspension, dos);

				// String

				writeString(this.Type_de_suspension, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// String

				writeString(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Suspension, dos);

				// String

				writeString(this.Type_de_suspension, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// String

				writeString(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Custcode=" + String.valueOf(Custcode));
			sb.append(",Raison_Sociale=" + Raison_Sociale);
			sb.append(",Groupe_Client=" + Groupe_Client);
			sb.append(",Account_Manager=" + Account_Manager);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Somme_de_Suspension=" + String.valueOf(Somme_de_Suspension));
			sb.append(",Type_de_suspension=" + Type_de_suspension);
			sb.append(",Motif=" + Motif);
			sb.append(",DFE=" + DFE);
			sb.append(",Engage_Oui_Non=" + Engage_Oui_Non);
			sb.append(",Date_Depot=" + Date_Depot);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(after_tFileInputExcel_15Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class copyOft7_0Struct implements routines.system.IPersistableRow<copyOft7_0Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Engage_Oui_Non;

		public String getEngage_Oui_Non() {
			return this.Engage_Oui_Non;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Engage_Oui_Non = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Engage_Oui_Non = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Engage_Oui_Non, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Engage_Oui_Non, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Engage_Oui_Non=" + Engage_Oui_Non);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(copyOft7_0Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row20Struct implements routines.system.IPersistableRow<row20Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public Float Custcode;

		public Float getCustcode() {
			return this.Custcode;
		}

		public String Raison_Sociale;

		public String getRaison_Sociale() {
			return this.Raison_Sociale;
		}

		public String Groupe_Client;

		public String getGroupe_Client() {
			return this.Groupe_Client;
		}

		public String Account_Manager;

		public String getAccount_Manager() {
			return this.Account_Manager;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public Integer Somme_de_Resiliation;

		public Integer getSomme_de_Resiliation() {
			return this.Somme_de_Resiliation;
		}

		public String Type_Resiliation;

		public String getType_Resiliation() {
			return this.Type_Resiliation;
		}

		public String Motif;

		public String getMotif() {
			return this.Motif;
		}

		public String DFE;

		public String getDFE() {
			return this.DFE;
		}

		public String Engage_Oui_Non;

		public String getEngage_Oui_Non() {
			return this.Engage_Oui_Non;
		}

		public String Date_Depot;

		public String getDate_Depot() {
			return this.Date_Depot;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Resiliation = readInteger(dis);

					this.Type_Resiliation = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Resiliation = readInteger(dis);

					this.Type_Resiliation = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Resiliation, dos);

				// String

				writeString(this.Type_Resiliation, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// String

				writeString(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Resiliation, dos);

				// String

				writeString(this.Type_Resiliation, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// String

				writeString(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Custcode=" + String.valueOf(Custcode));
			sb.append(",Raison_Sociale=" + Raison_Sociale);
			sb.append(",Groupe_Client=" + Groupe_Client);
			sb.append(",Account_Manager=" + Account_Manager);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Somme_de_Resiliation=" + String.valueOf(Somme_de_Resiliation));
			sb.append(",Type_Resiliation=" + Type_Resiliation);
			sb.append(",Motif=" + Motif);
			sb.append(",DFE=" + DFE);
			sb.append(",Engage_Oui_Non=" + Engage_Oui_Non);
			sb.append(",Date_Depot=" + Date_Depot);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row20Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tFileInputExcel_15Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tFileInputExcel_15_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				tDBInput_7Process(globalMap);

				row19Struct row19 = new row19Struct();
				copyOft8_0Struct copyOft8_0 = new copyOft8_0Struct();

				row20Struct row20 = new row20Struct();
				copyOft7_0Struct copyOft7_0 = new copyOft7_0Struct();

				row22Struct row22 = new row22Struct();
				uStruct u = new uStruct();
				row24Struct row24 = new row24Struct();

				/**
				 * [tDBOutput_9 begin ] start
				 */

				ok_Hash.put("tDBOutput_9", false);
				start_Hash.put("tDBOutput_9", System.currentTimeMillis());

				currentComponent = "tDBOutput_9";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row24");
				}

				int tos_count_tDBOutput_9 = 0;

				int nb_line_tDBOutput_9 = 0;
				int nb_line_update_tDBOutput_9 = 0;
				int nb_line_inserted_tDBOutput_9 = 0;
				int nb_line_deleted_tDBOutput_9 = 0;
				int nb_line_rejected_tDBOutput_9 = 0;

				int deletedCount_tDBOutput_9 = 0;
				int updatedCount_tDBOutput_9 = 0;
				int insertedCount_tDBOutput_9 = 0;
				int rowsToCommitCount_tDBOutput_9 = 0;
				int rejectedCount_tDBOutput_9 = 0;
				String dbschema_tDBOutput_9 = null;
				String tableName_tDBOutput_9 = null;
				boolean whetherReject_tDBOutput_9 = false;

				java.util.Calendar calendar_tDBOutput_9 = java.util.Calendar.getInstance();
				long year1_tDBOutput_9 = TalendDate.parseDate("yyyy-MM-dd", "0001-01-01").getTime();
				long year2_tDBOutput_9 = TalendDate.parseDate("yyyy-MM-dd", "1753-01-01").getTime();
				long year10000_tDBOutput_9 = TalendDate.parseDate("yyyy-MM-dd HH:mm:ss", "9999-12-31 24:00:00")
						.getTime();
				long date_tDBOutput_9;

				java.util.Calendar calendar_datetimeoffset_tDBOutput_9 = java.util.Calendar
						.getInstance(java.util.TimeZone.getTimeZone("UTC"));

				java.sql.Connection conn_tDBOutput_9 = null;
				String dbUser_tDBOutput_9 = null;
				dbschema_tDBOutput_9 = "dbo";
				String driverClass_tDBOutput_9 = "net.sourceforge.jtds.jdbc.Driver";

				java.lang.Class.forName(driverClass_tDBOutput_9);
				String port_tDBOutput_9 = "1433";
				String dbname_tDBOutput_9 = "orange_DW__";
				String url_tDBOutput_9 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBOutput_9)) {
					url_tDBOutput_9 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBOutput_9)) {
					url_tDBOutput_9 += "//" + "orange_DW__";

				}
				url_tDBOutput_9 += ";appName=" + projectName + ";" + "";
				dbUser_tDBOutput_9 = "sa";

				final String decryptedPassword_tDBOutput_9 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:ERdFgnDaJw3hdBODTvKpu7V0X6pYjEYSC24DtAbvfU8dlN9yEqY=");

				String dbPwd_tDBOutput_9 = decryptedPassword_tDBOutput_9;
				conn_tDBOutput_9 = java.sql.DriverManager.getConnection(url_tDBOutput_9, dbUser_tDBOutput_9,
						dbPwd_tDBOutput_9);

				resourceMap.put("conn_tDBOutput_9", conn_tDBOutput_9);

				conn_tDBOutput_9.setAutoCommit(false);
				int commitEvery_tDBOutput_9 = 10000;
				int commitCounter_tDBOutput_9 = 0;

				int batchSize_tDBOutput_9 = 10000;
				int batchSizeCounter_tDBOutput_9 = 0;

				if (dbschema_tDBOutput_9 == null || dbschema_tDBOutput_9.trim().length() == 0) {
					tableName_tDBOutput_9 = "Dim_Engage";
				} else {
					tableName_tDBOutput_9 = dbschema_tDBOutput_9 + "].[" + "Dim_Engage";
				}
				int count_tDBOutput_9 = 0;

				String insert_tDBOutput_9 = "INSERT INTO [" + tableName_tDBOutput_9 + "] ([Engage_Oui_Non]) VALUES (?)";
				java.sql.PreparedStatement pstmt_tDBOutput_9 = conn_tDBOutput_9.prepareStatement(insert_tDBOutput_9);
				resourceMap.put("pstmt_tDBOutput_9", pstmt_tDBOutput_9);

				/**
				 * [tDBOutput_9 begin ] stop
				 */

				/**
				 * [tUniqRow_3 begin ] start
				 */

				ok_Hash.put("tUniqRow_3", false);
				start_Hash.put("tUniqRow_3", System.currentTimeMillis());

				currentComponent = "tUniqRow_3";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "u");
				}

				int tos_count_tUniqRow_3 = 0;

				class KeyStruct_tUniqRow_3 {

					private static final int DEFAULT_HASHCODE = 1;
					private static final int PRIME = 31;
					private int hashCode = DEFAULT_HASHCODE;
					public boolean hashCodeDirty = true;

					String Engage_Oui_Non;

					@Override
					public int hashCode() {
						if (this.hashCodeDirty) {
							final int prime = PRIME;
							int result = DEFAULT_HASHCODE;

							result = prime * result
									+ ((this.Engage_Oui_Non == null) ? 0 : this.Engage_Oui_Non.hashCode());

							this.hashCode = result;
							this.hashCodeDirty = false;
						}
						return this.hashCode;
					}

					@Override
					public boolean equals(Object obj) {
						if (this == obj)
							return true;
						if (obj == null)
							return false;
						if (getClass() != obj.getClass())
							return false;
						final KeyStruct_tUniqRow_3 other = (KeyStruct_tUniqRow_3) obj;

						if (this.Engage_Oui_Non == null) {
							if (other.Engage_Oui_Non != null)
								return false;

						} else if (!this.Engage_Oui_Non.equals(other.Engage_Oui_Non))

							return false;

						return true;
					}

				}

				int nb_uniques_tUniqRow_3 = 0;
				int nb_duplicates_tUniqRow_3 = 0;
				KeyStruct_tUniqRow_3 finder_tUniqRow_3 = new KeyStruct_tUniqRow_3();
				java.util.Set<KeyStruct_tUniqRow_3> keystUniqRow_3 = new java.util.HashSet<KeyStruct_tUniqRow_3>();

				/**
				 * [tUniqRow_3 begin ] stop
				 */

				/**
				 * [tMap_39 begin ] start
				 */

				ok_Hash.put("tMap_39", false);
				start_Hash.put("tMap_39", System.currentTimeMillis());

				currentComponent = "tMap_39";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row22");
				}

				int tos_count_tMap_39 = 0;

// ###############################
// # Lookup's keys initialization

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row40Struct> tHash_Lookup_row40 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row40Struct>) ((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row40Struct>) globalMap
						.get("tHash_Lookup_row40"));

				row40Struct row40HashKey = new row40Struct();
				row40Struct row40Default = new row40Struct();
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_39__Struct {
				}
				Var__tMap_39__Struct Var__tMap_39 = new Var__tMap_39__Struct();
// ###############################

// ###############################
// # Outputs initialization
				uStruct u_tmp = new uStruct();
// ###############################

				/**
				 * [tMap_39 begin ] stop
				 */

				/**
				 * [tUnite_3 begin ] start
				 */

				ok_Hash.put("tUnite_3", false);
				start_Hash.put("tUnite_3", System.currentTimeMillis());

				currentComponent = "tUnite_3";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "copyOft8_0", "copyOft7_0");
				}

				int tos_count_tUnite_3 = 0;

				int nb_line_tUnite_3 = 0;

				/**
				 * [tUnite_3 begin ] stop
				 */

				/**
				 * [tMap_13 begin ] start
				 */

				ok_Hash.put("tMap_13", false);
				start_Hash.put("tMap_13", System.currentTimeMillis());

				currentComponent = "tMap_13";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row19");
				}

				int tos_count_tMap_13 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_13__Struct {
				}
				Var__tMap_13__Struct Var__tMap_13 = new Var__tMap_13__Struct();
// ###############################

// ###############################
// # Outputs initialization
				copyOft8_0Struct copyOft8_0_tmp = new copyOft8_0Struct();
// ###############################

				/**
				 * [tMap_13 begin ] stop
				 */

				/**
				 * [tFileInputExcel_15 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_15", false);
				start_Hash.put("tFileInputExcel_15", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_15";

				int tos_count_tFileInputExcel_15 = 0;

				final String decryptedPassword_tFileInputExcel_15 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:9EmIcfiD7YLZnbQbVQ3RUpKondNrlQyef2pawA==");
				String password_tFileInputExcel_15 = decryptedPassword_tFileInputExcel_15;
				if (password_tFileInputExcel_15.isEmpty()) {
					password_tFileInputExcel_15 = null;
				}
				class RegexUtil_tFileInputExcel_15 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_15 regexUtil_tFileInputExcel_15 = new RegexUtil_tFileInputExcel_15();

				Object source_tFileInputExcel_15 = "C:/Users/DELL/Downloads/parc facturé Mars 2022 (1).xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_15 = null;

				if (source_tFileInputExcel_15 instanceof String) {
					workbook_tFileInputExcel_15 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_15), password_tFileInputExcel_15,
									true);
				} else if (source_tFileInputExcel_15 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_15 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_15, password_tFileInputExcel_15);
				} else {
					workbook_tFileInputExcel_15 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_15 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_15.addAll(
							regexUtil_tFileInputExcel_15.getSheets(workbook_tFileInputExcel_15, "Suspension", false));
					if (sheetList_tFileInputExcel_15.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_15 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_15 : sheetList_tFileInputExcel_15) {
						if (sheet_FilterNull_tFileInputExcel_15 != null
								&& sheetList_FilterNull_tFileInputExcel_15.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_15.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_15.add(sheet_FilterNull_tFileInputExcel_15);
						}
					}
					sheetList_tFileInputExcel_15 = sheetList_FilterNull_tFileInputExcel_15;
					if (sheetList_tFileInputExcel_15.size() > 0) {
						int nb_line_tFileInputExcel_15 = 0;

						int begin_line_tFileInputExcel_15 = 1;

						int footer_input_tFileInputExcel_15 = 0;

						int end_line_tFileInputExcel_15 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_15 : sheetList_tFileInputExcel_15) {
							end_line_tFileInputExcel_15 += (sheet_tFileInputExcel_15.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_15 -= footer_input_tFileInputExcel_15;
						int limit_tFileInputExcel_15 = -1;
						int start_column_tFileInputExcel_15 = 1 - 1;
						int end_column_tFileInputExcel_15 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_15 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_15 = sheetList_tFileInputExcel_15
								.get(0);
						int rowCount_tFileInputExcel_15 = 0;
						int sheetIndex_tFileInputExcel_15 = 0;
						int currentRows_tFileInputExcel_15 = (sheetList_tFileInputExcel_15.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_15 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_15 = df_tFileInputExcel_15.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_15 = begin_line_tFileInputExcel_15; i_tFileInputExcel_15 < end_line_tFileInputExcel_15; i_tFileInputExcel_15++) {

							int emptyColumnCount_tFileInputExcel_15 = 0;

							if (limit_tFileInputExcel_15 != -1
									&& nb_line_tFileInputExcel_15 >= limit_tFileInputExcel_15) {
								break;
							}

							while (i_tFileInputExcel_15 >= rowCount_tFileInputExcel_15
									+ currentRows_tFileInputExcel_15) {
								rowCount_tFileInputExcel_15 += currentRows_tFileInputExcel_15;
								sheet_tFileInputExcel_15 = sheetList_tFileInputExcel_15
										.get(++sheetIndex_tFileInputExcel_15);
								currentRows_tFileInputExcel_15 = (sheet_tFileInputExcel_15.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_15_CURRENT_SHEET", sheet_tFileInputExcel_15.getSheetName());
							if (rowCount_tFileInputExcel_15 <= i_tFileInputExcel_15) {
								row_tFileInputExcel_15 = sheet_tFileInputExcel_15
										.getRow(i_tFileInputExcel_15 - rowCount_tFileInputExcel_15);
							}
							row19 = null;
							int tempRowLength_tFileInputExcel_15 = 11;

							int columnIndex_tFileInputExcel_15 = 0;

							String[] temp_row_tFileInputExcel_15 = new String[tempRowLength_tFileInputExcel_15];
							int excel_end_column_tFileInputExcel_15;
							if (row_tFileInputExcel_15 == null) {
								excel_end_column_tFileInputExcel_15 = 0;
							} else {
								excel_end_column_tFileInputExcel_15 = row_tFileInputExcel_15.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_15;
							if (end_column_tFileInputExcel_15 == -1) {
								actual_end_column_tFileInputExcel_15 = excel_end_column_tFileInputExcel_15;
							} else {
								actual_end_column_tFileInputExcel_15 = end_column_tFileInputExcel_15 > excel_end_column_tFileInputExcel_15
										? excel_end_column_tFileInputExcel_15
										: end_column_tFileInputExcel_15;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_15 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_15; i++) {
								if (i + start_column_tFileInputExcel_15 < actual_end_column_tFileInputExcel_15) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_15 = row_tFileInputExcel_15
											.getCell(i + start_column_tFileInputExcel_15);
									if (cell_tFileInputExcel_15 != null) {
										switch (cell_tFileInputExcel_15.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_15[i] = cell_tFileInputExcel_15
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_15)) {
												temp_row_tFileInputExcel_15[i] = cell_tFileInputExcel_15
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_15[i] = df_tFileInputExcel_15
														.format(cell_tFileInputExcel_15.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_15[i] = String
													.valueOf(cell_tFileInputExcel_15.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_15.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_15[i] = cell_tFileInputExcel_15
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_15)) {
													temp_row_tFileInputExcel_15[i] = cell_tFileInputExcel_15
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_15 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_15.getNumericCellValue());
													temp_row_tFileInputExcel_15[i] = ne_tFileInputExcel_15
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_15[i] = String
														.valueOf(cell_tFileInputExcel_15.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_15[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_15[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_15[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_15[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_15 = false;
							row19 = new row19Struct();
							int curColNum_tFileInputExcel_15 = -1;
							String curColName_tFileInputExcel_15 = "";
							try {
								columnIndex_tFileInputExcel_15 = 0;

								if (temp_row_tFileInputExcel_15[columnIndex_tFileInputExcel_15].length() > 0) {
									curColNum_tFileInputExcel_15 = columnIndex_tFileInputExcel_15
											+ start_column_tFileInputExcel_15 + 1;
									curColName_tFileInputExcel_15 = "Custcode";

									row19.Custcode = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_15[columnIndex_tFileInputExcel_15], null,
											'.' == decimalChar_tFileInputExcel_15 ? null
													: decimalChar_tFileInputExcel_15));
								} else {
									row19.Custcode = null;
									emptyColumnCount_tFileInputExcel_15++;
								}
								columnIndex_tFileInputExcel_15 = 1;

								if (temp_row_tFileInputExcel_15[columnIndex_tFileInputExcel_15].length() > 0) {
									curColNum_tFileInputExcel_15 = columnIndex_tFileInputExcel_15
											+ start_column_tFileInputExcel_15 + 1;
									curColName_tFileInputExcel_15 = "Raison_Sociale";

									row19.Raison_Sociale = temp_row_tFileInputExcel_15[columnIndex_tFileInputExcel_15];
								} else {
									row19.Raison_Sociale = null;
									emptyColumnCount_tFileInputExcel_15++;
								}
								columnIndex_tFileInputExcel_15 = 2;

								if (temp_row_tFileInputExcel_15[columnIndex_tFileInputExcel_15].length() > 0) {
									curColNum_tFileInputExcel_15 = columnIndex_tFileInputExcel_15
											+ start_column_tFileInputExcel_15 + 1;
									curColName_tFileInputExcel_15 = "Groupe_Client";

									row19.Groupe_Client = temp_row_tFileInputExcel_15[columnIndex_tFileInputExcel_15];
								} else {
									row19.Groupe_Client = null;
									emptyColumnCount_tFileInputExcel_15++;
								}
								columnIndex_tFileInputExcel_15 = 3;

								if (temp_row_tFileInputExcel_15[columnIndex_tFileInputExcel_15].length() > 0) {
									curColNum_tFileInputExcel_15 = columnIndex_tFileInputExcel_15
											+ start_column_tFileInputExcel_15 + 1;
									curColName_tFileInputExcel_15 = "Account_Manager";

									row19.Account_Manager = temp_row_tFileInputExcel_15[columnIndex_tFileInputExcel_15];
								} else {
									row19.Account_Manager = null;
									emptyColumnCount_tFileInputExcel_15++;
								}
								columnIndex_tFileInputExcel_15 = 4;

								if (temp_row_tFileInputExcel_15[columnIndex_tFileInputExcel_15].length() > 0) {
									curColNum_tFileInputExcel_15 = columnIndex_tFileInputExcel_15
											+ start_column_tFileInputExcel_15 + 1;
									curColName_tFileInputExcel_15 = "Equipe";

									row19.Equipe = temp_row_tFileInputExcel_15[columnIndex_tFileInputExcel_15];
								} else {
									row19.Equipe = null;
									emptyColumnCount_tFileInputExcel_15++;
								}
								columnIndex_tFileInputExcel_15 = 5;

								if (temp_row_tFileInputExcel_15[columnIndex_tFileInputExcel_15].length() > 0) {
									curColNum_tFileInputExcel_15 = columnIndex_tFileInputExcel_15
											+ start_column_tFileInputExcel_15 + 1;
									curColName_tFileInputExcel_15 = "Somme_de_Suspension";

									row19.Somme_de_Suspension = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_15[columnIndex_tFileInputExcel_15], null,
											'.' == decimalChar_tFileInputExcel_15 ? null
													: decimalChar_tFileInputExcel_15));
								} else {
									row19.Somme_de_Suspension = null;
									emptyColumnCount_tFileInputExcel_15++;
								}
								columnIndex_tFileInputExcel_15 = 6;

								if (temp_row_tFileInputExcel_15[columnIndex_tFileInputExcel_15].length() > 0) {
									curColNum_tFileInputExcel_15 = columnIndex_tFileInputExcel_15
											+ start_column_tFileInputExcel_15 + 1;
									curColName_tFileInputExcel_15 = "Type_de_suspension";

									row19.Type_de_suspension = temp_row_tFileInputExcel_15[columnIndex_tFileInputExcel_15];
								} else {
									row19.Type_de_suspension = null;
									emptyColumnCount_tFileInputExcel_15++;
								}
								columnIndex_tFileInputExcel_15 = 7;

								if (temp_row_tFileInputExcel_15[columnIndex_tFileInputExcel_15].length() > 0) {
									curColNum_tFileInputExcel_15 = columnIndex_tFileInputExcel_15
											+ start_column_tFileInputExcel_15 + 1;
									curColName_tFileInputExcel_15 = "Motif";

									row19.Motif = temp_row_tFileInputExcel_15[columnIndex_tFileInputExcel_15];
								} else {
									row19.Motif = null;
									emptyColumnCount_tFileInputExcel_15++;
								}
								columnIndex_tFileInputExcel_15 = 8;

								if (temp_row_tFileInputExcel_15[columnIndex_tFileInputExcel_15].length() > 0) {
									curColNum_tFileInputExcel_15 = columnIndex_tFileInputExcel_15
											+ start_column_tFileInputExcel_15 + 1;
									curColName_tFileInputExcel_15 = "DFE";

									row19.DFE = temp_row_tFileInputExcel_15[columnIndex_tFileInputExcel_15];
								} else {
									row19.DFE = null;
									emptyColumnCount_tFileInputExcel_15++;
								}
								columnIndex_tFileInputExcel_15 = 9;

								if (temp_row_tFileInputExcel_15[columnIndex_tFileInputExcel_15].length() > 0) {
									curColNum_tFileInputExcel_15 = columnIndex_tFileInputExcel_15
											+ start_column_tFileInputExcel_15 + 1;
									curColName_tFileInputExcel_15 = "Engage_Oui_Non";

									row19.Engage_Oui_Non = temp_row_tFileInputExcel_15[columnIndex_tFileInputExcel_15];
								} else {
									row19.Engage_Oui_Non = null;
									emptyColumnCount_tFileInputExcel_15++;
								}
								columnIndex_tFileInputExcel_15 = 10;

								if (temp_row_tFileInputExcel_15[columnIndex_tFileInputExcel_15].length() > 0) {
									curColNum_tFileInputExcel_15 = columnIndex_tFileInputExcel_15
											+ start_column_tFileInputExcel_15 + 1;
									curColName_tFileInputExcel_15 = "Date_Depot";

									row19.Date_Depot = temp_row_tFileInputExcel_15[columnIndex_tFileInputExcel_15];
								} else {
									row19.Date_Depot = null;
									emptyColumnCount_tFileInputExcel_15++;
								}

								nb_line_tFileInputExcel_15++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_15_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_15 = true;
								System.err.println(e.getMessage());
								row19 = null;
							}

							/**
							 * [tFileInputExcel_15 begin ] stop
							 */

							/**
							 * [tFileInputExcel_15 main ] start
							 */

							currentComponent = "tFileInputExcel_15";

							tos_count_tFileInputExcel_15++;

							/**
							 * [tFileInputExcel_15 main ] stop
							 */

							/**
							 * [tFileInputExcel_15 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_15";

							/**
							 * [tFileInputExcel_15 process_data_begin ] stop
							 */
// Start of branch "row19"
							if (row19 != null) {

								/**
								 * [tMap_13 main ] start
								 */

								currentComponent = "tMap_13";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row19"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_13 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_13 = false;
								boolean mainRowRejected_tMap_13 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_13__Struct Var = Var__tMap_13;// ###############################
									// ###############################
									// # Output tables

									copyOft8_0 = null;

// # Output table : 'copyOft8_0'
									copyOft8_0_tmp.Engage_Oui_Non = row19.Engage_Oui_Non;
									copyOft8_0 = copyOft8_0_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_13 = false;

								tos_count_tMap_13++;

								/**
								 * [tMap_13 main ] stop
								 */

								/**
								 * [tMap_13 process_data_begin ] start
								 */

								currentComponent = "tMap_13";

								/**
								 * [tMap_13 process_data_begin ] stop
								 */
// Start of branch "copyOft8_0"
								if (copyOft8_0 != null) {

									/**
									 * [tUnite_3 main ] start
									 */

									currentComponent = "tUnite_3";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "copyOft8_0"

										);
									}

//////////

// for output
									row22 = new row22Struct();

									row22.Engage_Oui_Non = copyOft8_0.Engage_Oui_Non;

									nb_line_tUnite_3++;

//////////

									tos_count_tUnite_3++;

									/**
									 * [tUnite_3 main ] stop
									 */

									/**
									 * [tUnite_3 process_data_begin ] start
									 */

									currentComponent = "tUnite_3";

									/**
									 * [tUnite_3 process_data_begin ] stop
									 */

									/**
									 * [tMap_39 main ] start
									 */

									currentComponent = "tMap_39";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "row22"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_39 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_39 = false;
									boolean mainRowRejected_tMap_39 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row40"
									///////////////////////////////////////////////

									boolean forceLooprow40 = false;

									row40Struct row40ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_39) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_39 = false;

										row40HashKey.Engage_Oui_Non = row22.Engage_Oui_Non;

										row40HashKey.hashCodeDirty = true;

										tHash_Lookup_row40.lookup(row40HashKey);

										if (!tHash_Lookup_row40.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_39 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row40 != null && tHash_Lookup_row40.getCount(row40HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row40' and it contains more one result from keys : row40.Engage_Oui_Non = '"
										// + row40HashKey.Engage_Oui_Non + "'");
									} // G 071

									row40Struct row40 = null;

									row40Struct fromLookup_row40 = null;
									row40 = row40Default;

									if (tHash_Lookup_row40 != null && tHash_Lookup_row40.hasNext()) { // G 099

										fromLookup_row40 = tHash_Lookup_row40.next();

									} // G 099

									if (fromLookup_row40 != null) {
										row40 = fromLookup_row40;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_39__Struct Var = Var__tMap_39;// ###############################
										// ###############################
										// # Output tables

										u = null;

										if (!rejectedInnerJoin_tMap_39) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'u'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_39) {
											u_tmp.Engage_Oui_Non = row22.Engage_Oui_Non;
											u = u_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_39 = false;

									tos_count_tMap_39++;

									/**
									 * [tMap_39 main ] stop
									 */

									/**
									 * [tMap_39 process_data_begin ] start
									 */

									currentComponent = "tMap_39";

									/**
									 * [tMap_39 process_data_begin ] stop
									 */
// Start of branch "u"
									if (u != null) {

										/**
										 * [tUniqRow_3 main ] start
										 */

										currentComponent = "tUniqRow_3";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "u"

											);
										}

										row24 = null;
										finder_tUniqRow_3.Engage_Oui_Non = u.Engage_Oui_Non;
										finder_tUniqRow_3.hashCodeDirty = true;
										if (!keystUniqRow_3.contains(finder_tUniqRow_3)) {
											KeyStruct_tUniqRow_3 new_tUniqRow_3 = new KeyStruct_tUniqRow_3();

											new_tUniqRow_3.Engage_Oui_Non = u.Engage_Oui_Non;

											keystUniqRow_3.add(new_tUniqRow_3);
											if (row24 == null) {

												row24 = new row24Struct();
											}
											row24.Engage_Oui_Non = u.Engage_Oui_Non;
											nb_uniques_tUniqRow_3++;
										} else {
											nb_duplicates_tUniqRow_3++;
										}

										tos_count_tUniqRow_3++;

										/**
										 * [tUniqRow_3 main ] stop
										 */

										/**
										 * [tUniqRow_3 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_3";

										/**
										 * [tUniqRow_3 process_data_begin ] stop
										 */
// Start of branch "row24"
										if (row24 != null) {

											/**
											 * [tDBOutput_9 main ] start
											 */

											currentComponent = "tDBOutput_9";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row24"

												);
											}

											whetherReject_tDBOutput_9 = false;
											if (row24.Engage_Oui_Non == null) {
												pstmt_tDBOutput_9.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_9.setString(1, row24.Engage_Oui_Non);
											}

											pstmt_tDBOutput_9.addBatch();
											nb_line_tDBOutput_9++;

											batchSizeCounter_tDBOutput_9++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_9 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_9) throws Exception {
													try {

														for (int countEach_tDBOutput_9 : pstmt_tDBOutput_9
																.executeBatch()) {
															if (countEach_tDBOutput_9 == -2
																	|| countEach_tDBOutput_9 == -3) {
																break;
															}
															counter += countEach_tDBOutput_9;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_9_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_9 = 0;
														for (int countEach_tDBOutput_9 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_9 < 0 ? 0
																	: countEach_tDBOutput_9);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_9) throws Exception {
													try {

														for (int countEach_tDBOutput_9 : pstmt_tDBOutput_9
																.executeBatch()) {
															if (countEach_tDBOutput_9 == -2
																	|| countEach_tDBOutput_9 == -3) {
																break;
															}
															counter += countEach_tDBOutput_9;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_9_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_9 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_9 < 0 ? 0
																	: countEach_tDBOutput_9);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_9 > 0)
													&& (batchSize_tDBOutput_9 <= batchSizeCounter_tDBOutput_9)) {

												insertedCount_tDBOutput_9 = new LimitBytesHelper_tDBOutput_9()
														.limitBytePart1(insertedCount_tDBOutput_9, pstmt_tDBOutput_9);
												rowsToCommitCount_tDBOutput_9 = insertedCount_tDBOutput_9;

												batchSizeCounter_tDBOutput_9 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_9++;
											if (commitEvery_tDBOutput_9 <= commitCounter_tDBOutput_9) {
												if ((batchSize_tDBOutput_9 > 0) && (batchSizeCounter_tDBOutput_9 > 0)) {

													insertedCount_tDBOutput_9 = new LimitBytesHelper_tDBOutput_9()
															.limitBytePart1(insertedCount_tDBOutput_9,
																	pstmt_tDBOutput_9);

													batchSizeCounter_tDBOutput_9 = 0;
												}
												if (rowsToCommitCount_tDBOutput_9 != 0) {

												}
												conn_tDBOutput_9.commit();
												if (rowsToCommitCount_tDBOutput_9 != 0) {

													rowsToCommitCount_tDBOutput_9 = 0;
												}
												commitCounter_tDBOutput_9 = 0;
											}

											tos_count_tDBOutput_9++;

											/**
											 * [tDBOutput_9 main ] stop
											 */

											/**
											 * [tDBOutput_9 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_9";

											/**
											 * [tDBOutput_9 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_9 process_data_end ] start
											 */

											currentComponent = "tDBOutput_9";

											/**
											 * [tDBOutput_9 process_data_end ] stop
											 */

										} // End of branch "row24"

										/**
										 * [tUniqRow_3 process_data_end ] start
										 */

										currentComponent = "tUniqRow_3";

										/**
										 * [tUniqRow_3 process_data_end ] stop
										 */

									} // End of branch "u"

									/**
									 * [tMap_39 process_data_end ] start
									 */

									currentComponent = "tMap_39";

									/**
									 * [tMap_39 process_data_end ] stop
									 */

									/**
									 * [tUnite_3 process_data_end ] start
									 */

									currentComponent = "tUnite_3";

									/**
									 * [tUnite_3 process_data_end ] stop
									 */

								} // End of branch "copyOft8_0"

								/**
								 * [tMap_13 process_data_end ] start
								 */

								currentComponent = "tMap_13";

								/**
								 * [tMap_13 process_data_end ] stop
								 */

							} // End of branch "row19"

							/**
							 * [tFileInputExcel_15 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_15";

							/**
							 * [tFileInputExcel_15 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_15 end ] start
							 */

							currentComponent = "tFileInputExcel_15";

						}

						globalMap.put("tFileInputExcel_15_NB_LINE", nb_line_tFileInputExcel_15);

					}

				} finally {

					if (!(source_tFileInputExcel_15 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_15.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_15", true);
				end_Hash.put("tFileInputExcel_15", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_15 end ] stop
				 */

				/**
				 * [tMap_13 end ] start
				 */

				currentComponent = "tMap_13";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row19");
				}

				ok_Hash.put("tMap_13", true);
				end_Hash.put("tMap_13", System.currentTimeMillis());

				/**
				 * [tMap_13 end ] stop
				 */

				/**
				 * [tMap_14 begin ] start
				 */

				ok_Hash.put("tMap_14", false);
				start_Hash.put("tMap_14", System.currentTimeMillis());

				currentComponent = "tMap_14";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row20");
				}

				int tos_count_tMap_14 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_14__Struct {
				}
				Var__tMap_14__Struct Var__tMap_14 = new Var__tMap_14__Struct();
// ###############################

// ###############################
// # Outputs initialization
				copyOft7_0Struct copyOft7_0_tmp = new copyOft7_0Struct();
// ###############################

				/**
				 * [tMap_14 begin ] stop
				 */

				/**
				 * [tFileInputExcel_16 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_16", false);
				start_Hash.put("tFileInputExcel_16", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_16";

				int tos_count_tFileInputExcel_16 = 0;

				final String decryptedPassword_tFileInputExcel_16 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:E120yUsXjs5+tHdDnGllwj3JBDlNWCII9nXUnw==");
				String password_tFileInputExcel_16 = decryptedPassword_tFileInputExcel_16;
				if (password_tFileInputExcel_16.isEmpty()) {
					password_tFileInputExcel_16 = null;
				}
				class RegexUtil_tFileInputExcel_16 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_16 regexUtil_tFileInputExcel_16 = new RegexUtil_tFileInputExcel_16();

				Object source_tFileInputExcel_16 = "C:/Users/DELL/Downloads/parc facturé Mars 2022 (1).xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_16 = null;

				if (source_tFileInputExcel_16 instanceof String) {
					workbook_tFileInputExcel_16 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_16), password_tFileInputExcel_16,
									true);
				} else if (source_tFileInputExcel_16 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_16 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_16, password_tFileInputExcel_16);
				} else {
					workbook_tFileInputExcel_16 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_16 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_16.addAll(
							regexUtil_tFileInputExcel_16.getSheets(workbook_tFileInputExcel_16, "Résiliation", false));
					if (sheetList_tFileInputExcel_16.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_16 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_16 : sheetList_tFileInputExcel_16) {
						if (sheet_FilterNull_tFileInputExcel_16 != null
								&& sheetList_FilterNull_tFileInputExcel_16.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_16.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_16.add(sheet_FilterNull_tFileInputExcel_16);
						}
					}
					sheetList_tFileInputExcel_16 = sheetList_FilterNull_tFileInputExcel_16;
					if (sheetList_tFileInputExcel_16.size() > 0) {
						int nb_line_tFileInputExcel_16 = 0;

						int begin_line_tFileInputExcel_16 = 1;

						int footer_input_tFileInputExcel_16 = 0;

						int end_line_tFileInputExcel_16 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_16 : sheetList_tFileInputExcel_16) {
							end_line_tFileInputExcel_16 += (sheet_tFileInputExcel_16.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_16 -= footer_input_tFileInputExcel_16;
						int limit_tFileInputExcel_16 = -1;
						int start_column_tFileInputExcel_16 = 1 - 1;
						int end_column_tFileInputExcel_16 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_16 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_16 = sheetList_tFileInputExcel_16
								.get(0);
						int rowCount_tFileInputExcel_16 = 0;
						int sheetIndex_tFileInputExcel_16 = 0;
						int currentRows_tFileInputExcel_16 = (sheetList_tFileInputExcel_16.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_16 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_16 = df_tFileInputExcel_16.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_16 = begin_line_tFileInputExcel_16; i_tFileInputExcel_16 < end_line_tFileInputExcel_16; i_tFileInputExcel_16++) {

							int emptyColumnCount_tFileInputExcel_16 = 0;

							if (limit_tFileInputExcel_16 != -1
									&& nb_line_tFileInputExcel_16 >= limit_tFileInputExcel_16) {
								break;
							}

							while (i_tFileInputExcel_16 >= rowCount_tFileInputExcel_16
									+ currentRows_tFileInputExcel_16) {
								rowCount_tFileInputExcel_16 += currentRows_tFileInputExcel_16;
								sheet_tFileInputExcel_16 = sheetList_tFileInputExcel_16
										.get(++sheetIndex_tFileInputExcel_16);
								currentRows_tFileInputExcel_16 = (sheet_tFileInputExcel_16.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_16_CURRENT_SHEET", sheet_tFileInputExcel_16.getSheetName());
							if (rowCount_tFileInputExcel_16 <= i_tFileInputExcel_16) {
								row_tFileInputExcel_16 = sheet_tFileInputExcel_16
										.getRow(i_tFileInputExcel_16 - rowCount_tFileInputExcel_16);
							}
							row20 = null;
							int tempRowLength_tFileInputExcel_16 = 11;

							int columnIndex_tFileInputExcel_16 = 0;

							String[] temp_row_tFileInputExcel_16 = new String[tempRowLength_tFileInputExcel_16];
							int excel_end_column_tFileInputExcel_16;
							if (row_tFileInputExcel_16 == null) {
								excel_end_column_tFileInputExcel_16 = 0;
							} else {
								excel_end_column_tFileInputExcel_16 = row_tFileInputExcel_16.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_16;
							if (end_column_tFileInputExcel_16 == -1) {
								actual_end_column_tFileInputExcel_16 = excel_end_column_tFileInputExcel_16;
							} else {
								actual_end_column_tFileInputExcel_16 = end_column_tFileInputExcel_16 > excel_end_column_tFileInputExcel_16
										? excel_end_column_tFileInputExcel_16
										: end_column_tFileInputExcel_16;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_16 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_16; i++) {
								if (i + start_column_tFileInputExcel_16 < actual_end_column_tFileInputExcel_16) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_16 = row_tFileInputExcel_16
											.getCell(i + start_column_tFileInputExcel_16);
									if (cell_tFileInputExcel_16 != null) {
										switch (cell_tFileInputExcel_16.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_16[i] = cell_tFileInputExcel_16
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_16)) {
												temp_row_tFileInputExcel_16[i] = cell_tFileInputExcel_16
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_16[i] = df_tFileInputExcel_16
														.format(cell_tFileInputExcel_16.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_16[i] = String
													.valueOf(cell_tFileInputExcel_16.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_16.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_16[i] = cell_tFileInputExcel_16
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_16)) {
													temp_row_tFileInputExcel_16[i] = cell_tFileInputExcel_16
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_16 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_16.getNumericCellValue());
													temp_row_tFileInputExcel_16[i] = ne_tFileInputExcel_16
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_16[i] = String
														.valueOf(cell_tFileInputExcel_16.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_16[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_16[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_16[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_16[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_16 = false;
							row20 = new row20Struct();
							int curColNum_tFileInputExcel_16 = -1;
							String curColName_tFileInputExcel_16 = "";
							try {
								columnIndex_tFileInputExcel_16 = 0;

								if (temp_row_tFileInputExcel_16[columnIndex_tFileInputExcel_16].length() > 0) {
									curColNum_tFileInputExcel_16 = columnIndex_tFileInputExcel_16
											+ start_column_tFileInputExcel_16 + 1;
									curColName_tFileInputExcel_16 = "Custcode";

									row20.Custcode = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_16[columnIndex_tFileInputExcel_16], null,
											'.' == decimalChar_tFileInputExcel_16 ? null
													: decimalChar_tFileInputExcel_16));
								} else {
									row20.Custcode = null;
									emptyColumnCount_tFileInputExcel_16++;
								}
								columnIndex_tFileInputExcel_16 = 1;

								if (temp_row_tFileInputExcel_16[columnIndex_tFileInputExcel_16].length() > 0) {
									curColNum_tFileInputExcel_16 = columnIndex_tFileInputExcel_16
											+ start_column_tFileInputExcel_16 + 1;
									curColName_tFileInputExcel_16 = "Raison_Sociale";

									row20.Raison_Sociale = temp_row_tFileInputExcel_16[columnIndex_tFileInputExcel_16];
								} else {
									row20.Raison_Sociale = null;
									emptyColumnCount_tFileInputExcel_16++;
								}
								columnIndex_tFileInputExcel_16 = 2;

								if (temp_row_tFileInputExcel_16[columnIndex_tFileInputExcel_16].length() > 0) {
									curColNum_tFileInputExcel_16 = columnIndex_tFileInputExcel_16
											+ start_column_tFileInputExcel_16 + 1;
									curColName_tFileInputExcel_16 = "Groupe_Client";

									row20.Groupe_Client = temp_row_tFileInputExcel_16[columnIndex_tFileInputExcel_16];
								} else {
									row20.Groupe_Client = null;
									emptyColumnCount_tFileInputExcel_16++;
								}
								columnIndex_tFileInputExcel_16 = 3;

								if (temp_row_tFileInputExcel_16[columnIndex_tFileInputExcel_16].length() > 0) {
									curColNum_tFileInputExcel_16 = columnIndex_tFileInputExcel_16
											+ start_column_tFileInputExcel_16 + 1;
									curColName_tFileInputExcel_16 = "Account_Manager";

									row20.Account_Manager = temp_row_tFileInputExcel_16[columnIndex_tFileInputExcel_16];
								} else {
									row20.Account_Manager = null;
									emptyColumnCount_tFileInputExcel_16++;
								}
								columnIndex_tFileInputExcel_16 = 4;

								if (temp_row_tFileInputExcel_16[columnIndex_tFileInputExcel_16].length() > 0) {
									curColNum_tFileInputExcel_16 = columnIndex_tFileInputExcel_16
											+ start_column_tFileInputExcel_16 + 1;
									curColName_tFileInputExcel_16 = "Equipe";

									row20.Equipe = temp_row_tFileInputExcel_16[columnIndex_tFileInputExcel_16];
								} else {
									row20.Equipe = null;
									emptyColumnCount_tFileInputExcel_16++;
								}
								columnIndex_tFileInputExcel_16 = 5;

								if (temp_row_tFileInputExcel_16[columnIndex_tFileInputExcel_16].length() > 0) {
									curColNum_tFileInputExcel_16 = columnIndex_tFileInputExcel_16
											+ start_column_tFileInputExcel_16 + 1;
									curColName_tFileInputExcel_16 = "Somme_de_Resiliation";

									row20.Somme_de_Resiliation = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_16[columnIndex_tFileInputExcel_16], null,
											'.' == decimalChar_tFileInputExcel_16 ? null
													: decimalChar_tFileInputExcel_16));
								} else {
									row20.Somme_de_Resiliation = null;
									emptyColumnCount_tFileInputExcel_16++;
								}
								columnIndex_tFileInputExcel_16 = 6;

								if (temp_row_tFileInputExcel_16[columnIndex_tFileInputExcel_16].length() > 0) {
									curColNum_tFileInputExcel_16 = columnIndex_tFileInputExcel_16
											+ start_column_tFileInputExcel_16 + 1;
									curColName_tFileInputExcel_16 = "Type_Resiliation";

									row20.Type_Resiliation = temp_row_tFileInputExcel_16[columnIndex_tFileInputExcel_16];
								} else {
									row20.Type_Resiliation = null;
									emptyColumnCount_tFileInputExcel_16++;
								}
								columnIndex_tFileInputExcel_16 = 7;

								if (temp_row_tFileInputExcel_16[columnIndex_tFileInputExcel_16].length() > 0) {
									curColNum_tFileInputExcel_16 = columnIndex_tFileInputExcel_16
											+ start_column_tFileInputExcel_16 + 1;
									curColName_tFileInputExcel_16 = "Motif";

									row20.Motif = temp_row_tFileInputExcel_16[columnIndex_tFileInputExcel_16];
								} else {
									row20.Motif = null;
									emptyColumnCount_tFileInputExcel_16++;
								}
								columnIndex_tFileInputExcel_16 = 8;

								if (temp_row_tFileInputExcel_16[columnIndex_tFileInputExcel_16].length() > 0) {
									curColNum_tFileInputExcel_16 = columnIndex_tFileInputExcel_16
											+ start_column_tFileInputExcel_16 + 1;
									curColName_tFileInputExcel_16 = "DFE";

									row20.DFE = temp_row_tFileInputExcel_16[columnIndex_tFileInputExcel_16];
								} else {
									row20.DFE = null;
									emptyColumnCount_tFileInputExcel_16++;
								}
								columnIndex_tFileInputExcel_16 = 9;

								if (temp_row_tFileInputExcel_16[columnIndex_tFileInputExcel_16].length() > 0) {
									curColNum_tFileInputExcel_16 = columnIndex_tFileInputExcel_16
											+ start_column_tFileInputExcel_16 + 1;
									curColName_tFileInputExcel_16 = "Engage_Oui_Non";

									row20.Engage_Oui_Non = temp_row_tFileInputExcel_16[columnIndex_tFileInputExcel_16];
								} else {
									row20.Engage_Oui_Non = null;
									emptyColumnCount_tFileInputExcel_16++;
								}
								columnIndex_tFileInputExcel_16 = 10;

								if (temp_row_tFileInputExcel_16[columnIndex_tFileInputExcel_16].length() > 0) {
									curColNum_tFileInputExcel_16 = columnIndex_tFileInputExcel_16
											+ start_column_tFileInputExcel_16 + 1;
									curColName_tFileInputExcel_16 = "Date_Depot";

									row20.Date_Depot = temp_row_tFileInputExcel_16[columnIndex_tFileInputExcel_16];
								} else {
									row20.Date_Depot = null;
									emptyColumnCount_tFileInputExcel_16++;
								}

								nb_line_tFileInputExcel_16++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_16_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_16 = true;
								System.err.println(e.getMessage());
								row20 = null;
							}

							/**
							 * [tFileInputExcel_16 begin ] stop
							 */

							/**
							 * [tFileInputExcel_16 main ] start
							 */

							currentComponent = "tFileInputExcel_16";

							tos_count_tFileInputExcel_16++;

							/**
							 * [tFileInputExcel_16 main ] stop
							 */

							/**
							 * [tFileInputExcel_16 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_16";

							/**
							 * [tFileInputExcel_16 process_data_begin ] stop
							 */
// Start of branch "row20"
							if (row20 != null) {

								/**
								 * [tMap_14 main ] start
								 */

								currentComponent = "tMap_14";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row20"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_14 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_14 = false;
								boolean mainRowRejected_tMap_14 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_14__Struct Var = Var__tMap_14;// ###############################
									// ###############################
									// # Output tables

									copyOft7_0 = null;

// # Output table : 'copyOft7_0'
									copyOft7_0_tmp.Engage_Oui_Non = row20.Engage_Oui_Non;
									copyOft7_0 = copyOft7_0_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_14 = false;

								tos_count_tMap_14++;

								/**
								 * [tMap_14 main ] stop
								 */

								/**
								 * [tMap_14 process_data_begin ] start
								 */

								currentComponent = "tMap_14";

								/**
								 * [tMap_14 process_data_begin ] stop
								 */
// Start of branch "copyOft7_0"
								if (copyOft7_0 != null) {

									/**
									 * [tUnite_3 main ] start
									 */

									currentComponent = "tUnite_3";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "copyOft7_0"

										);
									}

//////////

// for output
									row22 = new row22Struct();

									row22.Engage_Oui_Non = copyOft7_0.Engage_Oui_Non;

									nb_line_tUnite_3++;

//////////

									tos_count_tUnite_3++;

									/**
									 * [tUnite_3 main ] stop
									 */

									/**
									 * [tUnite_3 process_data_begin ] start
									 */

									currentComponent = "tUnite_3";

									/**
									 * [tUnite_3 process_data_begin ] stop
									 */

									/**
									 * [tMap_39 main ] start
									 */

									currentComponent = "tMap_39";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "row22"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_39 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_39 = false;
									boolean mainRowRejected_tMap_39 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row40"
									///////////////////////////////////////////////

									boolean forceLooprow40 = false;

									row40Struct row40ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_39) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_39 = false;

										row40HashKey.Engage_Oui_Non = row22.Engage_Oui_Non;

										row40HashKey.hashCodeDirty = true;

										tHash_Lookup_row40.lookup(row40HashKey);

										if (!tHash_Lookup_row40.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_39 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row40 != null && tHash_Lookup_row40.getCount(row40HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row40' and it contains more one result from keys : row40.Engage_Oui_Non = '"
										// + row40HashKey.Engage_Oui_Non + "'");
									} // G 071

									row40Struct row40 = null;

									row40Struct fromLookup_row40 = null;
									row40 = row40Default;

									if (tHash_Lookup_row40 != null && tHash_Lookup_row40.hasNext()) { // G 099

										fromLookup_row40 = tHash_Lookup_row40.next();

									} // G 099

									if (fromLookup_row40 != null) {
										row40 = fromLookup_row40;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_39__Struct Var = Var__tMap_39;// ###############################
										// ###############################
										// # Output tables

										u = null;

										if (!rejectedInnerJoin_tMap_39) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'u'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_39) {
											u_tmp.Engage_Oui_Non = row22.Engage_Oui_Non;
											u = u_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_39 = false;

									tos_count_tMap_39++;

									/**
									 * [tMap_39 main ] stop
									 */

									/**
									 * [tMap_39 process_data_begin ] start
									 */

									currentComponent = "tMap_39";

									/**
									 * [tMap_39 process_data_begin ] stop
									 */
// Start of branch "u"
									if (u != null) {

										/**
										 * [tUniqRow_3 main ] start
										 */

										currentComponent = "tUniqRow_3";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "u"

											);
										}

										row24 = null;
										finder_tUniqRow_3.Engage_Oui_Non = u.Engage_Oui_Non;
										finder_tUniqRow_3.hashCodeDirty = true;
										if (!keystUniqRow_3.contains(finder_tUniqRow_3)) {
											KeyStruct_tUniqRow_3 new_tUniqRow_3 = new KeyStruct_tUniqRow_3();

											new_tUniqRow_3.Engage_Oui_Non = u.Engage_Oui_Non;

											keystUniqRow_3.add(new_tUniqRow_3);
											if (row24 == null) {

												row24 = new row24Struct();
											}
											row24.Engage_Oui_Non = u.Engage_Oui_Non;
											nb_uniques_tUniqRow_3++;
										} else {
											nb_duplicates_tUniqRow_3++;
										}

										tos_count_tUniqRow_3++;

										/**
										 * [tUniqRow_3 main ] stop
										 */

										/**
										 * [tUniqRow_3 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_3";

										/**
										 * [tUniqRow_3 process_data_begin ] stop
										 */
// Start of branch "row24"
										if (row24 != null) {

											/**
											 * [tDBOutput_9 main ] start
											 */

											currentComponent = "tDBOutput_9";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row24"

												);
											}

											whetherReject_tDBOutput_9 = false;
											if (row24.Engage_Oui_Non == null) {
												pstmt_tDBOutput_9.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_9.setString(1, row24.Engage_Oui_Non);
											}

											pstmt_tDBOutput_9.addBatch();
											nb_line_tDBOutput_9++;

											batchSizeCounter_tDBOutput_9++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_9 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_9) throws Exception {
													try {

														for (int countEach_tDBOutput_9 : pstmt_tDBOutput_9
																.executeBatch()) {
															if (countEach_tDBOutput_9 == -2
																	|| countEach_tDBOutput_9 == -3) {
																break;
															}
															counter += countEach_tDBOutput_9;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_9_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_9 = 0;
														for (int countEach_tDBOutput_9 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_9 < 0 ? 0
																	: countEach_tDBOutput_9);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_9) throws Exception {
													try {

														for (int countEach_tDBOutput_9 : pstmt_tDBOutput_9
																.executeBatch()) {
															if (countEach_tDBOutput_9 == -2
																	|| countEach_tDBOutput_9 == -3) {
																break;
															}
															counter += countEach_tDBOutput_9;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_9_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_9 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_9 < 0 ? 0
																	: countEach_tDBOutput_9);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_9 > 0)
													&& (batchSize_tDBOutput_9 <= batchSizeCounter_tDBOutput_9)) {

												insertedCount_tDBOutput_9 = new LimitBytesHelper_tDBOutput_9()
														.limitBytePart1(insertedCount_tDBOutput_9, pstmt_tDBOutput_9);
												rowsToCommitCount_tDBOutput_9 = insertedCount_tDBOutput_9;

												batchSizeCounter_tDBOutput_9 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_9++;
											if (commitEvery_tDBOutput_9 <= commitCounter_tDBOutput_9) {
												if ((batchSize_tDBOutput_9 > 0) && (batchSizeCounter_tDBOutput_9 > 0)) {

													insertedCount_tDBOutput_9 = new LimitBytesHelper_tDBOutput_9()
															.limitBytePart1(insertedCount_tDBOutput_9,
																	pstmt_tDBOutput_9);

													batchSizeCounter_tDBOutput_9 = 0;
												}
												if (rowsToCommitCount_tDBOutput_9 != 0) {

												}
												conn_tDBOutput_9.commit();
												if (rowsToCommitCount_tDBOutput_9 != 0) {

													rowsToCommitCount_tDBOutput_9 = 0;
												}
												commitCounter_tDBOutput_9 = 0;
											}

											tos_count_tDBOutput_9++;

											/**
											 * [tDBOutput_9 main ] stop
											 */

											/**
											 * [tDBOutput_9 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_9";

											/**
											 * [tDBOutput_9 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_9 process_data_end ] start
											 */

											currentComponent = "tDBOutput_9";

											/**
											 * [tDBOutput_9 process_data_end ] stop
											 */

										} // End of branch "row24"

										/**
										 * [tUniqRow_3 process_data_end ] start
										 */

										currentComponent = "tUniqRow_3";

										/**
										 * [tUniqRow_3 process_data_end ] stop
										 */

									} // End of branch "u"

									/**
									 * [tMap_39 process_data_end ] start
									 */

									currentComponent = "tMap_39";

									/**
									 * [tMap_39 process_data_end ] stop
									 */

									/**
									 * [tUnite_3 process_data_end ] start
									 */

									currentComponent = "tUnite_3";

									/**
									 * [tUnite_3 process_data_end ] stop
									 */

								} // End of branch "copyOft7_0"

								/**
								 * [tMap_14 process_data_end ] start
								 */

								currentComponent = "tMap_14";

								/**
								 * [tMap_14 process_data_end ] stop
								 */

							} // End of branch "row20"

							/**
							 * [tFileInputExcel_16 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_16";

							/**
							 * [tFileInputExcel_16 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_16 end ] start
							 */

							currentComponent = "tFileInputExcel_16";

						}

						globalMap.put("tFileInputExcel_16_NB_LINE", nb_line_tFileInputExcel_16);

					}

				} finally {

					if (!(source_tFileInputExcel_16 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_16.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_16", true);
				end_Hash.put("tFileInputExcel_16", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_16 end ] stop
				 */

				/**
				 * [tMap_14 end ] start
				 */

				currentComponent = "tMap_14";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row20");
				}

				ok_Hash.put("tMap_14", true);
				end_Hash.put("tMap_14", System.currentTimeMillis());

				/**
				 * [tMap_14 end ] stop
				 */

				/**
				 * [tUnite_3 end ] start
				 */

				currentComponent = "tUnite_3";

				globalMap.put("tUnite_3_NB_LINE", nb_line_tUnite_3);
				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "copyOft8_0", "copyOft7_0");
				}

				ok_Hash.put("tUnite_3", true);
				end_Hash.put("tUnite_3", System.currentTimeMillis());

				/**
				 * [tUnite_3 end ] stop
				 */

				/**
				 * [tMap_39 end ] start
				 */

				currentComponent = "tMap_39";

// ###############################
// # Lookup hashes releasing
				if (tHash_Lookup_row40 != null) {
					tHash_Lookup_row40.endGet();
				}
				globalMap.remove("tHash_Lookup_row40");

// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row22");
				}

				ok_Hash.put("tMap_39", true);
				end_Hash.put("tMap_39", System.currentTimeMillis());

				/**
				 * [tMap_39 end ] stop
				 */

				/**
				 * [tUniqRow_3 end ] start
				 */

				currentComponent = "tUniqRow_3";

				globalMap.put("tUniqRow_3_NB_UNIQUES", nb_uniques_tUniqRow_3);
				globalMap.put("tUniqRow_3_NB_DUPLICATES", nb_duplicates_tUniqRow_3);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "u");
				}

				ok_Hash.put("tUniqRow_3", true);
				end_Hash.put("tUniqRow_3", System.currentTimeMillis());

				/**
				 * [tUniqRow_3 end ] stop
				 */

				/**
				 * [tDBOutput_9 end ] start
				 */

				currentComponent = "tDBOutput_9";

				try {
					int countSum_tDBOutput_9 = 0;
					if (pstmt_tDBOutput_9 != null && batchSizeCounter_tDBOutput_9 > 0) {

						for (int countEach_tDBOutput_9 : pstmt_tDBOutput_9.executeBatch()) {
							if (countEach_tDBOutput_9 == -2 || countEach_tDBOutput_9 == -3) {
								break;
							}
							countSum_tDBOutput_9 += countEach_tDBOutput_9;
						}
						rowsToCommitCount_tDBOutput_9 += countSum_tDBOutput_9;

					}

					insertedCount_tDBOutput_9 += countSum_tDBOutput_9;

				} catch (java.sql.BatchUpdateException e) {
					globalMap.put("tDBOutput_9_ERROR_MESSAGE", e.getMessage());

					int countSum_tDBOutput_9 = 0;
					for (int countEach_tDBOutput_9 : e.getUpdateCounts()) {
						countSum_tDBOutput_9 += (countEach_tDBOutput_9 < 0 ? 0 : countEach_tDBOutput_9);
					}
					rowsToCommitCount_tDBOutput_9 += countSum_tDBOutput_9;

					insertedCount_tDBOutput_9 += countSum_tDBOutput_9;

					System.err.println(e.getMessage());

				}
				if (pstmt_tDBOutput_9 != null) {

					pstmt_tDBOutput_9.close();
					resourceMap.remove("pstmt_tDBOutput_9");

				}
				resourceMap.put("statementClosed_tDBOutput_9", true);
				if (rowsToCommitCount_tDBOutput_9 != 0) {

				}
				conn_tDBOutput_9.commit();
				if (rowsToCommitCount_tDBOutput_9 != 0) {

					rowsToCommitCount_tDBOutput_9 = 0;
				}
				commitCounter_tDBOutput_9 = 0;
				conn_tDBOutput_9.close();
				resourceMap.put("finish_tDBOutput_9", true);

				nb_line_deleted_tDBOutput_9 = nb_line_deleted_tDBOutput_9 + deletedCount_tDBOutput_9;
				nb_line_update_tDBOutput_9 = nb_line_update_tDBOutput_9 + updatedCount_tDBOutput_9;
				nb_line_inserted_tDBOutput_9 = nb_line_inserted_tDBOutput_9 + insertedCount_tDBOutput_9;
				nb_line_rejected_tDBOutput_9 = nb_line_rejected_tDBOutput_9 + rejectedCount_tDBOutput_9;

				globalMap.put("tDBOutput_9_NB_LINE", nb_line_tDBOutput_9);
				globalMap.put("tDBOutput_9_NB_LINE_UPDATED", nb_line_update_tDBOutput_9);
				globalMap.put("tDBOutput_9_NB_LINE_INSERTED", nb_line_inserted_tDBOutput_9);
				globalMap.put("tDBOutput_9_NB_LINE_DELETED", nb_line_deleted_tDBOutput_9);
				globalMap.put("tDBOutput_9_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_9);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row24");
				}

				ok_Hash.put("tDBOutput_9", true);
				end_Hash.put("tDBOutput_9", System.currentTimeMillis());

				/**
				 * [tDBOutput_9 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			// free memory for "tMap_39"
			globalMap.remove("tHash_Lookup_row40");

			try {

				/**
				 * [tFileInputExcel_15 finally ] start
				 */

				currentComponent = "tFileInputExcel_15";

				/**
				 * [tFileInputExcel_15 finally ] stop
				 */

				/**
				 * [tMap_13 finally ] start
				 */

				currentComponent = "tMap_13";

				/**
				 * [tMap_13 finally ] stop
				 */

				/**
				 * [tFileInputExcel_16 finally ] start
				 */

				currentComponent = "tFileInputExcel_16";

				/**
				 * [tFileInputExcel_16 finally ] stop
				 */

				/**
				 * [tMap_14 finally ] start
				 */

				currentComponent = "tMap_14";

				/**
				 * [tMap_14 finally ] stop
				 */

				/**
				 * [tUnite_3 finally ] start
				 */

				currentComponent = "tUnite_3";

				/**
				 * [tUnite_3 finally ] stop
				 */

				/**
				 * [tMap_39 finally ] start
				 */

				currentComponent = "tMap_39";

				/**
				 * [tMap_39 finally ] stop
				 */

				/**
				 * [tUniqRow_3 finally ] start
				 */

				currentComponent = "tUniqRow_3";

				/**
				 * [tUniqRow_3 finally ] stop
				 */

				/**
				 * [tDBOutput_9 finally ] start
				 */

				currentComponent = "tDBOutput_9";

				try {
					if (resourceMap.get("statementClosed_tDBOutput_9") == null) {
						java.sql.PreparedStatement pstmtToClose_tDBOutput_9 = null;
						if ((pstmtToClose_tDBOutput_9 = (java.sql.PreparedStatement) resourceMap
								.remove("pstmt_tDBOutput_9")) != null) {
							pstmtToClose_tDBOutput_9.close();
						}
					}
				} finally {
					if (resourceMap.get("finish_tDBOutput_9") == null) {
						java.sql.Connection ctn_tDBOutput_9 = null;
						if ((ctn_tDBOutput_9 = (java.sql.Connection) resourceMap.get("conn_tDBOutput_9")) != null) {
							try {
								ctn_tDBOutput_9.close();
							} catch (java.sql.SQLException sqlEx_tDBOutput_9) {
								String errorMessage_tDBOutput_9 = "failed to close the connection in tDBOutput_9 :"
										+ sqlEx_tDBOutput_9.getMessage();
								System.err.println(errorMessage_tDBOutput_9);
							}
						}
					}
				}

				/**
				 * [tDBOutput_9 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tFileInputExcel_15_SUBPROCESS_STATE", 1);
	}

	public static class row391Struct implements routines.system.IPersistableRow<row391Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Staut_Final;

		public String getStaut_Final() {
			return this.Staut_Final;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Staut_Final = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Staut_Final = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Staut_Final, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Staut_Final, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Staut_Final=" + Staut_Final);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row391Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class lStruct implements routines.system.IPersistableRow<lStruct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Staut_Final;

		public String getStaut_Final() {
			return this.Staut_Final;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Staut_Final = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Staut_Final = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Staut_Final, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Staut_Final, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Staut_Final=" + Staut_Final);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(lStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row11Struct implements routines.system.IPersistableRow<row11Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Staut_Final;

		public String getStaut_Final() {
			return this.Staut_Final;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Staut_Final = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Staut_Final = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Staut_Final, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Staut_Final, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Staut_Final=" + Staut_Final);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row11Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class copyOfcopyOfcopyOft18Struct
			implements routines.system.IPersistableRow<copyOfcopyOfcopyOft18Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Staut_Final;

		public String getStaut_Final() {
			return this.Staut_Final;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Staut_Final = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Staut_Final = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Staut_Final, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Staut_Final, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Staut_Final=" + Staut_Final);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(copyOfcopyOfcopyOft18Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row25Struct implements routines.system.IPersistableRow<row25Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Client_Prospect;

		public String getClient_Prospect() {
			return this.Client_Prospect;
		}

		public String Sujet;

		public String getSujet() {
			return this.Sujet;
		}

		public String Acces;

		public String getAcces() {
			return this.Acces;
		}

		public String Type_d_acces;

		public String getType_d_acces() {
			return this.Type_d_acces;
		}

		public String Account_Manager__Client_Prospect;

		public String getAccount_Manager__Client_Prospect() {
			return this.Account_Manager__Client_Prospect;
		}

		public String Cree_le;

		public String getCree_le() {
			return this.Cree_le;
		}

		public String Mois_et_annee_de_creation;

		public String getMois_et_annee_de_creation() {
			return this.Mois_et_annee_de_creation;
		}

		public String Cree_par;

		public String getCree_par() {
			return this.Cree_par;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public String Proprietaire;

		public String getProprietaire() {
			return this.Proprietaire;
		}

		public String Phase_de_l_opportunite;

		public String getPhase_de_l_opportunite() {
			return this.Phase_de_l_opportunite;
		}

		public Float Valeur_ordering;

		public Float getValeur_ordering() {
			return this.Valeur_ordering;
		}

		public String Statut;

		public String getStatut() {
			return this.Statut;
		}

		public String Staut_Final;

		public String getStaut_Final() {
			return this.Staut_Final;
		}

		public String Tarifs;

		public String getTarifs() {
			return this.Tarifs;
		}

		public String Montant_total;

		public String getMontant_total() {
			return this.Montant_total;
		}

		public String Parent__Produit_existant;

		public String getParent__Produit_existant() {
			return this.Parent__Produit_existant;
		}

		public String Produit_existant;

		public String getProduit_existant() {
			return this.Produit_existant;
		}

		public String Operation;

		public String getOperation() {
			return this.Operation;
		}

		public String Type_d_operation;

		public String getType_d_operation() {
			return this.Type_d_operation;
		}

		public String Prix_unitaire;

		public String getPrix_unitaire() {
			return this.Prix_unitaire;
		}

		public Float Quantite;

		public Float getQuantite() {
			return this.Quantite;
		}

		public String Remise;

		public String getRemise() {
			return this.Remise;
		}

		public String Montant_de_la_remise_manuelle;

		public String getMontant_de_la_remise_manuelle() {
			return this.Montant_de_la_remise_manuelle;
		}

		public String Total_final;

		public String getTotal_final() {
			return this.Total_final;
		}

		public String Modifie_le;

		public String getModifie_le() {
			return this.Modifie_le;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

					this.Sujet = readString(dis);

					this.Acces = readString(dis);

					this.Type_d_acces = readString(dis);

					this.Account_Manager__Client_Prospect = readString(dis);

					this.Cree_le = readString(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Proprietaire = readString(dis);

					this.Phase_de_l_opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Valeur_ordering = null;
					} else {
						this.Valeur_ordering = dis.readFloat();
					}

					this.Statut = readString(dis);

					this.Staut_Final = readString(dis);

					this.Tarifs = readString(dis);

					this.Montant_total = readString(dis);

					this.Parent__Produit_existant = readString(dis);

					this.Produit_existant = readString(dis);

					this.Operation = readString(dis);

					this.Type_d_operation = readString(dis);

					this.Prix_unitaire = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Quantite = null;
					} else {
						this.Quantite = dis.readFloat();
					}

					this.Remise = readString(dis);

					this.Montant_de_la_remise_manuelle = readString(dis);

					this.Total_final = readString(dis);

					this.Modifie_le = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

					this.Sujet = readString(dis);

					this.Acces = readString(dis);

					this.Type_d_acces = readString(dis);

					this.Account_Manager__Client_Prospect = readString(dis);

					this.Cree_le = readString(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Proprietaire = readString(dis);

					this.Phase_de_l_opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Valeur_ordering = null;
					} else {
						this.Valeur_ordering = dis.readFloat();
					}

					this.Statut = readString(dis);

					this.Staut_Final = readString(dis);

					this.Tarifs = readString(dis);

					this.Montant_total = readString(dis);

					this.Parent__Produit_existant = readString(dis);

					this.Produit_existant = readString(dis);

					this.Operation = readString(dis);

					this.Type_d_operation = readString(dis);

					this.Prix_unitaire = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Quantite = null;
					} else {
						this.Quantite = dis.readFloat();
					}

					this.Remise = readString(dis);

					this.Montant_de_la_remise_manuelle = readString(dis);

					this.Total_final = readString(dis);

					this.Modifie_le = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Acces, dos);

				// String

				writeString(this.Type_d_acces, dos);

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

				// String

				writeString(this.Cree_le, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Proprietaire, dos);

				// String

				writeString(this.Phase_de_l_opportunite, dos);

				// Float

				if (this.Valeur_ordering == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Valeur_ordering);
				}

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Tarifs, dos);

				// String

				writeString(this.Montant_total, dos);

				// String

				writeString(this.Parent__Produit_existant, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Operation, dos);

				// String

				writeString(this.Type_d_operation, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// Float

				if (this.Quantite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Quantite);
				}

				// String

				writeString(this.Remise, dos);

				// String

				writeString(this.Montant_de_la_remise_manuelle, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Modifie_le, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Acces, dos);

				// String

				writeString(this.Type_d_acces, dos);

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

				// String

				writeString(this.Cree_le, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Proprietaire, dos);

				// String

				writeString(this.Phase_de_l_opportunite, dos);

				// Float

				if (this.Valeur_ordering == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Valeur_ordering);
				}

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Tarifs, dos);

				// String

				writeString(this.Montant_total, dos);

				// String

				writeString(this.Parent__Produit_existant, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Operation, dos);

				// String

				writeString(this.Type_d_operation, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// Float

				if (this.Quantite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Quantite);
				}

				// String

				writeString(this.Remise, dos);

				// String

				writeString(this.Montant_de_la_remise_manuelle, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Modifie_le, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Client_Prospect=" + Client_Prospect);
			sb.append(",Sujet=" + Sujet);
			sb.append(",Acces=" + Acces);
			sb.append(",Type_d_acces=" + Type_d_acces);
			sb.append(",Account_Manager__Client_Prospect=" + Account_Manager__Client_Prospect);
			sb.append(",Cree_le=" + Cree_le);
			sb.append(",Mois_et_annee_de_creation=" + Mois_et_annee_de_creation);
			sb.append(",Cree_par=" + Cree_par);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Proprietaire=" + Proprietaire);
			sb.append(",Phase_de_l_opportunite=" + Phase_de_l_opportunite);
			sb.append(",Valeur_ordering=" + String.valueOf(Valeur_ordering));
			sb.append(",Statut=" + Statut);
			sb.append(",Staut_Final=" + Staut_Final);
			sb.append(",Tarifs=" + Tarifs);
			sb.append(",Montant_total=" + Montant_total);
			sb.append(",Parent__Produit_existant=" + Parent__Produit_existant);
			sb.append(",Produit_existant=" + Produit_existant);
			sb.append(",Operation=" + Operation);
			sb.append(",Type_d_operation=" + Type_d_operation);
			sb.append(",Prix_unitaire=" + Prix_unitaire);
			sb.append(",Quantite=" + String.valueOf(Quantite));
			sb.append(",Remise=" + Remise);
			sb.append(",Montant_de_la_remise_manuelle=" + Montant_de_la_remise_manuelle);
			sb.append(",Total_final=" + Total_final);
			sb.append(",Modifie_le=" + Modifie_le);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row25Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class after_tFileInputExcel_17Struct
			implements routines.system.IPersistableRow<after_tFileInputExcel_17Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Client_Prospect;

		public String getClient_Prospect() {
			return this.Client_Prospect;
		}

		public String Sujet;

		public String getSujet() {
			return this.Sujet;
		}

		public String Acces;

		public String getAcces() {
			return this.Acces;
		}

		public String Type_d_acces;

		public String getType_d_acces() {
			return this.Type_d_acces;
		}

		public String Account_Manager__Client_Prospect;

		public String getAccount_Manager__Client_Prospect() {
			return this.Account_Manager__Client_Prospect;
		}

		public String Cree_le;

		public String getCree_le() {
			return this.Cree_le;
		}

		public String Mois_et_annee_de_creation;

		public String getMois_et_annee_de_creation() {
			return this.Mois_et_annee_de_creation;
		}

		public String Cree_par;

		public String getCree_par() {
			return this.Cree_par;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public String Proprietaire;

		public String getProprietaire() {
			return this.Proprietaire;
		}

		public String Phase_de_l_opportunite;

		public String getPhase_de_l_opportunite() {
			return this.Phase_de_l_opportunite;
		}

		public Float Valeur_ordering;

		public Float getValeur_ordering() {
			return this.Valeur_ordering;
		}

		public String Statut;

		public String getStatut() {
			return this.Statut;
		}

		public String Staut_Final;

		public String getStaut_Final() {
			return this.Staut_Final;
		}

		public String Tarifs;

		public String getTarifs() {
			return this.Tarifs;
		}

		public String Montant_total;

		public String getMontant_total() {
			return this.Montant_total;
		}

		public String Parent__Produit_existant;

		public String getParent__Produit_existant() {
			return this.Parent__Produit_existant;
		}

		public String Produit_existant;

		public String getProduit_existant() {
			return this.Produit_existant;
		}

		public String Operation;

		public String getOperation() {
			return this.Operation;
		}

		public String Type_d_operation;

		public String getType_d_operation() {
			return this.Type_d_operation;
		}

		public String Prix_unitaire;

		public String getPrix_unitaire() {
			return this.Prix_unitaire;
		}

		public Float Quantite;

		public Float getQuantite() {
			return this.Quantite;
		}

		public String Remise;

		public String getRemise() {
			return this.Remise;
		}

		public String Montant_de_la_remise_manuelle;

		public String getMontant_de_la_remise_manuelle() {
			return this.Montant_de_la_remise_manuelle;
		}

		public String Total_final;

		public String getTotal_final() {
			return this.Total_final;
		}

		public String Modifie_le;

		public String getModifie_le() {
			return this.Modifie_le;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

					this.Sujet = readString(dis);

					this.Acces = readString(dis);

					this.Type_d_acces = readString(dis);

					this.Account_Manager__Client_Prospect = readString(dis);

					this.Cree_le = readString(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Proprietaire = readString(dis);

					this.Phase_de_l_opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Valeur_ordering = null;
					} else {
						this.Valeur_ordering = dis.readFloat();
					}

					this.Statut = readString(dis);

					this.Staut_Final = readString(dis);

					this.Tarifs = readString(dis);

					this.Montant_total = readString(dis);

					this.Parent__Produit_existant = readString(dis);

					this.Produit_existant = readString(dis);

					this.Operation = readString(dis);

					this.Type_d_operation = readString(dis);

					this.Prix_unitaire = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Quantite = null;
					} else {
						this.Quantite = dis.readFloat();
					}

					this.Remise = readString(dis);

					this.Montant_de_la_remise_manuelle = readString(dis);

					this.Total_final = readString(dis);

					this.Modifie_le = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

					this.Sujet = readString(dis);

					this.Acces = readString(dis);

					this.Type_d_acces = readString(dis);

					this.Account_Manager__Client_Prospect = readString(dis);

					this.Cree_le = readString(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Proprietaire = readString(dis);

					this.Phase_de_l_opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Valeur_ordering = null;
					} else {
						this.Valeur_ordering = dis.readFloat();
					}

					this.Statut = readString(dis);

					this.Staut_Final = readString(dis);

					this.Tarifs = readString(dis);

					this.Montant_total = readString(dis);

					this.Parent__Produit_existant = readString(dis);

					this.Produit_existant = readString(dis);

					this.Operation = readString(dis);

					this.Type_d_operation = readString(dis);

					this.Prix_unitaire = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Quantite = null;
					} else {
						this.Quantite = dis.readFloat();
					}

					this.Remise = readString(dis);

					this.Montant_de_la_remise_manuelle = readString(dis);

					this.Total_final = readString(dis);

					this.Modifie_le = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Acces, dos);

				// String

				writeString(this.Type_d_acces, dos);

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

				// String

				writeString(this.Cree_le, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Proprietaire, dos);

				// String

				writeString(this.Phase_de_l_opportunite, dos);

				// Float

				if (this.Valeur_ordering == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Valeur_ordering);
				}

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Tarifs, dos);

				// String

				writeString(this.Montant_total, dos);

				// String

				writeString(this.Parent__Produit_existant, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Operation, dos);

				// String

				writeString(this.Type_d_operation, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// Float

				if (this.Quantite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Quantite);
				}

				// String

				writeString(this.Remise, dos);

				// String

				writeString(this.Montant_de_la_remise_manuelle, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Modifie_le, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Acces, dos);

				// String

				writeString(this.Type_d_acces, dos);

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

				// String

				writeString(this.Cree_le, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Proprietaire, dos);

				// String

				writeString(this.Phase_de_l_opportunite, dos);

				// Float

				if (this.Valeur_ordering == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Valeur_ordering);
				}

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Tarifs, dos);

				// String

				writeString(this.Montant_total, dos);

				// String

				writeString(this.Parent__Produit_existant, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Operation, dos);

				// String

				writeString(this.Type_d_operation, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// Float

				if (this.Quantite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Quantite);
				}

				// String

				writeString(this.Remise, dos);

				// String

				writeString(this.Montant_de_la_remise_manuelle, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Modifie_le, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Client_Prospect=" + Client_Prospect);
			sb.append(",Sujet=" + Sujet);
			sb.append(",Acces=" + Acces);
			sb.append(",Type_d_acces=" + Type_d_acces);
			sb.append(",Account_Manager__Client_Prospect=" + Account_Manager__Client_Prospect);
			sb.append(",Cree_le=" + Cree_le);
			sb.append(",Mois_et_annee_de_creation=" + Mois_et_annee_de_creation);
			sb.append(",Cree_par=" + Cree_par);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Proprietaire=" + Proprietaire);
			sb.append(",Phase_de_l_opportunite=" + Phase_de_l_opportunite);
			sb.append(",Valeur_ordering=" + String.valueOf(Valeur_ordering));
			sb.append(",Statut=" + Statut);
			sb.append(",Staut_Final=" + Staut_Final);
			sb.append(",Tarifs=" + Tarifs);
			sb.append(",Montant_total=" + Montant_total);
			sb.append(",Parent__Produit_existant=" + Parent__Produit_existant);
			sb.append(",Produit_existant=" + Produit_existant);
			sb.append(",Operation=" + Operation);
			sb.append(",Type_d_operation=" + Type_d_operation);
			sb.append(",Prix_unitaire=" + Prix_unitaire);
			sb.append(",Quantite=" + String.valueOf(Quantite));
			sb.append(",Remise=" + Remise);
			sb.append(",Montant_de_la_remise_manuelle=" + Montant_de_la_remise_manuelle);
			sb.append(",Total_final=" + Total_final);
			sb.append(",Modifie_le=" + Modifie_le);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(after_tFileInputExcel_17Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class copyOfcopyOfcopyOfcopyOft5Struct
			implements routines.system.IPersistableRow<copyOfcopyOfcopyOfcopyOft5Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Staut_Final;

		public String getStaut_Final() {
			return this.Staut_Final;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Staut_Final = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Staut_Final = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Staut_Final, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Staut_Final, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Staut_Final=" + Staut_Final);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(copyOfcopyOfcopyOfcopyOft5Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row37Struct implements routines.system.IPersistableRow<row37Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Reference_OSM_mere__Opportunite;

		public String getReference_OSM_mere__Opportunite() {
			return this.Reference_OSM_mere__Opportunite;
		}

		public String Reference_OSM__Opportunite;

		public String getReference_OSM__Opportunite() {
			return this.Reference_OSM__Opportunite;
		}

		public String Client_Prospect__Opportunite;

		public String getClient_Prospect__Opportunite() {
			return this.Client_Prospect__Opportunite;
		}

		public String Offre;

		public String getOffre() {
			return this.Offre;
		}

		public String Nature_Offre;

		public String getNature_Offre() {
			return this.Nature_Offre;
		}

		public String Produit_existant;

		public String getProduit_existant() {
			return this.Produit_existant;
		}

		public String Nature_produit__Produit_existant;

		public String getNature_produit__Produit_existant() {
			return this.Nature_produit__Produit_existant;
		}

		public Float Quantite;

		public Float getQuantite() {
			return this.Quantite;
		}

		public String Prix_unitaire;

		public String getPrix_unitaire() {
			return this.Prix_unitaire;
		}

		public String Total_final;

		public String getTotal_final() {
			return this.Total_final;
		}

		public String Remise______Opportunite;

		public String getRemise______Opportunite() {
			return this.Remise______Opportunite;
		}

		public Float Total_remise_HT;

		public Float getTotal_remise_HT() {
			return this.Total_remise_HT;
		}

		public String Extension__Opportunite;

		public String getExtension__Opportunite() {
			return this.Extension__Opportunite;
		}

		public String Budget_a_valider__Opportunite;

		public String getBudget_a_valider__Opportunite() {
			return this.Budget_a_valider__Opportunite;
		}

		public String Budget_a_valider_Extension__Opportunite;

		public String getBudget_a_valider_Extension__Opportunite() {
			return this.Budget_a_valider_Extension__Opportunite;
		}

		public String Duree_d_engagement__Opportunite;

		public String getDuree_d_engagement__Opportunite() {
			return this.Duree_d_engagement__Opportunite;
		}

		public String Type_d_engagement__Opportunite;

		public String getType_d_engagement__Opportunite() {
			return this.Type_d_engagement__Opportunite;
		}

		public String Demandeur__Opportunite;

		public String getDemandeur__Opportunite() {
			return this.Demandeur__Opportunite;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public String Cree_le__Opportunite;

		public String getCree_le__Opportunite() {
			return this.Cree_le__Opportunite;
		}

		public Integer Mois_de_creation;

		public Integer getMois_de_creation() {
			return this.Mois_de_creation;
		}

		public Integer Annee_de_creation;

		public Integer getAnnee_de_creation() {
			return this.Annee_de_creation;
		}

		public String Mois_et_annee_de_creation;

		public String getMois_et_annee_de_creation() {
			return this.Mois_et_annee_de_creation;
		}

		public String Raison_de_statut_OSM__Opportunite;

		public String getRaison_de_statut_OSM__Opportunite() {
			return this.Raison_de_statut_OSM__Opportunite;
		}

		public String Statut_OSM__Opportunite;

		public String getStatut_OSM__Opportunite() {
			return this.Statut_OSM__Opportunite;
		}

		public String Statut_activation__Commande;

		public String getStatut_activation__Commande() {
			return this.Statut_activation__Commande;
		}

		public String Date_d_activation__Commande;

		public String getDate_d_activation__Commande() {
			return this.Date_d_activation__Commande;
		}

		public Integer Mois_d_activation;

		public Integer getMois_d_activation() {
			return this.Mois_d_activation;
		}

		public String Staut_Final;

		public String getStaut_Final() {
			return this.Staut_Final;
		}

		public String Gouvernorat;

		public String getGouvernorat() {
			return this.Gouvernorat;
		}

		public String Phase_de_l_opportunite__Opportunite;

		public String getPhase_de_l_opportunite__Opportunite() {
			return this.Phase_de_l_opportunite__Opportunite;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Reference_OSM_mere__Opportunite = readString(dis);

					this.Reference_OSM__Opportunite = readString(dis);

					this.Client_Prospect__Opportunite = readString(dis);

					this.Offre = readString(dis);

					this.Nature_Offre = readString(dis);

					this.Produit_existant = readString(dis);

					this.Nature_produit__Produit_existant = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Quantite = null;
					} else {
						this.Quantite = dis.readFloat();
					}

					this.Prix_unitaire = readString(dis);

					this.Total_final = readString(dis);

					this.Remise______Opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Total_remise_HT = null;
					} else {
						this.Total_remise_HT = dis.readFloat();
					}

					this.Extension__Opportunite = readString(dis);

					this.Budget_a_valider__Opportunite = readString(dis);

					this.Budget_a_valider_Extension__Opportunite = readString(dis);

					this.Duree_d_engagement__Opportunite = readString(dis);

					this.Type_d_engagement__Opportunite = readString(dis);

					this.Demandeur__Opportunite = readString(dis);

					this.Equipe = readString(dis);

					this.Cree_le__Opportunite = readString(dis);

					this.Mois_de_creation = readInteger(dis);

					this.Annee_de_creation = readInteger(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Raison_de_statut_OSM__Opportunite = readString(dis);

					this.Statut_OSM__Opportunite = readString(dis);

					this.Statut_activation__Commande = readString(dis);

					this.Date_d_activation__Commande = readString(dis);

					this.Mois_d_activation = readInteger(dis);

					this.Staut_Final = readString(dis);

					this.Gouvernorat = readString(dis);

					this.Phase_de_l_opportunite__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Reference_OSM_mere__Opportunite = readString(dis);

					this.Reference_OSM__Opportunite = readString(dis);

					this.Client_Prospect__Opportunite = readString(dis);

					this.Offre = readString(dis);

					this.Nature_Offre = readString(dis);

					this.Produit_existant = readString(dis);

					this.Nature_produit__Produit_existant = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Quantite = null;
					} else {
						this.Quantite = dis.readFloat();
					}

					this.Prix_unitaire = readString(dis);

					this.Total_final = readString(dis);

					this.Remise______Opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Total_remise_HT = null;
					} else {
						this.Total_remise_HT = dis.readFloat();
					}

					this.Extension__Opportunite = readString(dis);

					this.Budget_a_valider__Opportunite = readString(dis);

					this.Budget_a_valider_Extension__Opportunite = readString(dis);

					this.Duree_d_engagement__Opportunite = readString(dis);

					this.Type_d_engagement__Opportunite = readString(dis);

					this.Demandeur__Opportunite = readString(dis);

					this.Equipe = readString(dis);

					this.Cree_le__Opportunite = readString(dis);

					this.Mois_de_creation = readInteger(dis);

					this.Annee_de_creation = readInteger(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Raison_de_statut_OSM__Opportunite = readString(dis);

					this.Statut_OSM__Opportunite = readString(dis);

					this.Statut_activation__Commande = readString(dis);

					this.Date_d_activation__Commande = readString(dis);

					this.Mois_d_activation = readInteger(dis);

					this.Staut_Final = readString(dis);

					this.Gouvernorat = readString(dis);

					this.Phase_de_l_opportunite__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Reference_OSM_mere__Opportunite, dos);

				// String

				writeString(this.Reference_OSM__Opportunite, dos);

				// String

				writeString(this.Client_Prospect__Opportunite, dos);

				// String

				writeString(this.Offre, dos);

				// String

				writeString(this.Nature_Offre, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Nature_produit__Produit_existant, dos);

				// Float

				if (this.Quantite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Quantite);
				}

				// String

				writeString(this.Prix_unitaire, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Remise______Opportunite, dos);

				// Float

				if (this.Total_remise_HT == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Total_remise_HT);
				}

				// String

				writeString(this.Extension__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider_Extension__Opportunite, dos);

				// String

				writeString(this.Duree_d_engagement__Opportunite, dos);

				// String

				writeString(this.Type_d_engagement__Opportunite, dos);

				// String

				writeString(this.Demandeur__Opportunite, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Cree_le__Opportunite, dos);

				// Integer

				writeInteger(this.Mois_de_creation, dos);

				// Integer

				writeInteger(this.Annee_de_creation, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Raison_de_statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_activation__Commande, dos);

				// String

				writeString(this.Date_d_activation__Commande, dos);

				// Integer

				writeInteger(this.Mois_d_activation, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Gouvernorat, dos);

				// String

				writeString(this.Phase_de_l_opportunite__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Reference_OSM_mere__Opportunite, dos);

				// String

				writeString(this.Reference_OSM__Opportunite, dos);

				// String

				writeString(this.Client_Prospect__Opportunite, dos);

				// String

				writeString(this.Offre, dos);

				// String

				writeString(this.Nature_Offre, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Nature_produit__Produit_existant, dos);

				// Float

				if (this.Quantite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Quantite);
				}

				// String

				writeString(this.Prix_unitaire, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Remise______Opportunite, dos);

				// Float

				if (this.Total_remise_HT == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Total_remise_HT);
				}

				// String

				writeString(this.Extension__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider_Extension__Opportunite, dos);

				// String

				writeString(this.Duree_d_engagement__Opportunite, dos);

				// String

				writeString(this.Type_d_engagement__Opportunite, dos);

				// String

				writeString(this.Demandeur__Opportunite, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Cree_le__Opportunite, dos);

				// Integer

				writeInteger(this.Mois_de_creation, dos);

				// Integer

				writeInteger(this.Annee_de_creation, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Raison_de_statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_activation__Commande, dos);

				// String

				writeString(this.Date_d_activation__Commande, dos);

				// Integer

				writeInteger(this.Mois_d_activation, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Gouvernorat, dos);

				// String

				writeString(this.Phase_de_l_opportunite__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Reference_OSM_mere__Opportunite=" + Reference_OSM_mere__Opportunite);
			sb.append(",Reference_OSM__Opportunite=" + Reference_OSM__Opportunite);
			sb.append(",Client_Prospect__Opportunite=" + Client_Prospect__Opportunite);
			sb.append(",Offre=" + Offre);
			sb.append(",Nature_Offre=" + Nature_Offre);
			sb.append(",Produit_existant=" + Produit_existant);
			sb.append(",Nature_produit__Produit_existant=" + Nature_produit__Produit_existant);
			sb.append(",Quantite=" + String.valueOf(Quantite));
			sb.append(",Prix_unitaire=" + Prix_unitaire);
			sb.append(",Total_final=" + Total_final);
			sb.append(",Remise______Opportunite=" + Remise______Opportunite);
			sb.append(",Total_remise_HT=" + String.valueOf(Total_remise_HT));
			sb.append(",Extension__Opportunite=" + Extension__Opportunite);
			sb.append(",Budget_a_valider__Opportunite=" + Budget_a_valider__Opportunite);
			sb.append(",Budget_a_valider_Extension__Opportunite=" + Budget_a_valider_Extension__Opportunite);
			sb.append(",Duree_d_engagement__Opportunite=" + Duree_d_engagement__Opportunite);
			sb.append(",Type_d_engagement__Opportunite=" + Type_d_engagement__Opportunite);
			sb.append(",Demandeur__Opportunite=" + Demandeur__Opportunite);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Cree_le__Opportunite=" + Cree_le__Opportunite);
			sb.append(",Mois_de_creation=" + String.valueOf(Mois_de_creation));
			sb.append(",Annee_de_creation=" + String.valueOf(Annee_de_creation));
			sb.append(",Mois_et_annee_de_creation=" + Mois_et_annee_de_creation);
			sb.append(",Raison_de_statut_OSM__Opportunite=" + Raison_de_statut_OSM__Opportunite);
			sb.append(",Statut_OSM__Opportunite=" + Statut_OSM__Opportunite);
			sb.append(",Statut_activation__Commande=" + Statut_activation__Commande);
			sb.append(",Date_d_activation__Commande=" + Date_d_activation__Commande);
			sb.append(",Mois_d_activation=" + String.valueOf(Mois_d_activation));
			sb.append(",Staut_Final=" + Staut_Final);
			sb.append(",Gouvernorat=" + Gouvernorat);
			sb.append(",Phase_de_l_opportunite__Opportunite=" + Phase_de_l_opportunite__Opportunite);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row37Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class copyOfcopyOfcopyOfcopyOft9Struct
			implements routines.system.IPersistableRow<copyOfcopyOfcopyOfcopyOft9Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Statut;

		public String getStatut() {
			return this.Statut;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Statut = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Statut = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Statut, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Statut, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Statut=" + Statut);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(copyOfcopyOfcopyOfcopyOft9Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row51Struct implements routines.system.IPersistableRow<row51Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Sujet;

		public String getSujet() {
			return this.Sujet;
		}

		public java.util.Date Cree_le;

		public java.util.Date getCree_le() {
			return this.Cree_le;
		}

		public String Concernant;

		public String getConcernant() {
			return this.Concernant;
		}

		public String Cree_par;

		public String getCree_par() {
			return this.Cree_par;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public String Emplacement;

		public String getEmplacement() {
			return this.Emplacement;
		}

		public java.util.Date Heure_de_debut;

		public java.util.Date getHeure_de_debut() {
			return this.Heure_de_debut;
		}

		public String Heure_de_fin;

		public String getHeure_de_fin() {
			return this.Heure_de_fin;
		}

		public String Statut;

		public String getStatut() {
			return this.Statut;
		}

		public String Raison_sociale__Concernant;

		public String getRaison_sociale__Concernant() {
			return this.Raison_sociale__Concernant;
		}

		public String Delegation__Concernant;

		public String getDelegation__Concernant() {
			return this.Delegation__Concernant;
		}

		public String Gouvernorat__Concernant;

		public String getGouvernorat__Concernant() {
			return this.Gouvernorat__Concernant;
		}

		public String Jour_de_la_semaine;

		public String getJour_de_la_semaine() {
			return this.Jour_de_la_semaine;
		}

		public String Description;

		public String getDescription() {
			return this.Description;
		}

		public String Categorie;

		public String getCategorie() {
			return this.Categorie;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private java.util.Date readDate(ObjectInputStream dis) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(dis.readLong());
			}
			return dateReturn;
		}

		private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(unmarshaller.readLong());
			}
			return dateReturn;
		}

		private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException {
			if (date1 == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeLong(date1.getTime());
			}
		}

		private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (date1 == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeLong(date1.getTime());
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Sujet = readString(dis);

					this.Cree_le = readDate(dis);

					this.Concernant = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Emplacement = readString(dis);

					this.Heure_de_debut = readDate(dis);

					this.Heure_de_fin = readString(dis);

					this.Statut = readString(dis);

					this.Raison_sociale__Concernant = readString(dis);

					this.Delegation__Concernant = readString(dis);

					this.Gouvernorat__Concernant = readString(dis);

					this.Jour_de_la_semaine = readString(dis);

					this.Description = readString(dis);

					this.Categorie = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Sujet = readString(dis);

					this.Cree_le = readDate(dis);

					this.Concernant = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Emplacement = readString(dis);

					this.Heure_de_debut = readDate(dis);

					this.Heure_de_fin = readString(dis);

					this.Statut = readString(dis);

					this.Raison_sociale__Concernant = readString(dis);

					this.Delegation__Concernant = readString(dis);

					this.Gouvernorat__Concernant = readString(dis);

					this.Jour_de_la_semaine = readString(dis);

					this.Description = readString(dis);

					this.Categorie = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Sujet, dos);

				// java.util.Date

				writeDate(this.Cree_le, dos);

				// String

				writeString(this.Concernant, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Emplacement, dos);

				// java.util.Date

				writeDate(this.Heure_de_debut, dos);

				// String

				writeString(this.Heure_de_fin, dos);

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Raison_sociale__Concernant, dos);

				// String

				writeString(this.Delegation__Concernant, dos);

				// String

				writeString(this.Gouvernorat__Concernant, dos);

				// String

				writeString(this.Jour_de_la_semaine, dos);

				// String

				writeString(this.Description, dos);

				// String

				writeString(this.Categorie, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Sujet, dos);

				// java.util.Date

				writeDate(this.Cree_le, dos);

				// String

				writeString(this.Concernant, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Emplacement, dos);

				// java.util.Date

				writeDate(this.Heure_de_debut, dos);

				// String

				writeString(this.Heure_de_fin, dos);

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Raison_sociale__Concernant, dos);

				// String

				writeString(this.Delegation__Concernant, dos);

				// String

				writeString(this.Gouvernorat__Concernant, dos);

				// String

				writeString(this.Jour_de_la_semaine, dos);

				// String

				writeString(this.Description, dos);

				// String

				writeString(this.Categorie, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Sujet=" + Sujet);
			sb.append(",Cree_le=" + String.valueOf(Cree_le));
			sb.append(",Concernant=" + Concernant);
			sb.append(",Cree_par=" + Cree_par);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Emplacement=" + Emplacement);
			sb.append(",Heure_de_debut=" + String.valueOf(Heure_de_debut));
			sb.append(",Heure_de_fin=" + Heure_de_fin);
			sb.append(",Statut=" + Statut);
			sb.append(",Raison_sociale__Concernant=" + Raison_sociale__Concernant);
			sb.append(",Delegation__Concernant=" + Delegation__Concernant);
			sb.append(",Gouvernorat__Concernant=" + Gouvernorat__Concernant);
			sb.append(",Jour_de_la_semaine=" + Jour_de_la_semaine);
			sb.append(",Description=" + Description);
			sb.append(",Categorie=" + Categorie);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row51Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tFileInputExcel_17Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tFileInputExcel_17_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				tDBInput_3Process(globalMap);

				row25Struct row25 = new row25Struct();
				copyOfcopyOfcopyOft18Struct copyOfcopyOfcopyOft18 = new copyOfcopyOfcopyOft18Struct();

				row37Struct row37 = new row37Struct();
				copyOfcopyOfcopyOfcopyOft5Struct copyOfcopyOfcopyOfcopyOft5 = new copyOfcopyOfcopyOfcopyOft5Struct();

				row51Struct row51 = new row51Struct();
				copyOfcopyOfcopyOfcopyOft9Struct copyOfcopyOfcopyOfcopyOft9 = new copyOfcopyOfcopyOfcopyOft9Struct();

				row11Struct row11 = new row11Struct();
				lStruct l = new lStruct();
				row391Struct row391 = new row391Struct();

				/**
				 * [tDBOutput_8 begin ] start
				 */

				ok_Hash.put("tDBOutput_8", false);
				start_Hash.put("tDBOutput_8", System.currentTimeMillis());

				currentComponent = "tDBOutput_8";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row391");
				}

				int tos_count_tDBOutput_8 = 0;

				int nb_line_tDBOutput_8 = 0;
				int nb_line_update_tDBOutput_8 = 0;
				int nb_line_inserted_tDBOutput_8 = 0;
				int nb_line_deleted_tDBOutput_8 = 0;
				int nb_line_rejected_tDBOutput_8 = 0;

				int deletedCount_tDBOutput_8 = 0;
				int updatedCount_tDBOutput_8 = 0;
				int insertedCount_tDBOutput_8 = 0;
				int rowsToCommitCount_tDBOutput_8 = 0;
				int rejectedCount_tDBOutput_8 = 0;
				String dbschema_tDBOutput_8 = null;
				String tableName_tDBOutput_8 = null;
				boolean whetherReject_tDBOutput_8 = false;

				java.util.Calendar calendar_tDBOutput_8 = java.util.Calendar.getInstance();
				long year1_tDBOutput_8 = TalendDate.parseDate("yyyy-MM-dd", "0001-01-01").getTime();
				long year2_tDBOutput_8 = TalendDate.parseDate("yyyy-MM-dd", "1753-01-01").getTime();
				long year10000_tDBOutput_8 = TalendDate.parseDate("yyyy-MM-dd HH:mm:ss", "9999-12-31 24:00:00")
						.getTime();
				long date_tDBOutput_8;

				java.util.Calendar calendar_datetimeoffset_tDBOutput_8 = java.util.Calendar
						.getInstance(java.util.TimeZone.getTimeZone("UTC"));

				java.sql.Connection conn_tDBOutput_8 = null;
				String dbUser_tDBOutput_8 = null;
				dbschema_tDBOutput_8 = "dbo";
				String driverClass_tDBOutput_8 = "net.sourceforge.jtds.jdbc.Driver";

				java.lang.Class.forName(driverClass_tDBOutput_8);
				String port_tDBOutput_8 = "1433";
				String dbname_tDBOutput_8 = "orange_DW__";
				String url_tDBOutput_8 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBOutput_8)) {
					url_tDBOutput_8 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBOutput_8)) {
					url_tDBOutput_8 += "//" + "orange_DW__";

				}
				url_tDBOutput_8 += ";appName=" + projectName + ";" + "";
				dbUser_tDBOutput_8 = "sa";

				final String decryptedPassword_tDBOutput_8 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:WwA8gpv8c8jcXbo5WD6tN0Segzr1R2sbJcXKQMBgiGg5Yv5Cd3U=");

				String dbPwd_tDBOutput_8 = decryptedPassword_tDBOutput_8;
				conn_tDBOutput_8 = java.sql.DriverManager.getConnection(url_tDBOutput_8, dbUser_tDBOutput_8,
						dbPwd_tDBOutput_8);

				resourceMap.put("conn_tDBOutput_8", conn_tDBOutput_8);

				conn_tDBOutput_8.setAutoCommit(false);
				int commitEvery_tDBOutput_8 = 10000;
				int commitCounter_tDBOutput_8 = 0;

				int batchSize_tDBOutput_8 = 10000;
				int batchSizeCounter_tDBOutput_8 = 0;

				if (dbschema_tDBOutput_8 == null || dbschema_tDBOutput_8.trim().length() == 0) {
					tableName_tDBOutput_8 = "Dim_statu_final";
				} else {
					tableName_tDBOutput_8 = dbschema_tDBOutput_8 + "].[" + "Dim_statu_final";
				}
				int count_tDBOutput_8 = 0;

				String insert_tDBOutput_8 = "INSERT INTO [" + tableName_tDBOutput_8 + "] ([Staut_Final]) VALUES (?)";
				java.sql.PreparedStatement pstmt_tDBOutput_8 = conn_tDBOutput_8.prepareStatement(insert_tDBOutput_8);
				resourceMap.put("pstmt_tDBOutput_8", pstmt_tDBOutput_8);

				/**
				 * [tDBOutput_8 begin ] stop
				 */

				/**
				 * [tUniqRow_5 begin ] start
				 */

				ok_Hash.put("tUniqRow_5", false);
				start_Hash.put("tUniqRow_5", System.currentTimeMillis());

				currentComponent = "tUniqRow_5";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "l");
				}

				int tos_count_tUniqRow_5 = 0;

				class KeyStruct_tUniqRow_5 {

					private static final int DEFAULT_HASHCODE = 1;
					private static final int PRIME = 31;
					private int hashCode = DEFAULT_HASHCODE;
					public boolean hashCodeDirty = true;

					String Staut_Final;

					@Override
					public int hashCode() {
						if (this.hashCodeDirty) {
							final int prime = PRIME;
							int result = DEFAULT_HASHCODE;

							result = prime * result + ((this.Staut_Final == null) ? 0 : this.Staut_Final.hashCode());

							this.hashCode = result;
							this.hashCodeDirty = false;
						}
						return this.hashCode;
					}

					@Override
					public boolean equals(Object obj) {
						if (this == obj)
							return true;
						if (obj == null)
							return false;
						if (getClass() != obj.getClass())
							return false;
						final KeyStruct_tUniqRow_5 other = (KeyStruct_tUniqRow_5) obj;

						if (this.Staut_Final == null) {
							if (other.Staut_Final != null)
								return false;

						} else if (!this.Staut_Final.equals(other.Staut_Final))

							return false;

						return true;
					}

				}

				int nb_uniques_tUniqRow_5 = 0;
				int nb_duplicates_tUniqRow_5 = 0;
				KeyStruct_tUniqRow_5 finder_tUniqRow_5 = new KeyStruct_tUniqRow_5();
				java.util.Set<KeyStruct_tUniqRow_5> keystUniqRow_5 = new java.util.HashSet<KeyStruct_tUniqRow_5>();

				/**
				 * [tUniqRow_5 begin ] stop
				 */

				/**
				 * [tMap_8 begin ] start
				 */

				ok_Hash.put("tMap_8", false);
				start_Hash.put("tMap_8", System.currentTimeMillis());

				currentComponent = "tMap_8";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row11");
				}

				int tos_count_tMap_8 = 0;

// ###############################
// # Lookup's keys initialization

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row12Struct> tHash_Lookup_row12 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row12Struct>) ((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row12Struct>) globalMap
						.get("tHash_Lookup_row12"));

				row12Struct row12HashKey = new row12Struct();
				row12Struct row12Default = new row12Struct();
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_8__Struct {
				}
				Var__tMap_8__Struct Var__tMap_8 = new Var__tMap_8__Struct();
// ###############################

// ###############################
// # Outputs initialization
				lStruct l_tmp = new lStruct();
// ###############################

				/**
				 * [tMap_8 begin ] stop
				 */

				/**
				 * [tUnite_5 begin ] start
				 */

				ok_Hash.put("tUnite_5", false);
				start_Hash.put("tUnite_5", System.currentTimeMillis());

				currentComponent = "tUnite_5";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "copyOfcopyOfcopyOfcopyOft9",
							"copyOfcopyOfcopyOft18", "copyOfcopyOfcopyOfcopyOft5");
				}

				int tos_count_tUnite_5 = 0;

				int nb_line_tUnite_5 = 0;

				/**
				 * [tUnite_5 begin ] stop
				 */

				/**
				 * [tMap_17 begin ] start
				 */

				ok_Hash.put("tMap_17", false);
				start_Hash.put("tMap_17", System.currentTimeMillis());

				currentComponent = "tMap_17";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row25");
				}

				int tos_count_tMap_17 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_17__Struct {
				}
				Var__tMap_17__Struct Var__tMap_17 = new Var__tMap_17__Struct();
// ###############################

// ###############################
// # Outputs initialization
				copyOfcopyOfcopyOft18Struct copyOfcopyOfcopyOft18_tmp = new copyOfcopyOfcopyOft18Struct();
// ###############################

				/**
				 * [tMap_17 begin ] stop
				 */

				/**
				 * [tFileInputExcel_17 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_17", false);
				start_Hash.put("tFileInputExcel_17", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_17";

				int tos_count_tFileInputExcel_17 = 0;

				final String decryptedPassword_tFileInputExcel_17 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:z4UPx95YFe9L7vxuR/uc4dttinrwVaoYwvPAww==");
				String password_tFileInputExcel_17 = decryptedPassword_tFileInputExcel_17;
				if (password_tFileInputExcel_17.isEmpty()) {
					password_tFileInputExcel_17 = null;
				}
				class RegexUtil_tFileInputExcel_17 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_17 regexUtil_tFileInputExcel_17 = new RegexUtil_tFileInputExcel_17();

				Object source_tFileInputExcel_17 = "C:/Users/DELL/Downloads/Copie de Rapport Pipe et realisations DME Data et VoIP (2).xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_17 = null;

				if (source_tFileInputExcel_17 instanceof String) {
					workbook_tFileInputExcel_17 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_17), password_tFileInputExcel_17,
									true);
				} else if (source_tFileInputExcel_17 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_17 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_17, password_tFileInputExcel_17);
				} else {
					workbook_tFileInputExcel_17 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_17 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_17.addAll(
							regexUtil_tFileInputExcel_17.getSheets(workbook_tFileInputExcel_17, "Source", false));
					if (sheetList_tFileInputExcel_17.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_17 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_17 : sheetList_tFileInputExcel_17) {
						if (sheet_FilterNull_tFileInputExcel_17 != null
								&& sheetList_FilterNull_tFileInputExcel_17.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_17.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_17.add(sheet_FilterNull_tFileInputExcel_17);
						}
					}
					sheetList_tFileInputExcel_17 = sheetList_FilterNull_tFileInputExcel_17;
					if (sheetList_tFileInputExcel_17.size() > 0) {
						int nb_line_tFileInputExcel_17 = 0;

						int begin_line_tFileInputExcel_17 = 1;

						int footer_input_tFileInputExcel_17 = 0;

						int end_line_tFileInputExcel_17 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_17 : sheetList_tFileInputExcel_17) {
							end_line_tFileInputExcel_17 += (sheet_tFileInputExcel_17.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_17 -= footer_input_tFileInputExcel_17;
						int limit_tFileInputExcel_17 = -1;
						int start_column_tFileInputExcel_17 = 1 - 1;
						int end_column_tFileInputExcel_17 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_17 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_17 = sheetList_tFileInputExcel_17
								.get(0);
						int rowCount_tFileInputExcel_17 = 0;
						int sheetIndex_tFileInputExcel_17 = 0;
						int currentRows_tFileInputExcel_17 = (sheetList_tFileInputExcel_17.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_17 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_17 = df_tFileInputExcel_17.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_17 = begin_line_tFileInputExcel_17; i_tFileInputExcel_17 < end_line_tFileInputExcel_17; i_tFileInputExcel_17++) {

							int emptyColumnCount_tFileInputExcel_17 = 0;

							if (limit_tFileInputExcel_17 != -1
									&& nb_line_tFileInputExcel_17 >= limit_tFileInputExcel_17) {
								break;
							}

							while (i_tFileInputExcel_17 >= rowCount_tFileInputExcel_17
									+ currentRows_tFileInputExcel_17) {
								rowCount_tFileInputExcel_17 += currentRows_tFileInputExcel_17;
								sheet_tFileInputExcel_17 = sheetList_tFileInputExcel_17
										.get(++sheetIndex_tFileInputExcel_17);
								currentRows_tFileInputExcel_17 = (sheet_tFileInputExcel_17.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_17_CURRENT_SHEET", sheet_tFileInputExcel_17.getSheetName());
							if (rowCount_tFileInputExcel_17 <= i_tFileInputExcel_17) {
								row_tFileInputExcel_17 = sheet_tFileInputExcel_17
										.getRow(i_tFileInputExcel_17 - rowCount_tFileInputExcel_17);
							}
							row25 = null;
							int tempRowLength_tFileInputExcel_17 = 26;

							int columnIndex_tFileInputExcel_17 = 0;

							String[] temp_row_tFileInputExcel_17 = new String[tempRowLength_tFileInputExcel_17];
							int excel_end_column_tFileInputExcel_17;
							if (row_tFileInputExcel_17 == null) {
								excel_end_column_tFileInputExcel_17 = 0;
							} else {
								excel_end_column_tFileInputExcel_17 = row_tFileInputExcel_17.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_17;
							if (end_column_tFileInputExcel_17 == -1) {
								actual_end_column_tFileInputExcel_17 = excel_end_column_tFileInputExcel_17;
							} else {
								actual_end_column_tFileInputExcel_17 = end_column_tFileInputExcel_17 > excel_end_column_tFileInputExcel_17
										? excel_end_column_tFileInputExcel_17
										: end_column_tFileInputExcel_17;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_17 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_17; i++) {
								if (i + start_column_tFileInputExcel_17 < actual_end_column_tFileInputExcel_17) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_17 = row_tFileInputExcel_17
											.getCell(i + start_column_tFileInputExcel_17);
									if (cell_tFileInputExcel_17 != null) {
										switch (cell_tFileInputExcel_17.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_17[i] = cell_tFileInputExcel_17
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_17)) {
												temp_row_tFileInputExcel_17[i] = cell_tFileInputExcel_17
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_17[i] = df_tFileInputExcel_17
														.format(cell_tFileInputExcel_17.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_17[i] = String
													.valueOf(cell_tFileInputExcel_17.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_17.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_17[i] = cell_tFileInputExcel_17
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_17)) {
													temp_row_tFileInputExcel_17[i] = cell_tFileInputExcel_17
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_17 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_17.getNumericCellValue());
													temp_row_tFileInputExcel_17[i] = ne_tFileInputExcel_17
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_17[i] = String
														.valueOf(cell_tFileInputExcel_17.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_17[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_17[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_17[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_17[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_17 = false;
							row25 = new row25Struct();
							int curColNum_tFileInputExcel_17 = -1;
							String curColName_tFileInputExcel_17 = "";
							try {
								columnIndex_tFileInputExcel_17 = 0;

								if (temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17].length() > 0) {
									curColNum_tFileInputExcel_17 = columnIndex_tFileInputExcel_17
											+ start_column_tFileInputExcel_17 + 1;
									curColName_tFileInputExcel_17 = "Client_Prospect";

									row25.Client_Prospect = temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17];
								} else {
									row25.Client_Prospect = null;
									emptyColumnCount_tFileInputExcel_17++;
								}
								columnIndex_tFileInputExcel_17 = 1;

								if (temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17].length() > 0) {
									curColNum_tFileInputExcel_17 = columnIndex_tFileInputExcel_17
											+ start_column_tFileInputExcel_17 + 1;
									curColName_tFileInputExcel_17 = "Sujet";

									row25.Sujet = temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17];
								} else {
									row25.Sujet = null;
									emptyColumnCount_tFileInputExcel_17++;
								}
								columnIndex_tFileInputExcel_17 = 2;

								if (temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17].length() > 0) {
									curColNum_tFileInputExcel_17 = columnIndex_tFileInputExcel_17
											+ start_column_tFileInputExcel_17 + 1;
									curColName_tFileInputExcel_17 = "Acces";

									row25.Acces = temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17];
								} else {
									row25.Acces = null;
									emptyColumnCount_tFileInputExcel_17++;
								}
								columnIndex_tFileInputExcel_17 = 3;

								if (temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17].length() > 0) {
									curColNum_tFileInputExcel_17 = columnIndex_tFileInputExcel_17
											+ start_column_tFileInputExcel_17 + 1;
									curColName_tFileInputExcel_17 = "Type_d_acces";

									row25.Type_d_acces = temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17];
								} else {
									row25.Type_d_acces = null;
									emptyColumnCount_tFileInputExcel_17++;
								}
								columnIndex_tFileInputExcel_17 = 4;

								if (temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17].length() > 0) {
									curColNum_tFileInputExcel_17 = columnIndex_tFileInputExcel_17
											+ start_column_tFileInputExcel_17 + 1;
									curColName_tFileInputExcel_17 = "Account_Manager__Client_Prospect";

									row25.Account_Manager__Client_Prospect = temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17];
								} else {
									row25.Account_Manager__Client_Prospect = null;
									emptyColumnCount_tFileInputExcel_17++;
								}
								columnIndex_tFileInputExcel_17 = 5;

								if (temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17].length() > 0) {
									curColNum_tFileInputExcel_17 = columnIndex_tFileInputExcel_17
											+ start_column_tFileInputExcel_17 + 1;
									curColName_tFileInputExcel_17 = "Cree_le";

									row25.Cree_le = temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17];
								} else {
									row25.Cree_le = null;
									emptyColumnCount_tFileInputExcel_17++;
								}
								columnIndex_tFileInputExcel_17 = 6;

								if (temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17].length() > 0) {
									curColNum_tFileInputExcel_17 = columnIndex_tFileInputExcel_17
											+ start_column_tFileInputExcel_17 + 1;
									curColName_tFileInputExcel_17 = "Mois_et_annee_de_creation";

									row25.Mois_et_annee_de_creation = temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17];
								} else {
									row25.Mois_et_annee_de_creation = null;
									emptyColumnCount_tFileInputExcel_17++;
								}
								columnIndex_tFileInputExcel_17 = 7;

								if (temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17].length() > 0) {
									curColNum_tFileInputExcel_17 = columnIndex_tFileInputExcel_17
											+ start_column_tFileInputExcel_17 + 1;
									curColName_tFileInputExcel_17 = "Cree_par";

									row25.Cree_par = temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17];
								} else {
									row25.Cree_par = null;
									emptyColumnCount_tFileInputExcel_17++;
								}
								columnIndex_tFileInputExcel_17 = 8;

								if (temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17].length() > 0) {
									curColNum_tFileInputExcel_17 = columnIndex_tFileInputExcel_17
											+ start_column_tFileInputExcel_17 + 1;
									curColName_tFileInputExcel_17 = "Equipe";

									row25.Equipe = temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17];
								} else {
									row25.Equipe = null;
									emptyColumnCount_tFileInputExcel_17++;
								}
								columnIndex_tFileInputExcel_17 = 9;

								if (temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17].length() > 0) {
									curColNum_tFileInputExcel_17 = columnIndex_tFileInputExcel_17
											+ start_column_tFileInputExcel_17 + 1;
									curColName_tFileInputExcel_17 = "Proprietaire";

									row25.Proprietaire = temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17];
								} else {
									row25.Proprietaire = null;
									emptyColumnCount_tFileInputExcel_17++;
								}
								columnIndex_tFileInputExcel_17 = 10;

								if (temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17].length() > 0) {
									curColNum_tFileInputExcel_17 = columnIndex_tFileInputExcel_17
											+ start_column_tFileInputExcel_17 + 1;
									curColName_tFileInputExcel_17 = "Phase_de_l_opportunite";

									row25.Phase_de_l_opportunite = temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17];
								} else {
									row25.Phase_de_l_opportunite = null;
									emptyColumnCount_tFileInputExcel_17++;
								}
								columnIndex_tFileInputExcel_17 = 11;

								if (temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17].length() > 0) {
									curColNum_tFileInputExcel_17 = columnIndex_tFileInputExcel_17
											+ start_column_tFileInputExcel_17 + 1;
									curColName_tFileInputExcel_17 = "Valeur_ordering";

									row25.Valeur_ordering = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17], null,
											'.' == decimalChar_tFileInputExcel_17 ? null
													: decimalChar_tFileInputExcel_17));
								} else {
									row25.Valeur_ordering = null;
									emptyColumnCount_tFileInputExcel_17++;
								}
								columnIndex_tFileInputExcel_17 = 12;

								if (temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17].length() > 0) {
									curColNum_tFileInputExcel_17 = columnIndex_tFileInputExcel_17
											+ start_column_tFileInputExcel_17 + 1;
									curColName_tFileInputExcel_17 = "Statut";

									row25.Statut = temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17];
								} else {
									row25.Statut = null;
									emptyColumnCount_tFileInputExcel_17++;
								}
								columnIndex_tFileInputExcel_17 = 13;

								if (temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17].length() > 0) {
									curColNum_tFileInputExcel_17 = columnIndex_tFileInputExcel_17
											+ start_column_tFileInputExcel_17 + 1;
									curColName_tFileInputExcel_17 = "Staut_Final";

									row25.Staut_Final = temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17];
								} else {
									row25.Staut_Final = null;
									emptyColumnCount_tFileInputExcel_17++;
								}
								columnIndex_tFileInputExcel_17 = 14;

								if (temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17].length() > 0) {
									curColNum_tFileInputExcel_17 = columnIndex_tFileInputExcel_17
											+ start_column_tFileInputExcel_17 + 1;
									curColName_tFileInputExcel_17 = "Tarifs";

									row25.Tarifs = temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17];
								} else {
									row25.Tarifs = null;
									emptyColumnCount_tFileInputExcel_17++;
								}
								columnIndex_tFileInputExcel_17 = 15;

								if (temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17].length() > 0) {
									curColNum_tFileInputExcel_17 = columnIndex_tFileInputExcel_17
											+ start_column_tFileInputExcel_17 + 1;
									curColName_tFileInputExcel_17 = "Montant_total";

									row25.Montant_total = temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17];
								} else {
									row25.Montant_total = null;
									emptyColumnCount_tFileInputExcel_17++;
								}
								columnIndex_tFileInputExcel_17 = 16;

								if (temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17].length() > 0) {
									curColNum_tFileInputExcel_17 = columnIndex_tFileInputExcel_17
											+ start_column_tFileInputExcel_17 + 1;
									curColName_tFileInputExcel_17 = "Parent__Produit_existant";

									row25.Parent__Produit_existant = temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17];
								} else {
									row25.Parent__Produit_existant = null;
									emptyColumnCount_tFileInputExcel_17++;
								}
								columnIndex_tFileInputExcel_17 = 17;

								if (temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17].length() > 0) {
									curColNum_tFileInputExcel_17 = columnIndex_tFileInputExcel_17
											+ start_column_tFileInputExcel_17 + 1;
									curColName_tFileInputExcel_17 = "Produit_existant";

									row25.Produit_existant = temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17];
								} else {
									row25.Produit_existant = null;
									emptyColumnCount_tFileInputExcel_17++;
								}
								columnIndex_tFileInputExcel_17 = 18;

								if (temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17].length() > 0) {
									curColNum_tFileInputExcel_17 = columnIndex_tFileInputExcel_17
											+ start_column_tFileInputExcel_17 + 1;
									curColName_tFileInputExcel_17 = "Operation";

									row25.Operation = temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17];
								} else {
									row25.Operation = null;
									emptyColumnCount_tFileInputExcel_17++;
								}
								columnIndex_tFileInputExcel_17 = 19;

								if (temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17].length() > 0) {
									curColNum_tFileInputExcel_17 = columnIndex_tFileInputExcel_17
											+ start_column_tFileInputExcel_17 + 1;
									curColName_tFileInputExcel_17 = "Type_d_operation";

									row25.Type_d_operation = temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17];
								} else {
									row25.Type_d_operation = null;
									emptyColumnCount_tFileInputExcel_17++;
								}
								columnIndex_tFileInputExcel_17 = 20;

								if (temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17].length() > 0) {
									curColNum_tFileInputExcel_17 = columnIndex_tFileInputExcel_17
											+ start_column_tFileInputExcel_17 + 1;
									curColName_tFileInputExcel_17 = "Prix_unitaire";

									row25.Prix_unitaire = temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17];
								} else {
									row25.Prix_unitaire = null;
									emptyColumnCount_tFileInputExcel_17++;
								}
								columnIndex_tFileInputExcel_17 = 21;

								if (temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17].length() > 0) {
									curColNum_tFileInputExcel_17 = columnIndex_tFileInputExcel_17
											+ start_column_tFileInputExcel_17 + 1;
									curColName_tFileInputExcel_17 = "Quantite";

									row25.Quantite = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17], null,
											'.' == decimalChar_tFileInputExcel_17 ? null
													: decimalChar_tFileInputExcel_17));
								} else {
									row25.Quantite = null;
									emptyColumnCount_tFileInputExcel_17++;
								}
								columnIndex_tFileInputExcel_17 = 22;

								if (temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17].length() > 0) {
									curColNum_tFileInputExcel_17 = columnIndex_tFileInputExcel_17
											+ start_column_tFileInputExcel_17 + 1;
									curColName_tFileInputExcel_17 = "Remise";

									row25.Remise = temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17];
								} else {
									row25.Remise = null;
									emptyColumnCount_tFileInputExcel_17++;
								}
								columnIndex_tFileInputExcel_17 = 23;

								if (temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17].length() > 0) {
									curColNum_tFileInputExcel_17 = columnIndex_tFileInputExcel_17
											+ start_column_tFileInputExcel_17 + 1;
									curColName_tFileInputExcel_17 = "Montant_de_la_remise_manuelle";

									row25.Montant_de_la_remise_manuelle = temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17];
								} else {
									row25.Montant_de_la_remise_manuelle = null;
									emptyColumnCount_tFileInputExcel_17++;
								}
								columnIndex_tFileInputExcel_17 = 24;

								if (temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17].length() > 0) {
									curColNum_tFileInputExcel_17 = columnIndex_tFileInputExcel_17
											+ start_column_tFileInputExcel_17 + 1;
									curColName_tFileInputExcel_17 = "Total_final";

									row25.Total_final = temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17];
								} else {
									row25.Total_final = null;
									emptyColumnCount_tFileInputExcel_17++;
								}
								columnIndex_tFileInputExcel_17 = 25;

								if (temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17].length() > 0) {
									curColNum_tFileInputExcel_17 = columnIndex_tFileInputExcel_17
											+ start_column_tFileInputExcel_17 + 1;
									curColName_tFileInputExcel_17 = "Modifie_le";

									row25.Modifie_le = temp_row_tFileInputExcel_17[columnIndex_tFileInputExcel_17];
								} else {
									row25.Modifie_le = null;
									emptyColumnCount_tFileInputExcel_17++;
								}

								nb_line_tFileInputExcel_17++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_17_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_17 = true;
								System.err.println(e.getMessage());
								row25 = null;
							}

							/**
							 * [tFileInputExcel_17 begin ] stop
							 */

							/**
							 * [tFileInputExcel_17 main ] start
							 */

							currentComponent = "tFileInputExcel_17";

							tos_count_tFileInputExcel_17++;

							/**
							 * [tFileInputExcel_17 main ] stop
							 */

							/**
							 * [tFileInputExcel_17 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_17";

							/**
							 * [tFileInputExcel_17 process_data_begin ] stop
							 */
// Start of branch "row25"
							if (row25 != null) {

								/**
								 * [tMap_17 main ] start
								 */

								currentComponent = "tMap_17";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row25"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_17 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_17 = false;
								boolean mainRowRejected_tMap_17 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_17__Struct Var = Var__tMap_17;// ###############################
									// ###############################
									// # Output tables

									copyOfcopyOfcopyOft18 = null;

// # Output table : 'copyOfcopyOfcopyOft18'
									copyOfcopyOfcopyOft18_tmp.Staut_Final = row25.Staut_Final;
									copyOfcopyOfcopyOft18 = copyOfcopyOfcopyOft18_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_17 = false;

								tos_count_tMap_17++;

								/**
								 * [tMap_17 main ] stop
								 */

								/**
								 * [tMap_17 process_data_begin ] start
								 */

								currentComponent = "tMap_17";

								/**
								 * [tMap_17 process_data_begin ] stop
								 */
// Start of branch "copyOfcopyOfcopyOft18"
								if (copyOfcopyOfcopyOft18 != null) {

									/**
									 * [tUnite_5 main ] start
									 */

									currentComponent = "tUnite_5";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "copyOfcopyOfcopyOft18"

										);
									}

//////////

// for output
									row11 = new row11Struct();

									row11.Staut_Final = copyOfcopyOfcopyOft18.Staut_Final;

									nb_line_tUnite_5++;

//////////

									tos_count_tUnite_5++;

									/**
									 * [tUnite_5 main ] stop
									 */

									/**
									 * [tUnite_5 process_data_begin ] start
									 */

									currentComponent = "tUnite_5";

									/**
									 * [tUnite_5 process_data_begin ] stop
									 */

									/**
									 * [tMap_8 main ] start
									 */

									currentComponent = "tMap_8";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "row11"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_8 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_8 = false;
									boolean mainRowRejected_tMap_8 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row12"
									///////////////////////////////////////////////

									boolean forceLooprow12 = false;

									row12Struct row12ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_8) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_8 = false;

										row12HashKey.Staut_Final = row11.Staut_Final;

										row12HashKey.hashCodeDirty = true;

										tHash_Lookup_row12.lookup(row12HashKey);

										if (!tHash_Lookup_row12.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_8 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row12 != null && tHash_Lookup_row12.getCount(row12HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row12' and it contains more one result from keys : row12.Staut_Final = '" +
										// row12HashKey.Staut_Final + "'");
									} // G 071

									row12Struct row12 = null;

									row12Struct fromLookup_row12 = null;
									row12 = row12Default;

									if (tHash_Lookup_row12 != null && tHash_Lookup_row12.hasNext()) { // G 099

										fromLookup_row12 = tHash_Lookup_row12.next();

									} // G 099

									if (fromLookup_row12 != null) {
										row12 = fromLookup_row12;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_8__Struct Var = Var__tMap_8;// ###############################
										// ###############################
										// # Output tables

										l = null;

										if (!rejectedInnerJoin_tMap_8) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'l'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_8) {
											l_tmp.Staut_Final = row11.Staut_Final;
											l = l_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_8 = false;

									tos_count_tMap_8++;

									/**
									 * [tMap_8 main ] stop
									 */

									/**
									 * [tMap_8 process_data_begin ] start
									 */

									currentComponent = "tMap_8";

									/**
									 * [tMap_8 process_data_begin ] stop
									 */
// Start of branch "l"
									if (l != null) {

										/**
										 * [tUniqRow_5 main ] start
										 */

										currentComponent = "tUniqRow_5";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "l"

											);
										}

										row391 = null;
										finder_tUniqRow_5.Staut_Final = l.Staut_Final;
										finder_tUniqRow_5.hashCodeDirty = true;
										if (!keystUniqRow_5.contains(finder_tUniqRow_5)) {
											KeyStruct_tUniqRow_5 new_tUniqRow_5 = new KeyStruct_tUniqRow_5();

											new_tUniqRow_5.Staut_Final = l.Staut_Final;

											keystUniqRow_5.add(new_tUniqRow_5);
											if (row391 == null) {

												row391 = new row391Struct();
											}
											row391.Staut_Final = l.Staut_Final;
											nb_uniques_tUniqRow_5++;
										} else {
											nb_duplicates_tUniqRow_5++;
										}

										tos_count_tUniqRow_5++;

										/**
										 * [tUniqRow_5 main ] stop
										 */

										/**
										 * [tUniqRow_5 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_5";

										/**
										 * [tUniqRow_5 process_data_begin ] stop
										 */
// Start of branch "row391"
										if (row391 != null) {

											/**
											 * [tDBOutput_8 main ] start
											 */

											currentComponent = "tDBOutput_8";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row391"

												);
											}

											whetherReject_tDBOutput_8 = false;
											if (row391.Staut_Final == null) {
												pstmt_tDBOutput_8.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_8.setString(1, row391.Staut_Final);
											}

											pstmt_tDBOutput_8.addBatch();
											nb_line_tDBOutput_8++;

											batchSizeCounter_tDBOutput_8++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_8 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_8) throws Exception {
													try {

														for (int countEach_tDBOutput_8 : pstmt_tDBOutput_8
																.executeBatch()) {
															if (countEach_tDBOutput_8 == -2
																	|| countEach_tDBOutput_8 == -3) {
																break;
															}
															counter += countEach_tDBOutput_8;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_8_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_8 = 0;
														for (int countEach_tDBOutput_8 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_8 < 0 ? 0
																	: countEach_tDBOutput_8);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_8) throws Exception {
													try {

														for (int countEach_tDBOutput_8 : pstmt_tDBOutput_8
																.executeBatch()) {
															if (countEach_tDBOutput_8 == -2
																	|| countEach_tDBOutput_8 == -3) {
																break;
															}
															counter += countEach_tDBOutput_8;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_8_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_8 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_8 < 0 ? 0
																	: countEach_tDBOutput_8);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_8 > 0)
													&& (batchSize_tDBOutput_8 <= batchSizeCounter_tDBOutput_8)) {

												insertedCount_tDBOutput_8 = new LimitBytesHelper_tDBOutput_8()
														.limitBytePart1(insertedCount_tDBOutput_8, pstmt_tDBOutput_8);
												rowsToCommitCount_tDBOutput_8 = insertedCount_tDBOutput_8;

												batchSizeCounter_tDBOutput_8 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_8++;
											if (commitEvery_tDBOutput_8 <= commitCounter_tDBOutput_8) {
												if ((batchSize_tDBOutput_8 > 0) && (batchSizeCounter_tDBOutput_8 > 0)) {

													insertedCount_tDBOutput_8 = new LimitBytesHelper_tDBOutput_8()
															.limitBytePart1(insertedCount_tDBOutput_8,
																	pstmt_tDBOutput_8);

													batchSizeCounter_tDBOutput_8 = 0;
												}
												if (rowsToCommitCount_tDBOutput_8 != 0) {

												}
												conn_tDBOutput_8.commit();
												if (rowsToCommitCount_tDBOutput_8 != 0) {

													rowsToCommitCount_tDBOutput_8 = 0;
												}
												commitCounter_tDBOutput_8 = 0;
											}

											tos_count_tDBOutput_8++;

											/**
											 * [tDBOutput_8 main ] stop
											 */

											/**
											 * [tDBOutput_8 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_8";

											/**
											 * [tDBOutput_8 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_8 process_data_end ] start
											 */

											currentComponent = "tDBOutput_8";

											/**
											 * [tDBOutput_8 process_data_end ] stop
											 */

										} // End of branch "row391"

										/**
										 * [tUniqRow_5 process_data_end ] start
										 */

										currentComponent = "tUniqRow_5";

										/**
										 * [tUniqRow_5 process_data_end ] stop
										 */

									} // End of branch "l"

									/**
									 * [tMap_8 process_data_end ] start
									 */

									currentComponent = "tMap_8";

									/**
									 * [tMap_8 process_data_end ] stop
									 */

									/**
									 * [tUnite_5 process_data_end ] start
									 */

									currentComponent = "tUnite_5";

									/**
									 * [tUnite_5 process_data_end ] stop
									 */

								} // End of branch "copyOfcopyOfcopyOft18"

								/**
								 * [tMap_17 process_data_end ] start
								 */

								currentComponent = "tMap_17";

								/**
								 * [tMap_17 process_data_end ] stop
								 */

							} // End of branch "row25"

							/**
							 * [tFileInputExcel_17 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_17";

							/**
							 * [tFileInputExcel_17 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_17 end ] start
							 */

							currentComponent = "tFileInputExcel_17";

						}

						globalMap.put("tFileInputExcel_17_NB_LINE", nb_line_tFileInputExcel_17);

					}

				} finally {

					if (!(source_tFileInputExcel_17 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_17.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_17", true);
				end_Hash.put("tFileInputExcel_17", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_17 end ] stop
				 */

				/**
				 * [tMap_17 end ] start
				 */

				currentComponent = "tMap_17";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row25");
				}

				ok_Hash.put("tMap_17", true);
				end_Hash.put("tMap_17", System.currentTimeMillis());

				/**
				 * [tMap_17 end ] stop
				 */

				/**
				 * [tMap_18 begin ] start
				 */

				ok_Hash.put("tMap_18", false);
				start_Hash.put("tMap_18", System.currentTimeMillis());

				currentComponent = "tMap_18";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row37");
				}

				int tos_count_tMap_18 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_18__Struct {
				}
				Var__tMap_18__Struct Var__tMap_18 = new Var__tMap_18__Struct();
// ###############################

// ###############################
// # Outputs initialization
				copyOfcopyOfcopyOfcopyOft5Struct copyOfcopyOfcopyOfcopyOft5_tmp = new copyOfcopyOfcopyOfcopyOft5Struct();
// ###############################

				/**
				 * [tMap_18 begin ] stop
				 */

				/**
				 * [tFileInputExcel_18 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_18", false);
				start_Hash.put("tFileInputExcel_18", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_18";

				int tos_count_tFileInputExcel_18 = 0;

				final String decryptedPassword_tFileInputExcel_18 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:obI3s9/Y1uA7wwl/PcKev8n52s+X1d5BkPZzxw==");
				String password_tFileInputExcel_18 = decryptedPassword_tFileInputExcel_18;
				if (password_tFileInputExcel_18.isEmpty()) {
					password_tFileInputExcel_18 = null;
				}
				class RegexUtil_tFileInputExcel_18 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_18 regexUtil_tFileInputExcel_18 = new RegexUtil_tFileInputExcel_18();

				Object source_tFileInputExcel_18 = "C:/Users/DELL/Downloads/Copie_de_EXTRACT_OPPORTUNITES_MOBILE_BB_VF_090520222381_1ans.xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_18 = null;

				if (source_tFileInputExcel_18 instanceof String) {
					workbook_tFileInputExcel_18 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_18), password_tFileInputExcel_18,
									true);
				} else if (source_tFileInputExcel_18 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_18 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_18, password_tFileInputExcel_18);
				} else {
					workbook_tFileInputExcel_18 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_18 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_18.addAll(
							regexUtil_tFileInputExcel_18.getSheets(workbook_tFileInputExcel_18, "Source", false));
					if (sheetList_tFileInputExcel_18.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_18 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_18 : sheetList_tFileInputExcel_18) {
						if (sheet_FilterNull_tFileInputExcel_18 != null
								&& sheetList_FilterNull_tFileInputExcel_18.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_18.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_18.add(sheet_FilterNull_tFileInputExcel_18);
						}
					}
					sheetList_tFileInputExcel_18 = sheetList_FilterNull_tFileInputExcel_18;
					if (sheetList_tFileInputExcel_18.size() > 0) {
						int nb_line_tFileInputExcel_18 = 0;

						int begin_line_tFileInputExcel_18 = 1;

						int footer_input_tFileInputExcel_18 = 0;

						int end_line_tFileInputExcel_18 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_18 : sheetList_tFileInputExcel_18) {
							end_line_tFileInputExcel_18 += (sheet_tFileInputExcel_18.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_18 -= footer_input_tFileInputExcel_18;
						int limit_tFileInputExcel_18 = -1;
						int start_column_tFileInputExcel_18 = 1 - 1;
						int end_column_tFileInputExcel_18 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_18 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_18 = sheetList_tFileInputExcel_18
								.get(0);
						int rowCount_tFileInputExcel_18 = 0;
						int sheetIndex_tFileInputExcel_18 = 0;
						int currentRows_tFileInputExcel_18 = (sheetList_tFileInputExcel_18.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_18 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_18 = df_tFileInputExcel_18.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_18 = begin_line_tFileInputExcel_18; i_tFileInputExcel_18 < end_line_tFileInputExcel_18; i_tFileInputExcel_18++) {

							int emptyColumnCount_tFileInputExcel_18 = 0;

							if (limit_tFileInputExcel_18 != -1
									&& nb_line_tFileInputExcel_18 >= limit_tFileInputExcel_18) {
								break;
							}

							while (i_tFileInputExcel_18 >= rowCount_tFileInputExcel_18
									+ currentRows_tFileInputExcel_18) {
								rowCount_tFileInputExcel_18 += currentRows_tFileInputExcel_18;
								sheet_tFileInputExcel_18 = sheetList_tFileInputExcel_18
										.get(++sheetIndex_tFileInputExcel_18);
								currentRows_tFileInputExcel_18 = (sheet_tFileInputExcel_18.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_18_CURRENT_SHEET", sheet_tFileInputExcel_18.getSheetName());
							if (rowCount_tFileInputExcel_18 <= i_tFileInputExcel_18) {
								row_tFileInputExcel_18 = sheet_tFileInputExcel_18
										.getRow(i_tFileInputExcel_18 - rowCount_tFileInputExcel_18);
							}
							row37 = null;
							int tempRowLength_tFileInputExcel_18 = 31;

							int columnIndex_tFileInputExcel_18 = 0;

							String[] temp_row_tFileInputExcel_18 = new String[tempRowLength_tFileInputExcel_18];
							int excel_end_column_tFileInputExcel_18;
							if (row_tFileInputExcel_18 == null) {
								excel_end_column_tFileInputExcel_18 = 0;
							} else {
								excel_end_column_tFileInputExcel_18 = row_tFileInputExcel_18.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_18;
							if (end_column_tFileInputExcel_18 == -1) {
								actual_end_column_tFileInputExcel_18 = excel_end_column_tFileInputExcel_18;
							} else {
								actual_end_column_tFileInputExcel_18 = end_column_tFileInputExcel_18 > excel_end_column_tFileInputExcel_18
										? excel_end_column_tFileInputExcel_18
										: end_column_tFileInputExcel_18;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_18 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_18; i++) {
								if (i + start_column_tFileInputExcel_18 < actual_end_column_tFileInputExcel_18) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_18 = row_tFileInputExcel_18
											.getCell(i + start_column_tFileInputExcel_18);
									if (cell_tFileInputExcel_18 != null) {
										switch (cell_tFileInputExcel_18.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_18[i] = cell_tFileInputExcel_18
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_18)) {
												temp_row_tFileInputExcel_18[i] = cell_tFileInputExcel_18
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_18[i] = df_tFileInputExcel_18
														.format(cell_tFileInputExcel_18.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_18[i] = String
													.valueOf(cell_tFileInputExcel_18.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_18.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_18[i] = cell_tFileInputExcel_18
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_18)) {
													temp_row_tFileInputExcel_18[i] = cell_tFileInputExcel_18
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_18 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_18.getNumericCellValue());
													temp_row_tFileInputExcel_18[i] = ne_tFileInputExcel_18
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_18[i] = String
														.valueOf(cell_tFileInputExcel_18.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_18[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_18[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_18[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_18[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_18 = false;
							row37 = new row37Struct();
							int curColNum_tFileInputExcel_18 = -1;
							String curColName_tFileInputExcel_18 = "";
							try {
								columnIndex_tFileInputExcel_18 = 0;

								if (temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18].length() > 0) {
									curColNum_tFileInputExcel_18 = columnIndex_tFileInputExcel_18
											+ start_column_tFileInputExcel_18 + 1;
									curColName_tFileInputExcel_18 = "Reference_OSM_mere__Opportunite";

									row37.Reference_OSM_mere__Opportunite = temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18];
								} else {
									row37.Reference_OSM_mere__Opportunite = null;
									emptyColumnCount_tFileInputExcel_18++;
								}
								columnIndex_tFileInputExcel_18 = 1;

								if (temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18].length() > 0) {
									curColNum_tFileInputExcel_18 = columnIndex_tFileInputExcel_18
											+ start_column_tFileInputExcel_18 + 1;
									curColName_tFileInputExcel_18 = "Reference_OSM__Opportunite";

									row37.Reference_OSM__Opportunite = temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18];
								} else {
									row37.Reference_OSM__Opportunite = null;
									emptyColumnCount_tFileInputExcel_18++;
								}
								columnIndex_tFileInputExcel_18 = 2;

								if (temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18].length() > 0) {
									curColNum_tFileInputExcel_18 = columnIndex_tFileInputExcel_18
											+ start_column_tFileInputExcel_18 + 1;
									curColName_tFileInputExcel_18 = "Client_Prospect__Opportunite";

									row37.Client_Prospect__Opportunite = temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18];
								} else {
									row37.Client_Prospect__Opportunite = null;
									emptyColumnCount_tFileInputExcel_18++;
								}
								columnIndex_tFileInputExcel_18 = 3;

								if (temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18].length() > 0) {
									curColNum_tFileInputExcel_18 = columnIndex_tFileInputExcel_18
											+ start_column_tFileInputExcel_18 + 1;
									curColName_tFileInputExcel_18 = "Offre";

									row37.Offre = temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18];
								} else {
									row37.Offre = null;
									emptyColumnCount_tFileInputExcel_18++;
								}
								columnIndex_tFileInputExcel_18 = 4;

								if (temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18].length() > 0) {
									curColNum_tFileInputExcel_18 = columnIndex_tFileInputExcel_18
											+ start_column_tFileInputExcel_18 + 1;
									curColName_tFileInputExcel_18 = "Nature_Offre";

									row37.Nature_Offre = temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18];
								} else {
									row37.Nature_Offre = null;
									emptyColumnCount_tFileInputExcel_18++;
								}
								columnIndex_tFileInputExcel_18 = 5;

								if (temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18].length() > 0) {
									curColNum_tFileInputExcel_18 = columnIndex_tFileInputExcel_18
											+ start_column_tFileInputExcel_18 + 1;
									curColName_tFileInputExcel_18 = "Produit_existant";

									row37.Produit_existant = temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18];
								} else {
									row37.Produit_existant = null;
									emptyColumnCount_tFileInputExcel_18++;
								}
								columnIndex_tFileInputExcel_18 = 6;

								if (temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18].length() > 0) {
									curColNum_tFileInputExcel_18 = columnIndex_tFileInputExcel_18
											+ start_column_tFileInputExcel_18 + 1;
									curColName_tFileInputExcel_18 = "Nature_produit__Produit_existant";

									row37.Nature_produit__Produit_existant = temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18];
								} else {
									row37.Nature_produit__Produit_existant = null;
									emptyColumnCount_tFileInputExcel_18++;
								}
								columnIndex_tFileInputExcel_18 = 7;

								if (temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18].length() > 0) {
									curColNum_tFileInputExcel_18 = columnIndex_tFileInputExcel_18
											+ start_column_tFileInputExcel_18 + 1;
									curColName_tFileInputExcel_18 = "Quantite";

									row37.Quantite = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18], null,
											'.' == decimalChar_tFileInputExcel_18 ? null
													: decimalChar_tFileInputExcel_18));
								} else {
									row37.Quantite = null;
									emptyColumnCount_tFileInputExcel_18++;
								}
								columnIndex_tFileInputExcel_18 = 8;

								if (temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18].length() > 0) {
									curColNum_tFileInputExcel_18 = columnIndex_tFileInputExcel_18
											+ start_column_tFileInputExcel_18 + 1;
									curColName_tFileInputExcel_18 = "Prix_unitaire";

									row37.Prix_unitaire = temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18];
								} else {
									row37.Prix_unitaire = null;
									emptyColumnCount_tFileInputExcel_18++;
								}
								columnIndex_tFileInputExcel_18 = 9;

								if (temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18].length() > 0) {
									curColNum_tFileInputExcel_18 = columnIndex_tFileInputExcel_18
											+ start_column_tFileInputExcel_18 + 1;
									curColName_tFileInputExcel_18 = "Total_final";

									row37.Total_final = temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18];
								} else {
									row37.Total_final = null;
									emptyColumnCount_tFileInputExcel_18++;
								}
								columnIndex_tFileInputExcel_18 = 10;

								if (temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18].length() > 0) {
									curColNum_tFileInputExcel_18 = columnIndex_tFileInputExcel_18
											+ start_column_tFileInputExcel_18 + 1;
									curColName_tFileInputExcel_18 = "Remise______Opportunite";

									row37.Remise______Opportunite = temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18];
								} else {
									row37.Remise______Opportunite = null;
									emptyColumnCount_tFileInputExcel_18++;
								}
								columnIndex_tFileInputExcel_18 = 11;

								if (temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18].length() > 0) {
									curColNum_tFileInputExcel_18 = columnIndex_tFileInputExcel_18
											+ start_column_tFileInputExcel_18 + 1;
									curColName_tFileInputExcel_18 = "Total_remise_HT";

									row37.Total_remise_HT = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18], null,
											'.' == decimalChar_tFileInputExcel_18 ? null
													: decimalChar_tFileInputExcel_18));
								} else {
									row37.Total_remise_HT = null;
									emptyColumnCount_tFileInputExcel_18++;
								}
								columnIndex_tFileInputExcel_18 = 12;

								if (temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18].length() > 0) {
									curColNum_tFileInputExcel_18 = columnIndex_tFileInputExcel_18
											+ start_column_tFileInputExcel_18 + 1;
									curColName_tFileInputExcel_18 = "Extension__Opportunite";

									row37.Extension__Opportunite = temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18];
								} else {
									row37.Extension__Opportunite = null;
									emptyColumnCount_tFileInputExcel_18++;
								}
								columnIndex_tFileInputExcel_18 = 13;

								if (temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18].length() > 0) {
									curColNum_tFileInputExcel_18 = columnIndex_tFileInputExcel_18
											+ start_column_tFileInputExcel_18 + 1;
									curColName_tFileInputExcel_18 = "Budget_a_valider__Opportunite";

									row37.Budget_a_valider__Opportunite = temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18];
								} else {
									row37.Budget_a_valider__Opportunite = null;
									emptyColumnCount_tFileInputExcel_18++;
								}
								columnIndex_tFileInputExcel_18 = 14;

								if (temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18].length() > 0) {
									curColNum_tFileInputExcel_18 = columnIndex_tFileInputExcel_18
											+ start_column_tFileInputExcel_18 + 1;
									curColName_tFileInputExcel_18 = "Budget_a_valider_Extension__Opportunite";

									row37.Budget_a_valider_Extension__Opportunite = temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18];
								} else {
									row37.Budget_a_valider_Extension__Opportunite = null;
									emptyColumnCount_tFileInputExcel_18++;
								}
								columnIndex_tFileInputExcel_18 = 15;

								if (temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18].length() > 0) {
									curColNum_tFileInputExcel_18 = columnIndex_tFileInputExcel_18
											+ start_column_tFileInputExcel_18 + 1;
									curColName_tFileInputExcel_18 = "Duree_d_engagement__Opportunite";

									row37.Duree_d_engagement__Opportunite = temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18];
								} else {
									row37.Duree_d_engagement__Opportunite = null;
									emptyColumnCount_tFileInputExcel_18++;
								}
								columnIndex_tFileInputExcel_18 = 16;

								if (temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18].length() > 0) {
									curColNum_tFileInputExcel_18 = columnIndex_tFileInputExcel_18
											+ start_column_tFileInputExcel_18 + 1;
									curColName_tFileInputExcel_18 = "Type_d_engagement__Opportunite";

									row37.Type_d_engagement__Opportunite = temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18];
								} else {
									row37.Type_d_engagement__Opportunite = null;
									emptyColumnCount_tFileInputExcel_18++;
								}
								columnIndex_tFileInputExcel_18 = 17;

								if (temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18].length() > 0) {
									curColNum_tFileInputExcel_18 = columnIndex_tFileInputExcel_18
											+ start_column_tFileInputExcel_18 + 1;
									curColName_tFileInputExcel_18 = "Demandeur__Opportunite";

									row37.Demandeur__Opportunite = temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18];
								} else {
									row37.Demandeur__Opportunite = null;
									emptyColumnCount_tFileInputExcel_18++;
								}
								columnIndex_tFileInputExcel_18 = 18;

								if (temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18].length() > 0) {
									curColNum_tFileInputExcel_18 = columnIndex_tFileInputExcel_18
											+ start_column_tFileInputExcel_18 + 1;
									curColName_tFileInputExcel_18 = "Equipe";

									row37.Equipe = temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18];
								} else {
									row37.Equipe = null;
									emptyColumnCount_tFileInputExcel_18++;
								}
								columnIndex_tFileInputExcel_18 = 19;

								if (temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18].length() > 0) {
									curColNum_tFileInputExcel_18 = columnIndex_tFileInputExcel_18
											+ start_column_tFileInputExcel_18 + 1;
									curColName_tFileInputExcel_18 = "Cree_le__Opportunite";

									row37.Cree_le__Opportunite = temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18];
								} else {
									row37.Cree_le__Opportunite = null;
									emptyColumnCount_tFileInputExcel_18++;
								}
								columnIndex_tFileInputExcel_18 = 20;

								if (temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18].length() > 0) {
									curColNum_tFileInputExcel_18 = columnIndex_tFileInputExcel_18
											+ start_column_tFileInputExcel_18 + 1;
									curColName_tFileInputExcel_18 = "Mois_de_creation";

									row37.Mois_de_creation = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18], null,
											'.' == decimalChar_tFileInputExcel_18 ? null
													: decimalChar_tFileInputExcel_18));
								} else {
									row37.Mois_de_creation = null;
									emptyColumnCount_tFileInputExcel_18++;
								}
								columnIndex_tFileInputExcel_18 = 21;

								if (temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18].length() > 0) {
									curColNum_tFileInputExcel_18 = columnIndex_tFileInputExcel_18
											+ start_column_tFileInputExcel_18 + 1;
									curColName_tFileInputExcel_18 = "Annee_de_creation";

									row37.Annee_de_creation = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18], null,
											'.' == decimalChar_tFileInputExcel_18 ? null
													: decimalChar_tFileInputExcel_18));
								} else {
									row37.Annee_de_creation = null;
									emptyColumnCount_tFileInputExcel_18++;
								}
								columnIndex_tFileInputExcel_18 = 22;

								if (temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18].length() > 0) {
									curColNum_tFileInputExcel_18 = columnIndex_tFileInputExcel_18
											+ start_column_tFileInputExcel_18 + 1;
									curColName_tFileInputExcel_18 = "Mois_et_annee_de_creation";

									row37.Mois_et_annee_de_creation = temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18];
								} else {
									row37.Mois_et_annee_de_creation = null;
									emptyColumnCount_tFileInputExcel_18++;
								}
								columnIndex_tFileInputExcel_18 = 23;

								if (temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18].length() > 0) {
									curColNum_tFileInputExcel_18 = columnIndex_tFileInputExcel_18
											+ start_column_tFileInputExcel_18 + 1;
									curColName_tFileInputExcel_18 = "Raison_de_statut_OSM__Opportunite";

									row37.Raison_de_statut_OSM__Opportunite = temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18];
								} else {
									row37.Raison_de_statut_OSM__Opportunite = null;
									emptyColumnCount_tFileInputExcel_18++;
								}
								columnIndex_tFileInputExcel_18 = 24;

								if (temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18].length() > 0) {
									curColNum_tFileInputExcel_18 = columnIndex_tFileInputExcel_18
											+ start_column_tFileInputExcel_18 + 1;
									curColName_tFileInputExcel_18 = "Statut_OSM__Opportunite";

									row37.Statut_OSM__Opportunite = temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18];
								} else {
									row37.Statut_OSM__Opportunite = null;
									emptyColumnCount_tFileInputExcel_18++;
								}
								columnIndex_tFileInputExcel_18 = 25;

								if (temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18].length() > 0) {
									curColNum_tFileInputExcel_18 = columnIndex_tFileInputExcel_18
											+ start_column_tFileInputExcel_18 + 1;
									curColName_tFileInputExcel_18 = "Statut_activation__Commande";

									row37.Statut_activation__Commande = temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18];
								} else {
									row37.Statut_activation__Commande = null;
									emptyColumnCount_tFileInputExcel_18++;
								}
								columnIndex_tFileInputExcel_18 = 26;

								if (temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18].length() > 0) {
									curColNum_tFileInputExcel_18 = columnIndex_tFileInputExcel_18
											+ start_column_tFileInputExcel_18 + 1;
									curColName_tFileInputExcel_18 = "Date_d_activation__Commande";

									row37.Date_d_activation__Commande = temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18];
								} else {
									row37.Date_d_activation__Commande = null;
									emptyColumnCount_tFileInputExcel_18++;
								}
								columnIndex_tFileInputExcel_18 = 27;

								if (temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18].length() > 0) {
									curColNum_tFileInputExcel_18 = columnIndex_tFileInputExcel_18
											+ start_column_tFileInputExcel_18 + 1;
									curColName_tFileInputExcel_18 = "Mois_d_activation";

									row37.Mois_d_activation = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18], null,
											'.' == decimalChar_tFileInputExcel_18 ? null
													: decimalChar_tFileInputExcel_18));
								} else {
									row37.Mois_d_activation = null;
									emptyColumnCount_tFileInputExcel_18++;
								}
								columnIndex_tFileInputExcel_18 = 28;

								if (temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18].length() > 0) {
									curColNum_tFileInputExcel_18 = columnIndex_tFileInputExcel_18
											+ start_column_tFileInputExcel_18 + 1;
									curColName_tFileInputExcel_18 = "Staut_Final";

									row37.Staut_Final = temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18];
								} else {
									row37.Staut_Final = null;
									emptyColumnCount_tFileInputExcel_18++;
								}
								columnIndex_tFileInputExcel_18 = 29;

								if (temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18].length() > 0) {
									curColNum_tFileInputExcel_18 = columnIndex_tFileInputExcel_18
											+ start_column_tFileInputExcel_18 + 1;
									curColName_tFileInputExcel_18 = "Gouvernorat";

									row37.Gouvernorat = temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18];
								} else {
									row37.Gouvernorat = null;
									emptyColumnCount_tFileInputExcel_18++;
								}
								columnIndex_tFileInputExcel_18 = 30;

								if (temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18].length() > 0) {
									curColNum_tFileInputExcel_18 = columnIndex_tFileInputExcel_18
											+ start_column_tFileInputExcel_18 + 1;
									curColName_tFileInputExcel_18 = "Phase_de_l_opportunite__Opportunite";

									row37.Phase_de_l_opportunite__Opportunite = temp_row_tFileInputExcel_18[columnIndex_tFileInputExcel_18];
								} else {
									row37.Phase_de_l_opportunite__Opportunite = null;
									emptyColumnCount_tFileInputExcel_18++;
								}

								nb_line_tFileInputExcel_18++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_18_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_18 = true;
								System.err.println(e.getMessage());
								row37 = null;
							}

							/**
							 * [tFileInputExcel_18 begin ] stop
							 */

							/**
							 * [tFileInputExcel_18 main ] start
							 */

							currentComponent = "tFileInputExcel_18";

							tos_count_tFileInputExcel_18++;

							/**
							 * [tFileInputExcel_18 main ] stop
							 */

							/**
							 * [tFileInputExcel_18 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_18";

							/**
							 * [tFileInputExcel_18 process_data_begin ] stop
							 */
// Start of branch "row37"
							if (row37 != null) {

								/**
								 * [tMap_18 main ] start
								 */

								currentComponent = "tMap_18";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row37"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_18 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_18 = false;
								boolean mainRowRejected_tMap_18 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_18__Struct Var = Var__tMap_18;// ###############################
									// ###############################
									// # Output tables

									copyOfcopyOfcopyOfcopyOft5 = null;

// # Output table : 'copyOfcopyOfcopyOfcopyOft5'
									copyOfcopyOfcopyOfcopyOft5_tmp.Staut_Final = row37.Staut_Final;
									copyOfcopyOfcopyOfcopyOft5 = copyOfcopyOfcopyOfcopyOft5_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_18 = false;

								tos_count_tMap_18++;

								/**
								 * [tMap_18 main ] stop
								 */

								/**
								 * [tMap_18 process_data_begin ] start
								 */

								currentComponent = "tMap_18";

								/**
								 * [tMap_18 process_data_begin ] stop
								 */
// Start of branch "copyOfcopyOfcopyOfcopyOft5"
								if (copyOfcopyOfcopyOfcopyOft5 != null) {

									/**
									 * [tUnite_5 main ] start
									 */

									currentComponent = "tUnite_5";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "copyOfcopyOfcopyOfcopyOft5"

										);
									}

//////////

// for output
									row11 = new row11Struct();

									row11.Staut_Final = copyOfcopyOfcopyOfcopyOft5.Staut_Final;

									nb_line_tUnite_5++;

//////////

									tos_count_tUnite_5++;

									/**
									 * [tUnite_5 main ] stop
									 */

									/**
									 * [tUnite_5 process_data_begin ] start
									 */

									currentComponent = "tUnite_5";

									/**
									 * [tUnite_5 process_data_begin ] stop
									 */

									/**
									 * [tMap_8 main ] start
									 */

									currentComponent = "tMap_8";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "row11"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_8 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_8 = false;
									boolean mainRowRejected_tMap_8 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row12"
									///////////////////////////////////////////////

									boolean forceLooprow12 = false;

									row12Struct row12ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_8) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_8 = false;

										row12HashKey.Staut_Final = row11.Staut_Final;

										row12HashKey.hashCodeDirty = true;

										tHash_Lookup_row12.lookup(row12HashKey);

										if (!tHash_Lookup_row12.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_8 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row12 != null && tHash_Lookup_row12.getCount(row12HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row12' and it contains more one result from keys : row12.Staut_Final = '" +
										// row12HashKey.Staut_Final + "'");
									} // G 071

									row12Struct row12 = null;

									row12Struct fromLookup_row12 = null;
									row12 = row12Default;

									if (tHash_Lookup_row12 != null && tHash_Lookup_row12.hasNext()) { // G 099

										fromLookup_row12 = tHash_Lookup_row12.next();

									} // G 099

									if (fromLookup_row12 != null) {
										row12 = fromLookup_row12;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_8__Struct Var = Var__tMap_8;// ###############################
										// ###############################
										// # Output tables

										l = null;

										if (!rejectedInnerJoin_tMap_8) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'l'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_8) {
											l_tmp.Staut_Final = row11.Staut_Final;
											l = l_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_8 = false;

									tos_count_tMap_8++;

									/**
									 * [tMap_8 main ] stop
									 */

									/**
									 * [tMap_8 process_data_begin ] start
									 */

									currentComponent = "tMap_8";

									/**
									 * [tMap_8 process_data_begin ] stop
									 */
// Start of branch "l"
									if (l != null) {

										/**
										 * [tUniqRow_5 main ] start
										 */

										currentComponent = "tUniqRow_5";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "l"

											);
										}

										row391 = null;
										finder_tUniqRow_5.Staut_Final = l.Staut_Final;
										finder_tUniqRow_5.hashCodeDirty = true;
										if (!keystUniqRow_5.contains(finder_tUniqRow_5)) {
											KeyStruct_tUniqRow_5 new_tUniqRow_5 = new KeyStruct_tUniqRow_5();

											new_tUniqRow_5.Staut_Final = l.Staut_Final;

											keystUniqRow_5.add(new_tUniqRow_5);
											if (row391 == null) {

												row391 = new row391Struct();
											}
											row391.Staut_Final = l.Staut_Final;
											nb_uniques_tUniqRow_5++;
										} else {
											nb_duplicates_tUniqRow_5++;
										}

										tos_count_tUniqRow_5++;

										/**
										 * [tUniqRow_5 main ] stop
										 */

										/**
										 * [tUniqRow_5 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_5";

										/**
										 * [tUniqRow_5 process_data_begin ] stop
										 */
// Start of branch "row391"
										if (row391 != null) {

											/**
											 * [tDBOutput_8 main ] start
											 */

											currentComponent = "tDBOutput_8";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row391"

												);
											}

											whetherReject_tDBOutput_8 = false;
											if (row391.Staut_Final == null) {
												pstmt_tDBOutput_8.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_8.setString(1, row391.Staut_Final);
											}

											pstmt_tDBOutput_8.addBatch();
											nb_line_tDBOutput_8++;

											batchSizeCounter_tDBOutput_8++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_8 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_8) throws Exception {
													try {

														for (int countEach_tDBOutput_8 : pstmt_tDBOutput_8
																.executeBatch()) {
															if (countEach_tDBOutput_8 == -2
																	|| countEach_tDBOutput_8 == -3) {
																break;
															}
															counter += countEach_tDBOutput_8;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_8_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_8 = 0;
														for (int countEach_tDBOutput_8 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_8 < 0 ? 0
																	: countEach_tDBOutput_8);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_8) throws Exception {
													try {

														for (int countEach_tDBOutput_8 : pstmt_tDBOutput_8
																.executeBatch()) {
															if (countEach_tDBOutput_8 == -2
																	|| countEach_tDBOutput_8 == -3) {
																break;
															}
															counter += countEach_tDBOutput_8;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_8_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_8 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_8 < 0 ? 0
																	: countEach_tDBOutput_8);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_8 > 0)
													&& (batchSize_tDBOutput_8 <= batchSizeCounter_tDBOutput_8)) {

												insertedCount_tDBOutput_8 = new LimitBytesHelper_tDBOutput_8()
														.limitBytePart1(insertedCount_tDBOutput_8, pstmt_tDBOutput_8);
												rowsToCommitCount_tDBOutput_8 = insertedCount_tDBOutput_8;

												batchSizeCounter_tDBOutput_8 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_8++;
											if (commitEvery_tDBOutput_8 <= commitCounter_tDBOutput_8) {
												if ((batchSize_tDBOutput_8 > 0) && (batchSizeCounter_tDBOutput_8 > 0)) {

													insertedCount_tDBOutput_8 = new LimitBytesHelper_tDBOutput_8()
															.limitBytePart1(insertedCount_tDBOutput_8,
																	pstmt_tDBOutput_8);

													batchSizeCounter_tDBOutput_8 = 0;
												}
												if (rowsToCommitCount_tDBOutput_8 != 0) {

												}
												conn_tDBOutput_8.commit();
												if (rowsToCommitCount_tDBOutput_8 != 0) {

													rowsToCommitCount_tDBOutput_8 = 0;
												}
												commitCounter_tDBOutput_8 = 0;
											}

											tos_count_tDBOutput_8++;

											/**
											 * [tDBOutput_8 main ] stop
											 */

											/**
											 * [tDBOutput_8 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_8";

											/**
											 * [tDBOutput_8 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_8 process_data_end ] start
											 */

											currentComponent = "tDBOutput_8";

											/**
											 * [tDBOutput_8 process_data_end ] stop
											 */

										} // End of branch "row391"

										/**
										 * [tUniqRow_5 process_data_end ] start
										 */

										currentComponent = "tUniqRow_5";

										/**
										 * [tUniqRow_5 process_data_end ] stop
										 */

									} // End of branch "l"

									/**
									 * [tMap_8 process_data_end ] start
									 */

									currentComponent = "tMap_8";

									/**
									 * [tMap_8 process_data_end ] stop
									 */

									/**
									 * [tUnite_5 process_data_end ] start
									 */

									currentComponent = "tUnite_5";

									/**
									 * [tUnite_5 process_data_end ] stop
									 */

								} // End of branch "copyOfcopyOfcopyOfcopyOft5"

								/**
								 * [tMap_18 process_data_end ] start
								 */

								currentComponent = "tMap_18";

								/**
								 * [tMap_18 process_data_end ] stop
								 */

							} // End of branch "row37"

							/**
							 * [tFileInputExcel_18 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_18";

							/**
							 * [tFileInputExcel_18 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_18 end ] start
							 */

							currentComponent = "tFileInputExcel_18";

						}

						globalMap.put("tFileInputExcel_18_NB_LINE", nb_line_tFileInputExcel_18);

					}

				} finally {

					if (!(source_tFileInputExcel_18 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_18.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_18", true);
				end_Hash.put("tFileInputExcel_18", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_18 end ] stop
				 */

				/**
				 * [tMap_18 end ] start
				 */

				currentComponent = "tMap_18";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row37");
				}

				ok_Hash.put("tMap_18", true);
				end_Hash.put("tMap_18", System.currentTimeMillis());

				/**
				 * [tMap_18 end ] stop
				 */

				/**
				 * [tMap_35 begin ] start
				 */

				ok_Hash.put("tMap_35", false);
				start_Hash.put("tMap_35", System.currentTimeMillis());

				currentComponent = "tMap_35";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row51");
				}

				int tos_count_tMap_35 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_35__Struct {
				}
				Var__tMap_35__Struct Var__tMap_35 = new Var__tMap_35__Struct();
// ###############################

// ###############################
// # Outputs initialization
				copyOfcopyOfcopyOfcopyOft9Struct copyOfcopyOfcopyOfcopyOft9_tmp = new copyOfcopyOfcopyOfcopyOft9Struct();
// ###############################

				/**
				 * [tMap_35 begin ] stop
				 */

				/**
				 * [tFileInputExcel_35 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_35", false);
				start_Hash.put("tFileInputExcel_35", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_35";

				int tos_count_tFileInputExcel_35 = 0;

				final String decryptedPassword_tFileInputExcel_35 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:3YmD8J5Yo4LjYDNyNdaqOkZfHXYOJy4rnYSInA==");
				String password_tFileInputExcel_35 = decryptedPassword_tFileInputExcel_35;
				if (password_tFileInputExcel_35.isEmpty()) {
					password_tFileInputExcel_35 = null;
				}
				class RegexUtil_tFileInputExcel_35 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_35 regexUtil_tFileInputExcel_35 = new RegexUtil_tFileInputExcel_35();

				Object source_tFileInputExcel_35 = "C:/Users/DELL/Downloads/suivi rdv slide test (Enregistré automatiquement) VF (1).xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_35 = null;

				if (source_tFileInputExcel_35 instanceof String) {
					workbook_tFileInputExcel_35 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_35), password_tFileInputExcel_35,
									true);
				} else if (source_tFileInputExcel_35 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_35 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_35, password_tFileInputExcel_35);
				} else {
					workbook_tFileInputExcel_35 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_35 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_35.addAll(regexUtil_tFileInputExcel_35
							.getSheets(workbook_tFileInputExcel_35, "{40AAA5D9-FC5C-EC11-80E1-005056", false));
					if (sheetList_tFileInputExcel_35.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_35 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_35 : sheetList_tFileInputExcel_35) {
						if (sheet_FilterNull_tFileInputExcel_35 != null
								&& sheetList_FilterNull_tFileInputExcel_35.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_35.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_35.add(sheet_FilterNull_tFileInputExcel_35);
						}
					}
					sheetList_tFileInputExcel_35 = sheetList_FilterNull_tFileInputExcel_35;
					if (sheetList_tFileInputExcel_35.size() > 0) {
						int nb_line_tFileInputExcel_35 = 0;

						int begin_line_tFileInputExcel_35 = 1;

						int footer_input_tFileInputExcel_35 = 0;

						int end_line_tFileInputExcel_35 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_35 : sheetList_tFileInputExcel_35) {
							end_line_tFileInputExcel_35 += (sheet_tFileInputExcel_35.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_35 -= footer_input_tFileInputExcel_35;
						int limit_tFileInputExcel_35 = -1;
						int start_column_tFileInputExcel_35 = 1 - 1;
						int end_column_tFileInputExcel_35 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_35 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_35 = sheetList_tFileInputExcel_35
								.get(0);
						int rowCount_tFileInputExcel_35 = 0;
						int sheetIndex_tFileInputExcel_35 = 0;
						int currentRows_tFileInputExcel_35 = (sheetList_tFileInputExcel_35.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_35 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_35 = df_tFileInputExcel_35.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_35 = begin_line_tFileInputExcel_35; i_tFileInputExcel_35 < end_line_tFileInputExcel_35; i_tFileInputExcel_35++) {

							int emptyColumnCount_tFileInputExcel_35 = 0;

							if (limit_tFileInputExcel_35 != -1
									&& nb_line_tFileInputExcel_35 >= limit_tFileInputExcel_35) {
								break;
							}

							while (i_tFileInputExcel_35 >= rowCount_tFileInputExcel_35
									+ currentRows_tFileInputExcel_35) {
								rowCount_tFileInputExcel_35 += currentRows_tFileInputExcel_35;
								sheet_tFileInputExcel_35 = sheetList_tFileInputExcel_35
										.get(++sheetIndex_tFileInputExcel_35);
								currentRows_tFileInputExcel_35 = (sheet_tFileInputExcel_35.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_35_CURRENT_SHEET", sheet_tFileInputExcel_35.getSheetName());
							if (rowCount_tFileInputExcel_35 <= i_tFileInputExcel_35) {
								row_tFileInputExcel_35 = sheet_tFileInputExcel_35
										.getRow(i_tFileInputExcel_35 - rowCount_tFileInputExcel_35);
							}
							row51 = null;
							int tempRowLength_tFileInputExcel_35 = 15;

							int columnIndex_tFileInputExcel_35 = 0;

							String[] temp_row_tFileInputExcel_35 = new String[tempRowLength_tFileInputExcel_35];
							int excel_end_column_tFileInputExcel_35;
							if (row_tFileInputExcel_35 == null) {
								excel_end_column_tFileInputExcel_35 = 0;
							} else {
								excel_end_column_tFileInputExcel_35 = row_tFileInputExcel_35.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_35;
							if (end_column_tFileInputExcel_35 == -1) {
								actual_end_column_tFileInputExcel_35 = excel_end_column_tFileInputExcel_35;
							} else {
								actual_end_column_tFileInputExcel_35 = end_column_tFileInputExcel_35 > excel_end_column_tFileInputExcel_35
										? excel_end_column_tFileInputExcel_35
										: end_column_tFileInputExcel_35;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_35 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_35; i++) {
								if (i + start_column_tFileInputExcel_35 < actual_end_column_tFileInputExcel_35) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_35 = row_tFileInputExcel_35
											.getCell(i + start_column_tFileInputExcel_35);
									if (cell_tFileInputExcel_35 != null) {
										switch (cell_tFileInputExcel_35.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_35[i] = cell_tFileInputExcel_35
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_35)) {
												temp_row_tFileInputExcel_35[i] = cell_tFileInputExcel_35
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_35[i] = df_tFileInputExcel_35
														.format(cell_tFileInputExcel_35.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_35[i] = String
													.valueOf(cell_tFileInputExcel_35.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_35.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_35[i] = cell_tFileInputExcel_35
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_35)) {
													temp_row_tFileInputExcel_35[i] = cell_tFileInputExcel_35
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_35 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_35.getNumericCellValue());
													temp_row_tFileInputExcel_35[i] = ne_tFileInputExcel_35
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_35[i] = String
														.valueOf(cell_tFileInputExcel_35.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_35[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_35[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_35[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_35[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_35 = false;
							row51 = new row51Struct();
							int curColNum_tFileInputExcel_35 = -1;
							String curColName_tFileInputExcel_35 = "";
							try {
								columnIndex_tFileInputExcel_35 = 0;

								if (temp_row_tFileInputExcel_35[columnIndex_tFileInputExcel_35].length() > 0) {
									curColNum_tFileInputExcel_35 = columnIndex_tFileInputExcel_35
											+ start_column_tFileInputExcel_35 + 1;
									curColName_tFileInputExcel_35 = "Sujet";

									row51.Sujet = temp_row_tFileInputExcel_35[columnIndex_tFileInputExcel_35];
								} else {
									row51.Sujet = null;
									emptyColumnCount_tFileInputExcel_35++;
								}
								columnIndex_tFileInputExcel_35 = 1;

								if (temp_row_tFileInputExcel_35[columnIndex_tFileInputExcel_35].length() > 0) {
									curColNum_tFileInputExcel_35 = columnIndex_tFileInputExcel_35
											+ start_column_tFileInputExcel_35 + 1;
									curColName_tFileInputExcel_35 = "Cree_le";

									if (1 < actual_end_column_tFileInputExcel_35) {
										try {
											if (row_tFileInputExcel_35
													.getCell(columnIndex_tFileInputExcel_35
															+ start_column_tFileInputExcel_35)
													.getCellType() == org.apache.poi.ss.usermodel.CellType.NUMERIC
													&& org.apache.poi.ss.usermodel.DateUtil
															.isCellDateFormatted(row_tFileInputExcel_35
																	.getCell(columnIndex_tFileInputExcel_35
																			+ start_column_tFileInputExcel_35))) {
												row51.Cree_le = row_tFileInputExcel_35
														.getCell(columnIndex_tFileInputExcel_35
																+ start_column_tFileInputExcel_35)
														.getDateCellValue();
											} else {
												java.util.Date tempDate_tFileInputExcel_35 = ParserUtils.parseTo_Date(
														temp_row_tFileInputExcel_35[columnIndex_tFileInputExcel_35],
														"dd-MM-yyyy");
												if (tempDate_tFileInputExcel_35
														.after((new SimpleDateFormat("yyyy/MM/dd hh:mm:ss.SSS"))
																.parse("9999/12/31 23:59:59.999"))
														|| tempDate_tFileInputExcel_35
																.before((new SimpleDateFormat("yyyy/MM/dd"))
																		.parse("1900/01/01"))) {
													throw new RuntimeException("The cell format is not Date in ( Row. "
															+ (nb_line_tFileInputExcel_35 + 1) + " and ColumnNum. "
															+ curColNum_tFileInputExcel_35 + " )");
												} else {
													row51.Cree_le = tempDate_tFileInputExcel_35;
												}
											}
										} catch (java.lang.Exception e) {
											globalMap.put("tFileInputExcel_35_ERROR_MESSAGE", e.getMessage());

											throw new RuntimeException("The cell format is not Date in ( Row. "
													+ (nb_line_tFileInputExcel_35 + 1) + " and ColumnNum. "
													+ curColNum_tFileInputExcel_35 + " )");
										}
									}

								} else {
									row51.Cree_le = null;
									emptyColumnCount_tFileInputExcel_35++;
								}
								columnIndex_tFileInputExcel_35 = 2;

								if (temp_row_tFileInputExcel_35[columnIndex_tFileInputExcel_35].length() > 0) {
									curColNum_tFileInputExcel_35 = columnIndex_tFileInputExcel_35
											+ start_column_tFileInputExcel_35 + 1;
									curColName_tFileInputExcel_35 = "Concernant";

									row51.Concernant = temp_row_tFileInputExcel_35[columnIndex_tFileInputExcel_35];
								} else {
									row51.Concernant = null;
									emptyColumnCount_tFileInputExcel_35++;
								}
								columnIndex_tFileInputExcel_35 = 3;

								if (temp_row_tFileInputExcel_35[columnIndex_tFileInputExcel_35].length() > 0) {
									curColNum_tFileInputExcel_35 = columnIndex_tFileInputExcel_35
											+ start_column_tFileInputExcel_35 + 1;
									curColName_tFileInputExcel_35 = "Cree_par";

									row51.Cree_par = temp_row_tFileInputExcel_35[columnIndex_tFileInputExcel_35];
								} else {
									row51.Cree_par = null;
									emptyColumnCount_tFileInputExcel_35++;
								}
								columnIndex_tFileInputExcel_35 = 4;

								if (temp_row_tFileInputExcel_35[columnIndex_tFileInputExcel_35].length() > 0) {
									curColNum_tFileInputExcel_35 = columnIndex_tFileInputExcel_35
											+ start_column_tFileInputExcel_35 + 1;
									curColName_tFileInputExcel_35 = "Equipe";

									row51.Equipe = temp_row_tFileInputExcel_35[columnIndex_tFileInputExcel_35];
								} else {
									row51.Equipe = null;
									emptyColumnCount_tFileInputExcel_35++;
								}
								columnIndex_tFileInputExcel_35 = 5;

								if (temp_row_tFileInputExcel_35[columnIndex_tFileInputExcel_35].length() > 0) {
									curColNum_tFileInputExcel_35 = columnIndex_tFileInputExcel_35
											+ start_column_tFileInputExcel_35 + 1;
									curColName_tFileInputExcel_35 = "Emplacement";

									row51.Emplacement = temp_row_tFileInputExcel_35[columnIndex_tFileInputExcel_35];
								} else {
									row51.Emplacement = null;
									emptyColumnCount_tFileInputExcel_35++;
								}
								columnIndex_tFileInputExcel_35 = 6;

								if (temp_row_tFileInputExcel_35[columnIndex_tFileInputExcel_35].length() > 0) {
									curColNum_tFileInputExcel_35 = columnIndex_tFileInputExcel_35
											+ start_column_tFileInputExcel_35 + 1;
									curColName_tFileInputExcel_35 = "Heure_de_debut";

									if (6 < actual_end_column_tFileInputExcel_35) {
										try {
											if (row_tFileInputExcel_35
													.getCell(columnIndex_tFileInputExcel_35
															+ start_column_tFileInputExcel_35)
													.getCellType() == org.apache.poi.ss.usermodel.CellType.NUMERIC
													&& org.apache.poi.ss.usermodel.DateUtil
															.isCellDateFormatted(row_tFileInputExcel_35
																	.getCell(columnIndex_tFileInputExcel_35
																			+ start_column_tFileInputExcel_35))) {
												row51.Heure_de_debut = row_tFileInputExcel_35
														.getCell(columnIndex_tFileInputExcel_35
																+ start_column_tFileInputExcel_35)
														.getDateCellValue();
											} else {
												java.util.Date tempDate_tFileInputExcel_35 = ParserUtils.parseTo_Date(
														temp_row_tFileInputExcel_35[columnIndex_tFileInputExcel_35],
														"yyyy-MM-dd HH:mm:ss");
												if (tempDate_tFileInputExcel_35
														.after((new SimpleDateFormat("yyyy/MM/dd hh:mm:ss.SSS"))
																.parse("9999/12/31 23:59:59.999"))
														|| tempDate_tFileInputExcel_35
																.before((new SimpleDateFormat("yyyy/MM/dd"))
																		.parse("1900/01/01"))) {
													throw new RuntimeException("The cell format is not Date in ( Row. "
															+ (nb_line_tFileInputExcel_35 + 1) + " and ColumnNum. "
															+ curColNum_tFileInputExcel_35 + " )");
												} else {
													row51.Heure_de_debut = tempDate_tFileInputExcel_35;
												}
											}
										} catch (java.lang.Exception e) {
											globalMap.put("tFileInputExcel_35_ERROR_MESSAGE", e.getMessage());

											throw new RuntimeException("The cell format is not Date in ( Row. "
													+ (nb_line_tFileInputExcel_35 + 1) + " and ColumnNum. "
													+ curColNum_tFileInputExcel_35 + " )");
										}
									}

								} else {
									row51.Heure_de_debut = null;
									emptyColumnCount_tFileInputExcel_35++;
								}
								columnIndex_tFileInputExcel_35 = 7;

								if (temp_row_tFileInputExcel_35[columnIndex_tFileInputExcel_35].length() > 0) {
									curColNum_tFileInputExcel_35 = columnIndex_tFileInputExcel_35
											+ start_column_tFileInputExcel_35 + 1;
									curColName_tFileInputExcel_35 = "Heure_de_fin";

									row51.Heure_de_fin = temp_row_tFileInputExcel_35[columnIndex_tFileInputExcel_35];
								} else {
									row51.Heure_de_fin = null;
									emptyColumnCount_tFileInputExcel_35++;
								}
								columnIndex_tFileInputExcel_35 = 8;

								if (temp_row_tFileInputExcel_35[columnIndex_tFileInputExcel_35].length() > 0) {
									curColNum_tFileInputExcel_35 = columnIndex_tFileInputExcel_35
											+ start_column_tFileInputExcel_35 + 1;
									curColName_tFileInputExcel_35 = "Statut";

									row51.Statut = temp_row_tFileInputExcel_35[columnIndex_tFileInputExcel_35];
								} else {
									row51.Statut = null;
									emptyColumnCount_tFileInputExcel_35++;
								}
								columnIndex_tFileInputExcel_35 = 9;

								if (temp_row_tFileInputExcel_35[columnIndex_tFileInputExcel_35].length() > 0) {
									curColNum_tFileInputExcel_35 = columnIndex_tFileInputExcel_35
											+ start_column_tFileInputExcel_35 + 1;
									curColName_tFileInputExcel_35 = "Raison_sociale__Concernant";

									row51.Raison_sociale__Concernant = temp_row_tFileInputExcel_35[columnIndex_tFileInputExcel_35];
								} else {
									row51.Raison_sociale__Concernant = null;
									emptyColumnCount_tFileInputExcel_35++;
								}
								columnIndex_tFileInputExcel_35 = 10;

								if (temp_row_tFileInputExcel_35[columnIndex_tFileInputExcel_35].length() > 0) {
									curColNum_tFileInputExcel_35 = columnIndex_tFileInputExcel_35
											+ start_column_tFileInputExcel_35 + 1;
									curColName_tFileInputExcel_35 = "Delegation__Concernant";

									row51.Delegation__Concernant = temp_row_tFileInputExcel_35[columnIndex_tFileInputExcel_35];
								} else {
									row51.Delegation__Concernant = null;
									emptyColumnCount_tFileInputExcel_35++;
								}
								columnIndex_tFileInputExcel_35 = 11;

								if (temp_row_tFileInputExcel_35[columnIndex_tFileInputExcel_35].length() > 0) {
									curColNum_tFileInputExcel_35 = columnIndex_tFileInputExcel_35
											+ start_column_tFileInputExcel_35 + 1;
									curColName_tFileInputExcel_35 = "Gouvernorat__Concernant";

									row51.Gouvernorat__Concernant = temp_row_tFileInputExcel_35[columnIndex_tFileInputExcel_35];
								} else {
									row51.Gouvernorat__Concernant = null;
									emptyColumnCount_tFileInputExcel_35++;
								}
								columnIndex_tFileInputExcel_35 = 12;

								if (temp_row_tFileInputExcel_35[columnIndex_tFileInputExcel_35].length() > 0) {
									curColNum_tFileInputExcel_35 = columnIndex_tFileInputExcel_35
											+ start_column_tFileInputExcel_35 + 1;
									curColName_tFileInputExcel_35 = "Jour_de_la_semaine";

									row51.Jour_de_la_semaine = temp_row_tFileInputExcel_35[columnIndex_tFileInputExcel_35];
								} else {
									row51.Jour_de_la_semaine = null;
									emptyColumnCount_tFileInputExcel_35++;
								}
								columnIndex_tFileInputExcel_35 = 13;

								if (temp_row_tFileInputExcel_35[columnIndex_tFileInputExcel_35].length() > 0) {
									curColNum_tFileInputExcel_35 = columnIndex_tFileInputExcel_35
											+ start_column_tFileInputExcel_35 + 1;
									curColName_tFileInputExcel_35 = "Description";

									row51.Description = temp_row_tFileInputExcel_35[columnIndex_tFileInputExcel_35];
								} else {
									row51.Description = null;
									emptyColumnCount_tFileInputExcel_35++;
								}
								columnIndex_tFileInputExcel_35 = 14;

								if (temp_row_tFileInputExcel_35[columnIndex_tFileInputExcel_35].length() > 0) {
									curColNum_tFileInputExcel_35 = columnIndex_tFileInputExcel_35
											+ start_column_tFileInputExcel_35 + 1;
									curColName_tFileInputExcel_35 = "Categorie";

									row51.Categorie = temp_row_tFileInputExcel_35[columnIndex_tFileInputExcel_35];
								} else {
									row51.Categorie = null;
									emptyColumnCount_tFileInputExcel_35++;
								}

								nb_line_tFileInputExcel_35++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_35_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_35 = true;
								System.err.println(e.getMessage());
								row51 = null;
							}

							/**
							 * [tFileInputExcel_35 begin ] stop
							 */

							/**
							 * [tFileInputExcel_35 main ] start
							 */

							currentComponent = "tFileInputExcel_35";

							tos_count_tFileInputExcel_35++;

							/**
							 * [tFileInputExcel_35 main ] stop
							 */

							/**
							 * [tFileInputExcel_35 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_35";

							/**
							 * [tFileInputExcel_35 process_data_begin ] stop
							 */
// Start of branch "row51"
							if (row51 != null) {

								/**
								 * [tMap_35 main ] start
								 */

								currentComponent = "tMap_35";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row51"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_35 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_35 = false;
								boolean mainRowRejected_tMap_35 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_35__Struct Var = Var__tMap_35;// ###############################
									// ###############################
									// # Output tables

									copyOfcopyOfcopyOfcopyOft9 = null;

// # Output table : 'copyOfcopyOfcopyOfcopyOft9'
									copyOfcopyOfcopyOfcopyOft9_tmp.Statut = row51.Statut;
									copyOfcopyOfcopyOfcopyOft9 = copyOfcopyOfcopyOfcopyOft9_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_35 = false;

								tos_count_tMap_35++;

								/**
								 * [tMap_35 main ] stop
								 */

								/**
								 * [tMap_35 process_data_begin ] start
								 */

								currentComponent = "tMap_35";

								/**
								 * [tMap_35 process_data_begin ] stop
								 */
// Start of branch "copyOfcopyOfcopyOfcopyOft9"
								if (copyOfcopyOfcopyOfcopyOft9 != null) {

									/**
									 * [tUnite_5 main ] start
									 */

									currentComponent = "tUnite_5";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "copyOfcopyOfcopyOfcopyOft9"

										);
									}

//////////

// for output
									row11 = new row11Struct();

									row11.Staut_Final = copyOfcopyOfcopyOfcopyOft9.Statut;

									nb_line_tUnite_5++;

//////////

									tos_count_tUnite_5++;

									/**
									 * [tUnite_5 main ] stop
									 */

									/**
									 * [tUnite_5 process_data_begin ] start
									 */

									currentComponent = "tUnite_5";

									/**
									 * [tUnite_5 process_data_begin ] stop
									 */

									/**
									 * [tMap_8 main ] start
									 */

									currentComponent = "tMap_8";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "row11"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_8 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_8 = false;
									boolean mainRowRejected_tMap_8 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row12"
									///////////////////////////////////////////////

									boolean forceLooprow12 = false;

									row12Struct row12ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_8) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_8 = false;

										row12HashKey.Staut_Final = row11.Staut_Final;

										row12HashKey.hashCodeDirty = true;

										tHash_Lookup_row12.lookup(row12HashKey);

										if (!tHash_Lookup_row12.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_8 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row12 != null && tHash_Lookup_row12.getCount(row12HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row12' and it contains more one result from keys : row12.Staut_Final = '" +
										// row12HashKey.Staut_Final + "'");
									} // G 071

									row12Struct row12 = null;

									row12Struct fromLookup_row12 = null;
									row12 = row12Default;

									if (tHash_Lookup_row12 != null && tHash_Lookup_row12.hasNext()) { // G 099

										fromLookup_row12 = tHash_Lookup_row12.next();

									} // G 099

									if (fromLookup_row12 != null) {
										row12 = fromLookup_row12;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_8__Struct Var = Var__tMap_8;// ###############################
										// ###############################
										// # Output tables

										l = null;

										if (!rejectedInnerJoin_tMap_8) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'l'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_8) {
											l_tmp.Staut_Final = row11.Staut_Final;
											l = l_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_8 = false;

									tos_count_tMap_8++;

									/**
									 * [tMap_8 main ] stop
									 */

									/**
									 * [tMap_8 process_data_begin ] start
									 */

									currentComponent = "tMap_8";

									/**
									 * [tMap_8 process_data_begin ] stop
									 */
// Start of branch "l"
									if (l != null) {

										/**
										 * [tUniqRow_5 main ] start
										 */

										currentComponent = "tUniqRow_5";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "l"

											);
										}

										row391 = null;
										finder_tUniqRow_5.Staut_Final = l.Staut_Final;
										finder_tUniqRow_5.hashCodeDirty = true;
										if (!keystUniqRow_5.contains(finder_tUniqRow_5)) {
											KeyStruct_tUniqRow_5 new_tUniqRow_5 = new KeyStruct_tUniqRow_5();

											new_tUniqRow_5.Staut_Final = l.Staut_Final;

											keystUniqRow_5.add(new_tUniqRow_5);
											if (row391 == null) {

												row391 = new row391Struct();
											}
											row391.Staut_Final = l.Staut_Final;
											nb_uniques_tUniqRow_5++;
										} else {
											nb_duplicates_tUniqRow_5++;
										}

										tos_count_tUniqRow_5++;

										/**
										 * [tUniqRow_5 main ] stop
										 */

										/**
										 * [tUniqRow_5 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_5";

										/**
										 * [tUniqRow_5 process_data_begin ] stop
										 */
// Start of branch "row391"
										if (row391 != null) {

											/**
											 * [tDBOutput_8 main ] start
											 */

											currentComponent = "tDBOutput_8";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row391"

												);
											}

											whetherReject_tDBOutput_8 = false;
											if (row391.Staut_Final == null) {
												pstmt_tDBOutput_8.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_8.setString(1, row391.Staut_Final);
											}

											pstmt_tDBOutput_8.addBatch();
											nb_line_tDBOutput_8++;

											batchSizeCounter_tDBOutput_8++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_8 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_8) throws Exception {
													try {

														for (int countEach_tDBOutput_8 : pstmt_tDBOutput_8
																.executeBatch()) {
															if (countEach_tDBOutput_8 == -2
																	|| countEach_tDBOutput_8 == -3) {
																break;
															}
															counter += countEach_tDBOutput_8;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_8_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_8 = 0;
														for (int countEach_tDBOutput_8 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_8 < 0 ? 0
																	: countEach_tDBOutput_8);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_8) throws Exception {
													try {

														for (int countEach_tDBOutput_8 : pstmt_tDBOutput_8
																.executeBatch()) {
															if (countEach_tDBOutput_8 == -2
																	|| countEach_tDBOutput_8 == -3) {
																break;
															}
															counter += countEach_tDBOutput_8;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_8_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_8 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_8 < 0 ? 0
																	: countEach_tDBOutput_8);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_8 > 0)
													&& (batchSize_tDBOutput_8 <= batchSizeCounter_tDBOutput_8)) {

												insertedCount_tDBOutput_8 = new LimitBytesHelper_tDBOutput_8()
														.limitBytePart1(insertedCount_tDBOutput_8, pstmt_tDBOutput_8);
												rowsToCommitCount_tDBOutput_8 = insertedCount_tDBOutput_8;

												batchSizeCounter_tDBOutput_8 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_8++;
											if (commitEvery_tDBOutput_8 <= commitCounter_tDBOutput_8) {
												if ((batchSize_tDBOutput_8 > 0) && (batchSizeCounter_tDBOutput_8 > 0)) {

													insertedCount_tDBOutput_8 = new LimitBytesHelper_tDBOutput_8()
															.limitBytePart1(insertedCount_tDBOutput_8,
																	pstmt_tDBOutput_8);

													batchSizeCounter_tDBOutput_8 = 0;
												}
												if (rowsToCommitCount_tDBOutput_8 != 0) {

												}
												conn_tDBOutput_8.commit();
												if (rowsToCommitCount_tDBOutput_8 != 0) {

													rowsToCommitCount_tDBOutput_8 = 0;
												}
												commitCounter_tDBOutput_8 = 0;
											}

											tos_count_tDBOutput_8++;

											/**
											 * [tDBOutput_8 main ] stop
											 */

											/**
											 * [tDBOutput_8 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_8";

											/**
											 * [tDBOutput_8 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_8 process_data_end ] start
											 */

											currentComponent = "tDBOutput_8";

											/**
											 * [tDBOutput_8 process_data_end ] stop
											 */

										} // End of branch "row391"

										/**
										 * [tUniqRow_5 process_data_end ] start
										 */

										currentComponent = "tUniqRow_5";

										/**
										 * [tUniqRow_5 process_data_end ] stop
										 */

									} // End of branch "l"

									/**
									 * [tMap_8 process_data_end ] start
									 */

									currentComponent = "tMap_8";

									/**
									 * [tMap_8 process_data_end ] stop
									 */

									/**
									 * [tUnite_5 process_data_end ] start
									 */

									currentComponent = "tUnite_5";

									/**
									 * [tUnite_5 process_data_end ] stop
									 */

								} // End of branch "copyOfcopyOfcopyOfcopyOft9"

								/**
								 * [tMap_35 process_data_end ] start
								 */

								currentComponent = "tMap_35";

								/**
								 * [tMap_35 process_data_end ] stop
								 */

							} // End of branch "row51"

							/**
							 * [tFileInputExcel_35 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_35";

							/**
							 * [tFileInputExcel_35 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_35 end ] start
							 */

							currentComponent = "tFileInputExcel_35";

						}

						globalMap.put("tFileInputExcel_35_NB_LINE", nb_line_tFileInputExcel_35);

					}

				} finally {

					if (!(source_tFileInputExcel_35 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_35.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_35", true);
				end_Hash.put("tFileInputExcel_35", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_35 end ] stop
				 */

				/**
				 * [tMap_35 end ] start
				 */

				currentComponent = "tMap_35";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row51");
				}

				ok_Hash.put("tMap_35", true);
				end_Hash.put("tMap_35", System.currentTimeMillis());

				/**
				 * [tMap_35 end ] stop
				 */

				/**
				 * [tUnite_5 end ] start
				 */

				currentComponent = "tUnite_5";

				globalMap.put("tUnite_5_NB_LINE", nb_line_tUnite_5);
				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "copyOfcopyOfcopyOfcopyOft9",
							"copyOfcopyOfcopyOft18", "copyOfcopyOfcopyOfcopyOft5");
				}

				ok_Hash.put("tUnite_5", true);
				end_Hash.put("tUnite_5", System.currentTimeMillis());

				/**
				 * [tUnite_5 end ] stop
				 */

				/**
				 * [tMap_8 end ] start
				 */

				currentComponent = "tMap_8";

// ###############################
// # Lookup hashes releasing
				if (tHash_Lookup_row12 != null) {
					tHash_Lookup_row12.endGet();
				}
				globalMap.remove("tHash_Lookup_row12");

// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row11");
				}

				ok_Hash.put("tMap_8", true);
				end_Hash.put("tMap_8", System.currentTimeMillis());

				/**
				 * [tMap_8 end ] stop
				 */

				/**
				 * [tUniqRow_5 end ] start
				 */

				currentComponent = "tUniqRow_5";

				globalMap.put("tUniqRow_5_NB_UNIQUES", nb_uniques_tUniqRow_5);
				globalMap.put("tUniqRow_5_NB_DUPLICATES", nb_duplicates_tUniqRow_5);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "l");
				}

				ok_Hash.put("tUniqRow_5", true);
				end_Hash.put("tUniqRow_5", System.currentTimeMillis());

				/**
				 * [tUniqRow_5 end ] stop
				 */

				/**
				 * [tDBOutput_8 end ] start
				 */

				currentComponent = "tDBOutput_8";

				try {
					int countSum_tDBOutput_8 = 0;
					if (pstmt_tDBOutput_8 != null && batchSizeCounter_tDBOutput_8 > 0) {

						for (int countEach_tDBOutput_8 : pstmt_tDBOutput_8.executeBatch()) {
							if (countEach_tDBOutput_8 == -2 || countEach_tDBOutput_8 == -3) {
								break;
							}
							countSum_tDBOutput_8 += countEach_tDBOutput_8;
						}
						rowsToCommitCount_tDBOutput_8 += countSum_tDBOutput_8;

					}

					insertedCount_tDBOutput_8 += countSum_tDBOutput_8;

				} catch (java.sql.BatchUpdateException e) {
					globalMap.put("tDBOutput_8_ERROR_MESSAGE", e.getMessage());

					int countSum_tDBOutput_8 = 0;
					for (int countEach_tDBOutput_8 : e.getUpdateCounts()) {
						countSum_tDBOutput_8 += (countEach_tDBOutput_8 < 0 ? 0 : countEach_tDBOutput_8);
					}
					rowsToCommitCount_tDBOutput_8 += countSum_tDBOutput_8;

					insertedCount_tDBOutput_8 += countSum_tDBOutput_8;

					System.err.println(e.getMessage());

				}
				if (pstmt_tDBOutput_8 != null) {

					pstmt_tDBOutput_8.close();
					resourceMap.remove("pstmt_tDBOutput_8");

				}
				resourceMap.put("statementClosed_tDBOutput_8", true);
				if (rowsToCommitCount_tDBOutput_8 != 0) {

				}
				conn_tDBOutput_8.commit();
				if (rowsToCommitCount_tDBOutput_8 != 0) {

					rowsToCommitCount_tDBOutput_8 = 0;
				}
				commitCounter_tDBOutput_8 = 0;
				conn_tDBOutput_8.close();
				resourceMap.put("finish_tDBOutput_8", true);

				nb_line_deleted_tDBOutput_8 = nb_line_deleted_tDBOutput_8 + deletedCount_tDBOutput_8;
				nb_line_update_tDBOutput_8 = nb_line_update_tDBOutput_8 + updatedCount_tDBOutput_8;
				nb_line_inserted_tDBOutput_8 = nb_line_inserted_tDBOutput_8 + insertedCount_tDBOutput_8;
				nb_line_rejected_tDBOutput_8 = nb_line_rejected_tDBOutput_8 + rejectedCount_tDBOutput_8;

				globalMap.put("tDBOutput_8_NB_LINE", nb_line_tDBOutput_8);
				globalMap.put("tDBOutput_8_NB_LINE_UPDATED", nb_line_update_tDBOutput_8);
				globalMap.put("tDBOutput_8_NB_LINE_INSERTED", nb_line_inserted_tDBOutput_8);
				globalMap.put("tDBOutput_8_NB_LINE_DELETED", nb_line_deleted_tDBOutput_8);
				globalMap.put("tDBOutput_8_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_8);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row391");
				}

				ok_Hash.put("tDBOutput_8", true);
				end_Hash.put("tDBOutput_8", System.currentTimeMillis());

				/**
				 * [tDBOutput_8 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			// free memory for "tMap_8"
			globalMap.remove("tHash_Lookup_row12");

			try {

				/**
				 * [tFileInputExcel_17 finally ] start
				 */

				currentComponent = "tFileInputExcel_17";

				/**
				 * [tFileInputExcel_17 finally ] stop
				 */

				/**
				 * [tMap_17 finally ] start
				 */

				currentComponent = "tMap_17";

				/**
				 * [tMap_17 finally ] stop
				 */

				/**
				 * [tFileInputExcel_18 finally ] start
				 */

				currentComponent = "tFileInputExcel_18";

				/**
				 * [tFileInputExcel_18 finally ] stop
				 */

				/**
				 * [tMap_18 finally ] start
				 */

				currentComponent = "tMap_18";

				/**
				 * [tMap_18 finally ] stop
				 */

				/**
				 * [tFileInputExcel_35 finally ] start
				 */

				currentComponent = "tFileInputExcel_35";

				/**
				 * [tFileInputExcel_35 finally ] stop
				 */

				/**
				 * [tMap_35 finally ] start
				 */

				currentComponent = "tMap_35";

				/**
				 * [tMap_35 finally ] stop
				 */

				/**
				 * [tUnite_5 finally ] start
				 */

				currentComponent = "tUnite_5";

				/**
				 * [tUnite_5 finally ] stop
				 */

				/**
				 * [tMap_8 finally ] start
				 */

				currentComponent = "tMap_8";

				/**
				 * [tMap_8 finally ] stop
				 */

				/**
				 * [tUniqRow_5 finally ] start
				 */

				currentComponent = "tUniqRow_5";

				/**
				 * [tUniqRow_5 finally ] stop
				 */

				/**
				 * [tDBOutput_8 finally ] start
				 */

				currentComponent = "tDBOutput_8";

				try {
					if (resourceMap.get("statementClosed_tDBOutput_8") == null) {
						java.sql.PreparedStatement pstmtToClose_tDBOutput_8 = null;
						if ((pstmtToClose_tDBOutput_8 = (java.sql.PreparedStatement) resourceMap
								.remove("pstmt_tDBOutput_8")) != null) {
							pstmtToClose_tDBOutput_8.close();
						}
					}
				} finally {
					if (resourceMap.get("finish_tDBOutput_8") == null) {
						java.sql.Connection ctn_tDBOutput_8 = null;
						if ((ctn_tDBOutput_8 = (java.sql.Connection) resourceMap.get("conn_tDBOutput_8")) != null) {
							try {
								ctn_tDBOutput_8.close();
							} catch (java.sql.SQLException sqlEx_tDBOutput_8) {
								String errorMessage_tDBOutput_8 = "failed to close the connection in tDBOutput_8 :"
										+ sqlEx_tDBOutput_8.getMessage();
								System.err.println(errorMessage_tDBOutput_8);
							}
						}
					}
				}

				/**
				 * [tDBOutput_8 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tFileInputExcel_17_SUBPROCESS_STATE", 1);
	}

	public static class row3911Struct implements routines.system.IPersistableRow<row3911Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Gouvernorat;

		public String getGouvernorat() {
			return this.Gouvernorat;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Gouvernorat = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Gouvernorat = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Gouvernorat, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Gouvernorat, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Gouvernorat=" + Gouvernorat);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row3911Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class aStruct implements routines.system.IPersistableRow<aStruct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Gouvernorat;

		public String getGouvernorat() {
			return this.Gouvernorat;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Gouvernorat = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Gouvernorat = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Gouvernorat, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Gouvernorat, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Gouvernorat=" + Gouvernorat);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(aStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row13Struct implements routines.system.IPersistableRow<row13Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Gouvernorat;

		public String getGouvernorat() {
			return this.Gouvernorat;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Gouvernorat = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Gouvernorat = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Gouvernorat, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Gouvernorat, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Gouvernorat=" + Gouvernorat);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row13Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class copyOfcopyOfcopyOft8_0_3Struct
			implements routines.system.IPersistableRow<copyOfcopyOfcopyOft8_0_3Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Gouvernorat;

		public String getGouvernorat() {
			return this.Gouvernorat;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Gouvernorat = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Gouvernorat = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Gouvernorat, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Gouvernorat, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Gouvernorat=" + Gouvernorat);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(copyOfcopyOfcopyOft8_0_3Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row54Struct implements routines.system.IPersistableRow<row54Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Reference_OSM_mere__Opportunite;

		public String getReference_OSM_mere__Opportunite() {
			return this.Reference_OSM_mere__Opportunite;
		}

		public String Reference_OSM__Opportunite;

		public String getReference_OSM__Opportunite() {
			return this.Reference_OSM__Opportunite;
		}

		public String Client_Prospect__Opportunite;

		public String getClient_Prospect__Opportunite() {
			return this.Client_Prospect__Opportunite;
		}

		public String Offre;

		public String getOffre() {
			return this.Offre;
		}

		public String Nature_Offre;

		public String getNature_Offre() {
			return this.Nature_Offre;
		}

		public String Produit_existant;

		public String getProduit_existant() {
			return this.Produit_existant;
		}

		public String Nature_produit__Produit_existant;

		public String getNature_produit__Produit_existant() {
			return this.Nature_produit__Produit_existant;
		}

		public Float Quantite;

		public Float getQuantite() {
			return this.Quantite;
		}

		public String Prix_unitaire;

		public String getPrix_unitaire() {
			return this.Prix_unitaire;
		}

		public String Total_final;

		public String getTotal_final() {
			return this.Total_final;
		}

		public String Remise______Opportunite;

		public String getRemise______Opportunite() {
			return this.Remise______Opportunite;
		}

		public Float Total_remise_HT;

		public Float getTotal_remise_HT() {
			return this.Total_remise_HT;
		}

		public String Extension__Opportunite;

		public String getExtension__Opportunite() {
			return this.Extension__Opportunite;
		}

		public String Budget_a_valider__Opportunite;

		public String getBudget_a_valider__Opportunite() {
			return this.Budget_a_valider__Opportunite;
		}

		public String Budget_a_valider_Extension__Opportunite;

		public String getBudget_a_valider_Extension__Opportunite() {
			return this.Budget_a_valider_Extension__Opportunite;
		}

		public String Duree_d_engagement__Opportunite;

		public String getDuree_d_engagement__Opportunite() {
			return this.Duree_d_engagement__Opportunite;
		}

		public String Type_d_engagement__Opportunite;

		public String getType_d_engagement__Opportunite() {
			return this.Type_d_engagement__Opportunite;
		}

		public String Demandeur__Opportunite;

		public String getDemandeur__Opportunite() {
			return this.Demandeur__Opportunite;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public String Cree_le__Opportunite;

		public String getCree_le__Opportunite() {
			return this.Cree_le__Opportunite;
		}

		public Integer Mois_de_creation;

		public Integer getMois_de_creation() {
			return this.Mois_de_creation;
		}

		public Integer Annee_de_creation;

		public Integer getAnnee_de_creation() {
			return this.Annee_de_creation;
		}

		public String Mois_et_annee_de_creation;

		public String getMois_et_annee_de_creation() {
			return this.Mois_et_annee_de_creation;
		}

		public String Raison_de_statut_OSM__Opportunite;

		public String getRaison_de_statut_OSM__Opportunite() {
			return this.Raison_de_statut_OSM__Opportunite;
		}

		public String Statut_OSM__Opportunite;

		public String getStatut_OSM__Opportunite() {
			return this.Statut_OSM__Opportunite;
		}

		public String Statut_activation__Commande;

		public String getStatut_activation__Commande() {
			return this.Statut_activation__Commande;
		}

		public String Date_d_activation__Commande;

		public String getDate_d_activation__Commande() {
			return this.Date_d_activation__Commande;
		}

		public Integer Mois_d_activation;

		public Integer getMois_d_activation() {
			return this.Mois_d_activation;
		}

		public String Staut_Final;

		public String getStaut_Final() {
			return this.Staut_Final;
		}

		public String Gouvernorat;

		public String getGouvernorat() {
			return this.Gouvernorat;
		}

		public String Phase_de_l_opportunite__Opportunite;

		public String getPhase_de_l_opportunite__Opportunite() {
			return this.Phase_de_l_opportunite__Opportunite;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Reference_OSM_mere__Opportunite = readString(dis);

					this.Reference_OSM__Opportunite = readString(dis);

					this.Client_Prospect__Opportunite = readString(dis);

					this.Offre = readString(dis);

					this.Nature_Offre = readString(dis);

					this.Produit_existant = readString(dis);

					this.Nature_produit__Produit_existant = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Quantite = null;
					} else {
						this.Quantite = dis.readFloat();
					}

					this.Prix_unitaire = readString(dis);

					this.Total_final = readString(dis);

					this.Remise______Opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Total_remise_HT = null;
					} else {
						this.Total_remise_HT = dis.readFloat();
					}

					this.Extension__Opportunite = readString(dis);

					this.Budget_a_valider__Opportunite = readString(dis);

					this.Budget_a_valider_Extension__Opportunite = readString(dis);

					this.Duree_d_engagement__Opportunite = readString(dis);

					this.Type_d_engagement__Opportunite = readString(dis);

					this.Demandeur__Opportunite = readString(dis);

					this.Equipe = readString(dis);

					this.Cree_le__Opportunite = readString(dis);

					this.Mois_de_creation = readInteger(dis);

					this.Annee_de_creation = readInteger(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Raison_de_statut_OSM__Opportunite = readString(dis);

					this.Statut_OSM__Opportunite = readString(dis);

					this.Statut_activation__Commande = readString(dis);

					this.Date_d_activation__Commande = readString(dis);

					this.Mois_d_activation = readInteger(dis);

					this.Staut_Final = readString(dis);

					this.Gouvernorat = readString(dis);

					this.Phase_de_l_opportunite__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Reference_OSM_mere__Opportunite = readString(dis);

					this.Reference_OSM__Opportunite = readString(dis);

					this.Client_Prospect__Opportunite = readString(dis);

					this.Offre = readString(dis);

					this.Nature_Offre = readString(dis);

					this.Produit_existant = readString(dis);

					this.Nature_produit__Produit_existant = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Quantite = null;
					} else {
						this.Quantite = dis.readFloat();
					}

					this.Prix_unitaire = readString(dis);

					this.Total_final = readString(dis);

					this.Remise______Opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Total_remise_HT = null;
					} else {
						this.Total_remise_HT = dis.readFloat();
					}

					this.Extension__Opportunite = readString(dis);

					this.Budget_a_valider__Opportunite = readString(dis);

					this.Budget_a_valider_Extension__Opportunite = readString(dis);

					this.Duree_d_engagement__Opportunite = readString(dis);

					this.Type_d_engagement__Opportunite = readString(dis);

					this.Demandeur__Opportunite = readString(dis);

					this.Equipe = readString(dis);

					this.Cree_le__Opportunite = readString(dis);

					this.Mois_de_creation = readInteger(dis);

					this.Annee_de_creation = readInteger(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Raison_de_statut_OSM__Opportunite = readString(dis);

					this.Statut_OSM__Opportunite = readString(dis);

					this.Statut_activation__Commande = readString(dis);

					this.Date_d_activation__Commande = readString(dis);

					this.Mois_d_activation = readInteger(dis);

					this.Staut_Final = readString(dis);

					this.Gouvernorat = readString(dis);

					this.Phase_de_l_opportunite__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Reference_OSM_mere__Opportunite, dos);

				// String

				writeString(this.Reference_OSM__Opportunite, dos);

				// String

				writeString(this.Client_Prospect__Opportunite, dos);

				// String

				writeString(this.Offre, dos);

				// String

				writeString(this.Nature_Offre, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Nature_produit__Produit_existant, dos);

				// Float

				if (this.Quantite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Quantite);
				}

				// String

				writeString(this.Prix_unitaire, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Remise______Opportunite, dos);

				// Float

				if (this.Total_remise_HT == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Total_remise_HT);
				}

				// String

				writeString(this.Extension__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider_Extension__Opportunite, dos);

				// String

				writeString(this.Duree_d_engagement__Opportunite, dos);

				// String

				writeString(this.Type_d_engagement__Opportunite, dos);

				// String

				writeString(this.Demandeur__Opportunite, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Cree_le__Opportunite, dos);

				// Integer

				writeInteger(this.Mois_de_creation, dos);

				// Integer

				writeInteger(this.Annee_de_creation, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Raison_de_statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_activation__Commande, dos);

				// String

				writeString(this.Date_d_activation__Commande, dos);

				// Integer

				writeInteger(this.Mois_d_activation, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Gouvernorat, dos);

				// String

				writeString(this.Phase_de_l_opportunite__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Reference_OSM_mere__Opportunite, dos);

				// String

				writeString(this.Reference_OSM__Opportunite, dos);

				// String

				writeString(this.Client_Prospect__Opportunite, dos);

				// String

				writeString(this.Offre, dos);

				// String

				writeString(this.Nature_Offre, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Nature_produit__Produit_existant, dos);

				// Float

				if (this.Quantite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Quantite);
				}

				// String

				writeString(this.Prix_unitaire, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Remise______Opportunite, dos);

				// Float

				if (this.Total_remise_HT == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Total_remise_HT);
				}

				// String

				writeString(this.Extension__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider_Extension__Opportunite, dos);

				// String

				writeString(this.Duree_d_engagement__Opportunite, dos);

				// String

				writeString(this.Type_d_engagement__Opportunite, dos);

				// String

				writeString(this.Demandeur__Opportunite, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Cree_le__Opportunite, dos);

				// Integer

				writeInteger(this.Mois_de_creation, dos);

				// Integer

				writeInteger(this.Annee_de_creation, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Raison_de_statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_activation__Commande, dos);

				// String

				writeString(this.Date_d_activation__Commande, dos);

				// Integer

				writeInteger(this.Mois_d_activation, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Gouvernorat, dos);

				// String

				writeString(this.Phase_de_l_opportunite__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Reference_OSM_mere__Opportunite=" + Reference_OSM_mere__Opportunite);
			sb.append(",Reference_OSM__Opportunite=" + Reference_OSM__Opportunite);
			sb.append(",Client_Prospect__Opportunite=" + Client_Prospect__Opportunite);
			sb.append(",Offre=" + Offre);
			sb.append(",Nature_Offre=" + Nature_Offre);
			sb.append(",Produit_existant=" + Produit_existant);
			sb.append(",Nature_produit__Produit_existant=" + Nature_produit__Produit_existant);
			sb.append(",Quantite=" + String.valueOf(Quantite));
			sb.append(",Prix_unitaire=" + Prix_unitaire);
			sb.append(",Total_final=" + Total_final);
			sb.append(",Remise______Opportunite=" + Remise______Opportunite);
			sb.append(",Total_remise_HT=" + String.valueOf(Total_remise_HT));
			sb.append(",Extension__Opportunite=" + Extension__Opportunite);
			sb.append(",Budget_a_valider__Opportunite=" + Budget_a_valider__Opportunite);
			sb.append(",Budget_a_valider_Extension__Opportunite=" + Budget_a_valider_Extension__Opportunite);
			sb.append(",Duree_d_engagement__Opportunite=" + Duree_d_engagement__Opportunite);
			sb.append(",Type_d_engagement__Opportunite=" + Type_d_engagement__Opportunite);
			sb.append(",Demandeur__Opportunite=" + Demandeur__Opportunite);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Cree_le__Opportunite=" + Cree_le__Opportunite);
			sb.append(",Mois_de_creation=" + String.valueOf(Mois_de_creation));
			sb.append(",Annee_de_creation=" + String.valueOf(Annee_de_creation));
			sb.append(",Mois_et_annee_de_creation=" + Mois_et_annee_de_creation);
			sb.append(",Raison_de_statut_OSM__Opportunite=" + Raison_de_statut_OSM__Opportunite);
			sb.append(",Statut_OSM__Opportunite=" + Statut_OSM__Opportunite);
			sb.append(",Statut_activation__Commande=" + Statut_activation__Commande);
			sb.append(",Date_d_activation__Commande=" + Date_d_activation__Commande);
			sb.append(",Mois_d_activation=" + String.valueOf(Mois_d_activation));
			sb.append(",Staut_Final=" + Staut_Final);
			sb.append(",Gouvernorat=" + Gouvernorat);
			sb.append(",Phase_de_l_opportunite__Opportunite=" + Phase_de_l_opportunite__Opportunite);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row54Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class after_tFileInputExcel_20Struct
			implements routines.system.IPersistableRow<after_tFileInputExcel_20Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Reference_OSM_mere__Opportunite;

		public String getReference_OSM_mere__Opportunite() {
			return this.Reference_OSM_mere__Opportunite;
		}

		public String Reference_OSM__Opportunite;

		public String getReference_OSM__Opportunite() {
			return this.Reference_OSM__Opportunite;
		}

		public String Client_Prospect__Opportunite;

		public String getClient_Prospect__Opportunite() {
			return this.Client_Prospect__Opportunite;
		}

		public String Offre;

		public String getOffre() {
			return this.Offre;
		}

		public String Nature_Offre;

		public String getNature_Offre() {
			return this.Nature_Offre;
		}

		public String Produit_existant;

		public String getProduit_existant() {
			return this.Produit_existant;
		}

		public String Nature_produit__Produit_existant;

		public String getNature_produit__Produit_existant() {
			return this.Nature_produit__Produit_existant;
		}

		public Float Quantite;

		public Float getQuantite() {
			return this.Quantite;
		}

		public String Prix_unitaire;

		public String getPrix_unitaire() {
			return this.Prix_unitaire;
		}

		public String Total_final;

		public String getTotal_final() {
			return this.Total_final;
		}

		public String Remise______Opportunite;

		public String getRemise______Opportunite() {
			return this.Remise______Opportunite;
		}

		public Float Total_remise_HT;

		public Float getTotal_remise_HT() {
			return this.Total_remise_HT;
		}

		public String Extension__Opportunite;

		public String getExtension__Opportunite() {
			return this.Extension__Opportunite;
		}

		public String Budget_a_valider__Opportunite;

		public String getBudget_a_valider__Opportunite() {
			return this.Budget_a_valider__Opportunite;
		}

		public String Budget_a_valider_Extension__Opportunite;

		public String getBudget_a_valider_Extension__Opportunite() {
			return this.Budget_a_valider_Extension__Opportunite;
		}

		public String Duree_d_engagement__Opportunite;

		public String getDuree_d_engagement__Opportunite() {
			return this.Duree_d_engagement__Opportunite;
		}

		public String Type_d_engagement__Opportunite;

		public String getType_d_engagement__Opportunite() {
			return this.Type_d_engagement__Opportunite;
		}

		public String Demandeur__Opportunite;

		public String getDemandeur__Opportunite() {
			return this.Demandeur__Opportunite;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public String Cree_le__Opportunite;

		public String getCree_le__Opportunite() {
			return this.Cree_le__Opportunite;
		}

		public Integer Mois_de_creation;

		public Integer getMois_de_creation() {
			return this.Mois_de_creation;
		}

		public Integer Annee_de_creation;

		public Integer getAnnee_de_creation() {
			return this.Annee_de_creation;
		}

		public String Mois_et_annee_de_creation;

		public String getMois_et_annee_de_creation() {
			return this.Mois_et_annee_de_creation;
		}

		public String Raison_de_statut_OSM__Opportunite;

		public String getRaison_de_statut_OSM__Opportunite() {
			return this.Raison_de_statut_OSM__Opportunite;
		}

		public String Statut_OSM__Opportunite;

		public String getStatut_OSM__Opportunite() {
			return this.Statut_OSM__Opportunite;
		}

		public String Statut_activation__Commande;

		public String getStatut_activation__Commande() {
			return this.Statut_activation__Commande;
		}

		public String Date_d_activation__Commande;

		public String getDate_d_activation__Commande() {
			return this.Date_d_activation__Commande;
		}

		public Integer Mois_d_activation;

		public Integer getMois_d_activation() {
			return this.Mois_d_activation;
		}

		public String Staut_Final;

		public String getStaut_Final() {
			return this.Staut_Final;
		}

		public String Gouvernorat;

		public String getGouvernorat() {
			return this.Gouvernorat;
		}

		public String Phase_de_l_opportunite__Opportunite;

		public String getPhase_de_l_opportunite__Opportunite() {
			return this.Phase_de_l_opportunite__Opportunite;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Reference_OSM_mere__Opportunite = readString(dis);

					this.Reference_OSM__Opportunite = readString(dis);

					this.Client_Prospect__Opportunite = readString(dis);

					this.Offre = readString(dis);

					this.Nature_Offre = readString(dis);

					this.Produit_existant = readString(dis);

					this.Nature_produit__Produit_existant = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Quantite = null;
					} else {
						this.Quantite = dis.readFloat();
					}

					this.Prix_unitaire = readString(dis);

					this.Total_final = readString(dis);

					this.Remise______Opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Total_remise_HT = null;
					} else {
						this.Total_remise_HT = dis.readFloat();
					}

					this.Extension__Opportunite = readString(dis);

					this.Budget_a_valider__Opportunite = readString(dis);

					this.Budget_a_valider_Extension__Opportunite = readString(dis);

					this.Duree_d_engagement__Opportunite = readString(dis);

					this.Type_d_engagement__Opportunite = readString(dis);

					this.Demandeur__Opportunite = readString(dis);

					this.Equipe = readString(dis);

					this.Cree_le__Opportunite = readString(dis);

					this.Mois_de_creation = readInteger(dis);

					this.Annee_de_creation = readInteger(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Raison_de_statut_OSM__Opportunite = readString(dis);

					this.Statut_OSM__Opportunite = readString(dis);

					this.Statut_activation__Commande = readString(dis);

					this.Date_d_activation__Commande = readString(dis);

					this.Mois_d_activation = readInteger(dis);

					this.Staut_Final = readString(dis);

					this.Gouvernorat = readString(dis);

					this.Phase_de_l_opportunite__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Reference_OSM_mere__Opportunite = readString(dis);

					this.Reference_OSM__Opportunite = readString(dis);

					this.Client_Prospect__Opportunite = readString(dis);

					this.Offre = readString(dis);

					this.Nature_Offre = readString(dis);

					this.Produit_existant = readString(dis);

					this.Nature_produit__Produit_existant = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Quantite = null;
					} else {
						this.Quantite = dis.readFloat();
					}

					this.Prix_unitaire = readString(dis);

					this.Total_final = readString(dis);

					this.Remise______Opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Total_remise_HT = null;
					} else {
						this.Total_remise_HT = dis.readFloat();
					}

					this.Extension__Opportunite = readString(dis);

					this.Budget_a_valider__Opportunite = readString(dis);

					this.Budget_a_valider_Extension__Opportunite = readString(dis);

					this.Duree_d_engagement__Opportunite = readString(dis);

					this.Type_d_engagement__Opportunite = readString(dis);

					this.Demandeur__Opportunite = readString(dis);

					this.Equipe = readString(dis);

					this.Cree_le__Opportunite = readString(dis);

					this.Mois_de_creation = readInteger(dis);

					this.Annee_de_creation = readInteger(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Raison_de_statut_OSM__Opportunite = readString(dis);

					this.Statut_OSM__Opportunite = readString(dis);

					this.Statut_activation__Commande = readString(dis);

					this.Date_d_activation__Commande = readString(dis);

					this.Mois_d_activation = readInteger(dis);

					this.Staut_Final = readString(dis);

					this.Gouvernorat = readString(dis);

					this.Phase_de_l_opportunite__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Reference_OSM_mere__Opportunite, dos);

				// String

				writeString(this.Reference_OSM__Opportunite, dos);

				// String

				writeString(this.Client_Prospect__Opportunite, dos);

				// String

				writeString(this.Offre, dos);

				// String

				writeString(this.Nature_Offre, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Nature_produit__Produit_existant, dos);

				// Float

				if (this.Quantite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Quantite);
				}

				// String

				writeString(this.Prix_unitaire, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Remise______Opportunite, dos);

				// Float

				if (this.Total_remise_HT == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Total_remise_HT);
				}

				// String

				writeString(this.Extension__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider_Extension__Opportunite, dos);

				// String

				writeString(this.Duree_d_engagement__Opportunite, dos);

				// String

				writeString(this.Type_d_engagement__Opportunite, dos);

				// String

				writeString(this.Demandeur__Opportunite, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Cree_le__Opportunite, dos);

				// Integer

				writeInteger(this.Mois_de_creation, dos);

				// Integer

				writeInteger(this.Annee_de_creation, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Raison_de_statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_activation__Commande, dos);

				// String

				writeString(this.Date_d_activation__Commande, dos);

				// Integer

				writeInteger(this.Mois_d_activation, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Gouvernorat, dos);

				// String

				writeString(this.Phase_de_l_opportunite__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Reference_OSM_mere__Opportunite, dos);

				// String

				writeString(this.Reference_OSM__Opportunite, dos);

				// String

				writeString(this.Client_Prospect__Opportunite, dos);

				// String

				writeString(this.Offre, dos);

				// String

				writeString(this.Nature_Offre, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Nature_produit__Produit_existant, dos);

				// Float

				if (this.Quantite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Quantite);
				}

				// String

				writeString(this.Prix_unitaire, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Remise______Opportunite, dos);

				// Float

				if (this.Total_remise_HT == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Total_remise_HT);
				}

				// String

				writeString(this.Extension__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider_Extension__Opportunite, dos);

				// String

				writeString(this.Duree_d_engagement__Opportunite, dos);

				// String

				writeString(this.Type_d_engagement__Opportunite, dos);

				// String

				writeString(this.Demandeur__Opportunite, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Cree_le__Opportunite, dos);

				// Integer

				writeInteger(this.Mois_de_creation, dos);

				// Integer

				writeInteger(this.Annee_de_creation, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Raison_de_statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_activation__Commande, dos);

				// String

				writeString(this.Date_d_activation__Commande, dos);

				// Integer

				writeInteger(this.Mois_d_activation, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Gouvernorat, dos);

				// String

				writeString(this.Phase_de_l_opportunite__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Reference_OSM_mere__Opportunite=" + Reference_OSM_mere__Opportunite);
			sb.append(",Reference_OSM__Opportunite=" + Reference_OSM__Opportunite);
			sb.append(",Client_Prospect__Opportunite=" + Client_Prospect__Opportunite);
			sb.append(",Offre=" + Offre);
			sb.append(",Nature_Offre=" + Nature_Offre);
			sb.append(",Produit_existant=" + Produit_existant);
			sb.append(",Nature_produit__Produit_existant=" + Nature_produit__Produit_existant);
			sb.append(",Quantite=" + String.valueOf(Quantite));
			sb.append(",Prix_unitaire=" + Prix_unitaire);
			sb.append(",Total_final=" + Total_final);
			sb.append(",Remise______Opportunite=" + Remise______Opportunite);
			sb.append(",Total_remise_HT=" + String.valueOf(Total_remise_HT));
			sb.append(",Extension__Opportunite=" + Extension__Opportunite);
			sb.append(",Budget_a_valider__Opportunite=" + Budget_a_valider__Opportunite);
			sb.append(",Budget_a_valider_Extension__Opportunite=" + Budget_a_valider_Extension__Opportunite);
			sb.append(",Duree_d_engagement__Opportunite=" + Duree_d_engagement__Opportunite);
			sb.append(",Type_d_engagement__Opportunite=" + Type_d_engagement__Opportunite);
			sb.append(",Demandeur__Opportunite=" + Demandeur__Opportunite);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Cree_le__Opportunite=" + Cree_le__Opportunite);
			sb.append(",Mois_de_creation=" + String.valueOf(Mois_de_creation));
			sb.append(",Annee_de_creation=" + String.valueOf(Annee_de_creation));
			sb.append(",Mois_et_annee_de_creation=" + Mois_et_annee_de_creation);
			sb.append(",Raison_de_statut_OSM__Opportunite=" + Raison_de_statut_OSM__Opportunite);
			sb.append(",Statut_OSM__Opportunite=" + Statut_OSM__Opportunite);
			sb.append(",Statut_activation__Commande=" + Statut_activation__Commande);
			sb.append(",Date_d_activation__Commande=" + Date_d_activation__Commande);
			sb.append(",Mois_d_activation=" + String.valueOf(Mois_d_activation));
			sb.append(",Staut_Final=" + Staut_Final);
			sb.append(",Gouvernorat=" + Gouvernorat);
			sb.append(",Phase_de_l_opportunite__Opportunite=" + Phase_de_l_opportunite__Opportunite);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(after_tFileInputExcel_20Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class copyOfcopyOfcopyOft7_0_3Struct
			implements routines.system.IPersistableRow<copyOfcopyOfcopyOft7_0_3Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Gouvernorat__Concernant;

		public String getGouvernorat__Concernant() {
			return this.Gouvernorat__Concernant;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Gouvernorat__Concernant = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Gouvernorat__Concernant = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Gouvernorat__Concernant, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Gouvernorat__Concernant, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Gouvernorat__Concernant=" + Gouvernorat__Concernant);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(copyOfcopyOfcopyOft7_0_3Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row39111Struct implements routines.system.IPersistableRow<row39111Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Sujet;

		public String getSujet() {
			return this.Sujet;
		}

		public java.util.Date Cree_le;

		public java.util.Date getCree_le() {
			return this.Cree_le;
		}

		public String Concernant;

		public String getConcernant() {
			return this.Concernant;
		}

		public String Cree_par;

		public String getCree_par() {
			return this.Cree_par;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public String Emplacement;

		public String getEmplacement() {
			return this.Emplacement;
		}

		public java.util.Date Heure_de_debut;

		public java.util.Date getHeure_de_debut() {
			return this.Heure_de_debut;
		}

		public String Heure_de_fin;

		public String getHeure_de_fin() {
			return this.Heure_de_fin;
		}

		public String Statut;

		public String getStatut() {
			return this.Statut;
		}

		public String Raison_sociale__Concernant;

		public String getRaison_sociale__Concernant() {
			return this.Raison_sociale__Concernant;
		}

		public String Delegation__Concernant;

		public String getDelegation__Concernant() {
			return this.Delegation__Concernant;
		}

		public String Gouvernorat__Concernant;

		public String getGouvernorat__Concernant() {
			return this.Gouvernorat__Concernant;
		}

		public String Jour_de_la_semaine;

		public String getJour_de_la_semaine() {
			return this.Jour_de_la_semaine;
		}

		public String Description;

		public String getDescription() {
			return this.Description;
		}

		public String Categorie;

		public String getCategorie() {
			return this.Categorie;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private java.util.Date readDate(ObjectInputStream dis) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(dis.readLong());
			}
			return dateReturn;
		}

		private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(unmarshaller.readLong());
			}
			return dateReturn;
		}

		private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException {
			if (date1 == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeLong(date1.getTime());
			}
		}

		private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (date1 == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeLong(date1.getTime());
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Sujet = readString(dis);

					this.Cree_le = readDate(dis);

					this.Concernant = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Emplacement = readString(dis);

					this.Heure_de_debut = readDate(dis);

					this.Heure_de_fin = readString(dis);

					this.Statut = readString(dis);

					this.Raison_sociale__Concernant = readString(dis);

					this.Delegation__Concernant = readString(dis);

					this.Gouvernorat__Concernant = readString(dis);

					this.Jour_de_la_semaine = readString(dis);

					this.Description = readString(dis);

					this.Categorie = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Sujet = readString(dis);

					this.Cree_le = readDate(dis);

					this.Concernant = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Emplacement = readString(dis);

					this.Heure_de_debut = readDate(dis);

					this.Heure_de_fin = readString(dis);

					this.Statut = readString(dis);

					this.Raison_sociale__Concernant = readString(dis);

					this.Delegation__Concernant = readString(dis);

					this.Gouvernorat__Concernant = readString(dis);

					this.Jour_de_la_semaine = readString(dis);

					this.Description = readString(dis);

					this.Categorie = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Sujet, dos);

				// java.util.Date

				writeDate(this.Cree_le, dos);

				// String

				writeString(this.Concernant, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Emplacement, dos);

				// java.util.Date

				writeDate(this.Heure_de_debut, dos);

				// String

				writeString(this.Heure_de_fin, dos);

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Raison_sociale__Concernant, dos);

				// String

				writeString(this.Delegation__Concernant, dos);

				// String

				writeString(this.Gouvernorat__Concernant, dos);

				// String

				writeString(this.Jour_de_la_semaine, dos);

				// String

				writeString(this.Description, dos);

				// String

				writeString(this.Categorie, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Sujet, dos);

				// java.util.Date

				writeDate(this.Cree_le, dos);

				// String

				writeString(this.Concernant, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Emplacement, dos);

				// java.util.Date

				writeDate(this.Heure_de_debut, dos);

				// String

				writeString(this.Heure_de_fin, dos);

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Raison_sociale__Concernant, dos);

				// String

				writeString(this.Delegation__Concernant, dos);

				// String

				writeString(this.Gouvernorat__Concernant, dos);

				// String

				writeString(this.Jour_de_la_semaine, dos);

				// String

				writeString(this.Description, dos);

				// String

				writeString(this.Categorie, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Sujet=" + Sujet);
			sb.append(",Cree_le=" + String.valueOf(Cree_le));
			sb.append(",Concernant=" + Concernant);
			sb.append(",Cree_par=" + Cree_par);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Emplacement=" + Emplacement);
			sb.append(",Heure_de_debut=" + String.valueOf(Heure_de_debut));
			sb.append(",Heure_de_fin=" + Heure_de_fin);
			sb.append(",Statut=" + Statut);
			sb.append(",Raison_sociale__Concernant=" + Raison_sociale__Concernant);
			sb.append(",Delegation__Concernant=" + Delegation__Concernant);
			sb.append(",Gouvernorat__Concernant=" + Gouvernorat__Concernant);
			sb.append(",Jour_de_la_semaine=" + Jour_de_la_semaine);
			sb.append(",Description=" + Description);
			sb.append(",Categorie=" + Categorie);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row39111Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tFileInputExcel_20Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tFileInputExcel_20_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				tDBInput_9Process(globalMap);

				row54Struct row54 = new row54Struct();
				copyOfcopyOfcopyOft8_0_3Struct copyOfcopyOfcopyOft8_0_3 = new copyOfcopyOfcopyOft8_0_3Struct();

				row39111Struct row39111 = new row39111Struct();
				copyOfcopyOfcopyOft7_0_3Struct copyOfcopyOfcopyOft7_0_3 = new copyOfcopyOfcopyOft7_0_3Struct();

				row13Struct row13 = new row13Struct();
				aStruct a = new aStruct();
				row3911Struct row3911 = new row3911Struct();

				/**
				 * [tDBOutput_10 begin ] start
				 */

				ok_Hash.put("tDBOutput_10", false);
				start_Hash.put("tDBOutput_10", System.currentTimeMillis());

				currentComponent = "tDBOutput_10";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row3911");
				}

				int tos_count_tDBOutput_10 = 0;

				int nb_line_tDBOutput_10 = 0;
				int nb_line_update_tDBOutput_10 = 0;
				int nb_line_inserted_tDBOutput_10 = 0;
				int nb_line_deleted_tDBOutput_10 = 0;
				int nb_line_rejected_tDBOutput_10 = 0;

				int deletedCount_tDBOutput_10 = 0;
				int updatedCount_tDBOutput_10 = 0;
				int insertedCount_tDBOutput_10 = 0;
				int rowsToCommitCount_tDBOutput_10 = 0;
				int rejectedCount_tDBOutput_10 = 0;
				String dbschema_tDBOutput_10 = null;
				String tableName_tDBOutput_10 = null;
				boolean whetherReject_tDBOutput_10 = false;

				java.util.Calendar calendar_tDBOutput_10 = java.util.Calendar.getInstance();
				long year1_tDBOutput_10 = TalendDate.parseDate("yyyy-MM-dd", "0001-01-01").getTime();
				long year2_tDBOutput_10 = TalendDate.parseDate("yyyy-MM-dd", "1753-01-01").getTime();
				long year10000_tDBOutput_10 = TalendDate.parseDate("yyyy-MM-dd HH:mm:ss", "9999-12-31 24:00:00")
						.getTime();
				long date_tDBOutput_10;

				java.util.Calendar calendar_datetimeoffset_tDBOutput_10 = java.util.Calendar
						.getInstance(java.util.TimeZone.getTimeZone("UTC"));

				java.sql.Connection conn_tDBOutput_10 = null;
				String dbUser_tDBOutput_10 = null;
				dbschema_tDBOutput_10 = "dbo";
				String driverClass_tDBOutput_10 = "net.sourceforge.jtds.jdbc.Driver";

				java.lang.Class.forName(driverClass_tDBOutput_10);
				String port_tDBOutput_10 = "1433";
				String dbname_tDBOutput_10 = "orange_DW__";
				String url_tDBOutput_10 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBOutput_10)) {
					url_tDBOutput_10 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBOutput_10)) {
					url_tDBOutput_10 += "//" + "orange_DW__";

				}
				url_tDBOutput_10 += ";appName=" + projectName + ";" + "";
				dbUser_tDBOutput_10 = "sa";

				final String decryptedPassword_tDBOutput_10 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:1bUO1s8mFCxRK2kGZolhB3ZLSCcsnCLnGjUnIxN7AfAngicXcO4=");

				String dbPwd_tDBOutput_10 = decryptedPassword_tDBOutput_10;
				conn_tDBOutput_10 = java.sql.DriverManager.getConnection(url_tDBOutput_10, dbUser_tDBOutput_10,
						dbPwd_tDBOutput_10);

				resourceMap.put("conn_tDBOutput_10", conn_tDBOutput_10);

				conn_tDBOutput_10.setAutoCommit(false);
				int commitEvery_tDBOutput_10 = 10000;
				int commitCounter_tDBOutput_10 = 0;

				int batchSize_tDBOutput_10 = 10000;
				int batchSizeCounter_tDBOutput_10 = 0;

				if (dbschema_tDBOutput_10 == null || dbschema_tDBOutput_10.trim().length() == 0) {
					tableName_tDBOutput_10 = "Dim_gouvernorat";
				} else {
					tableName_tDBOutput_10 = dbschema_tDBOutput_10 + "].[" + "Dim_gouvernorat";
				}
				int count_tDBOutput_10 = 0;

				String insert_tDBOutput_10 = "INSERT INTO [" + tableName_tDBOutput_10 + "] ([Gouvernorat]) VALUES (?)";
				java.sql.PreparedStatement pstmt_tDBOutput_10 = conn_tDBOutput_10.prepareStatement(insert_tDBOutput_10);
				resourceMap.put("pstmt_tDBOutput_10", pstmt_tDBOutput_10);

				/**
				 * [tDBOutput_10 begin ] stop
				 */

				/**
				 * [tUniqRow_10 begin ] start
				 */

				ok_Hash.put("tUniqRow_10", false);
				start_Hash.put("tUniqRow_10", System.currentTimeMillis());

				currentComponent = "tUniqRow_10";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "a");
				}

				int tos_count_tUniqRow_10 = 0;

				class KeyStruct_tUniqRow_10 {

					private static final int DEFAULT_HASHCODE = 1;
					private static final int PRIME = 31;
					private int hashCode = DEFAULT_HASHCODE;
					public boolean hashCodeDirty = true;

					String Gouvernorat;

					@Override
					public int hashCode() {
						if (this.hashCodeDirty) {
							final int prime = PRIME;
							int result = DEFAULT_HASHCODE;

							result = prime * result + ((this.Gouvernorat == null) ? 0 : this.Gouvernorat.hashCode());

							this.hashCode = result;
							this.hashCodeDirty = false;
						}
						return this.hashCode;
					}

					@Override
					public boolean equals(Object obj) {
						if (this == obj)
							return true;
						if (obj == null)
							return false;
						if (getClass() != obj.getClass())
							return false;
						final KeyStruct_tUniqRow_10 other = (KeyStruct_tUniqRow_10) obj;

						if (this.Gouvernorat == null) {
							if (other.Gouvernorat != null)
								return false;

						} else if (!this.Gouvernorat.equals(other.Gouvernorat))

							return false;

						return true;
					}

				}

				int nb_uniques_tUniqRow_10 = 0;
				int nb_duplicates_tUniqRow_10 = 0;
				KeyStruct_tUniqRow_10 finder_tUniqRow_10 = new KeyStruct_tUniqRow_10();
				java.util.Set<KeyStruct_tUniqRow_10> keystUniqRow_10 = new java.util.HashSet<KeyStruct_tUniqRow_10>();

				/**
				 * [tUniqRow_10 begin ] stop
				 */

				/**
				 * [tMap_41 begin ] start
				 */

				ok_Hash.put("tMap_41", false);
				start_Hash.put("tMap_41", System.currentTimeMillis());

				currentComponent = "tMap_41";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row13");
				}

				int tos_count_tMap_41 = 0;

// ###############################
// # Lookup's keys initialization

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row14Struct> tHash_Lookup_row14 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row14Struct>) ((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row14Struct>) globalMap
						.get("tHash_Lookup_row14"));

				row14Struct row14HashKey = new row14Struct();
				row14Struct row14Default = new row14Struct();
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_41__Struct {
				}
				Var__tMap_41__Struct Var__tMap_41 = new Var__tMap_41__Struct();
// ###############################

// ###############################
// # Outputs initialization
				aStruct a_tmp = new aStruct();
// ###############################

				/**
				 * [tMap_41 begin ] stop
				 */

				/**
				 * [tUnite_11 begin ] start
				 */

				ok_Hash.put("tUnite_11", false);
				start_Hash.put("tUnite_11", System.currentTimeMillis());

				currentComponent = "tUnite_11";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "copyOfcopyOfcopyOft8_0_3",
							"copyOfcopyOfcopyOft7_0_3");
				}

				int tos_count_tUnite_11 = 0;

				int nb_line_tUnite_11 = 0;

				/**
				 * [tUnite_11 begin ] stop
				 */

				/**
				 * [tMap_33 begin ] start
				 */

				ok_Hash.put("tMap_33", false);
				start_Hash.put("tMap_33", System.currentTimeMillis());

				currentComponent = "tMap_33";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row54");
				}

				int tos_count_tMap_33 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_33__Struct {
				}
				Var__tMap_33__Struct Var__tMap_33 = new Var__tMap_33__Struct();
// ###############################

// ###############################
// # Outputs initialization
				copyOfcopyOfcopyOft8_0_3Struct copyOfcopyOfcopyOft8_0_3_tmp = new copyOfcopyOfcopyOft8_0_3Struct();
// ###############################

				/**
				 * [tMap_33 begin ] stop
				 */

				/**
				 * [tFileInputExcel_20 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_20", false);
				start_Hash.put("tFileInputExcel_20", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_20";

				int tos_count_tFileInputExcel_20 = 0;

				final String decryptedPassword_tFileInputExcel_20 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:ZBtYq3iHULAb7xwafWvOyvvZrcygVZa2uPibbw==");
				String password_tFileInputExcel_20 = decryptedPassword_tFileInputExcel_20;
				if (password_tFileInputExcel_20.isEmpty()) {
					password_tFileInputExcel_20 = null;
				}
				class RegexUtil_tFileInputExcel_20 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_20 regexUtil_tFileInputExcel_20 = new RegexUtil_tFileInputExcel_20();

				Object source_tFileInputExcel_20 = "C:/Users/DELL/Downloads/Copie_de_EXTRACT_OPPORTUNITES_MOBILE_BB_VF_090520222381_1ans.xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_20 = null;

				if (source_tFileInputExcel_20 instanceof String) {
					workbook_tFileInputExcel_20 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_20), password_tFileInputExcel_20,
									true);
				} else if (source_tFileInputExcel_20 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_20 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_20, password_tFileInputExcel_20);
				} else {
					workbook_tFileInputExcel_20 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_20 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_20.addAll(
							regexUtil_tFileInputExcel_20.getSheets(workbook_tFileInputExcel_20, "Source", false));
					if (sheetList_tFileInputExcel_20.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_20 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_20 : sheetList_tFileInputExcel_20) {
						if (sheet_FilterNull_tFileInputExcel_20 != null
								&& sheetList_FilterNull_tFileInputExcel_20.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_20.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_20.add(sheet_FilterNull_tFileInputExcel_20);
						}
					}
					sheetList_tFileInputExcel_20 = sheetList_FilterNull_tFileInputExcel_20;
					if (sheetList_tFileInputExcel_20.size() > 0) {
						int nb_line_tFileInputExcel_20 = 0;

						int begin_line_tFileInputExcel_20 = 1;

						int footer_input_tFileInputExcel_20 = 0;

						int end_line_tFileInputExcel_20 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_20 : sheetList_tFileInputExcel_20) {
							end_line_tFileInputExcel_20 += (sheet_tFileInputExcel_20.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_20 -= footer_input_tFileInputExcel_20;
						int limit_tFileInputExcel_20 = -1;
						int start_column_tFileInputExcel_20 = 1 - 1;
						int end_column_tFileInputExcel_20 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_20 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_20 = sheetList_tFileInputExcel_20
								.get(0);
						int rowCount_tFileInputExcel_20 = 0;
						int sheetIndex_tFileInputExcel_20 = 0;
						int currentRows_tFileInputExcel_20 = (sheetList_tFileInputExcel_20.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_20 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_20 = df_tFileInputExcel_20.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_20 = begin_line_tFileInputExcel_20; i_tFileInputExcel_20 < end_line_tFileInputExcel_20; i_tFileInputExcel_20++) {

							int emptyColumnCount_tFileInputExcel_20 = 0;

							if (limit_tFileInputExcel_20 != -1
									&& nb_line_tFileInputExcel_20 >= limit_tFileInputExcel_20) {
								break;
							}

							while (i_tFileInputExcel_20 >= rowCount_tFileInputExcel_20
									+ currentRows_tFileInputExcel_20) {
								rowCount_tFileInputExcel_20 += currentRows_tFileInputExcel_20;
								sheet_tFileInputExcel_20 = sheetList_tFileInputExcel_20
										.get(++sheetIndex_tFileInputExcel_20);
								currentRows_tFileInputExcel_20 = (sheet_tFileInputExcel_20.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_20_CURRENT_SHEET", sheet_tFileInputExcel_20.getSheetName());
							if (rowCount_tFileInputExcel_20 <= i_tFileInputExcel_20) {
								row_tFileInputExcel_20 = sheet_tFileInputExcel_20
										.getRow(i_tFileInputExcel_20 - rowCount_tFileInputExcel_20);
							}
							row54 = null;
							int tempRowLength_tFileInputExcel_20 = 31;

							int columnIndex_tFileInputExcel_20 = 0;

							String[] temp_row_tFileInputExcel_20 = new String[tempRowLength_tFileInputExcel_20];
							int excel_end_column_tFileInputExcel_20;
							if (row_tFileInputExcel_20 == null) {
								excel_end_column_tFileInputExcel_20 = 0;
							} else {
								excel_end_column_tFileInputExcel_20 = row_tFileInputExcel_20.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_20;
							if (end_column_tFileInputExcel_20 == -1) {
								actual_end_column_tFileInputExcel_20 = excel_end_column_tFileInputExcel_20;
							} else {
								actual_end_column_tFileInputExcel_20 = end_column_tFileInputExcel_20 > excel_end_column_tFileInputExcel_20
										? excel_end_column_tFileInputExcel_20
										: end_column_tFileInputExcel_20;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_20 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_20; i++) {
								if (i + start_column_tFileInputExcel_20 < actual_end_column_tFileInputExcel_20) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_20 = row_tFileInputExcel_20
											.getCell(i + start_column_tFileInputExcel_20);
									if (cell_tFileInputExcel_20 != null) {
										switch (cell_tFileInputExcel_20.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_20[i] = cell_tFileInputExcel_20
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_20)) {
												temp_row_tFileInputExcel_20[i] = cell_tFileInputExcel_20
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_20[i] = df_tFileInputExcel_20
														.format(cell_tFileInputExcel_20.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_20[i] = String
													.valueOf(cell_tFileInputExcel_20.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_20.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_20[i] = cell_tFileInputExcel_20
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_20)) {
													temp_row_tFileInputExcel_20[i] = cell_tFileInputExcel_20
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_20 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_20.getNumericCellValue());
													temp_row_tFileInputExcel_20[i] = ne_tFileInputExcel_20
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_20[i] = String
														.valueOf(cell_tFileInputExcel_20.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_20[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_20[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_20[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_20[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_20 = false;
							row54 = new row54Struct();
							int curColNum_tFileInputExcel_20 = -1;
							String curColName_tFileInputExcel_20 = "";
							try {
								columnIndex_tFileInputExcel_20 = 0;

								if (temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20].length() > 0) {
									curColNum_tFileInputExcel_20 = columnIndex_tFileInputExcel_20
											+ start_column_tFileInputExcel_20 + 1;
									curColName_tFileInputExcel_20 = "Reference_OSM_mere__Opportunite";

									row54.Reference_OSM_mere__Opportunite = temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20];
								} else {
									row54.Reference_OSM_mere__Opportunite = null;
									emptyColumnCount_tFileInputExcel_20++;
								}
								columnIndex_tFileInputExcel_20 = 1;

								if (temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20].length() > 0) {
									curColNum_tFileInputExcel_20 = columnIndex_tFileInputExcel_20
											+ start_column_tFileInputExcel_20 + 1;
									curColName_tFileInputExcel_20 = "Reference_OSM__Opportunite";

									row54.Reference_OSM__Opportunite = temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20];
								} else {
									row54.Reference_OSM__Opportunite = null;
									emptyColumnCount_tFileInputExcel_20++;
								}
								columnIndex_tFileInputExcel_20 = 2;

								if (temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20].length() > 0) {
									curColNum_tFileInputExcel_20 = columnIndex_tFileInputExcel_20
											+ start_column_tFileInputExcel_20 + 1;
									curColName_tFileInputExcel_20 = "Client_Prospect__Opportunite";

									row54.Client_Prospect__Opportunite = temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20];
								} else {
									row54.Client_Prospect__Opportunite = null;
									emptyColumnCount_tFileInputExcel_20++;
								}
								columnIndex_tFileInputExcel_20 = 3;

								if (temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20].length() > 0) {
									curColNum_tFileInputExcel_20 = columnIndex_tFileInputExcel_20
											+ start_column_tFileInputExcel_20 + 1;
									curColName_tFileInputExcel_20 = "Offre";

									row54.Offre = temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20];
								} else {
									row54.Offre = null;
									emptyColumnCount_tFileInputExcel_20++;
								}
								columnIndex_tFileInputExcel_20 = 4;

								if (temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20].length() > 0) {
									curColNum_tFileInputExcel_20 = columnIndex_tFileInputExcel_20
											+ start_column_tFileInputExcel_20 + 1;
									curColName_tFileInputExcel_20 = "Nature_Offre";

									row54.Nature_Offre = temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20];
								} else {
									row54.Nature_Offre = null;
									emptyColumnCount_tFileInputExcel_20++;
								}
								columnIndex_tFileInputExcel_20 = 5;

								if (temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20].length() > 0) {
									curColNum_tFileInputExcel_20 = columnIndex_tFileInputExcel_20
											+ start_column_tFileInputExcel_20 + 1;
									curColName_tFileInputExcel_20 = "Produit_existant";

									row54.Produit_existant = temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20];
								} else {
									row54.Produit_existant = null;
									emptyColumnCount_tFileInputExcel_20++;
								}
								columnIndex_tFileInputExcel_20 = 6;

								if (temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20].length() > 0) {
									curColNum_tFileInputExcel_20 = columnIndex_tFileInputExcel_20
											+ start_column_tFileInputExcel_20 + 1;
									curColName_tFileInputExcel_20 = "Nature_produit__Produit_existant";

									row54.Nature_produit__Produit_existant = temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20];
								} else {
									row54.Nature_produit__Produit_existant = null;
									emptyColumnCount_tFileInputExcel_20++;
								}
								columnIndex_tFileInputExcel_20 = 7;

								if (temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20].length() > 0) {
									curColNum_tFileInputExcel_20 = columnIndex_tFileInputExcel_20
											+ start_column_tFileInputExcel_20 + 1;
									curColName_tFileInputExcel_20 = "Quantite";

									row54.Quantite = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20], null,
											'.' == decimalChar_tFileInputExcel_20 ? null
													: decimalChar_tFileInputExcel_20));
								} else {
									row54.Quantite = null;
									emptyColumnCount_tFileInputExcel_20++;
								}
								columnIndex_tFileInputExcel_20 = 8;

								if (temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20].length() > 0) {
									curColNum_tFileInputExcel_20 = columnIndex_tFileInputExcel_20
											+ start_column_tFileInputExcel_20 + 1;
									curColName_tFileInputExcel_20 = "Prix_unitaire";

									row54.Prix_unitaire = temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20];
								} else {
									row54.Prix_unitaire = null;
									emptyColumnCount_tFileInputExcel_20++;
								}
								columnIndex_tFileInputExcel_20 = 9;

								if (temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20].length() > 0) {
									curColNum_tFileInputExcel_20 = columnIndex_tFileInputExcel_20
											+ start_column_tFileInputExcel_20 + 1;
									curColName_tFileInputExcel_20 = "Total_final";

									row54.Total_final = temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20];
								} else {
									row54.Total_final = null;
									emptyColumnCount_tFileInputExcel_20++;
								}
								columnIndex_tFileInputExcel_20 = 10;

								if (temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20].length() > 0) {
									curColNum_tFileInputExcel_20 = columnIndex_tFileInputExcel_20
											+ start_column_tFileInputExcel_20 + 1;
									curColName_tFileInputExcel_20 = "Remise______Opportunite";

									row54.Remise______Opportunite = temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20];
								} else {
									row54.Remise______Opportunite = null;
									emptyColumnCount_tFileInputExcel_20++;
								}
								columnIndex_tFileInputExcel_20 = 11;

								if (temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20].length() > 0) {
									curColNum_tFileInputExcel_20 = columnIndex_tFileInputExcel_20
											+ start_column_tFileInputExcel_20 + 1;
									curColName_tFileInputExcel_20 = "Total_remise_HT";

									row54.Total_remise_HT = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20], null,
											'.' == decimalChar_tFileInputExcel_20 ? null
													: decimalChar_tFileInputExcel_20));
								} else {
									row54.Total_remise_HT = null;
									emptyColumnCount_tFileInputExcel_20++;
								}
								columnIndex_tFileInputExcel_20 = 12;

								if (temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20].length() > 0) {
									curColNum_tFileInputExcel_20 = columnIndex_tFileInputExcel_20
											+ start_column_tFileInputExcel_20 + 1;
									curColName_tFileInputExcel_20 = "Extension__Opportunite";

									row54.Extension__Opportunite = temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20];
								} else {
									row54.Extension__Opportunite = null;
									emptyColumnCount_tFileInputExcel_20++;
								}
								columnIndex_tFileInputExcel_20 = 13;

								if (temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20].length() > 0) {
									curColNum_tFileInputExcel_20 = columnIndex_tFileInputExcel_20
											+ start_column_tFileInputExcel_20 + 1;
									curColName_tFileInputExcel_20 = "Budget_a_valider__Opportunite";

									row54.Budget_a_valider__Opportunite = temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20];
								} else {
									row54.Budget_a_valider__Opportunite = null;
									emptyColumnCount_tFileInputExcel_20++;
								}
								columnIndex_tFileInputExcel_20 = 14;

								if (temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20].length() > 0) {
									curColNum_tFileInputExcel_20 = columnIndex_tFileInputExcel_20
											+ start_column_tFileInputExcel_20 + 1;
									curColName_tFileInputExcel_20 = "Budget_a_valider_Extension__Opportunite";

									row54.Budget_a_valider_Extension__Opportunite = temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20];
								} else {
									row54.Budget_a_valider_Extension__Opportunite = null;
									emptyColumnCount_tFileInputExcel_20++;
								}
								columnIndex_tFileInputExcel_20 = 15;

								if (temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20].length() > 0) {
									curColNum_tFileInputExcel_20 = columnIndex_tFileInputExcel_20
											+ start_column_tFileInputExcel_20 + 1;
									curColName_tFileInputExcel_20 = "Duree_d_engagement__Opportunite";

									row54.Duree_d_engagement__Opportunite = temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20];
								} else {
									row54.Duree_d_engagement__Opportunite = null;
									emptyColumnCount_tFileInputExcel_20++;
								}
								columnIndex_tFileInputExcel_20 = 16;

								if (temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20].length() > 0) {
									curColNum_tFileInputExcel_20 = columnIndex_tFileInputExcel_20
											+ start_column_tFileInputExcel_20 + 1;
									curColName_tFileInputExcel_20 = "Type_d_engagement__Opportunite";

									row54.Type_d_engagement__Opportunite = temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20];
								} else {
									row54.Type_d_engagement__Opportunite = null;
									emptyColumnCount_tFileInputExcel_20++;
								}
								columnIndex_tFileInputExcel_20 = 17;

								if (temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20].length() > 0) {
									curColNum_tFileInputExcel_20 = columnIndex_tFileInputExcel_20
											+ start_column_tFileInputExcel_20 + 1;
									curColName_tFileInputExcel_20 = "Demandeur__Opportunite";

									row54.Demandeur__Opportunite = temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20];
								} else {
									row54.Demandeur__Opportunite = null;
									emptyColumnCount_tFileInputExcel_20++;
								}
								columnIndex_tFileInputExcel_20 = 18;

								if (temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20].length() > 0) {
									curColNum_tFileInputExcel_20 = columnIndex_tFileInputExcel_20
											+ start_column_tFileInputExcel_20 + 1;
									curColName_tFileInputExcel_20 = "Equipe";

									row54.Equipe = temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20];
								} else {
									row54.Equipe = null;
									emptyColumnCount_tFileInputExcel_20++;
								}
								columnIndex_tFileInputExcel_20 = 19;

								if (temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20].length() > 0) {
									curColNum_tFileInputExcel_20 = columnIndex_tFileInputExcel_20
											+ start_column_tFileInputExcel_20 + 1;
									curColName_tFileInputExcel_20 = "Cree_le__Opportunite";

									row54.Cree_le__Opportunite = temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20];
								} else {
									row54.Cree_le__Opportunite = null;
									emptyColumnCount_tFileInputExcel_20++;
								}
								columnIndex_tFileInputExcel_20 = 20;

								if (temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20].length() > 0) {
									curColNum_tFileInputExcel_20 = columnIndex_tFileInputExcel_20
											+ start_column_tFileInputExcel_20 + 1;
									curColName_tFileInputExcel_20 = "Mois_de_creation";

									row54.Mois_de_creation = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20], null,
											'.' == decimalChar_tFileInputExcel_20 ? null
													: decimalChar_tFileInputExcel_20));
								} else {
									row54.Mois_de_creation = null;
									emptyColumnCount_tFileInputExcel_20++;
								}
								columnIndex_tFileInputExcel_20 = 21;

								if (temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20].length() > 0) {
									curColNum_tFileInputExcel_20 = columnIndex_tFileInputExcel_20
											+ start_column_tFileInputExcel_20 + 1;
									curColName_tFileInputExcel_20 = "Annee_de_creation";

									row54.Annee_de_creation = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20], null,
											'.' == decimalChar_tFileInputExcel_20 ? null
													: decimalChar_tFileInputExcel_20));
								} else {
									row54.Annee_de_creation = null;
									emptyColumnCount_tFileInputExcel_20++;
								}
								columnIndex_tFileInputExcel_20 = 22;

								if (temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20].length() > 0) {
									curColNum_tFileInputExcel_20 = columnIndex_tFileInputExcel_20
											+ start_column_tFileInputExcel_20 + 1;
									curColName_tFileInputExcel_20 = "Mois_et_annee_de_creation";

									row54.Mois_et_annee_de_creation = temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20];
								} else {
									row54.Mois_et_annee_de_creation = null;
									emptyColumnCount_tFileInputExcel_20++;
								}
								columnIndex_tFileInputExcel_20 = 23;

								if (temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20].length() > 0) {
									curColNum_tFileInputExcel_20 = columnIndex_tFileInputExcel_20
											+ start_column_tFileInputExcel_20 + 1;
									curColName_tFileInputExcel_20 = "Raison_de_statut_OSM__Opportunite";

									row54.Raison_de_statut_OSM__Opportunite = temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20];
								} else {
									row54.Raison_de_statut_OSM__Opportunite = null;
									emptyColumnCount_tFileInputExcel_20++;
								}
								columnIndex_tFileInputExcel_20 = 24;

								if (temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20].length() > 0) {
									curColNum_tFileInputExcel_20 = columnIndex_tFileInputExcel_20
											+ start_column_tFileInputExcel_20 + 1;
									curColName_tFileInputExcel_20 = "Statut_OSM__Opportunite";

									row54.Statut_OSM__Opportunite = temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20];
								} else {
									row54.Statut_OSM__Opportunite = null;
									emptyColumnCount_tFileInputExcel_20++;
								}
								columnIndex_tFileInputExcel_20 = 25;

								if (temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20].length() > 0) {
									curColNum_tFileInputExcel_20 = columnIndex_tFileInputExcel_20
											+ start_column_tFileInputExcel_20 + 1;
									curColName_tFileInputExcel_20 = "Statut_activation__Commande";

									row54.Statut_activation__Commande = temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20];
								} else {
									row54.Statut_activation__Commande = null;
									emptyColumnCount_tFileInputExcel_20++;
								}
								columnIndex_tFileInputExcel_20 = 26;

								if (temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20].length() > 0) {
									curColNum_tFileInputExcel_20 = columnIndex_tFileInputExcel_20
											+ start_column_tFileInputExcel_20 + 1;
									curColName_tFileInputExcel_20 = "Date_d_activation__Commande";

									row54.Date_d_activation__Commande = temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20];
								} else {
									row54.Date_d_activation__Commande = null;
									emptyColumnCount_tFileInputExcel_20++;
								}
								columnIndex_tFileInputExcel_20 = 27;

								if (temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20].length() > 0) {
									curColNum_tFileInputExcel_20 = columnIndex_tFileInputExcel_20
											+ start_column_tFileInputExcel_20 + 1;
									curColName_tFileInputExcel_20 = "Mois_d_activation";

									row54.Mois_d_activation = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20], null,
											'.' == decimalChar_tFileInputExcel_20 ? null
													: decimalChar_tFileInputExcel_20));
								} else {
									row54.Mois_d_activation = null;
									emptyColumnCount_tFileInputExcel_20++;
								}
								columnIndex_tFileInputExcel_20 = 28;

								if (temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20].length() > 0) {
									curColNum_tFileInputExcel_20 = columnIndex_tFileInputExcel_20
											+ start_column_tFileInputExcel_20 + 1;
									curColName_tFileInputExcel_20 = "Staut_Final";

									row54.Staut_Final = temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20];
								} else {
									row54.Staut_Final = null;
									emptyColumnCount_tFileInputExcel_20++;
								}
								columnIndex_tFileInputExcel_20 = 29;

								if (temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20].length() > 0) {
									curColNum_tFileInputExcel_20 = columnIndex_tFileInputExcel_20
											+ start_column_tFileInputExcel_20 + 1;
									curColName_tFileInputExcel_20 = "Gouvernorat";

									row54.Gouvernorat = temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20];
								} else {
									row54.Gouvernorat = null;
									emptyColumnCount_tFileInputExcel_20++;
								}
								columnIndex_tFileInputExcel_20 = 30;

								if (temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20].length() > 0) {
									curColNum_tFileInputExcel_20 = columnIndex_tFileInputExcel_20
											+ start_column_tFileInputExcel_20 + 1;
									curColName_tFileInputExcel_20 = "Phase_de_l_opportunite__Opportunite";

									row54.Phase_de_l_opportunite__Opportunite = temp_row_tFileInputExcel_20[columnIndex_tFileInputExcel_20];
								} else {
									row54.Phase_de_l_opportunite__Opportunite = null;
									emptyColumnCount_tFileInputExcel_20++;
								}

								nb_line_tFileInputExcel_20++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_20_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_20 = true;
								System.err.println(e.getMessage());
								row54 = null;
							}

							/**
							 * [tFileInputExcel_20 begin ] stop
							 */

							/**
							 * [tFileInputExcel_20 main ] start
							 */

							currentComponent = "tFileInputExcel_20";

							tos_count_tFileInputExcel_20++;

							/**
							 * [tFileInputExcel_20 main ] stop
							 */

							/**
							 * [tFileInputExcel_20 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_20";

							/**
							 * [tFileInputExcel_20 process_data_begin ] stop
							 */
// Start of branch "row54"
							if (row54 != null) {

								/**
								 * [tMap_33 main ] start
								 */

								currentComponent = "tMap_33";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row54"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_33 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_33 = false;
								boolean mainRowRejected_tMap_33 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_33__Struct Var = Var__tMap_33;// ###############################
									// ###############################
									// # Output tables

									copyOfcopyOfcopyOft8_0_3 = null;

// # Output table : 'copyOfcopyOfcopyOft8_0_3'
									copyOfcopyOfcopyOft8_0_3_tmp.Gouvernorat = StringHandling
											.TRIM(StringHandling.UPCASE(row54.Gouvernorat));
									copyOfcopyOfcopyOft8_0_3 = copyOfcopyOfcopyOft8_0_3_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_33 = false;

								tos_count_tMap_33++;

								/**
								 * [tMap_33 main ] stop
								 */

								/**
								 * [tMap_33 process_data_begin ] start
								 */

								currentComponent = "tMap_33";

								/**
								 * [tMap_33 process_data_begin ] stop
								 */
// Start of branch "copyOfcopyOfcopyOft8_0_3"
								if (copyOfcopyOfcopyOft8_0_3 != null) {

									/**
									 * [tUnite_11 main ] start
									 */

									currentComponent = "tUnite_11";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "copyOfcopyOfcopyOft8_0_3"

										);
									}

//////////

// for output
									row13 = new row13Struct();

									row13.Gouvernorat = copyOfcopyOfcopyOft8_0_3.Gouvernorat;

									nb_line_tUnite_11++;

//////////

									tos_count_tUnite_11++;

									/**
									 * [tUnite_11 main ] stop
									 */

									/**
									 * [tUnite_11 process_data_begin ] start
									 */

									currentComponent = "tUnite_11";

									/**
									 * [tUnite_11 process_data_begin ] stop
									 */

									/**
									 * [tMap_41 main ] start
									 */

									currentComponent = "tMap_41";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "row13"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_41 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_41 = false;
									boolean mainRowRejected_tMap_41 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row14"
									///////////////////////////////////////////////

									boolean forceLooprow14 = false;

									row14Struct row14ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_41) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_41 = false;

										row14HashKey.Gouvernorat = row13.Gouvernorat;

										row14HashKey.hashCodeDirty = true;

										tHash_Lookup_row14.lookup(row14HashKey);

										if (!tHash_Lookup_row14.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_41 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row14 != null && tHash_Lookup_row14.getCount(row14HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row14' and it contains more one result from keys : row14.Gouvernorat = '" +
										// row14HashKey.Gouvernorat + "'");
									} // G 071

									row14Struct row14 = null;

									row14Struct fromLookup_row14 = null;
									row14 = row14Default;

									if (tHash_Lookup_row14 != null && tHash_Lookup_row14.hasNext()) { // G 099

										fromLookup_row14 = tHash_Lookup_row14.next();

									} // G 099

									if (fromLookup_row14 != null) {
										row14 = fromLookup_row14;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_41__Struct Var = Var__tMap_41;// ###############################
										// ###############################
										// # Output tables

										a = null;

										if (!rejectedInnerJoin_tMap_41) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'a'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_41) {
											a_tmp.Gouvernorat = row13.Gouvernorat;
											a = a_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_41 = false;

									tos_count_tMap_41++;

									/**
									 * [tMap_41 main ] stop
									 */

									/**
									 * [tMap_41 process_data_begin ] start
									 */

									currentComponent = "tMap_41";

									/**
									 * [tMap_41 process_data_begin ] stop
									 */
// Start of branch "a"
									if (a != null) {

										/**
										 * [tUniqRow_10 main ] start
										 */

										currentComponent = "tUniqRow_10";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "a"

											);
										}

										row3911 = null;
										finder_tUniqRow_10.Gouvernorat = a.Gouvernorat;
										finder_tUniqRow_10.hashCodeDirty = true;
										if (!keystUniqRow_10.contains(finder_tUniqRow_10)) {
											KeyStruct_tUniqRow_10 new_tUniqRow_10 = new KeyStruct_tUniqRow_10();

											new_tUniqRow_10.Gouvernorat = a.Gouvernorat;

											keystUniqRow_10.add(new_tUniqRow_10);
											if (row3911 == null) {

												row3911 = new row3911Struct();
											}
											row3911.Gouvernorat = a.Gouvernorat;
											nb_uniques_tUniqRow_10++;
										} else {
											nb_duplicates_tUniqRow_10++;
										}

										tos_count_tUniqRow_10++;

										/**
										 * [tUniqRow_10 main ] stop
										 */

										/**
										 * [tUniqRow_10 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_10";

										/**
										 * [tUniqRow_10 process_data_begin ] stop
										 */
// Start of branch "row3911"
										if (row3911 != null) {

											/**
											 * [tDBOutput_10 main ] start
											 */

											currentComponent = "tDBOutput_10";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row3911"

												);
											}

											whetherReject_tDBOutput_10 = false;
											if (row3911.Gouvernorat == null) {
												pstmt_tDBOutput_10.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_10.setString(1, row3911.Gouvernorat);
											}

											pstmt_tDBOutput_10.addBatch();
											nb_line_tDBOutput_10++;

											batchSizeCounter_tDBOutput_10++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_10 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_10)
														throws Exception {
													try {

														for (int countEach_tDBOutput_10 : pstmt_tDBOutput_10
																.executeBatch()) {
															if (countEach_tDBOutput_10 == -2
																	|| countEach_tDBOutput_10 == -3) {
																break;
															}
															counter += countEach_tDBOutput_10;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_10_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_10 = 0;
														for (int countEach_tDBOutput_10 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_10 < 0 ? 0
																	: countEach_tDBOutput_10);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_10)
														throws Exception {
													try {

														for (int countEach_tDBOutput_10 : pstmt_tDBOutput_10
																.executeBatch()) {
															if (countEach_tDBOutput_10 == -2
																	|| countEach_tDBOutput_10 == -3) {
																break;
															}
															counter += countEach_tDBOutput_10;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_10_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_10 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_10 < 0 ? 0
																	: countEach_tDBOutput_10);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_10 > 0)
													&& (batchSize_tDBOutput_10 <= batchSizeCounter_tDBOutput_10)) {

												insertedCount_tDBOutput_10 = new LimitBytesHelper_tDBOutput_10()
														.limitBytePart1(insertedCount_tDBOutput_10, pstmt_tDBOutput_10);
												rowsToCommitCount_tDBOutput_10 = insertedCount_tDBOutput_10;

												batchSizeCounter_tDBOutput_10 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_10++;
											if (commitEvery_tDBOutput_10 <= commitCounter_tDBOutput_10) {
												if ((batchSize_tDBOutput_10 > 0)
														&& (batchSizeCounter_tDBOutput_10 > 0)) {

													insertedCount_tDBOutput_10 = new LimitBytesHelper_tDBOutput_10()
															.limitBytePart1(insertedCount_tDBOutput_10,
																	pstmt_tDBOutput_10);

													batchSizeCounter_tDBOutput_10 = 0;
												}
												if (rowsToCommitCount_tDBOutput_10 != 0) {

												}
												conn_tDBOutput_10.commit();
												if (rowsToCommitCount_tDBOutput_10 != 0) {

													rowsToCommitCount_tDBOutput_10 = 0;
												}
												commitCounter_tDBOutput_10 = 0;
											}

											tos_count_tDBOutput_10++;

											/**
											 * [tDBOutput_10 main ] stop
											 */

											/**
											 * [tDBOutput_10 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_10";

											/**
											 * [tDBOutput_10 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_10 process_data_end ] start
											 */

											currentComponent = "tDBOutput_10";

											/**
											 * [tDBOutput_10 process_data_end ] stop
											 */

										} // End of branch "row3911"

										/**
										 * [tUniqRow_10 process_data_end ] start
										 */

										currentComponent = "tUniqRow_10";

										/**
										 * [tUniqRow_10 process_data_end ] stop
										 */

									} // End of branch "a"

									/**
									 * [tMap_41 process_data_end ] start
									 */

									currentComponent = "tMap_41";

									/**
									 * [tMap_41 process_data_end ] stop
									 */

									/**
									 * [tUnite_11 process_data_end ] start
									 */

									currentComponent = "tUnite_11";

									/**
									 * [tUnite_11 process_data_end ] stop
									 */

								} // End of branch "copyOfcopyOfcopyOft8_0_3"

								/**
								 * [tMap_33 process_data_end ] start
								 */

								currentComponent = "tMap_33";

								/**
								 * [tMap_33 process_data_end ] stop
								 */

							} // End of branch "row54"

							/**
							 * [tFileInputExcel_20 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_20";

							/**
							 * [tFileInputExcel_20 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_20 end ] start
							 */

							currentComponent = "tFileInputExcel_20";

						}

						globalMap.put("tFileInputExcel_20_NB_LINE", nb_line_tFileInputExcel_20);

					}

				} finally {

					if (!(source_tFileInputExcel_20 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_20.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_20", true);
				end_Hash.put("tFileInputExcel_20", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_20 end ] stop
				 */

				/**
				 * [tMap_33 end ] start
				 */

				currentComponent = "tMap_33";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row54");
				}

				ok_Hash.put("tMap_33", true);
				end_Hash.put("tMap_33", System.currentTimeMillis());

				/**
				 * [tMap_33 end ] stop
				 */

				/**
				 * [tMap_34 begin ] start
				 */

				ok_Hash.put("tMap_34", false);
				start_Hash.put("tMap_34", System.currentTimeMillis());

				currentComponent = "tMap_34";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row39111");
				}

				int tos_count_tMap_34 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_34__Struct {
				}
				Var__tMap_34__Struct Var__tMap_34 = new Var__tMap_34__Struct();
// ###############################

// ###############################
// # Outputs initialization
				copyOfcopyOfcopyOft7_0_3Struct copyOfcopyOfcopyOft7_0_3_tmp = new copyOfcopyOfcopyOft7_0_3Struct();
// ###############################

				/**
				 * [tMap_34 begin ] stop
				 */

				/**
				 * [tFileInputExcel_34 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_34", false);
				start_Hash.put("tFileInputExcel_34", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_34";

				int tos_count_tFileInputExcel_34 = 0;

				final String decryptedPassword_tFileInputExcel_34 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:yCqyXatudYBeb6jJYe2X3ZkB0+Np0tgdENdsSw==");
				String password_tFileInputExcel_34 = decryptedPassword_tFileInputExcel_34;
				if (password_tFileInputExcel_34.isEmpty()) {
					password_tFileInputExcel_34 = null;
				}
				class RegexUtil_tFileInputExcel_34 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_34 regexUtil_tFileInputExcel_34 = new RegexUtil_tFileInputExcel_34();

				Object source_tFileInputExcel_34 = "C:/Users/DELL/Downloads/suivi rdv slide test (Enregistré automatiquement) VF (1).xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_34 = null;

				if (source_tFileInputExcel_34 instanceof String) {
					workbook_tFileInputExcel_34 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_34), password_tFileInputExcel_34,
									true);
				} else if (source_tFileInputExcel_34 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_34 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_34, password_tFileInputExcel_34);
				} else {
					workbook_tFileInputExcel_34 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_34 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_34.addAll(regexUtil_tFileInputExcel_34
							.getSheets(workbook_tFileInputExcel_34, "{40AAA5D9-FC5C-EC11-80E1-005056", false));
					if (sheetList_tFileInputExcel_34.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_34 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_34 : sheetList_tFileInputExcel_34) {
						if (sheet_FilterNull_tFileInputExcel_34 != null
								&& sheetList_FilterNull_tFileInputExcel_34.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_34.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_34.add(sheet_FilterNull_tFileInputExcel_34);
						}
					}
					sheetList_tFileInputExcel_34 = sheetList_FilterNull_tFileInputExcel_34;
					if (sheetList_tFileInputExcel_34.size() > 0) {
						int nb_line_tFileInputExcel_34 = 0;

						int begin_line_tFileInputExcel_34 = 1;

						int footer_input_tFileInputExcel_34 = 0;

						int end_line_tFileInputExcel_34 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_34 : sheetList_tFileInputExcel_34) {
							end_line_tFileInputExcel_34 += (sheet_tFileInputExcel_34.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_34 -= footer_input_tFileInputExcel_34;
						int limit_tFileInputExcel_34 = -1;
						int start_column_tFileInputExcel_34 = 1 - 1;
						int end_column_tFileInputExcel_34 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_34 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_34 = sheetList_tFileInputExcel_34
								.get(0);
						int rowCount_tFileInputExcel_34 = 0;
						int sheetIndex_tFileInputExcel_34 = 0;
						int currentRows_tFileInputExcel_34 = (sheetList_tFileInputExcel_34.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_34 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_34 = df_tFileInputExcel_34.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_34 = begin_line_tFileInputExcel_34; i_tFileInputExcel_34 < end_line_tFileInputExcel_34; i_tFileInputExcel_34++) {

							int emptyColumnCount_tFileInputExcel_34 = 0;

							if (limit_tFileInputExcel_34 != -1
									&& nb_line_tFileInputExcel_34 >= limit_tFileInputExcel_34) {
								break;
							}

							while (i_tFileInputExcel_34 >= rowCount_tFileInputExcel_34
									+ currentRows_tFileInputExcel_34) {
								rowCount_tFileInputExcel_34 += currentRows_tFileInputExcel_34;
								sheet_tFileInputExcel_34 = sheetList_tFileInputExcel_34
										.get(++sheetIndex_tFileInputExcel_34);
								currentRows_tFileInputExcel_34 = (sheet_tFileInputExcel_34.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_34_CURRENT_SHEET", sheet_tFileInputExcel_34.getSheetName());
							if (rowCount_tFileInputExcel_34 <= i_tFileInputExcel_34) {
								row_tFileInputExcel_34 = sheet_tFileInputExcel_34
										.getRow(i_tFileInputExcel_34 - rowCount_tFileInputExcel_34);
							}
							row39111 = null;
							int tempRowLength_tFileInputExcel_34 = 15;

							int columnIndex_tFileInputExcel_34 = 0;

							String[] temp_row_tFileInputExcel_34 = new String[tempRowLength_tFileInputExcel_34];
							int excel_end_column_tFileInputExcel_34;
							if (row_tFileInputExcel_34 == null) {
								excel_end_column_tFileInputExcel_34 = 0;
							} else {
								excel_end_column_tFileInputExcel_34 = row_tFileInputExcel_34.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_34;
							if (end_column_tFileInputExcel_34 == -1) {
								actual_end_column_tFileInputExcel_34 = excel_end_column_tFileInputExcel_34;
							} else {
								actual_end_column_tFileInputExcel_34 = end_column_tFileInputExcel_34 > excel_end_column_tFileInputExcel_34
										? excel_end_column_tFileInputExcel_34
										: end_column_tFileInputExcel_34;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_34 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_34; i++) {
								if (i + start_column_tFileInputExcel_34 < actual_end_column_tFileInputExcel_34) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_34 = row_tFileInputExcel_34
											.getCell(i + start_column_tFileInputExcel_34);
									if (cell_tFileInputExcel_34 != null) {
										switch (cell_tFileInputExcel_34.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_34[i] = cell_tFileInputExcel_34
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_34)) {
												temp_row_tFileInputExcel_34[i] = cell_tFileInputExcel_34
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_34[i] = df_tFileInputExcel_34
														.format(cell_tFileInputExcel_34.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_34[i] = String
													.valueOf(cell_tFileInputExcel_34.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_34.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_34[i] = cell_tFileInputExcel_34
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_34)) {
													temp_row_tFileInputExcel_34[i] = cell_tFileInputExcel_34
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_34 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_34.getNumericCellValue());
													temp_row_tFileInputExcel_34[i] = ne_tFileInputExcel_34
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_34[i] = String
														.valueOf(cell_tFileInputExcel_34.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_34[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_34[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_34[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_34[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_34 = false;
							row39111 = new row39111Struct();
							int curColNum_tFileInputExcel_34 = -1;
							String curColName_tFileInputExcel_34 = "";
							try {
								columnIndex_tFileInputExcel_34 = 0;

								if (temp_row_tFileInputExcel_34[columnIndex_tFileInputExcel_34].length() > 0) {
									curColNum_tFileInputExcel_34 = columnIndex_tFileInputExcel_34
											+ start_column_tFileInputExcel_34 + 1;
									curColName_tFileInputExcel_34 = "Sujet";

									row39111.Sujet = temp_row_tFileInputExcel_34[columnIndex_tFileInputExcel_34];
								} else {
									row39111.Sujet = null;
									emptyColumnCount_tFileInputExcel_34++;
								}
								columnIndex_tFileInputExcel_34 = 1;

								if (temp_row_tFileInputExcel_34[columnIndex_tFileInputExcel_34].length() > 0) {
									curColNum_tFileInputExcel_34 = columnIndex_tFileInputExcel_34
											+ start_column_tFileInputExcel_34 + 1;
									curColName_tFileInputExcel_34 = "Cree_le";

									if (1 < actual_end_column_tFileInputExcel_34) {
										try {
											if (row_tFileInputExcel_34
													.getCell(columnIndex_tFileInputExcel_34
															+ start_column_tFileInputExcel_34)
													.getCellType() == org.apache.poi.ss.usermodel.CellType.NUMERIC
													&& org.apache.poi.ss.usermodel.DateUtil
															.isCellDateFormatted(row_tFileInputExcel_34
																	.getCell(columnIndex_tFileInputExcel_34
																			+ start_column_tFileInputExcel_34))) {
												row39111.Cree_le = row_tFileInputExcel_34
														.getCell(columnIndex_tFileInputExcel_34
																+ start_column_tFileInputExcel_34)
														.getDateCellValue();
											} else {
												java.util.Date tempDate_tFileInputExcel_34 = ParserUtils.parseTo_Date(
														temp_row_tFileInputExcel_34[columnIndex_tFileInputExcel_34],
														"dd-MM-yyyy");
												if (tempDate_tFileInputExcel_34
														.after((new SimpleDateFormat("yyyy/MM/dd hh:mm:ss.SSS"))
																.parse("9999/12/31 23:59:59.999"))
														|| tempDate_tFileInputExcel_34
																.before((new SimpleDateFormat("yyyy/MM/dd"))
																		.parse("1900/01/01"))) {
													throw new RuntimeException("The cell format is not Date in ( Row. "
															+ (nb_line_tFileInputExcel_34 + 1) + " and ColumnNum. "
															+ curColNum_tFileInputExcel_34 + " )");
												} else {
													row39111.Cree_le = tempDate_tFileInputExcel_34;
												}
											}
										} catch (java.lang.Exception e) {
											globalMap.put("tFileInputExcel_34_ERROR_MESSAGE", e.getMessage());

											throw new RuntimeException("The cell format is not Date in ( Row. "
													+ (nb_line_tFileInputExcel_34 + 1) + " and ColumnNum. "
													+ curColNum_tFileInputExcel_34 + " )");
										}
									}

								} else {
									row39111.Cree_le = null;
									emptyColumnCount_tFileInputExcel_34++;
								}
								columnIndex_tFileInputExcel_34 = 2;

								if (temp_row_tFileInputExcel_34[columnIndex_tFileInputExcel_34].length() > 0) {
									curColNum_tFileInputExcel_34 = columnIndex_tFileInputExcel_34
											+ start_column_tFileInputExcel_34 + 1;
									curColName_tFileInputExcel_34 = "Concernant";

									row39111.Concernant = temp_row_tFileInputExcel_34[columnIndex_tFileInputExcel_34];
								} else {
									row39111.Concernant = null;
									emptyColumnCount_tFileInputExcel_34++;
								}
								columnIndex_tFileInputExcel_34 = 3;

								if (temp_row_tFileInputExcel_34[columnIndex_tFileInputExcel_34].length() > 0) {
									curColNum_tFileInputExcel_34 = columnIndex_tFileInputExcel_34
											+ start_column_tFileInputExcel_34 + 1;
									curColName_tFileInputExcel_34 = "Cree_par";

									row39111.Cree_par = temp_row_tFileInputExcel_34[columnIndex_tFileInputExcel_34];
								} else {
									row39111.Cree_par = null;
									emptyColumnCount_tFileInputExcel_34++;
								}
								columnIndex_tFileInputExcel_34 = 4;

								if (temp_row_tFileInputExcel_34[columnIndex_tFileInputExcel_34].length() > 0) {
									curColNum_tFileInputExcel_34 = columnIndex_tFileInputExcel_34
											+ start_column_tFileInputExcel_34 + 1;
									curColName_tFileInputExcel_34 = "Equipe";

									row39111.Equipe = temp_row_tFileInputExcel_34[columnIndex_tFileInputExcel_34];
								} else {
									row39111.Equipe = null;
									emptyColumnCount_tFileInputExcel_34++;
								}
								columnIndex_tFileInputExcel_34 = 5;

								if (temp_row_tFileInputExcel_34[columnIndex_tFileInputExcel_34].length() > 0) {
									curColNum_tFileInputExcel_34 = columnIndex_tFileInputExcel_34
											+ start_column_tFileInputExcel_34 + 1;
									curColName_tFileInputExcel_34 = "Emplacement";

									row39111.Emplacement = temp_row_tFileInputExcel_34[columnIndex_tFileInputExcel_34];
								} else {
									row39111.Emplacement = null;
									emptyColumnCount_tFileInputExcel_34++;
								}
								columnIndex_tFileInputExcel_34 = 6;

								if (temp_row_tFileInputExcel_34[columnIndex_tFileInputExcel_34].length() > 0) {
									curColNum_tFileInputExcel_34 = columnIndex_tFileInputExcel_34
											+ start_column_tFileInputExcel_34 + 1;
									curColName_tFileInputExcel_34 = "Heure_de_debut";

									if (6 < actual_end_column_tFileInputExcel_34) {
										try {
											if (row_tFileInputExcel_34
													.getCell(columnIndex_tFileInputExcel_34
															+ start_column_tFileInputExcel_34)
													.getCellType() == org.apache.poi.ss.usermodel.CellType.NUMERIC
													&& org.apache.poi.ss.usermodel.DateUtil
															.isCellDateFormatted(row_tFileInputExcel_34
																	.getCell(columnIndex_tFileInputExcel_34
																			+ start_column_tFileInputExcel_34))) {
												row39111.Heure_de_debut = row_tFileInputExcel_34
														.getCell(columnIndex_tFileInputExcel_34
																+ start_column_tFileInputExcel_34)
														.getDateCellValue();
											} else {
												java.util.Date tempDate_tFileInputExcel_34 = ParserUtils.parseTo_Date(
														temp_row_tFileInputExcel_34[columnIndex_tFileInputExcel_34],
														"dd-MM-yyyy");
												if (tempDate_tFileInputExcel_34
														.after((new SimpleDateFormat("yyyy/MM/dd hh:mm:ss.SSS"))
																.parse("9999/12/31 23:59:59.999"))
														|| tempDate_tFileInputExcel_34
																.before((new SimpleDateFormat("yyyy/MM/dd"))
																		.parse("1900/01/01"))) {
													throw new RuntimeException("The cell format is not Date in ( Row. "
															+ (nb_line_tFileInputExcel_34 + 1) + " and ColumnNum. "
															+ curColNum_tFileInputExcel_34 + " )");
												} else {
													row39111.Heure_de_debut = tempDate_tFileInputExcel_34;
												}
											}
										} catch (java.lang.Exception e) {
											globalMap.put("tFileInputExcel_34_ERROR_MESSAGE", e.getMessage());

											throw new RuntimeException("The cell format is not Date in ( Row. "
													+ (nb_line_tFileInputExcel_34 + 1) + " and ColumnNum. "
													+ curColNum_tFileInputExcel_34 + " )");
										}
									}

								} else {
									row39111.Heure_de_debut = null;
									emptyColumnCount_tFileInputExcel_34++;
								}
								columnIndex_tFileInputExcel_34 = 7;

								if (temp_row_tFileInputExcel_34[columnIndex_tFileInputExcel_34].length() > 0) {
									curColNum_tFileInputExcel_34 = columnIndex_tFileInputExcel_34
											+ start_column_tFileInputExcel_34 + 1;
									curColName_tFileInputExcel_34 = "Heure_de_fin";

									row39111.Heure_de_fin = temp_row_tFileInputExcel_34[columnIndex_tFileInputExcel_34];
								} else {
									row39111.Heure_de_fin = null;
									emptyColumnCount_tFileInputExcel_34++;
								}
								columnIndex_tFileInputExcel_34 = 8;

								if (temp_row_tFileInputExcel_34[columnIndex_tFileInputExcel_34].length() > 0) {
									curColNum_tFileInputExcel_34 = columnIndex_tFileInputExcel_34
											+ start_column_tFileInputExcel_34 + 1;
									curColName_tFileInputExcel_34 = "Statut";

									row39111.Statut = temp_row_tFileInputExcel_34[columnIndex_tFileInputExcel_34];
								} else {
									row39111.Statut = null;
									emptyColumnCount_tFileInputExcel_34++;
								}
								columnIndex_tFileInputExcel_34 = 9;

								if (temp_row_tFileInputExcel_34[columnIndex_tFileInputExcel_34].length() > 0) {
									curColNum_tFileInputExcel_34 = columnIndex_tFileInputExcel_34
											+ start_column_tFileInputExcel_34 + 1;
									curColName_tFileInputExcel_34 = "Raison_sociale__Concernant";

									row39111.Raison_sociale__Concernant = temp_row_tFileInputExcel_34[columnIndex_tFileInputExcel_34];
								} else {
									row39111.Raison_sociale__Concernant = null;
									emptyColumnCount_tFileInputExcel_34++;
								}
								columnIndex_tFileInputExcel_34 = 10;

								if (temp_row_tFileInputExcel_34[columnIndex_tFileInputExcel_34].length() > 0) {
									curColNum_tFileInputExcel_34 = columnIndex_tFileInputExcel_34
											+ start_column_tFileInputExcel_34 + 1;
									curColName_tFileInputExcel_34 = "Delegation__Concernant";

									row39111.Delegation__Concernant = temp_row_tFileInputExcel_34[columnIndex_tFileInputExcel_34];
								} else {
									row39111.Delegation__Concernant = null;
									emptyColumnCount_tFileInputExcel_34++;
								}
								columnIndex_tFileInputExcel_34 = 11;

								if (temp_row_tFileInputExcel_34[columnIndex_tFileInputExcel_34].length() > 0) {
									curColNum_tFileInputExcel_34 = columnIndex_tFileInputExcel_34
											+ start_column_tFileInputExcel_34 + 1;
									curColName_tFileInputExcel_34 = "Gouvernorat__Concernant";

									row39111.Gouvernorat__Concernant = temp_row_tFileInputExcel_34[columnIndex_tFileInputExcel_34];
								} else {
									row39111.Gouvernorat__Concernant = null;
									emptyColumnCount_tFileInputExcel_34++;
								}
								columnIndex_tFileInputExcel_34 = 12;

								if (temp_row_tFileInputExcel_34[columnIndex_tFileInputExcel_34].length() > 0) {
									curColNum_tFileInputExcel_34 = columnIndex_tFileInputExcel_34
											+ start_column_tFileInputExcel_34 + 1;
									curColName_tFileInputExcel_34 = "Jour_de_la_semaine";

									row39111.Jour_de_la_semaine = temp_row_tFileInputExcel_34[columnIndex_tFileInputExcel_34];
								} else {
									row39111.Jour_de_la_semaine = null;
									emptyColumnCount_tFileInputExcel_34++;
								}
								columnIndex_tFileInputExcel_34 = 13;

								if (temp_row_tFileInputExcel_34[columnIndex_tFileInputExcel_34].length() > 0) {
									curColNum_tFileInputExcel_34 = columnIndex_tFileInputExcel_34
											+ start_column_tFileInputExcel_34 + 1;
									curColName_tFileInputExcel_34 = "Description";

									row39111.Description = temp_row_tFileInputExcel_34[columnIndex_tFileInputExcel_34];
								} else {
									row39111.Description = null;
									emptyColumnCount_tFileInputExcel_34++;
								}
								columnIndex_tFileInputExcel_34 = 14;

								if (temp_row_tFileInputExcel_34[columnIndex_tFileInputExcel_34].length() > 0) {
									curColNum_tFileInputExcel_34 = columnIndex_tFileInputExcel_34
											+ start_column_tFileInputExcel_34 + 1;
									curColName_tFileInputExcel_34 = "Categorie";

									row39111.Categorie = temp_row_tFileInputExcel_34[columnIndex_tFileInputExcel_34];
								} else {
									row39111.Categorie = null;
									emptyColumnCount_tFileInputExcel_34++;
								}

								nb_line_tFileInputExcel_34++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_34_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_34 = true;
								System.err.println(e.getMessage());
								row39111 = null;
							}

							/**
							 * [tFileInputExcel_34 begin ] stop
							 */

							/**
							 * [tFileInputExcel_34 main ] start
							 */

							currentComponent = "tFileInputExcel_34";

							tos_count_tFileInputExcel_34++;

							/**
							 * [tFileInputExcel_34 main ] stop
							 */

							/**
							 * [tFileInputExcel_34 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_34";

							/**
							 * [tFileInputExcel_34 process_data_begin ] stop
							 */
// Start of branch "row39111"
							if (row39111 != null) {

								/**
								 * [tMap_34 main ] start
								 */

								currentComponent = "tMap_34";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row39111"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_34 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_34 = false;
								boolean mainRowRejected_tMap_34 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_34__Struct Var = Var__tMap_34;// ###############################
									// ###############################
									// # Output tables

									copyOfcopyOfcopyOft7_0_3 = null;

// # Output table : 'copyOfcopyOfcopyOft7_0_3'
									copyOfcopyOfcopyOft7_0_3_tmp.Gouvernorat__Concernant = StringHandling
											.TRIM(StringHandling.UPCASE(row39111.Gouvernorat__Concernant));
									copyOfcopyOfcopyOft7_0_3 = copyOfcopyOfcopyOft7_0_3_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_34 = false;

								tos_count_tMap_34++;

								/**
								 * [tMap_34 main ] stop
								 */

								/**
								 * [tMap_34 process_data_begin ] start
								 */

								currentComponent = "tMap_34";

								/**
								 * [tMap_34 process_data_begin ] stop
								 */
// Start of branch "copyOfcopyOfcopyOft7_0_3"
								if (copyOfcopyOfcopyOft7_0_3 != null) {

									/**
									 * [tUnite_11 main ] start
									 */

									currentComponent = "tUnite_11";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "copyOfcopyOfcopyOft7_0_3"

										);
									}

//////////

// for output
									row13 = new row13Struct();

									row13.Gouvernorat = copyOfcopyOfcopyOft7_0_3.Gouvernorat__Concernant;

									nb_line_tUnite_11++;

//////////

									tos_count_tUnite_11++;

									/**
									 * [tUnite_11 main ] stop
									 */

									/**
									 * [tUnite_11 process_data_begin ] start
									 */

									currentComponent = "tUnite_11";

									/**
									 * [tUnite_11 process_data_begin ] stop
									 */

									/**
									 * [tMap_41 main ] start
									 */

									currentComponent = "tMap_41";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "row13"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_41 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_41 = false;
									boolean mainRowRejected_tMap_41 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row14"
									///////////////////////////////////////////////

									boolean forceLooprow14 = false;

									row14Struct row14ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_41) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_41 = false;

										row14HashKey.Gouvernorat = row13.Gouvernorat;

										row14HashKey.hashCodeDirty = true;

										tHash_Lookup_row14.lookup(row14HashKey);

										if (!tHash_Lookup_row14.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_41 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row14 != null && tHash_Lookup_row14.getCount(row14HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row14' and it contains more one result from keys : row14.Gouvernorat = '" +
										// row14HashKey.Gouvernorat + "'");
									} // G 071

									row14Struct row14 = null;

									row14Struct fromLookup_row14 = null;
									row14 = row14Default;

									if (tHash_Lookup_row14 != null && tHash_Lookup_row14.hasNext()) { // G 099

										fromLookup_row14 = tHash_Lookup_row14.next();

									} // G 099

									if (fromLookup_row14 != null) {
										row14 = fromLookup_row14;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_41__Struct Var = Var__tMap_41;// ###############################
										// ###############################
										// # Output tables

										a = null;

										if (!rejectedInnerJoin_tMap_41) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'a'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_41) {
											a_tmp.Gouvernorat = row13.Gouvernorat;
											a = a_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_41 = false;

									tos_count_tMap_41++;

									/**
									 * [tMap_41 main ] stop
									 */

									/**
									 * [tMap_41 process_data_begin ] start
									 */

									currentComponent = "tMap_41";

									/**
									 * [tMap_41 process_data_begin ] stop
									 */
// Start of branch "a"
									if (a != null) {

										/**
										 * [tUniqRow_10 main ] start
										 */

										currentComponent = "tUniqRow_10";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "a"

											);
										}

										row3911 = null;
										finder_tUniqRow_10.Gouvernorat = a.Gouvernorat;
										finder_tUniqRow_10.hashCodeDirty = true;
										if (!keystUniqRow_10.contains(finder_tUniqRow_10)) {
											KeyStruct_tUniqRow_10 new_tUniqRow_10 = new KeyStruct_tUniqRow_10();

											new_tUniqRow_10.Gouvernorat = a.Gouvernorat;

											keystUniqRow_10.add(new_tUniqRow_10);
											if (row3911 == null) {

												row3911 = new row3911Struct();
											}
											row3911.Gouvernorat = a.Gouvernorat;
											nb_uniques_tUniqRow_10++;
										} else {
											nb_duplicates_tUniqRow_10++;
										}

										tos_count_tUniqRow_10++;

										/**
										 * [tUniqRow_10 main ] stop
										 */

										/**
										 * [tUniqRow_10 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_10";

										/**
										 * [tUniqRow_10 process_data_begin ] stop
										 */
// Start of branch "row3911"
										if (row3911 != null) {

											/**
											 * [tDBOutput_10 main ] start
											 */

											currentComponent = "tDBOutput_10";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row3911"

												);
											}

											whetherReject_tDBOutput_10 = false;
											if (row3911.Gouvernorat == null) {
												pstmt_tDBOutput_10.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_10.setString(1, row3911.Gouvernorat);
											}

											pstmt_tDBOutput_10.addBatch();
											nb_line_tDBOutput_10++;

											batchSizeCounter_tDBOutput_10++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_10 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_10)
														throws Exception {
													try {

														for (int countEach_tDBOutput_10 : pstmt_tDBOutput_10
																.executeBatch()) {
															if (countEach_tDBOutput_10 == -2
																	|| countEach_tDBOutput_10 == -3) {
																break;
															}
															counter += countEach_tDBOutput_10;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_10_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_10 = 0;
														for (int countEach_tDBOutput_10 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_10 < 0 ? 0
																	: countEach_tDBOutput_10);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_10)
														throws Exception {
													try {

														for (int countEach_tDBOutput_10 : pstmt_tDBOutput_10
																.executeBatch()) {
															if (countEach_tDBOutput_10 == -2
																	|| countEach_tDBOutput_10 == -3) {
																break;
															}
															counter += countEach_tDBOutput_10;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_10_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_10 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_10 < 0 ? 0
																	: countEach_tDBOutput_10);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_10 > 0)
													&& (batchSize_tDBOutput_10 <= batchSizeCounter_tDBOutput_10)) {

												insertedCount_tDBOutput_10 = new LimitBytesHelper_tDBOutput_10()
														.limitBytePart1(insertedCount_tDBOutput_10, pstmt_tDBOutput_10);
												rowsToCommitCount_tDBOutput_10 = insertedCount_tDBOutput_10;

												batchSizeCounter_tDBOutput_10 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_10++;
											if (commitEvery_tDBOutput_10 <= commitCounter_tDBOutput_10) {
												if ((batchSize_tDBOutput_10 > 0)
														&& (batchSizeCounter_tDBOutput_10 > 0)) {

													insertedCount_tDBOutput_10 = new LimitBytesHelper_tDBOutput_10()
															.limitBytePart1(insertedCount_tDBOutput_10,
																	pstmt_tDBOutput_10);

													batchSizeCounter_tDBOutput_10 = 0;
												}
												if (rowsToCommitCount_tDBOutput_10 != 0) {

												}
												conn_tDBOutput_10.commit();
												if (rowsToCommitCount_tDBOutput_10 != 0) {

													rowsToCommitCount_tDBOutput_10 = 0;
												}
												commitCounter_tDBOutput_10 = 0;
											}

											tos_count_tDBOutput_10++;

											/**
											 * [tDBOutput_10 main ] stop
											 */

											/**
											 * [tDBOutput_10 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_10";

											/**
											 * [tDBOutput_10 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_10 process_data_end ] start
											 */

											currentComponent = "tDBOutput_10";

											/**
											 * [tDBOutput_10 process_data_end ] stop
											 */

										} // End of branch "row3911"

										/**
										 * [tUniqRow_10 process_data_end ] start
										 */

										currentComponent = "tUniqRow_10";

										/**
										 * [tUniqRow_10 process_data_end ] stop
										 */

									} // End of branch "a"

									/**
									 * [tMap_41 process_data_end ] start
									 */

									currentComponent = "tMap_41";

									/**
									 * [tMap_41 process_data_end ] stop
									 */

									/**
									 * [tUnite_11 process_data_end ] start
									 */

									currentComponent = "tUnite_11";

									/**
									 * [tUnite_11 process_data_end ] stop
									 */

								} // End of branch "copyOfcopyOfcopyOft7_0_3"

								/**
								 * [tMap_34 process_data_end ] start
								 */

								currentComponent = "tMap_34";

								/**
								 * [tMap_34 process_data_end ] stop
								 */

							} // End of branch "row39111"

							/**
							 * [tFileInputExcel_34 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_34";

							/**
							 * [tFileInputExcel_34 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_34 end ] start
							 */

							currentComponent = "tFileInputExcel_34";

						}

						globalMap.put("tFileInputExcel_34_NB_LINE", nb_line_tFileInputExcel_34);

					}

				} finally {

					if (!(source_tFileInputExcel_34 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_34.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_34", true);
				end_Hash.put("tFileInputExcel_34", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_34 end ] stop
				 */

				/**
				 * [tMap_34 end ] start
				 */

				currentComponent = "tMap_34";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row39111");
				}

				ok_Hash.put("tMap_34", true);
				end_Hash.put("tMap_34", System.currentTimeMillis());

				/**
				 * [tMap_34 end ] stop
				 */

				/**
				 * [tUnite_11 end ] start
				 */

				currentComponent = "tUnite_11";

				globalMap.put("tUnite_11_NB_LINE", nb_line_tUnite_11);
				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "copyOfcopyOfcopyOft8_0_3",
							"copyOfcopyOfcopyOft7_0_3");
				}

				ok_Hash.put("tUnite_11", true);
				end_Hash.put("tUnite_11", System.currentTimeMillis());

				/**
				 * [tUnite_11 end ] stop
				 */

				/**
				 * [tMap_41 end ] start
				 */

				currentComponent = "tMap_41";

// ###############################
// # Lookup hashes releasing
				if (tHash_Lookup_row14 != null) {
					tHash_Lookup_row14.endGet();
				}
				globalMap.remove("tHash_Lookup_row14");

// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row13");
				}

				ok_Hash.put("tMap_41", true);
				end_Hash.put("tMap_41", System.currentTimeMillis());

				/**
				 * [tMap_41 end ] stop
				 */

				/**
				 * [tUniqRow_10 end ] start
				 */

				currentComponent = "tUniqRow_10";

				globalMap.put("tUniqRow_10_NB_UNIQUES", nb_uniques_tUniqRow_10);
				globalMap.put("tUniqRow_10_NB_DUPLICATES", nb_duplicates_tUniqRow_10);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "a");
				}

				ok_Hash.put("tUniqRow_10", true);
				end_Hash.put("tUniqRow_10", System.currentTimeMillis());

				/**
				 * [tUniqRow_10 end ] stop
				 */

				/**
				 * [tDBOutput_10 end ] start
				 */

				currentComponent = "tDBOutput_10";

				try {
					int countSum_tDBOutput_10 = 0;
					if (pstmt_tDBOutput_10 != null && batchSizeCounter_tDBOutput_10 > 0) {

						for (int countEach_tDBOutput_10 : pstmt_tDBOutput_10.executeBatch()) {
							if (countEach_tDBOutput_10 == -2 || countEach_tDBOutput_10 == -3) {
								break;
							}
							countSum_tDBOutput_10 += countEach_tDBOutput_10;
						}
						rowsToCommitCount_tDBOutput_10 += countSum_tDBOutput_10;

					}

					insertedCount_tDBOutput_10 += countSum_tDBOutput_10;

				} catch (java.sql.BatchUpdateException e) {
					globalMap.put("tDBOutput_10_ERROR_MESSAGE", e.getMessage());

					int countSum_tDBOutput_10 = 0;
					for (int countEach_tDBOutput_10 : e.getUpdateCounts()) {
						countSum_tDBOutput_10 += (countEach_tDBOutput_10 < 0 ? 0 : countEach_tDBOutput_10);
					}
					rowsToCommitCount_tDBOutput_10 += countSum_tDBOutput_10;

					insertedCount_tDBOutput_10 += countSum_tDBOutput_10;

					System.err.println(e.getMessage());

				}
				if (pstmt_tDBOutput_10 != null) {

					pstmt_tDBOutput_10.close();
					resourceMap.remove("pstmt_tDBOutput_10");

				}
				resourceMap.put("statementClosed_tDBOutput_10", true);
				if (rowsToCommitCount_tDBOutput_10 != 0) {

				}
				conn_tDBOutput_10.commit();
				if (rowsToCommitCount_tDBOutput_10 != 0) {

					rowsToCommitCount_tDBOutput_10 = 0;
				}
				commitCounter_tDBOutput_10 = 0;
				conn_tDBOutput_10.close();
				resourceMap.put("finish_tDBOutput_10", true);

				nb_line_deleted_tDBOutput_10 = nb_line_deleted_tDBOutput_10 + deletedCount_tDBOutput_10;
				nb_line_update_tDBOutput_10 = nb_line_update_tDBOutput_10 + updatedCount_tDBOutput_10;
				nb_line_inserted_tDBOutput_10 = nb_line_inserted_tDBOutput_10 + insertedCount_tDBOutput_10;
				nb_line_rejected_tDBOutput_10 = nb_line_rejected_tDBOutput_10 + rejectedCount_tDBOutput_10;

				globalMap.put("tDBOutput_10_NB_LINE", nb_line_tDBOutput_10);
				globalMap.put("tDBOutput_10_NB_LINE_UPDATED", nb_line_update_tDBOutput_10);
				globalMap.put("tDBOutput_10_NB_LINE_INSERTED", nb_line_inserted_tDBOutput_10);
				globalMap.put("tDBOutput_10_NB_LINE_DELETED", nb_line_deleted_tDBOutput_10);
				globalMap.put("tDBOutput_10_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_10);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row3911");
				}

				ok_Hash.put("tDBOutput_10", true);
				end_Hash.put("tDBOutput_10", System.currentTimeMillis());

				/**
				 * [tDBOutput_10 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			// free memory for "tMap_41"
			globalMap.remove("tHash_Lookup_row14");

			try {

				/**
				 * [tFileInputExcel_20 finally ] start
				 */

				currentComponent = "tFileInputExcel_20";

				/**
				 * [tFileInputExcel_20 finally ] stop
				 */

				/**
				 * [tMap_33 finally ] start
				 */

				currentComponent = "tMap_33";

				/**
				 * [tMap_33 finally ] stop
				 */

				/**
				 * [tFileInputExcel_34 finally ] start
				 */

				currentComponent = "tFileInputExcel_34";

				/**
				 * [tFileInputExcel_34 finally ] stop
				 */

				/**
				 * [tMap_34 finally ] start
				 */

				currentComponent = "tMap_34";

				/**
				 * [tMap_34 finally ] stop
				 */

				/**
				 * [tUnite_11 finally ] start
				 */

				currentComponent = "tUnite_11";

				/**
				 * [tUnite_11 finally ] stop
				 */

				/**
				 * [tMap_41 finally ] start
				 */

				currentComponent = "tMap_41";

				/**
				 * [tMap_41 finally ] stop
				 */

				/**
				 * [tUniqRow_10 finally ] start
				 */

				currentComponent = "tUniqRow_10";

				/**
				 * [tUniqRow_10 finally ] stop
				 */

				/**
				 * [tDBOutput_10 finally ] start
				 */

				currentComponent = "tDBOutput_10";

				try {
					if (resourceMap.get("statementClosed_tDBOutput_10") == null) {
						java.sql.PreparedStatement pstmtToClose_tDBOutput_10 = null;
						if ((pstmtToClose_tDBOutput_10 = (java.sql.PreparedStatement) resourceMap
								.remove("pstmt_tDBOutput_10")) != null) {
							pstmtToClose_tDBOutput_10.close();
						}
					}
				} finally {
					if (resourceMap.get("finish_tDBOutput_10") == null) {
						java.sql.Connection ctn_tDBOutput_10 = null;
						if ((ctn_tDBOutput_10 = (java.sql.Connection) resourceMap.get("conn_tDBOutput_10")) != null) {
							try {
								ctn_tDBOutput_10.close();
							} catch (java.sql.SQLException sqlEx_tDBOutput_10) {
								String errorMessage_tDBOutput_10 = "failed to close the connection in tDBOutput_10 :"
										+ sqlEx_tDBOutput_10.getMessage();
								System.err.println(errorMessage_tDBOutput_10);
							}
						}
					}
				}

				/**
				 * [tDBOutput_10 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tFileInputExcel_20_SUBPROCESS_STATE", 1);
	}

	public static class row36Struct implements routines.system.IPersistableRow<row36Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Groupe_Client;

		public String getGroupe_Client() {
			return this.Groupe_Client;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Groupe_Client = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Groupe_Client = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Groupe_Client, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Groupe_Client, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Groupe_Client=" + Groupe_Client);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row36Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class oStruct implements routines.system.IPersistableRow<oStruct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Groupe_Client;

		public String getGroupe_Client() {
			return this.Groupe_Client;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Groupe_Client = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Groupe_Client = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Groupe_Client, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Groupe_Client, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Groupe_Client=" + Groupe_Client);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(oStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row31Struct implements routines.system.IPersistableRow<row31Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Groupe_Client;

		public String getGroupe_Client() {
			return this.Groupe_Client;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Groupe_Client = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Groupe_Client = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Groupe_Client, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Groupe_Client, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Groupe_Client=" + Groupe_Client);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row31Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class copyOfcopyOft8_0_2Struct implements routines.system.IPersistableRow<copyOfcopyOft8_0_2Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Groupe_Client;

		public String getGroupe_Client() {
			return this.Groupe_Client;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Groupe_Client = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Groupe_Client = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Groupe_Client, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Groupe_Client, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Groupe_Client=" + Groupe_Client);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(copyOfcopyOft8_0_2Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row29Struct implements routines.system.IPersistableRow<row29Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public Float Custcode;

		public Float getCustcode() {
			return this.Custcode;
		}

		public String Raison_Sociale;

		public String getRaison_Sociale() {
			return this.Raison_Sociale;
		}

		public String Groupe_Client;

		public String getGroupe_Client() {
			return this.Groupe_Client;
		}

		public String Account_Manager;

		public String getAccount_Manager() {
			return this.Account_Manager;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public Integer Somme_de_Suspension;

		public Integer getSomme_de_Suspension() {
			return this.Somme_de_Suspension;
		}

		public String Type_de_suspension;

		public String getType_de_suspension() {
			return this.Type_de_suspension;
		}

		public String Motif;

		public String getMotif() {
			return this.Motif;
		}

		public String DFE;

		public String getDFE() {
			return this.DFE;
		}

		public String Engage_Oui_Non;

		public String getEngage_Oui_Non() {
			return this.Engage_Oui_Non;
		}

		public String Date_Depot;

		public String getDate_Depot() {
			return this.Date_Depot;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Suspension = readInteger(dis);

					this.Type_de_suspension = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Suspension = readInteger(dis);

					this.Type_de_suspension = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Suspension, dos);

				// String

				writeString(this.Type_de_suspension, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// String

				writeString(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Suspension, dos);

				// String

				writeString(this.Type_de_suspension, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// String

				writeString(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Custcode=" + String.valueOf(Custcode));
			sb.append(",Raison_Sociale=" + Raison_Sociale);
			sb.append(",Groupe_Client=" + Groupe_Client);
			sb.append(",Account_Manager=" + Account_Manager);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Somme_de_Suspension=" + String.valueOf(Somme_de_Suspension));
			sb.append(",Type_de_suspension=" + Type_de_suspension);
			sb.append(",Motif=" + Motif);
			sb.append(",DFE=" + DFE);
			sb.append(",Engage_Oui_Non=" + Engage_Oui_Non);
			sb.append(",Date_Depot=" + Date_Depot);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row29Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class after_tFileInputExcel_21Struct
			implements routines.system.IPersistableRow<after_tFileInputExcel_21Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public Float Custcode;

		public Float getCustcode() {
			return this.Custcode;
		}

		public String Raison_Sociale;

		public String getRaison_Sociale() {
			return this.Raison_Sociale;
		}

		public String Groupe_Client;

		public String getGroupe_Client() {
			return this.Groupe_Client;
		}

		public String Account_Manager;

		public String getAccount_Manager() {
			return this.Account_Manager;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public Integer Somme_de_Suspension;

		public Integer getSomme_de_Suspension() {
			return this.Somme_de_Suspension;
		}

		public String Type_de_suspension;

		public String getType_de_suspension() {
			return this.Type_de_suspension;
		}

		public String Motif;

		public String getMotif() {
			return this.Motif;
		}

		public String DFE;

		public String getDFE() {
			return this.DFE;
		}

		public String Engage_Oui_Non;

		public String getEngage_Oui_Non() {
			return this.Engage_Oui_Non;
		}

		public String Date_Depot;

		public String getDate_Depot() {
			return this.Date_Depot;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Suspension = readInteger(dis);

					this.Type_de_suspension = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Suspension = readInteger(dis);

					this.Type_de_suspension = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Suspension, dos);

				// String

				writeString(this.Type_de_suspension, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// String

				writeString(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Suspension, dos);

				// String

				writeString(this.Type_de_suspension, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// String

				writeString(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Custcode=" + String.valueOf(Custcode));
			sb.append(",Raison_Sociale=" + Raison_Sociale);
			sb.append(",Groupe_Client=" + Groupe_Client);
			sb.append(",Account_Manager=" + Account_Manager);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Somme_de_Suspension=" + String.valueOf(Somme_de_Suspension));
			sb.append(",Type_de_suspension=" + Type_de_suspension);
			sb.append(",Motif=" + Motif);
			sb.append(",DFE=" + DFE);
			sb.append(",Engage_Oui_Non=" + Engage_Oui_Non);
			sb.append(",Date_Depot=" + Date_Depot);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(after_tFileInputExcel_21Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class copyOfcopyOft7_0_2Struct implements routines.system.IPersistableRow<copyOfcopyOft7_0_2Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Groupe_Client;

		public String getGroupe_Client() {
			return this.Groupe_Client;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Groupe_Client = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Groupe_Client = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Groupe_Client, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Groupe_Client, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Groupe_Client=" + Groupe_Client);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(copyOfcopyOft7_0_2Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row30Struct implements routines.system.IPersistableRow<row30Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public Float Custcode;

		public Float getCustcode() {
			return this.Custcode;
		}

		public String Raison_Sociale;

		public String getRaison_Sociale() {
			return this.Raison_Sociale;
		}

		public String Groupe_Client;

		public String getGroupe_Client() {
			return this.Groupe_Client;
		}

		public String Account_Manager;

		public String getAccount_Manager() {
			return this.Account_Manager;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public Integer Somme_de_Resiliation;

		public Integer getSomme_de_Resiliation() {
			return this.Somme_de_Resiliation;
		}

		public String Type_Resiliation;

		public String getType_Resiliation() {
			return this.Type_Resiliation;
		}

		public String Motif;

		public String getMotif() {
			return this.Motif;
		}

		public String DFE;

		public String getDFE() {
			return this.DFE;
		}

		public String Engage_Oui_Non;

		public String getEngage_Oui_Non() {
			return this.Engage_Oui_Non;
		}

		public String Date_Depot;

		public String getDate_Depot() {
			return this.Date_Depot;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Resiliation = readInteger(dis);

					this.Type_Resiliation = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Resiliation = readInteger(dis);

					this.Type_Resiliation = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Resiliation, dos);

				// String

				writeString(this.Type_Resiliation, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// String

				writeString(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Resiliation, dos);

				// String

				writeString(this.Type_Resiliation, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// String

				writeString(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Custcode=" + String.valueOf(Custcode));
			sb.append(",Raison_Sociale=" + Raison_Sociale);
			sb.append(",Groupe_Client=" + Groupe_Client);
			sb.append(",Account_Manager=" + Account_Manager);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Somme_de_Resiliation=" + String.valueOf(Somme_de_Resiliation));
			sb.append(",Type_Resiliation=" + Type_Resiliation);
			sb.append(",Motif=" + Motif);
			sb.append(",DFE=" + DFE);
			sb.append(",Engage_Oui_Non=" + Engage_Oui_Non);
			sb.append(",Date_Depot=" + Date_Depot);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row30Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tFileInputExcel_21Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tFileInputExcel_21_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				tDBInput_5Process(globalMap);

				row29Struct row29 = new row29Struct();
				copyOfcopyOft8_0_2Struct copyOfcopyOft8_0_2 = new copyOfcopyOft8_0_2Struct();

				row30Struct row30 = new row30Struct();
				copyOfcopyOft7_0_2Struct copyOfcopyOft7_0_2 = new copyOfcopyOft7_0_2Struct();

				row31Struct row31 = new row31Struct();
				oStruct o = new oStruct();
				row36Struct row36 = new row36Struct();

				/**
				 * [tDBOutput_4 begin ] start
				 */

				ok_Hash.put("tDBOutput_4", false);
				start_Hash.put("tDBOutput_4", System.currentTimeMillis());

				currentComponent = "tDBOutput_4";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row36");
				}

				int tos_count_tDBOutput_4 = 0;

				int nb_line_tDBOutput_4 = 0;
				int nb_line_update_tDBOutput_4 = 0;
				int nb_line_inserted_tDBOutput_4 = 0;
				int nb_line_deleted_tDBOutput_4 = 0;
				int nb_line_rejected_tDBOutput_4 = 0;

				int deletedCount_tDBOutput_4 = 0;
				int updatedCount_tDBOutput_4 = 0;
				int insertedCount_tDBOutput_4 = 0;
				int rowsToCommitCount_tDBOutput_4 = 0;
				int rejectedCount_tDBOutput_4 = 0;
				String dbschema_tDBOutput_4 = null;
				String tableName_tDBOutput_4 = null;
				boolean whetherReject_tDBOutput_4 = false;

				java.util.Calendar calendar_tDBOutput_4 = java.util.Calendar.getInstance();
				long year1_tDBOutput_4 = TalendDate.parseDate("yyyy-MM-dd", "0001-01-01").getTime();
				long year2_tDBOutput_4 = TalendDate.parseDate("yyyy-MM-dd", "1753-01-01").getTime();
				long year10000_tDBOutput_4 = TalendDate.parseDate("yyyy-MM-dd HH:mm:ss", "9999-12-31 24:00:00")
						.getTime();
				long date_tDBOutput_4;

				java.util.Calendar calendar_datetimeoffset_tDBOutput_4 = java.util.Calendar
						.getInstance(java.util.TimeZone.getTimeZone("UTC"));

				java.sql.Connection conn_tDBOutput_4 = null;
				String dbUser_tDBOutput_4 = null;
				dbschema_tDBOutput_4 = "dbo";
				String driverClass_tDBOutput_4 = "net.sourceforge.jtds.jdbc.Driver";

				java.lang.Class.forName(driverClass_tDBOutput_4);
				String port_tDBOutput_4 = "1433";
				String dbname_tDBOutput_4 = "orange_DW__";
				String url_tDBOutput_4 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBOutput_4)) {
					url_tDBOutput_4 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBOutput_4)) {
					url_tDBOutput_4 += "//" + "orange_DW__";

				}
				url_tDBOutput_4 += ";appName=" + projectName + ";" + "";
				dbUser_tDBOutput_4 = "sa";

				final String decryptedPassword_tDBOutput_4 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:Bm30vJ7rhZ3Hvr2g3UYnJlLtvVBER1M3FryuA4QnXccvx5M+eBI=");

				String dbPwd_tDBOutput_4 = decryptedPassword_tDBOutput_4;
				conn_tDBOutput_4 = java.sql.DriverManager.getConnection(url_tDBOutput_4, dbUser_tDBOutput_4,
						dbPwd_tDBOutput_4);

				resourceMap.put("conn_tDBOutput_4", conn_tDBOutput_4);

				conn_tDBOutput_4.setAutoCommit(false);
				int commitEvery_tDBOutput_4 = 10000;
				int commitCounter_tDBOutput_4 = 0;

				int batchSize_tDBOutput_4 = 10000;
				int batchSizeCounter_tDBOutput_4 = 0;

				if (dbschema_tDBOutput_4 == null || dbschema_tDBOutput_4.trim().length() == 0) {
					tableName_tDBOutput_4 = "Dim_groupe_client";
				} else {
					tableName_tDBOutput_4 = dbschema_tDBOutput_4 + "].[" + "Dim_groupe_client";
				}
				int count_tDBOutput_4 = 0;

				String insert_tDBOutput_4 = "INSERT INTO [" + tableName_tDBOutput_4 + "] ([Groupe_Client]) VALUES (?)";
				java.sql.PreparedStatement pstmt_tDBOutput_4 = conn_tDBOutput_4.prepareStatement(insert_tDBOutput_4);
				resourceMap.put("pstmt_tDBOutput_4", pstmt_tDBOutput_4);

				/**
				 * [tDBOutput_4 begin ] stop
				 */

				/**
				 * [tUniqRow_7 begin ] start
				 */

				ok_Hash.put("tUniqRow_7", false);
				start_Hash.put("tUniqRow_7", System.currentTimeMillis());

				currentComponent = "tUniqRow_7";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "o");
				}

				int tos_count_tUniqRow_7 = 0;

				class KeyStruct_tUniqRow_7 {

					private static final int DEFAULT_HASHCODE = 1;
					private static final int PRIME = 31;
					private int hashCode = DEFAULT_HASHCODE;
					public boolean hashCodeDirty = true;

					String Groupe_Client;

					@Override
					public int hashCode() {
						if (this.hashCodeDirty) {
							final int prime = PRIME;
							int result = DEFAULT_HASHCODE;

							result = prime * result
									+ ((this.Groupe_Client == null) ? 0 : this.Groupe_Client.hashCode());

							this.hashCode = result;
							this.hashCodeDirty = false;
						}
						return this.hashCode;
					}

					@Override
					public boolean equals(Object obj) {
						if (this == obj)
							return true;
						if (obj == null)
							return false;
						if (getClass() != obj.getClass())
							return false;
						final KeyStruct_tUniqRow_7 other = (KeyStruct_tUniqRow_7) obj;

						if (this.Groupe_Client == null) {
							if (other.Groupe_Client != null)
								return false;

						} else if (!this.Groupe_Client.equals(other.Groupe_Client))

							return false;

						return true;
					}

				}

				int nb_uniques_tUniqRow_7 = 0;
				int nb_duplicates_tUniqRow_7 = 0;
				KeyStruct_tUniqRow_7 finder_tUniqRow_7 = new KeyStruct_tUniqRow_7();
				java.util.Set<KeyStruct_tUniqRow_7> keystUniqRow_7 = new java.util.HashSet<KeyStruct_tUniqRow_7>();

				/**
				 * [tUniqRow_7 begin ] stop
				 */

				/**
				 * [tMap_10 begin ] start
				 */

				ok_Hash.put("tMap_10", false);
				start_Hash.put("tMap_10", System.currentTimeMillis());

				currentComponent = "tMap_10";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row31");
				}

				int tos_count_tMap_10 = 0;

// ###############################
// # Lookup's keys initialization

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row47Struct> tHash_Lookup_row47 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row47Struct>) ((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row47Struct>) globalMap
						.get("tHash_Lookup_row47"));

				row47Struct row47HashKey = new row47Struct();
				row47Struct row47Default = new row47Struct();
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_10__Struct {
				}
				Var__tMap_10__Struct Var__tMap_10 = new Var__tMap_10__Struct();
// ###############################

// ###############################
// # Outputs initialization
				oStruct o_tmp = new oStruct();
// ###############################

				/**
				 * [tMap_10 begin ] stop
				 */

				/**
				 * [tUnite_7 begin ] start
				 */

				ok_Hash.put("tUnite_7", false);
				start_Hash.put("tUnite_7", System.currentTimeMillis());

				currentComponent = "tUnite_7";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "copyOfcopyOft7_0_2",
							"copyOfcopyOft8_0_2");
				}

				int tos_count_tUnite_7 = 0;

				int nb_line_tUnite_7 = 0;

				/**
				 * [tUnite_7 begin ] stop
				 */

				/**
				 * [tMap_21 begin ] start
				 */

				ok_Hash.put("tMap_21", false);
				start_Hash.put("tMap_21", System.currentTimeMillis());

				currentComponent = "tMap_21";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row29");
				}

				int tos_count_tMap_21 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_21__Struct {
				}
				Var__tMap_21__Struct Var__tMap_21 = new Var__tMap_21__Struct();
// ###############################

// ###############################
// # Outputs initialization
				copyOfcopyOft8_0_2Struct copyOfcopyOft8_0_2_tmp = new copyOfcopyOft8_0_2Struct();
// ###############################

				/**
				 * [tMap_21 begin ] stop
				 */

				/**
				 * [tFileInputExcel_21 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_21", false);
				start_Hash.put("tFileInputExcel_21", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_21";

				int tos_count_tFileInputExcel_21 = 0;

				final String decryptedPassword_tFileInputExcel_21 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:iyUuh+z944vnBQQ5JLgGL0HrWxG2IcP/WkjySg==");
				String password_tFileInputExcel_21 = decryptedPassword_tFileInputExcel_21;
				if (password_tFileInputExcel_21.isEmpty()) {
					password_tFileInputExcel_21 = null;
				}
				class RegexUtil_tFileInputExcel_21 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_21 regexUtil_tFileInputExcel_21 = new RegexUtil_tFileInputExcel_21();

				Object source_tFileInputExcel_21 = "C:/Users/DELL/Downloads/parc facturé Mars 2022 (1).xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_21 = null;

				if (source_tFileInputExcel_21 instanceof String) {
					workbook_tFileInputExcel_21 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_21), password_tFileInputExcel_21,
									true);
				} else if (source_tFileInputExcel_21 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_21 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_21, password_tFileInputExcel_21);
				} else {
					workbook_tFileInputExcel_21 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_21 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_21.addAll(
							regexUtil_tFileInputExcel_21.getSheets(workbook_tFileInputExcel_21, "Suspension", false));
					if (sheetList_tFileInputExcel_21.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_21 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_21 : sheetList_tFileInputExcel_21) {
						if (sheet_FilterNull_tFileInputExcel_21 != null
								&& sheetList_FilterNull_tFileInputExcel_21.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_21.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_21.add(sheet_FilterNull_tFileInputExcel_21);
						}
					}
					sheetList_tFileInputExcel_21 = sheetList_FilterNull_tFileInputExcel_21;
					if (sheetList_tFileInputExcel_21.size() > 0) {
						int nb_line_tFileInputExcel_21 = 0;

						int begin_line_tFileInputExcel_21 = 1;

						int footer_input_tFileInputExcel_21 = 0;

						int end_line_tFileInputExcel_21 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_21 : sheetList_tFileInputExcel_21) {
							end_line_tFileInputExcel_21 += (sheet_tFileInputExcel_21.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_21 -= footer_input_tFileInputExcel_21;
						int limit_tFileInputExcel_21 = -1;
						int start_column_tFileInputExcel_21 = 1 - 1;
						int end_column_tFileInputExcel_21 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_21 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_21 = sheetList_tFileInputExcel_21
								.get(0);
						int rowCount_tFileInputExcel_21 = 0;
						int sheetIndex_tFileInputExcel_21 = 0;
						int currentRows_tFileInputExcel_21 = (sheetList_tFileInputExcel_21.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_21 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_21 = df_tFileInputExcel_21.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_21 = begin_line_tFileInputExcel_21; i_tFileInputExcel_21 < end_line_tFileInputExcel_21; i_tFileInputExcel_21++) {

							int emptyColumnCount_tFileInputExcel_21 = 0;

							if (limit_tFileInputExcel_21 != -1
									&& nb_line_tFileInputExcel_21 >= limit_tFileInputExcel_21) {
								break;
							}

							while (i_tFileInputExcel_21 >= rowCount_tFileInputExcel_21
									+ currentRows_tFileInputExcel_21) {
								rowCount_tFileInputExcel_21 += currentRows_tFileInputExcel_21;
								sheet_tFileInputExcel_21 = sheetList_tFileInputExcel_21
										.get(++sheetIndex_tFileInputExcel_21);
								currentRows_tFileInputExcel_21 = (sheet_tFileInputExcel_21.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_21_CURRENT_SHEET", sheet_tFileInputExcel_21.getSheetName());
							if (rowCount_tFileInputExcel_21 <= i_tFileInputExcel_21) {
								row_tFileInputExcel_21 = sheet_tFileInputExcel_21
										.getRow(i_tFileInputExcel_21 - rowCount_tFileInputExcel_21);
							}
							row29 = null;
							int tempRowLength_tFileInputExcel_21 = 11;

							int columnIndex_tFileInputExcel_21 = 0;

							String[] temp_row_tFileInputExcel_21 = new String[tempRowLength_tFileInputExcel_21];
							int excel_end_column_tFileInputExcel_21;
							if (row_tFileInputExcel_21 == null) {
								excel_end_column_tFileInputExcel_21 = 0;
							} else {
								excel_end_column_tFileInputExcel_21 = row_tFileInputExcel_21.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_21;
							if (end_column_tFileInputExcel_21 == -1) {
								actual_end_column_tFileInputExcel_21 = excel_end_column_tFileInputExcel_21;
							} else {
								actual_end_column_tFileInputExcel_21 = end_column_tFileInputExcel_21 > excel_end_column_tFileInputExcel_21
										? excel_end_column_tFileInputExcel_21
										: end_column_tFileInputExcel_21;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_21 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_21; i++) {
								if (i + start_column_tFileInputExcel_21 < actual_end_column_tFileInputExcel_21) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_21 = row_tFileInputExcel_21
											.getCell(i + start_column_tFileInputExcel_21);
									if (cell_tFileInputExcel_21 != null) {
										switch (cell_tFileInputExcel_21.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_21[i] = cell_tFileInputExcel_21
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_21)) {
												temp_row_tFileInputExcel_21[i] = cell_tFileInputExcel_21
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_21[i] = df_tFileInputExcel_21
														.format(cell_tFileInputExcel_21.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_21[i] = String
													.valueOf(cell_tFileInputExcel_21.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_21.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_21[i] = cell_tFileInputExcel_21
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_21)) {
													temp_row_tFileInputExcel_21[i] = cell_tFileInputExcel_21
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_21 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_21.getNumericCellValue());
													temp_row_tFileInputExcel_21[i] = ne_tFileInputExcel_21
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_21[i] = String
														.valueOf(cell_tFileInputExcel_21.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_21[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_21[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_21[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_21[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_21 = false;
							row29 = new row29Struct();
							int curColNum_tFileInputExcel_21 = -1;
							String curColName_tFileInputExcel_21 = "";
							try {
								columnIndex_tFileInputExcel_21 = 0;

								if (temp_row_tFileInputExcel_21[columnIndex_tFileInputExcel_21].length() > 0) {
									curColNum_tFileInputExcel_21 = columnIndex_tFileInputExcel_21
											+ start_column_tFileInputExcel_21 + 1;
									curColName_tFileInputExcel_21 = "Custcode";

									row29.Custcode = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_21[columnIndex_tFileInputExcel_21], null,
											'.' == decimalChar_tFileInputExcel_21 ? null
													: decimalChar_tFileInputExcel_21));
								} else {
									row29.Custcode = null;
									emptyColumnCount_tFileInputExcel_21++;
								}
								columnIndex_tFileInputExcel_21 = 1;

								if (temp_row_tFileInputExcel_21[columnIndex_tFileInputExcel_21].length() > 0) {
									curColNum_tFileInputExcel_21 = columnIndex_tFileInputExcel_21
											+ start_column_tFileInputExcel_21 + 1;
									curColName_tFileInputExcel_21 = "Raison_Sociale";

									row29.Raison_Sociale = temp_row_tFileInputExcel_21[columnIndex_tFileInputExcel_21];
								} else {
									row29.Raison_Sociale = null;
									emptyColumnCount_tFileInputExcel_21++;
								}
								columnIndex_tFileInputExcel_21 = 2;

								if (temp_row_tFileInputExcel_21[columnIndex_tFileInputExcel_21].length() > 0) {
									curColNum_tFileInputExcel_21 = columnIndex_tFileInputExcel_21
											+ start_column_tFileInputExcel_21 + 1;
									curColName_tFileInputExcel_21 = "Groupe_Client";

									row29.Groupe_Client = temp_row_tFileInputExcel_21[columnIndex_tFileInputExcel_21];
								} else {
									row29.Groupe_Client = null;
									emptyColumnCount_tFileInputExcel_21++;
								}
								columnIndex_tFileInputExcel_21 = 3;

								if (temp_row_tFileInputExcel_21[columnIndex_tFileInputExcel_21].length() > 0) {
									curColNum_tFileInputExcel_21 = columnIndex_tFileInputExcel_21
											+ start_column_tFileInputExcel_21 + 1;
									curColName_tFileInputExcel_21 = "Account_Manager";

									row29.Account_Manager = temp_row_tFileInputExcel_21[columnIndex_tFileInputExcel_21];
								} else {
									row29.Account_Manager = null;
									emptyColumnCount_tFileInputExcel_21++;
								}
								columnIndex_tFileInputExcel_21 = 4;

								if (temp_row_tFileInputExcel_21[columnIndex_tFileInputExcel_21].length() > 0) {
									curColNum_tFileInputExcel_21 = columnIndex_tFileInputExcel_21
											+ start_column_tFileInputExcel_21 + 1;
									curColName_tFileInputExcel_21 = "Equipe";

									row29.Equipe = temp_row_tFileInputExcel_21[columnIndex_tFileInputExcel_21];
								} else {
									row29.Equipe = null;
									emptyColumnCount_tFileInputExcel_21++;
								}
								columnIndex_tFileInputExcel_21 = 5;

								if (temp_row_tFileInputExcel_21[columnIndex_tFileInputExcel_21].length() > 0) {
									curColNum_tFileInputExcel_21 = columnIndex_tFileInputExcel_21
											+ start_column_tFileInputExcel_21 + 1;
									curColName_tFileInputExcel_21 = "Somme_de_Suspension";

									row29.Somme_de_Suspension = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_21[columnIndex_tFileInputExcel_21], null,
											'.' == decimalChar_tFileInputExcel_21 ? null
													: decimalChar_tFileInputExcel_21));
								} else {
									row29.Somme_de_Suspension = null;
									emptyColumnCount_tFileInputExcel_21++;
								}
								columnIndex_tFileInputExcel_21 = 6;

								if (temp_row_tFileInputExcel_21[columnIndex_tFileInputExcel_21].length() > 0) {
									curColNum_tFileInputExcel_21 = columnIndex_tFileInputExcel_21
											+ start_column_tFileInputExcel_21 + 1;
									curColName_tFileInputExcel_21 = "Type_de_suspension";

									row29.Type_de_suspension = temp_row_tFileInputExcel_21[columnIndex_tFileInputExcel_21];
								} else {
									row29.Type_de_suspension = null;
									emptyColumnCount_tFileInputExcel_21++;
								}
								columnIndex_tFileInputExcel_21 = 7;

								if (temp_row_tFileInputExcel_21[columnIndex_tFileInputExcel_21].length() > 0) {
									curColNum_tFileInputExcel_21 = columnIndex_tFileInputExcel_21
											+ start_column_tFileInputExcel_21 + 1;
									curColName_tFileInputExcel_21 = "Motif";

									row29.Motif = temp_row_tFileInputExcel_21[columnIndex_tFileInputExcel_21];
								} else {
									row29.Motif = null;
									emptyColumnCount_tFileInputExcel_21++;
								}
								columnIndex_tFileInputExcel_21 = 8;

								if (temp_row_tFileInputExcel_21[columnIndex_tFileInputExcel_21].length() > 0) {
									curColNum_tFileInputExcel_21 = columnIndex_tFileInputExcel_21
											+ start_column_tFileInputExcel_21 + 1;
									curColName_tFileInputExcel_21 = "DFE";

									row29.DFE = temp_row_tFileInputExcel_21[columnIndex_tFileInputExcel_21];
								} else {
									row29.DFE = null;
									emptyColumnCount_tFileInputExcel_21++;
								}
								columnIndex_tFileInputExcel_21 = 9;

								if (temp_row_tFileInputExcel_21[columnIndex_tFileInputExcel_21].length() > 0) {
									curColNum_tFileInputExcel_21 = columnIndex_tFileInputExcel_21
											+ start_column_tFileInputExcel_21 + 1;
									curColName_tFileInputExcel_21 = "Engage_Oui_Non";

									row29.Engage_Oui_Non = temp_row_tFileInputExcel_21[columnIndex_tFileInputExcel_21];
								} else {
									row29.Engage_Oui_Non = null;
									emptyColumnCount_tFileInputExcel_21++;
								}
								columnIndex_tFileInputExcel_21 = 10;

								if (temp_row_tFileInputExcel_21[columnIndex_tFileInputExcel_21].length() > 0) {
									curColNum_tFileInputExcel_21 = columnIndex_tFileInputExcel_21
											+ start_column_tFileInputExcel_21 + 1;
									curColName_tFileInputExcel_21 = "Date_Depot";

									row29.Date_Depot = temp_row_tFileInputExcel_21[columnIndex_tFileInputExcel_21];
								} else {
									row29.Date_Depot = null;
									emptyColumnCount_tFileInputExcel_21++;
								}

								nb_line_tFileInputExcel_21++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_21_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_21 = true;
								System.err.println(e.getMessage());
								row29 = null;
							}

							/**
							 * [tFileInputExcel_21 begin ] stop
							 */

							/**
							 * [tFileInputExcel_21 main ] start
							 */

							currentComponent = "tFileInputExcel_21";

							tos_count_tFileInputExcel_21++;

							/**
							 * [tFileInputExcel_21 main ] stop
							 */

							/**
							 * [tFileInputExcel_21 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_21";

							/**
							 * [tFileInputExcel_21 process_data_begin ] stop
							 */
// Start of branch "row29"
							if (row29 != null) {

								/**
								 * [tMap_21 main ] start
								 */

								currentComponent = "tMap_21";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row29"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_21 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_21 = false;
								boolean mainRowRejected_tMap_21 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_21__Struct Var = Var__tMap_21;// ###############################
									// ###############################
									// # Output tables

									copyOfcopyOft8_0_2 = null;

// # Output table : 'copyOfcopyOft8_0_2'
									copyOfcopyOft8_0_2_tmp.Groupe_Client = row29.Groupe_Client;
									copyOfcopyOft8_0_2 = copyOfcopyOft8_0_2_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_21 = false;

								tos_count_tMap_21++;

								/**
								 * [tMap_21 main ] stop
								 */

								/**
								 * [tMap_21 process_data_begin ] start
								 */

								currentComponent = "tMap_21";

								/**
								 * [tMap_21 process_data_begin ] stop
								 */
// Start of branch "copyOfcopyOft8_0_2"
								if (copyOfcopyOft8_0_2 != null) {

									/**
									 * [tUnite_7 main ] start
									 */

									currentComponent = "tUnite_7";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "copyOfcopyOft8_0_2"

										);
									}

//////////

// for output
									row31 = new row31Struct();

									row31.Groupe_Client = copyOfcopyOft8_0_2.Groupe_Client;

									nb_line_tUnite_7++;

//////////

									tos_count_tUnite_7++;

									/**
									 * [tUnite_7 main ] stop
									 */

									/**
									 * [tUnite_7 process_data_begin ] start
									 */

									currentComponent = "tUnite_7";

									/**
									 * [tUnite_7 process_data_begin ] stop
									 */

									/**
									 * [tMap_10 main ] start
									 */

									currentComponent = "tMap_10";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "row31"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_10 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_10 = false;
									boolean mainRowRejected_tMap_10 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row47"
									///////////////////////////////////////////////

									boolean forceLooprow47 = false;

									row47Struct row47ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_10) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_10 = false;

										row47HashKey.Groupe_Client = row31.Groupe_Client;

										row47HashKey.hashCodeDirty = true;

										tHash_Lookup_row47.lookup(row47HashKey);

										if (!tHash_Lookup_row47.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_10 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row47 != null && tHash_Lookup_row47.getCount(row47HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row47' and it contains more one result from keys : row47.Groupe_Client = '"
										// + row47HashKey.Groupe_Client + "'");
									} // G 071

									row47Struct row47 = null;

									row47Struct fromLookup_row47 = null;
									row47 = row47Default;

									if (tHash_Lookup_row47 != null && tHash_Lookup_row47.hasNext()) { // G 099

										fromLookup_row47 = tHash_Lookup_row47.next();

									} // G 099

									if (fromLookup_row47 != null) {
										row47 = fromLookup_row47;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_10__Struct Var = Var__tMap_10;// ###############################
										// ###############################
										// # Output tables

										o = null;

										if (!rejectedInnerJoin_tMap_10) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'o'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_10) {
											o_tmp.Groupe_Client = row31.Groupe_Client;
											o = o_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_10 = false;

									tos_count_tMap_10++;

									/**
									 * [tMap_10 main ] stop
									 */

									/**
									 * [tMap_10 process_data_begin ] start
									 */

									currentComponent = "tMap_10";

									/**
									 * [tMap_10 process_data_begin ] stop
									 */
// Start of branch "o"
									if (o != null) {

										/**
										 * [tUniqRow_7 main ] start
										 */

										currentComponent = "tUniqRow_7";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "o"

											);
										}

										row36 = null;
										finder_tUniqRow_7.Groupe_Client = o.Groupe_Client;
										finder_tUniqRow_7.hashCodeDirty = true;
										if (!keystUniqRow_7.contains(finder_tUniqRow_7)) {
											KeyStruct_tUniqRow_7 new_tUniqRow_7 = new KeyStruct_tUniqRow_7();

											new_tUniqRow_7.Groupe_Client = o.Groupe_Client;

											keystUniqRow_7.add(new_tUniqRow_7);
											if (row36 == null) {

												row36 = new row36Struct();
											}
											row36.Groupe_Client = o.Groupe_Client;
											nb_uniques_tUniqRow_7++;
										} else {
											nb_duplicates_tUniqRow_7++;
										}

										tos_count_tUniqRow_7++;

										/**
										 * [tUniqRow_7 main ] stop
										 */

										/**
										 * [tUniqRow_7 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_7";

										/**
										 * [tUniqRow_7 process_data_begin ] stop
										 */
// Start of branch "row36"
										if (row36 != null) {

											/**
											 * [tDBOutput_4 main ] start
											 */

											currentComponent = "tDBOutput_4";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row36"

												);
											}

											whetherReject_tDBOutput_4 = false;
											if (row36.Groupe_Client == null) {
												pstmt_tDBOutput_4.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_4.setString(1, row36.Groupe_Client);
											}

											pstmt_tDBOutput_4.addBatch();
											nb_line_tDBOutput_4++;

											batchSizeCounter_tDBOutput_4++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_4 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_4) throws Exception {
													try {

														for (int countEach_tDBOutput_4 : pstmt_tDBOutput_4
																.executeBatch()) {
															if (countEach_tDBOutput_4 == -2
																	|| countEach_tDBOutput_4 == -3) {
																break;
															}
															counter += countEach_tDBOutput_4;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_4_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_4 = 0;
														for (int countEach_tDBOutput_4 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_4 < 0 ? 0
																	: countEach_tDBOutput_4);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_4) throws Exception {
													try {

														for (int countEach_tDBOutput_4 : pstmt_tDBOutput_4
																.executeBatch()) {
															if (countEach_tDBOutput_4 == -2
																	|| countEach_tDBOutput_4 == -3) {
																break;
															}
															counter += countEach_tDBOutput_4;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_4_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_4 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_4 < 0 ? 0
																	: countEach_tDBOutput_4);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_4 > 0)
													&& (batchSize_tDBOutput_4 <= batchSizeCounter_tDBOutput_4)) {

												insertedCount_tDBOutput_4 = new LimitBytesHelper_tDBOutput_4()
														.limitBytePart1(insertedCount_tDBOutput_4, pstmt_tDBOutput_4);
												rowsToCommitCount_tDBOutput_4 = insertedCount_tDBOutput_4;

												batchSizeCounter_tDBOutput_4 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_4++;
											if (commitEvery_tDBOutput_4 <= commitCounter_tDBOutput_4) {
												if ((batchSize_tDBOutput_4 > 0) && (batchSizeCounter_tDBOutput_4 > 0)) {

													insertedCount_tDBOutput_4 = new LimitBytesHelper_tDBOutput_4()
															.limitBytePart1(insertedCount_tDBOutput_4,
																	pstmt_tDBOutput_4);

													batchSizeCounter_tDBOutput_4 = 0;
												}
												if (rowsToCommitCount_tDBOutput_4 != 0) {

												}
												conn_tDBOutput_4.commit();
												if (rowsToCommitCount_tDBOutput_4 != 0) {

													rowsToCommitCount_tDBOutput_4 = 0;
												}
												commitCounter_tDBOutput_4 = 0;
											}

											tos_count_tDBOutput_4++;

											/**
											 * [tDBOutput_4 main ] stop
											 */

											/**
											 * [tDBOutput_4 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_4";

											/**
											 * [tDBOutput_4 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_4 process_data_end ] start
											 */

											currentComponent = "tDBOutput_4";

											/**
											 * [tDBOutput_4 process_data_end ] stop
											 */

										} // End of branch "row36"

										/**
										 * [tUniqRow_7 process_data_end ] start
										 */

										currentComponent = "tUniqRow_7";

										/**
										 * [tUniqRow_7 process_data_end ] stop
										 */

									} // End of branch "o"

									/**
									 * [tMap_10 process_data_end ] start
									 */

									currentComponent = "tMap_10";

									/**
									 * [tMap_10 process_data_end ] stop
									 */

									/**
									 * [tUnite_7 process_data_end ] start
									 */

									currentComponent = "tUnite_7";

									/**
									 * [tUnite_7 process_data_end ] stop
									 */

								} // End of branch "copyOfcopyOft8_0_2"

								/**
								 * [tMap_21 process_data_end ] start
								 */

								currentComponent = "tMap_21";

								/**
								 * [tMap_21 process_data_end ] stop
								 */

							} // End of branch "row29"

							/**
							 * [tFileInputExcel_21 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_21";

							/**
							 * [tFileInputExcel_21 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_21 end ] start
							 */

							currentComponent = "tFileInputExcel_21";

						}

						globalMap.put("tFileInputExcel_21_NB_LINE", nb_line_tFileInputExcel_21);

					}

				} finally {

					if (!(source_tFileInputExcel_21 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_21.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_21", true);
				end_Hash.put("tFileInputExcel_21", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_21 end ] stop
				 */

				/**
				 * [tMap_21 end ] start
				 */

				currentComponent = "tMap_21";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row29");
				}

				ok_Hash.put("tMap_21", true);
				end_Hash.put("tMap_21", System.currentTimeMillis());

				/**
				 * [tMap_21 end ] stop
				 */

				/**
				 * [tMap_22 begin ] start
				 */

				ok_Hash.put("tMap_22", false);
				start_Hash.put("tMap_22", System.currentTimeMillis());

				currentComponent = "tMap_22";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row30");
				}

				int tos_count_tMap_22 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_22__Struct {
				}
				Var__tMap_22__Struct Var__tMap_22 = new Var__tMap_22__Struct();
// ###############################

// ###############################
// # Outputs initialization
				copyOfcopyOft7_0_2Struct copyOfcopyOft7_0_2_tmp = new copyOfcopyOft7_0_2Struct();
// ###############################

				/**
				 * [tMap_22 begin ] stop
				 */

				/**
				 * [tFileInputExcel_22 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_22", false);
				start_Hash.put("tFileInputExcel_22", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_22";

				int tos_count_tFileInputExcel_22 = 0;

				final String decryptedPassword_tFileInputExcel_22 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:vDIV027TptM+WJHX2fuCLm231Sg3NMtusXuYeA==");
				String password_tFileInputExcel_22 = decryptedPassword_tFileInputExcel_22;
				if (password_tFileInputExcel_22.isEmpty()) {
					password_tFileInputExcel_22 = null;
				}
				class RegexUtil_tFileInputExcel_22 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_22 regexUtil_tFileInputExcel_22 = new RegexUtil_tFileInputExcel_22();

				Object source_tFileInputExcel_22 = "C:/Users/DELL/Downloads/parc facturé Mars 2022 (1).xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_22 = null;

				if (source_tFileInputExcel_22 instanceof String) {
					workbook_tFileInputExcel_22 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_22), password_tFileInputExcel_22,
									true);
				} else if (source_tFileInputExcel_22 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_22 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_22, password_tFileInputExcel_22);
				} else {
					workbook_tFileInputExcel_22 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_22 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_22.addAll(
							regexUtil_tFileInputExcel_22.getSheets(workbook_tFileInputExcel_22, "Résiliation", false));
					if (sheetList_tFileInputExcel_22.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_22 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_22 : sheetList_tFileInputExcel_22) {
						if (sheet_FilterNull_tFileInputExcel_22 != null
								&& sheetList_FilterNull_tFileInputExcel_22.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_22.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_22.add(sheet_FilterNull_tFileInputExcel_22);
						}
					}
					sheetList_tFileInputExcel_22 = sheetList_FilterNull_tFileInputExcel_22;
					if (sheetList_tFileInputExcel_22.size() > 0) {
						int nb_line_tFileInputExcel_22 = 0;

						int begin_line_tFileInputExcel_22 = 1;

						int footer_input_tFileInputExcel_22 = 0;

						int end_line_tFileInputExcel_22 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_22 : sheetList_tFileInputExcel_22) {
							end_line_tFileInputExcel_22 += (sheet_tFileInputExcel_22.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_22 -= footer_input_tFileInputExcel_22;
						int limit_tFileInputExcel_22 = -1;
						int start_column_tFileInputExcel_22 = 1 - 1;
						int end_column_tFileInputExcel_22 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_22 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_22 = sheetList_tFileInputExcel_22
								.get(0);
						int rowCount_tFileInputExcel_22 = 0;
						int sheetIndex_tFileInputExcel_22 = 0;
						int currentRows_tFileInputExcel_22 = (sheetList_tFileInputExcel_22.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_22 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_22 = df_tFileInputExcel_22.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_22 = begin_line_tFileInputExcel_22; i_tFileInputExcel_22 < end_line_tFileInputExcel_22; i_tFileInputExcel_22++) {

							int emptyColumnCount_tFileInputExcel_22 = 0;

							if (limit_tFileInputExcel_22 != -1
									&& nb_line_tFileInputExcel_22 >= limit_tFileInputExcel_22) {
								break;
							}

							while (i_tFileInputExcel_22 >= rowCount_tFileInputExcel_22
									+ currentRows_tFileInputExcel_22) {
								rowCount_tFileInputExcel_22 += currentRows_tFileInputExcel_22;
								sheet_tFileInputExcel_22 = sheetList_tFileInputExcel_22
										.get(++sheetIndex_tFileInputExcel_22);
								currentRows_tFileInputExcel_22 = (sheet_tFileInputExcel_22.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_22_CURRENT_SHEET", sheet_tFileInputExcel_22.getSheetName());
							if (rowCount_tFileInputExcel_22 <= i_tFileInputExcel_22) {
								row_tFileInputExcel_22 = sheet_tFileInputExcel_22
										.getRow(i_tFileInputExcel_22 - rowCount_tFileInputExcel_22);
							}
							row30 = null;
							int tempRowLength_tFileInputExcel_22 = 11;

							int columnIndex_tFileInputExcel_22 = 0;

							String[] temp_row_tFileInputExcel_22 = new String[tempRowLength_tFileInputExcel_22];
							int excel_end_column_tFileInputExcel_22;
							if (row_tFileInputExcel_22 == null) {
								excel_end_column_tFileInputExcel_22 = 0;
							} else {
								excel_end_column_tFileInputExcel_22 = row_tFileInputExcel_22.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_22;
							if (end_column_tFileInputExcel_22 == -1) {
								actual_end_column_tFileInputExcel_22 = excel_end_column_tFileInputExcel_22;
							} else {
								actual_end_column_tFileInputExcel_22 = end_column_tFileInputExcel_22 > excel_end_column_tFileInputExcel_22
										? excel_end_column_tFileInputExcel_22
										: end_column_tFileInputExcel_22;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_22 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_22; i++) {
								if (i + start_column_tFileInputExcel_22 < actual_end_column_tFileInputExcel_22) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_22 = row_tFileInputExcel_22
											.getCell(i + start_column_tFileInputExcel_22);
									if (cell_tFileInputExcel_22 != null) {
										switch (cell_tFileInputExcel_22.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_22[i] = cell_tFileInputExcel_22
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_22)) {
												temp_row_tFileInputExcel_22[i] = cell_tFileInputExcel_22
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_22[i] = df_tFileInputExcel_22
														.format(cell_tFileInputExcel_22.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_22[i] = String
													.valueOf(cell_tFileInputExcel_22.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_22.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_22[i] = cell_tFileInputExcel_22
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_22)) {
													temp_row_tFileInputExcel_22[i] = cell_tFileInputExcel_22
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_22 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_22.getNumericCellValue());
													temp_row_tFileInputExcel_22[i] = ne_tFileInputExcel_22
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_22[i] = String
														.valueOf(cell_tFileInputExcel_22.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_22[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_22[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_22[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_22[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_22 = false;
							row30 = new row30Struct();
							int curColNum_tFileInputExcel_22 = -1;
							String curColName_tFileInputExcel_22 = "";
							try {
								columnIndex_tFileInputExcel_22 = 0;

								if (temp_row_tFileInputExcel_22[columnIndex_tFileInputExcel_22].length() > 0) {
									curColNum_tFileInputExcel_22 = columnIndex_tFileInputExcel_22
											+ start_column_tFileInputExcel_22 + 1;
									curColName_tFileInputExcel_22 = "Custcode";

									row30.Custcode = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_22[columnIndex_tFileInputExcel_22], null,
											'.' == decimalChar_tFileInputExcel_22 ? null
													: decimalChar_tFileInputExcel_22));
								} else {
									row30.Custcode = null;
									emptyColumnCount_tFileInputExcel_22++;
								}
								columnIndex_tFileInputExcel_22 = 1;

								if (temp_row_tFileInputExcel_22[columnIndex_tFileInputExcel_22].length() > 0) {
									curColNum_tFileInputExcel_22 = columnIndex_tFileInputExcel_22
											+ start_column_tFileInputExcel_22 + 1;
									curColName_tFileInputExcel_22 = "Raison_Sociale";

									row30.Raison_Sociale = temp_row_tFileInputExcel_22[columnIndex_tFileInputExcel_22];
								} else {
									row30.Raison_Sociale = null;
									emptyColumnCount_tFileInputExcel_22++;
								}
								columnIndex_tFileInputExcel_22 = 2;

								if (temp_row_tFileInputExcel_22[columnIndex_tFileInputExcel_22].length() > 0) {
									curColNum_tFileInputExcel_22 = columnIndex_tFileInputExcel_22
											+ start_column_tFileInputExcel_22 + 1;
									curColName_tFileInputExcel_22 = "Groupe_Client";

									row30.Groupe_Client = temp_row_tFileInputExcel_22[columnIndex_tFileInputExcel_22];
								} else {
									row30.Groupe_Client = null;
									emptyColumnCount_tFileInputExcel_22++;
								}
								columnIndex_tFileInputExcel_22 = 3;

								if (temp_row_tFileInputExcel_22[columnIndex_tFileInputExcel_22].length() > 0) {
									curColNum_tFileInputExcel_22 = columnIndex_tFileInputExcel_22
											+ start_column_tFileInputExcel_22 + 1;
									curColName_tFileInputExcel_22 = "Account_Manager";

									row30.Account_Manager = temp_row_tFileInputExcel_22[columnIndex_tFileInputExcel_22];
								} else {
									row30.Account_Manager = null;
									emptyColumnCount_tFileInputExcel_22++;
								}
								columnIndex_tFileInputExcel_22 = 4;

								if (temp_row_tFileInputExcel_22[columnIndex_tFileInputExcel_22].length() > 0) {
									curColNum_tFileInputExcel_22 = columnIndex_tFileInputExcel_22
											+ start_column_tFileInputExcel_22 + 1;
									curColName_tFileInputExcel_22 = "Equipe";

									row30.Equipe = temp_row_tFileInputExcel_22[columnIndex_tFileInputExcel_22];
								} else {
									row30.Equipe = null;
									emptyColumnCount_tFileInputExcel_22++;
								}
								columnIndex_tFileInputExcel_22 = 5;

								if (temp_row_tFileInputExcel_22[columnIndex_tFileInputExcel_22].length() > 0) {
									curColNum_tFileInputExcel_22 = columnIndex_tFileInputExcel_22
											+ start_column_tFileInputExcel_22 + 1;
									curColName_tFileInputExcel_22 = "Somme_de_Resiliation";

									row30.Somme_de_Resiliation = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_22[columnIndex_tFileInputExcel_22], null,
											'.' == decimalChar_tFileInputExcel_22 ? null
													: decimalChar_tFileInputExcel_22));
								} else {
									row30.Somme_de_Resiliation = null;
									emptyColumnCount_tFileInputExcel_22++;
								}
								columnIndex_tFileInputExcel_22 = 6;

								if (temp_row_tFileInputExcel_22[columnIndex_tFileInputExcel_22].length() > 0) {
									curColNum_tFileInputExcel_22 = columnIndex_tFileInputExcel_22
											+ start_column_tFileInputExcel_22 + 1;
									curColName_tFileInputExcel_22 = "Type_Resiliation";

									row30.Type_Resiliation = temp_row_tFileInputExcel_22[columnIndex_tFileInputExcel_22];
								} else {
									row30.Type_Resiliation = null;
									emptyColumnCount_tFileInputExcel_22++;
								}
								columnIndex_tFileInputExcel_22 = 7;

								if (temp_row_tFileInputExcel_22[columnIndex_tFileInputExcel_22].length() > 0) {
									curColNum_tFileInputExcel_22 = columnIndex_tFileInputExcel_22
											+ start_column_tFileInputExcel_22 + 1;
									curColName_tFileInputExcel_22 = "Motif";

									row30.Motif = temp_row_tFileInputExcel_22[columnIndex_tFileInputExcel_22];
								} else {
									row30.Motif = null;
									emptyColumnCount_tFileInputExcel_22++;
								}
								columnIndex_tFileInputExcel_22 = 8;

								if (temp_row_tFileInputExcel_22[columnIndex_tFileInputExcel_22].length() > 0) {
									curColNum_tFileInputExcel_22 = columnIndex_tFileInputExcel_22
											+ start_column_tFileInputExcel_22 + 1;
									curColName_tFileInputExcel_22 = "DFE";

									row30.DFE = temp_row_tFileInputExcel_22[columnIndex_tFileInputExcel_22];
								} else {
									row30.DFE = null;
									emptyColumnCount_tFileInputExcel_22++;
								}
								columnIndex_tFileInputExcel_22 = 9;

								if (temp_row_tFileInputExcel_22[columnIndex_tFileInputExcel_22].length() > 0) {
									curColNum_tFileInputExcel_22 = columnIndex_tFileInputExcel_22
											+ start_column_tFileInputExcel_22 + 1;
									curColName_tFileInputExcel_22 = "Engage_Oui_Non";

									row30.Engage_Oui_Non = temp_row_tFileInputExcel_22[columnIndex_tFileInputExcel_22];
								} else {
									row30.Engage_Oui_Non = null;
									emptyColumnCount_tFileInputExcel_22++;
								}
								columnIndex_tFileInputExcel_22 = 10;

								if (temp_row_tFileInputExcel_22[columnIndex_tFileInputExcel_22].length() > 0) {
									curColNum_tFileInputExcel_22 = columnIndex_tFileInputExcel_22
											+ start_column_tFileInputExcel_22 + 1;
									curColName_tFileInputExcel_22 = "Date_Depot";

									row30.Date_Depot = temp_row_tFileInputExcel_22[columnIndex_tFileInputExcel_22];
								} else {
									row30.Date_Depot = null;
									emptyColumnCount_tFileInputExcel_22++;
								}

								nb_line_tFileInputExcel_22++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_22_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_22 = true;
								System.err.println(e.getMessage());
								row30 = null;
							}

							/**
							 * [tFileInputExcel_22 begin ] stop
							 */

							/**
							 * [tFileInputExcel_22 main ] start
							 */

							currentComponent = "tFileInputExcel_22";

							tos_count_tFileInputExcel_22++;

							/**
							 * [tFileInputExcel_22 main ] stop
							 */

							/**
							 * [tFileInputExcel_22 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_22";

							/**
							 * [tFileInputExcel_22 process_data_begin ] stop
							 */
// Start of branch "row30"
							if (row30 != null) {

								/**
								 * [tMap_22 main ] start
								 */

								currentComponent = "tMap_22";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row30"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_22 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_22 = false;
								boolean mainRowRejected_tMap_22 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_22__Struct Var = Var__tMap_22;// ###############################
									// ###############################
									// # Output tables

									copyOfcopyOft7_0_2 = null;

// # Output table : 'copyOfcopyOft7_0_2'
									copyOfcopyOft7_0_2_tmp.Groupe_Client = row30.Groupe_Client;
									copyOfcopyOft7_0_2 = copyOfcopyOft7_0_2_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_22 = false;

								tos_count_tMap_22++;

								/**
								 * [tMap_22 main ] stop
								 */

								/**
								 * [tMap_22 process_data_begin ] start
								 */

								currentComponent = "tMap_22";

								/**
								 * [tMap_22 process_data_begin ] stop
								 */
// Start of branch "copyOfcopyOft7_0_2"
								if (copyOfcopyOft7_0_2 != null) {

									/**
									 * [tUnite_7 main ] start
									 */

									currentComponent = "tUnite_7";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "copyOfcopyOft7_0_2"

										);
									}

//////////

// for output
									row31 = new row31Struct();

									row31.Groupe_Client = copyOfcopyOft7_0_2.Groupe_Client;

									nb_line_tUnite_7++;

//////////

									tos_count_tUnite_7++;

									/**
									 * [tUnite_7 main ] stop
									 */

									/**
									 * [tUnite_7 process_data_begin ] start
									 */

									currentComponent = "tUnite_7";

									/**
									 * [tUnite_7 process_data_begin ] stop
									 */

									/**
									 * [tMap_10 main ] start
									 */

									currentComponent = "tMap_10";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "row31"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_10 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_10 = false;
									boolean mainRowRejected_tMap_10 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row47"
									///////////////////////////////////////////////

									boolean forceLooprow47 = false;

									row47Struct row47ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_10) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_10 = false;

										row47HashKey.Groupe_Client = row31.Groupe_Client;

										row47HashKey.hashCodeDirty = true;

										tHash_Lookup_row47.lookup(row47HashKey);

										if (!tHash_Lookup_row47.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_10 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row47 != null && tHash_Lookup_row47.getCount(row47HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row47' and it contains more one result from keys : row47.Groupe_Client = '"
										// + row47HashKey.Groupe_Client + "'");
									} // G 071

									row47Struct row47 = null;

									row47Struct fromLookup_row47 = null;
									row47 = row47Default;

									if (tHash_Lookup_row47 != null && tHash_Lookup_row47.hasNext()) { // G 099

										fromLookup_row47 = tHash_Lookup_row47.next();

									} // G 099

									if (fromLookup_row47 != null) {
										row47 = fromLookup_row47;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_10__Struct Var = Var__tMap_10;// ###############################
										// ###############################
										// # Output tables

										o = null;

										if (!rejectedInnerJoin_tMap_10) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'o'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_10) {
											o_tmp.Groupe_Client = row31.Groupe_Client;
											o = o_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_10 = false;

									tos_count_tMap_10++;

									/**
									 * [tMap_10 main ] stop
									 */

									/**
									 * [tMap_10 process_data_begin ] start
									 */

									currentComponent = "tMap_10";

									/**
									 * [tMap_10 process_data_begin ] stop
									 */
// Start of branch "o"
									if (o != null) {

										/**
										 * [tUniqRow_7 main ] start
										 */

										currentComponent = "tUniqRow_7";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "o"

											);
										}

										row36 = null;
										finder_tUniqRow_7.Groupe_Client = o.Groupe_Client;
										finder_tUniqRow_7.hashCodeDirty = true;
										if (!keystUniqRow_7.contains(finder_tUniqRow_7)) {
											KeyStruct_tUniqRow_7 new_tUniqRow_7 = new KeyStruct_tUniqRow_7();

											new_tUniqRow_7.Groupe_Client = o.Groupe_Client;

											keystUniqRow_7.add(new_tUniqRow_7);
											if (row36 == null) {

												row36 = new row36Struct();
											}
											row36.Groupe_Client = o.Groupe_Client;
											nb_uniques_tUniqRow_7++;
										} else {
											nb_duplicates_tUniqRow_7++;
										}

										tos_count_tUniqRow_7++;

										/**
										 * [tUniqRow_7 main ] stop
										 */

										/**
										 * [tUniqRow_7 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_7";

										/**
										 * [tUniqRow_7 process_data_begin ] stop
										 */
// Start of branch "row36"
										if (row36 != null) {

											/**
											 * [tDBOutput_4 main ] start
											 */

											currentComponent = "tDBOutput_4";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row36"

												);
											}

											whetherReject_tDBOutput_4 = false;
											if (row36.Groupe_Client == null) {
												pstmt_tDBOutput_4.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_4.setString(1, row36.Groupe_Client);
											}

											pstmt_tDBOutput_4.addBatch();
											nb_line_tDBOutput_4++;

											batchSizeCounter_tDBOutput_4++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_4 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_4) throws Exception {
													try {

														for (int countEach_tDBOutput_4 : pstmt_tDBOutput_4
																.executeBatch()) {
															if (countEach_tDBOutput_4 == -2
																	|| countEach_tDBOutput_4 == -3) {
																break;
															}
															counter += countEach_tDBOutput_4;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_4_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_4 = 0;
														for (int countEach_tDBOutput_4 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_4 < 0 ? 0
																	: countEach_tDBOutput_4);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_4) throws Exception {
													try {

														for (int countEach_tDBOutput_4 : pstmt_tDBOutput_4
																.executeBatch()) {
															if (countEach_tDBOutput_4 == -2
																	|| countEach_tDBOutput_4 == -3) {
																break;
															}
															counter += countEach_tDBOutput_4;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_4_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_4 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_4 < 0 ? 0
																	: countEach_tDBOutput_4);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_4 > 0)
													&& (batchSize_tDBOutput_4 <= batchSizeCounter_tDBOutput_4)) {

												insertedCount_tDBOutput_4 = new LimitBytesHelper_tDBOutput_4()
														.limitBytePart1(insertedCount_tDBOutput_4, pstmt_tDBOutput_4);
												rowsToCommitCount_tDBOutput_4 = insertedCount_tDBOutput_4;

												batchSizeCounter_tDBOutput_4 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_4++;
											if (commitEvery_tDBOutput_4 <= commitCounter_tDBOutput_4) {
												if ((batchSize_tDBOutput_4 > 0) && (batchSizeCounter_tDBOutput_4 > 0)) {

													insertedCount_tDBOutput_4 = new LimitBytesHelper_tDBOutput_4()
															.limitBytePart1(insertedCount_tDBOutput_4,
																	pstmt_tDBOutput_4);

													batchSizeCounter_tDBOutput_4 = 0;
												}
												if (rowsToCommitCount_tDBOutput_4 != 0) {

												}
												conn_tDBOutput_4.commit();
												if (rowsToCommitCount_tDBOutput_4 != 0) {

													rowsToCommitCount_tDBOutput_4 = 0;
												}
												commitCounter_tDBOutput_4 = 0;
											}

											tos_count_tDBOutput_4++;

											/**
											 * [tDBOutput_4 main ] stop
											 */

											/**
											 * [tDBOutput_4 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_4";

											/**
											 * [tDBOutput_4 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_4 process_data_end ] start
											 */

											currentComponent = "tDBOutput_4";

											/**
											 * [tDBOutput_4 process_data_end ] stop
											 */

										} // End of branch "row36"

										/**
										 * [tUniqRow_7 process_data_end ] start
										 */

										currentComponent = "tUniqRow_7";

										/**
										 * [tUniqRow_7 process_data_end ] stop
										 */

									} // End of branch "o"

									/**
									 * [tMap_10 process_data_end ] start
									 */

									currentComponent = "tMap_10";

									/**
									 * [tMap_10 process_data_end ] stop
									 */

									/**
									 * [tUnite_7 process_data_end ] start
									 */

									currentComponent = "tUnite_7";

									/**
									 * [tUnite_7 process_data_end ] stop
									 */

								} // End of branch "copyOfcopyOft7_0_2"

								/**
								 * [tMap_22 process_data_end ] start
								 */

								currentComponent = "tMap_22";

								/**
								 * [tMap_22 process_data_end ] stop
								 */

							} // End of branch "row30"

							/**
							 * [tFileInputExcel_22 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_22";

							/**
							 * [tFileInputExcel_22 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_22 end ] start
							 */

							currentComponent = "tFileInputExcel_22";

						}

						globalMap.put("tFileInputExcel_22_NB_LINE", nb_line_tFileInputExcel_22);

					}

				} finally {

					if (!(source_tFileInputExcel_22 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_22.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_22", true);
				end_Hash.put("tFileInputExcel_22", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_22 end ] stop
				 */

				/**
				 * [tMap_22 end ] start
				 */

				currentComponent = "tMap_22";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row30");
				}

				ok_Hash.put("tMap_22", true);
				end_Hash.put("tMap_22", System.currentTimeMillis());

				/**
				 * [tMap_22 end ] stop
				 */

				/**
				 * [tUnite_7 end ] start
				 */

				currentComponent = "tUnite_7";

				globalMap.put("tUnite_7_NB_LINE", nb_line_tUnite_7);
				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "copyOfcopyOft7_0_2", "copyOfcopyOft8_0_2");
				}

				ok_Hash.put("tUnite_7", true);
				end_Hash.put("tUnite_7", System.currentTimeMillis());

				/**
				 * [tUnite_7 end ] stop
				 */

				/**
				 * [tMap_10 end ] start
				 */

				currentComponent = "tMap_10";

// ###############################
// # Lookup hashes releasing
				if (tHash_Lookup_row47 != null) {
					tHash_Lookup_row47.endGet();
				}
				globalMap.remove("tHash_Lookup_row47");

// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row31");
				}

				ok_Hash.put("tMap_10", true);
				end_Hash.put("tMap_10", System.currentTimeMillis());

				/**
				 * [tMap_10 end ] stop
				 */

				/**
				 * [tUniqRow_7 end ] start
				 */

				currentComponent = "tUniqRow_7";

				globalMap.put("tUniqRow_7_NB_UNIQUES", nb_uniques_tUniqRow_7);
				globalMap.put("tUniqRow_7_NB_DUPLICATES", nb_duplicates_tUniqRow_7);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "o");
				}

				ok_Hash.put("tUniqRow_7", true);
				end_Hash.put("tUniqRow_7", System.currentTimeMillis());

				/**
				 * [tUniqRow_7 end ] stop
				 */

				/**
				 * [tDBOutput_4 end ] start
				 */

				currentComponent = "tDBOutput_4";

				try {
					int countSum_tDBOutput_4 = 0;
					if (pstmt_tDBOutput_4 != null && batchSizeCounter_tDBOutput_4 > 0) {

						for (int countEach_tDBOutput_4 : pstmt_tDBOutput_4.executeBatch()) {
							if (countEach_tDBOutput_4 == -2 || countEach_tDBOutput_4 == -3) {
								break;
							}
							countSum_tDBOutput_4 += countEach_tDBOutput_4;
						}
						rowsToCommitCount_tDBOutput_4 += countSum_tDBOutput_4;

					}

					insertedCount_tDBOutput_4 += countSum_tDBOutput_4;

				} catch (java.sql.BatchUpdateException e) {
					globalMap.put("tDBOutput_4_ERROR_MESSAGE", e.getMessage());

					int countSum_tDBOutput_4 = 0;
					for (int countEach_tDBOutput_4 : e.getUpdateCounts()) {
						countSum_tDBOutput_4 += (countEach_tDBOutput_4 < 0 ? 0 : countEach_tDBOutput_4);
					}
					rowsToCommitCount_tDBOutput_4 += countSum_tDBOutput_4;

					insertedCount_tDBOutput_4 += countSum_tDBOutput_4;

					System.err.println(e.getMessage());

				}
				if (pstmt_tDBOutput_4 != null) {

					pstmt_tDBOutput_4.close();
					resourceMap.remove("pstmt_tDBOutput_4");

				}
				resourceMap.put("statementClosed_tDBOutput_4", true);
				if (rowsToCommitCount_tDBOutput_4 != 0) {

				}
				conn_tDBOutput_4.commit();
				if (rowsToCommitCount_tDBOutput_4 != 0) {

					rowsToCommitCount_tDBOutput_4 = 0;
				}
				commitCounter_tDBOutput_4 = 0;
				conn_tDBOutput_4.close();
				resourceMap.put("finish_tDBOutput_4", true);

				nb_line_deleted_tDBOutput_4 = nb_line_deleted_tDBOutput_4 + deletedCount_tDBOutput_4;
				nb_line_update_tDBOutput_4 = nb_line_update_tDBOutput_4 + updatedCount_tDBOutput_4;
				nb_line_inserted_tDBOutput_4 = nb_line_inserted_tDBOutput_4 + insertedCount_tDBOutput_4;
				nb_line_rejected_tDBOutput_4 = nb_line_rejected_tDBOutput_4 + rejectedCount_tDBOutput_4;

				globalMap.put("tDBOutput_4_NB_LINE", nb_line_tDBOutput_4);
				globalMap.put("tDBOutput_4_NB_LINE_UPDATED", nb_line_update_tDBOutput_4);
				globalMap.put("tDBOutput_4_NB_LINE_INSERTED", nb_line_inserted_tDBOutput_4);
				globalMap.put("tDBOutput_4_NB_LINE_DELETED", nb_line_deleted_tDBOutput_4);
				globalMap.put("tDBOutput_4_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_4);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row36");
				}

				ok_Hash.put("tDBOutput_4", true);
				end_Hash.put("tDBOutput_4", System.currentTimeMillis());

				/**
				 * [tDBOutput_4 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			// free memory for "tMap_10"
			globalMap.remove("tHash_Lookup_row47");

			try {

				/**
				 * [tFileInputExcel_21 finally ] start
				 */

				currentComponent = "tFileInputExcel_21";

				/**
				 * [tFileInputExcel_21 finally ] stop
				 */

				/**
				 * [tMap_21 finally ] start
				 */

				currentComponent = "tMap_21";

				/**
				 * [tMap_21 finally ] stop
				 */

				/**
				 * [tFileInputExcel_22 finally ] start
				 */

				currentComponent = "tFileInputExcel_22";

				/**
				 * [tFileInputExcel_22 finally ] stop
				 */

				/**
				 * [tMap_22 finally ] start
				 */

				currentComponent = "tMap_22";

				/**
				 * [tMap_22 finally ] stop
				 */

				/**
				 * [tUnite_7 finally ] start
				 */

				currentComponent = "tUnite_7";

				/**
				 * [tUnite_7 finally ] stop
				 */

				/**
				 * [tMap_10 finally ] start
				 */

				currentComponent = "tMap_10";

				/**
				 * [tMap_10 finally ] stop
				 */

				/**
				 * [tUniqRow_7 finally ] start
				 */

				currentComponent = "tUniqRow_7";

				/**
				 * [tUniqRow_7 finally ] stop
				 */

				/**
				 * [tDBOutput_4 finally ] start
				 */

				currentComponent = "tDBOutput_4";

				try {
					if (resourceMap.get("statementClosed_tDBOutput_4") == null) {
						java.sql.PreparedStatement pstmtToClose_tDBOutput_4 = null;
						if ((pstmtToClose_tDBOutput_4 = (java.sql.PreparedStatement) resourceMap
								.remove("pstmt_tDBOutput_4")) != null) {
							pstmtToClose_tDBOutput_4.close();
						}
					}
				} finally {
					if (resourceMap.get("finish_tDBOutput_4") == null) {
						java.sql.Connection ctn_tDBOutput_4 = null;
						if ((ctn_tDBOutput_4 = (java.sql.Connection) resourceMap.get("conn_tDBOutput_4")) != null) {
							try {
								ctn_tDBOutput_4.close();
							} catch (java.sql.SQLException sqlEx_tDBOutput_4) {
								String errorMessage_tDBOutput_4 = "failed to close the connection in tDBOutput_4 :"
										+ sqlEx_tDBOutput_4.getMessage();
								System.err.println(errorMessage_tDBOutput_4);
							}
						}
					}
				}

				/**
				 * [tDBOutput_4 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tFileInputExcel_21_SUBPROCESS_STATE", 1);
	}

	public static class row23Struct implements routines.system.IPersistableRow<row23Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Motif;

		public String getMotif() {
			return this.Motif;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Motif = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Motif = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Motif, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Motif, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Motif=" + Motif);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row23Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class zStruct implements routines.system.IPersistableRow<zStruct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Motif;

		public String getMotif() {
			return this.Motif;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Motif = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Motif = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Motif, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Motif, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Motif=" + Motif);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(zStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row16Struct implements routines.system.IPersistableRow<row16Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Motif;

		public String getMotif() {
			return this.Motif;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Motif = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Motif = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Motif, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Motif, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Motif=" + Motif);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row16Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class copyOfcopyOft8_0_3Struct implements routines.system.IPersistableRow<copyOfcopyOft8_0_3Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Motif;

		public String getMotif() {
			return this.Motif;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Motif = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Motif = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Motif, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Motif, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Motif=" + Motif);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(copyOfcopyOft8_0_3Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row32Struct implements routines.system.IPersistableRow<row32Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public Float Custcode;

		public Float getCustcode() {
			return this.Custcode;
		}

		public String Raison_Sociale;

		public String getRaison_Sociale() {
			return this.Raison_Sociale;
		}

		public String Groupe_Client;

		public String getGroupe_Client() {
			return this.Groupe_Client;
		}

		public String Account_Manager;

		public String getAccount_Manager() {
			return this.Account_Manager;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public Integer Somme_de_Suspension;

		public Integer getSomme_de_Suspension() {
			return this.Somme_de_Suspension;
		}

		public String Type_de_suspension;

		public String getType_de_suspension() {
			return this.Type_de_suspension;
		}

		public String Motif;

		public String getMotif() {
			return this.Motif;
		}

		public String DFE;

		public String getDFE() {
			return this.DFE;
		}

		public String Engage_Oui_Non;

		public String getEngage_Oui_Non() {
			return this.Engage_Oui_Non;
		}

		public String Date_Depot;

		public String getDate_Depot() {
			return this.Date_Depot;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Suspension = readInteger(dis);

					this.Type_de_suspension = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Suspension = readInteger(dis);

					this.Type_de_suspension = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Suspension, dos);

				// String

				writeString(this.Type_de_suspension, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// String

				writeString(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Suspension, dos);

				// String

				writeString(this.Type_de_suspension, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// String

				writeString(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Custcode=" + String.valueOf(Custcode));
			sb.append(",Raison_Sociale=" + Raison_Sociale);
			sb.append(",Groupe_Client=" + Groupe_Client);
			sb.append(",Account_Manager=" + Account_Manager);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Somme_de_Suspension=" + String.valueOf(Somme_de_Suspension));
			sb.append(",Type_de_suspension=" + Type_de_suspension);
			sb.append(",Motif=" + Motif);
			sb.append(",DFE=" + DFE);
			sb.append(",Engage_Oui_Non=" + Engage_Oui_Non);
			sb.append(",Date_Depot=" + Date_Depot);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row32Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class after_tFileInputExcel_23Struct
			implements routines.system.IPersistableRow<after_tFileInputExcel_23Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public Float Custcode;

		public Float getCustcode() {
			return this.Custcode;
		}

		public String Raison_Sociale;

		public String getRaison_Sociale() {
			return this.Raison_Sociale;
		}

		public String Groupe_Client;

		public String getGroupe_Client() {
			return this.Groupe_Client;
		}

		public String Account_Manager;

		public String getAccount_Manager() {
			return this.Account_Manager;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public Integer Somme_de_Suspension;

		public Integer getSomme_de_Suspension() {
			return this.Somme_de_Suspension;
		}

		public String Type_de_suspension;

		public String getType_de_suspension() {
			return this.Type_de_suspension;
		}

		public String Motif;

		public String getMotif() {
			return this.Motif;
		}

		public String DFE;

		public String getDFE() {
			return this.DFE;
		}

		public String Engage_Oui_Non;

		public String getEngage_Oui_Non() {
			return this.Engage_Oui_Non;
		}

		public String Date_Depot;

		public String getDate_Depot() {
			return this.Date_Depot;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Suspension = readInteger(dis);

					this.Type_de_suspension = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Suspension = readInteger(dis);

					this.Type_de_suspension = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Suspension, dos);

				// String

				writeString(this.Type_de_suspension, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// String

				writeString(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Suspension, dos);

				// String

				writeString(this.Type_de_suspension, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// String

				writeString(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Custcode=" + String.valueOf(Custcode));
			sb.append(",Raison_Sociale=" + Raison_Sociale);
			sb.append(",Groupe_Client=" + Groupe_Client);
			sb.append(",Account_Manager=" + Account_Manager);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Somme_de_Suspension=" + String.valueOf(Somme_de_Suspension));
			sb.append(",Type_de_suspension=" + Type_de_suspension);
			sb.append(",Motif=" + Motif);
			sb.append(",DFE=" + DFE);
			sb.append(",Engage_Oui_Non=" + Engage_Oui_Non);
			sb.append(",Date_Depot=" + Date_Depot);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(after_tFileInputExcel_23Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class copyOfcopyOft7_0_3Struct implements routines.system.IPersistableRow<copyOfcopyOft7_0_3Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Motif;

		public String getMotif() {
			return this.Motif;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Motif = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Motif = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Motif, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Motif, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Motif=" + Motif);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(copyOfcopyOft7_0_3Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row33Struct implements routines.system.IPersistableRow<row33Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public Float Custcode;

		public Float getCustcode() {
			return this.Custcode;
		}

		public String Raison_Sociale;

		public String getRaison_Sociale() {
			return this.Raison_Sociale;
		}

		public String Groupe_Client;

		public String getGroupe_Client() {
			return this.Groupe_Client;
		}

		public String Account_Manager;

		public String getAccount_Manager() {
			return this.Account_Manager;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public Integer Somme_de_Resiliation;

		public Integer getSomme_de_Resiliation() {
			return this.Somme_de_Resiliation;
		}

		public String Type_Resiliation;

		public String getType_Resiliation() {
			return this.Type_Resiliation;
		}

		public String Motif;

		public String getMotif() {
			return this.Motif;
		}

		public String DFE;

		public String getDFE() {
			return this.DFE;
		}

		public String Engage_Oui_Non;

		public String getEngage_Oui_Non() {
			return this.Engage_Oui_Non;
		}

		public String Date_Depot;

		public String getDate_Depot() {
			return this.Date_Depot;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Resiliation = readInteger(dis);

					this.Type_Resiliation = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Resiliation = readInteger(dis);

					this.Type_Resiliation = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Resiliation, dos);

				// String

				writeString(this.Type_Resiliation, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// String

				writeString(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Resiliation, dos);

				// String

				writeString(this.Type_Resiliation, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// String

				writeString(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Custcode=" + String.valueOf(Custcode));
			sb.append(",Raison_Sociale=" + Raison_Sociale);
			sb.append(",Groupe_Client=" + Groupe_Client);
			sb.append(",Account_Manager=" + Account_Manager);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Somme_de_Resiliation=" + String.valueOf(Somme_de_Resiliation));
			sb.append(",Type_Resiliation=" + Type_Resiliation);
			sb.append(",Motif=" + Motif);
			sb.append(",DFE=" + DFE);
			sb.append(",Engage_Oui_Non=" + Engage_Oui_Non);
			sb.append(",Date_Depot=" + Date_Depot);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row33Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tFileInputExcel_23Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tFileInputExcel_23_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				tDBInput_8Process(globalMap);

				row32Struct row32 = new row32Struct();
				copyOfcopyOft8_0_3Struct copyOfcopyOft8_0_3 = new copyOfcopyOft8_0_3Struct();

				row33Struct row33 = new row33Struct();
				copyOfcopyOft7_0_3Struct copyOfcopyOft7_0_3 = new copyOfcopyOft7_0_3Struct();

				row16Struct row16 = new row16Struct();
				zStruct z = new zStruct();
				row23Struct row23 = new row23Struct();

				/**
				 * [tDBOutput_5 begin ] start
				 */

				ok_Hash.put("tDBOutput_5", false);
				start_Hash.put("tDBOutput_5", System.currentTimeMillis());

				currentComponent = "tDBOutput_5";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row23");
				}

				int tos_count_tDBOutput_5 = 0;

				int nb_line_tDBOutput_5 = 0;
				int nb_line_update_tDBOutput_5 = 0;
				int nb_line_inserted_tDBOutput_5 = 0;
				int nb_line_deleted_tDBOutput_5 = 0;
				int nb_line_rejected_tDBOutput_5 = 0;

				int deletedCount_tDBOutput_5 = 0;
				int updatedCount_tDBOutput_5 = 0;
				int insertedCount_tDBOutput_5 = 0;
				int rowsToCommitCount_tDBOutput_5 = 0;
				int rejectedCount_tDBOutput_5 = 0;
				String dbschema_tDBOutput_5 = null;
				String tableName_tDBOutput_5 = null;
				boolean whetherReject_tDBOutput_5 = false;

				java.util.Calendar calendar_tDBOutput_5 = java.util.Calendar.getInstance();
				long year1_tDBOutput_5 = TalendDate.parseDate("yyyy-MM-dd", "0001-01-01").getTime();
				long year2_tDBOutput_5 = TalendDate.parseDate("yyyy-MM-dd", "1753-01-01").getTime();
				long year10000_tDBOutput_5 = TalendDate.parseDate("yyyy-MM-dd HH:mm:ss", "9999-12-31 24:00:00")
						.getTime();
				long date_tDBOutput_5;

				java.util.Calendar calendar_datetimeoffset_tDBOutput_5 = java.util.Calendar
						.getInstance(java.util.TimeZone.getTimeZone("UTC"));

				java.sql.Connection conn_tDBOutput_5 = null;
				String dbUser_tDBOutput_5 = null;
				dbschema_tDBOutput_5 = "dbo";
				String driverClass_tDBOutput_5 = "net.sourceforge.jtds.jdbc.Driver";

				java.lang.Class.forName(driverClass_tDBOutput_5);
				String port_tDBOutput_5 = "1433";
				String dbname_tDBOutput_5 = "orange_DW__";
				String url_tDBOutput_5 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBOutput_5)) {
					url_tDBOutput_5 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBOutput_5)) {
					url_tDBOutput_5 += "//" + "orange_DW__";

				}
				url_tDBOutput_5 += ";appName=" + projectName + ";" + "";
				dbUser_tDBOutput_5 = "sa";

				final String decryptedPassword_tDBOutput_5 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:5+E5qtX+1YrIZDX8M74uYq/mdFTYmHa9NLRnA9YZ1J9EmEhX+G8=");

				String dbPwd_tDBOutput_5 = decryptedPassword_tDBOutput_5;
				conn_tDBOutput_5 = java.sql.DriverManager.getConnection(url_tDBOutput_5, dbUser_tDBOutput_5,
						dbPwd_tDBOutput_5);

				resourceMap.put("conn_tDBOutput_5", conn_tDBOutput_5);

				conn_tDBOutput_5.setAutoCommit(false);
				int commitEvery_tDBOutput_5 = 10000;
				int commitCounter_tDBOutput_5 = 0;

				int batchSize_tDBOutput_5 = 10000;
				int batchSizeCounter_tDBOutput_5 = 0;

				if (dbschema_tDBOutput_5 == null || dbschema_tDBOutput_5.trim().length() == 0) {
					tableName_tDBOutput_5 = "Dim_Motif";
				} else {
					tableName_tDBOutput_5 = dbschema_tDBOutput_5 + "].[" + "Dim_Motif";
				}
				int count_tDBOutput_5 = 0;

				String insert_tDBOutput_5 = "INSERT INTO [" + tableName_tDBOutput_5 + "] ([Motif]) VALUES (?)";
				java.sql.PreparedStatement pstmt_tDBOutput_5 = conn_tDBOutput_5.prepareStatement(insert_tDBOutput_5);
				resourceMap.put("pstmt_tDBOutput_5", pstmt_tDBOutput_5);

				/**
				 * [tDBOutput_5 begin ] stop
				 */

				/**
				 * [tUniqRow_8 begin ] start
				 */

				ok_Hash.put("tUniqRow_8", false);
				start_Hash.put("tUniqRow_8", System.currentTimeMillis());

				currentComponent = "tUniqRow_8";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "z");
				}

				int tos_count_tUniqRow_8 = 0;

				class KeyStruct_tUniqRow_8 {

					private static final int DEFAULT_HASHCODE = 1;
					private static final int PRIME = 31;
					private int hashCode = DEFAULT_HASHCODE;
					public boolean hashCodeDirty = true;

					String Motif;

					@Override
					public int hashCode() {
						if (this.hashCodeDirty) {
							final int prime = PRIME;
							int result = DEFAULT_HASHCODE;

							result = prime * result + ((this.Motif == null) ? 0 : this.Motif.hashCode());

							this.hashCode = result;
							this.hashCodeDirty = false;
						}
						return this.hashCode;
					}

					@Override
					public boolean equals(Object obj) {
						if (this == obj)
							return true;
						if (obj == null)
							return false;
						if (getClass() != obj.getClass())
							return false;
						final KeyStruct_tUniqRow_8 other = (KeyStruct_tUniqRow_8) obj;

						if (this.Motif == null) {
							if (other.Motif != null)
								return false;

						} else if (!this.Motif.equals(other.Motif))

							return false;

						return true;
					}

				}

				int nb_uniques_tUniqRow_8 = 0;
				int nb_duplicates_tUniqRow_8 = 0;
				KeyStruct_tUniqRow_8 finder_tUniqRow_8 = new KeyStruct_tUniqRow_8();
				java.util.Set<KeyStruct_tUniqRow_8> keystUniqRow_8 = new java.util.HashSet<KeyStruct_tUniqRow_8>();

				/**
				 * [tUniqRow_8 begin ] stop
				 */

				/**
				 * [tMap_40 begin ] start
				 */

				ok_Hash.put("tMap_40", false);
				start_Hash.put("tMap_40", System.currentTimeMillis());

				currentComponent = "tMap_40";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row16");
				}

				int tos_count_tMap_40 = 0;

// ###############################
// # Lookup's keys initialization

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row34Struct> tHash_Lookup_row34 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row34Struct>) ((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row34Struct>) globalMap
						.get("tHash_Lookup_row34"));

				row34Struct row34HashKey = new row34Struct();
				row34Struct row34Default = new row34Struct();
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_40__Struct {
				}
				Var__tMap_40__Struct Var__tMap_40 = new Var__tMap_40__Struct();
// ###############################

// ###############################
// # Outputs initialization
				zStruct z_tmp = new zStruct();
// ###############################

				/**
				 * [tMap_40 begin ] stop
				 */

				/**
				 * [tUnite_8 begin ] start
				 */

				ok_Hash.put("tUnite_8", false);
				start_Hash.put("tUnite_8", System.currentTimeMillis());

				currentComponent = "tUnite_8";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "copyOfcopyOft8_0_3",
							"copyOfcopyOft7_0_3");
				}

				int tos_count_tUnite_8 = 0;

				int nb_line_tUnite_8 = 0;

				/**
				 * [tUnite_8 begin ] stop
				 */

				/**
				 * [tMap_23 begin ] start
				 */

				ok_Hash.put("tMap_23", false);
				start_Hash.put("tMap_23", System.currentTimeMillis());

				currentComponent = "tMap_23";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row32");
				}

				int tos_count_tMap_23 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_23__Struct {
				}
				Var__tMap_23__Struct Var__tMap_23 = new Var__tMap_23__Struct();
// ###############################

// ###############################
// # Outputs initialization
				copyOfcopyOft8_0_3Struct copyOfcopyOft8_0_3_tmp = new copyOfcopyOft8_0_3Struct();
// ###############################

				/**
				 * [tMap_23 begin ] stop
				 */

				/**
				 * [tFileInputExcel_23 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_23", false);
				start_Hash.put("tFileInputExcel_23", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_23";

				int tos_count_tFileInputExcel_23 = 0;

				final String decryptedPassword_tFileInputExcel_23 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:i1trK07VwdAWHT34Gs/ZxsdL/y2OPsJIdZvWxw==");
				String password_tFileInputExcel_23 = decryptedPassword_tFileInputExcel_23;
				if (password_tFileInputExcel_23.isEmpty()) {
					password_tFileInputExcel_23 = null;
				}
				class RegexUtil_tFileInputExcel_23 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_23 regexUtil_tFileInputExcel_23 = new RegexUtil_tFileInputExcel_23();

				Object source_tFileInputExcel_23 = "C:/Users/DELL/Downloads/parc facturé Mars 2022 (1).xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_23 = null;

				if (source_tFileInputExcel_23 instanceof String) {
					workbook_tFileInputExcel_23 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_23), password_tFileInputExcel_23,
									true);
				} else if (source_tFileInputExcel_23 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_23 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_23, password_tFileInputExcel_23);
				} else {
					workbook_tFileInputExcel_23 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_23 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_23.addAll(
							regexUtil_tFileInputExcel_23.getSheets(workbook_tFileInputExcel_23, "Suspension", false));
					if (sheetList_tFileInputExcel_23.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_23 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_23 : sheetList_tFileInputExcel_23) {
						if (sheet_FilterNull_tFileInputExcel_23 != null
								&& sheetList_FilterNull_tFileInputExcel_23.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_23.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_23.add(sheet_FilterNull_tFileInputExcel_23);
						}
					}
					sheetList_tFileInputExcel_23 = sheetList_FilterNull_tFileInputExcel_23;
					if (sheetList_tFileInputExcel_23.size() > 0) {
						int nb_line_tFileInputExcel_23 = 0;

						int begin_line_tFileInputExcel_23 = 1;

						int footer_input_tFileInputExcel_23 = 0;

						int end_line_tFileInputExcel_23 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_23 : sheetList_tFileInputExcel_23) {
							end_line_tFileInputExcel_23 += (sheet_tFileInputExcel_23.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_23 -= footer_input_tFileInputExcel_23;
						int limit_tFileInputExcel_23 = -1;
						int start_column_tFileInputExcel_23 = 1 - 1;
						int end_column_tFileInputExcel_23 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_23 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_23 = sheetList_tFileInputExcel_23
								.get(0);
						int rowCount_tFileInputExcel_23 = 0;
						int sheetIndex_tFileInputExcel_23 = 0;
						int currentRows_tFileInputExcel_23 = (sheetList_tFileInputExcel_23.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_23 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_23 = df_tFileInputExcel_23.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_23 = begin_line_tFileInputExcel_23; i_tFileInputExcel_23 < end_line_tFileInputExcel_23; i_tFileInputExcel_23++) {

							int emptyColumnCount_tFileInputExcel_23 = 0;

							if (limit_tFileInputExcel_23 != -1
									&& nb_line_tFileInputExcel_23 >= limit_tFileInputExcel_23) {
								break;
							}

							while (i_tFileInputExcel_23 >= rowCount_tFileInputExcel_23
									+ currentRows_tFileInputExcel_23) {
								rowCount_tFileInputExcel_23 += currentRows_tFileInputExcel_23;
								sheet_tFileInputExcel_23 = sheetList_tFileInputExcel_23
										.get(++sheetIndex_tFileInputExcel_23);
								currentRows_tFileInputExcel_23 = (sheet_tFileInputExcel_23.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_23_CURRENT_SHEET", sheet_tFileInputExcel_23.getSheetName());
							if (rowCount_tFileInputExcel_23 <= i_tFileInputExcel_23) {
								row_tFileInputExcel_23 = sheet_tFileInputExcel_23
										.getRow(i_tFileInputExcel_23 - rowCount_tFileInputExcel_23);
							}
							row32 = null;
							int tempRowLength_tFileInputExcel_23 = 11;

							int columnIndex_tFileInputExcel_23 = 0;

							String[] temp_row_tFileInputExcel_23 = new String[tempRowLength_tFileInputExcel_23];
							int excel_end_column_tFileInputExcel_23;
							if (row_tFileInputExcel_23 == null) {
								excel_end_column_tFileInputExcel_23 = 0;
							} else {
								excel_end_column_tFileInputExcel_23 = row_tFileInputExcel_23.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_23;
							if (end_column_tFileInputExcel_23 == -1) {
								actual_end_column_tFileInputExcel_23 = excel_end_column_tFileInputExcel_23;
							} else {
								actual_end_column_tFileInputExcel_23 = end_column_tFileInputExcel_23 > excel_end_column_tFileInputExcel_23
										? excel_end_column_tFileInputExcel_23
										: end_column_tFileInputExcel_23;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_23 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_23; i++) {
								if (i + start_column_tFileInputExcel_23 < actual_end_column_tFileInputExcel_23) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_23 = row_tFileInputExcel_23
											.getCell(i + start_column_tFileInputExcel_23);
									if (cell_tFileInputExcel_23 != null) {
										switch (cell_tFileInputExcel_23.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_23[i] = cell_tFileInputExcel_23
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_23)) {
												temp_row_tFileInputExcel_23[i] = cell_tFileInputExcel_23
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_23[i] = df_tFileInputExcel_23
														.format(cell_tFileInputExcel_23.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_23[i] = String
													.valueOf(cell_tFileInputExcel_23.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_23.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_23[i] = cell_tFileInputExcel_23
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_23)) {
													temp_row_tFileInputExcel_23[i] = cell_tFileInputExcel_23
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_23 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_23.getNumericCellValue());
													temp_row_tFileInputExcel_23[i] = ne_tFileInputExcel_23
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_23[i] = String
														.valueOf(cell_tFileInputExcel_23.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_23[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_23[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_23[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_23[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_23 = false;
							row32 = new row32Struct();
							int curColNum_tFileInputExcel_23 = -1;
							String curColName_tFileInputExcel_23 = "";
							try {
								columnIndex_tFileInputExcel_23 = 0;

								if (temp_row_tFileInputExcel_23[columnIndex_tFileInputExcel_23].length() > 0) {
									curColNum_tFileInputExcel_23 = columnIndex_tFileInputExcel_23
											+ start_column_tFileInputExcel_23 + 1;
									curColName_tFileInputExcel_23 = "Custcode";

									row32.Custcode = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_23[columnIndex_tFileInputExcel_23], null,
											'.' == decimalChar_tFileInputExcel_23 ? null
													: decimalChar_tFileInputExcel_23));
								} else {
									row32.Custcode = null;
									emptyColumnCount_tFileInputExcel_23++;
								}
								columnIndex_tFileInputExcel_23 = 1;

								if (temp_row_tFileInputExcel_23[columnIndex_tFileInputExcel_23].length() > 0) {
									curColNum_tFileInputExcel_23 = columnIndex_tFileInputExcel_23
											+ start_column_tFileInputExcel_23 + 1;
									curColName_tFileInputExcel_23 = "Raison_Sociale";

									row32.Raison_Sociale = temp_row_tFileInputExcel_23[columnIndex_tFileInputExcel_23];
								} else {
									row32.Raison_Sociale = null;
									emptyColumnCount_tFileInputExcel_23++;
								}
								columnIndex_tFileInputExcel_23 = 2;

								if (temp_row_tFileInputExcel_23[columnIndex_tFileInputExcel_23].length() > 0) {
									curColNum_tFileInputExcel_23 = columnIndex_tFileInputExcel_23
											+ start_column_tFileInputExcel_23 + 1;
									curColName_tFileInputExcel_23 = "Groupe_Client";

									row32.Groupe_Client = temp_row_tFileInputExcel_23[columnIndex_tFileInputExcel_23];
								} else {
									row32.Groupe_Client = null;
									emptyColumnCount_tFileInputExcel_23++;
								}
								columnIndex_tFileInputExcel_23 = 3;

								if (temp_row_tFileInputExcel_23[columnIndex_tFileInputExcel_23].length() > 0) {
									curColNum_tFileInputExcel_23 = columnIndex_tFileInputExcel_23
											+ start_column_tFileInputExcel_23 + 1;
									curColName_tFileInputExcel_23 = "Account_Manager";

									row32.Account_Manager = temp_row_tFileInputExcel_23[columnIndex_tFileInputExcel_23];
								} else {
									row32.Account_Manager = null;
									emptyColumnCount_tFileInputExcel_23++;
								}
								columnIndex_tFileInputExcel_23 = 4;

								if (temp_row_tFileInputExcel_23[columnIndex_tFileInputExcel_23].length() > 0) {
									curColNum_tFileInputExcel_23 = columnIndex_tFileInputExcel_23
											+ start_column_tFileInputExcel_23 + 1;
									curColName_tFileInputExcel_23 = "Equipe";

									row32.Equipe = temp_row_tFileInputExcel_23[columnIndex_tFileInputExcel_23];
								} else {
									row32.Equipe = null;
									emptyColumnCount_tFileInputExcel_23++;
								}
								columnIndex_tFileInputExcel_23 = 5;

								if (temp_row_tFileInputExcel_23[columnIndex_tFileInputExcel_23].length() > 0) {
									curColNum_tFileInputExcel_23 = columnIndex_tFileInputExcel_23
											+ start_column_tFileInputExcel_23 + 1;
									curColName_tFileInputExcel_23 = "Somme_de_Suspension";

									row32.Somme_de_Suspension = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_23[columnIndex_tFileInputExcel_23], null,
											'.' == decimalChar_tFileInputExcel_23 ? null
													: decimalChar_tFileInputExcel_23));
								} else {
									row32.Somme_de_Suspension = null;
									emptyColumnCount_tFileInputExcel_23++;
								}
								columnIndex_tFileInputExcel_23 = 6;

								if (temp_row_tFileInputExcel_23[columnIndex_tFileInputExcel_23].length() > 0) {
									curColNum_tFileInputExcel_23 = columnIndex_tFileInputExcel_23
											+ start_column_tFileInputExcel_23 + 1;
									curColName_tFileInputExcel_23 = "Type_de_suspension";

									row32.Type_de_suspension = temp_row_tFileInputExcel_23[columnIndex_tFileInputExcel_23];
								} else {
									row32.Type_de_suspension = null;
									emptyColumnCount_tFileInputExcel_23++;
								}
								columnIndex_tFileInputExcel_23 = 7;

								if (temp_row_tFileInputExcel_23[columnIndex_tFileInputExcel_23].length() > 0) {
									curColNum_tFileInputExcel_23 = columnIndex_tFileInputExcel_23
											+ start_column_tFileInputExcel_23 + 1;
									curColName_tFileInputExcel_23 = "Motif";

									row32.Motif = temp_row_tFileInputExcel_23[columnIndex_tFileInputExcel_23];
								} else {
									row32.Motif = null;
									emptyColumnCount_tFileInputExcel_23++;
								}
								columnIndex_tFileInputExcel_23 = 8;

								if (temp_row_tFileInputExcel_23[columnIndex_tFileInputExcel_23].length() > 0) {
									curColNum_tFileInputExcel_23 = columnIndex_tFileInputExcel_23
											+ start_column_tFileInputExcel_23 + 1;
									curColName_tFileInputExcel_23 = "DFE";

									row32.DFE = temp_row_tFileInputExcel_23[columnIndex_tFileInputExcel_23];
								} else {
									row32.DFE = null;
									emptyColumnCount_tFileInputExcel_23++;
								}
								columnIndex_tFileInputExcel_23 = 9;

								if (temp_row_tFileInputExcel_23[columnIndex_tFileInputExcel_23].length() > 0) {
									curColNum_tFileInputExcel_23 = columnIndex_tFileInputExcel_23
											+ start_column_tFileInputExcel_23 + 1;
									curColName_tFileInputExcel_23 = "Engage_Oui_Non";

									row32.Engage_Oui_Non = temp_row_tFileInputExcel_23[columnIndex_tFileInputExcel_23];
								} else {
									row32.Engage_Oui_Non = null;
									emptyColumnCount_tFileInputExcel_23++;
								}
								columnIndex_tFileInputExcel_23 = 10;

								if (temp_row_tFileInputExcel_23[columnIndex_tFileInputExcel_23].length() > 0) {
									curColNum_tFileInputExcel_23 = columnIndex_tFileInputExcel_23
											+ start_column_tFileInputExcel_23 + 1;
									curColName_tFileInputExcel_23 = "Date_Depot";

									row32.Date_Depot = temp_row_tFileInputExcel_23[columnIndex_tFileInputExcel_23];
								} else {
									row32.Date_Depot = null;
									emptyColumnCount_tFileInputExcel_23++;
								}

								nb_line_tFileInputExcel_23++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_23_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_23 = true;
								System.err.println(e.getMessage());
								row32 = null;
							}

							/**
							 * [tFileInputExcel_23 begin ] stop
							 */

							/**
							 * [tFileInputExcel_23 main ] start
							 */

							currentComponent = "tFileInputExcel_23";

							tos_count_tFileInputExcel_23++;

							/**
							 * [tFileInputExcel_23 main ] stop
							 */

							/**
							 * [tFileInputExcel_23 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_23";

							/**
							 * [tFileInputExcel_23 process_data_begin ] stop
							 */
// Start of branch "row32"
							if (row32 != null) {

								/**
								 * [tMap_23 main ] start
								 */

								currentComponent = "tMap_23";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row32"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_23 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_23 = false;
								boolean mainRowRejected_tMap_23 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_23__Struct Var = Var__tMap_23;// ###############################
									// ###############################
									// # Output tables

									copyOfcopyOft8_0_3 = null;

// # Output table : 'copyOfcopyOft8_0_3'
									copyOfcopyOft8_0_3_tmp.Motif = row32.Motif;
									copyOfcopyOft8_0_3 = copyOfcopyOft8_0_3_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_23 = false;

								tos_count_tMap_23++;

								/**
								 * [tMap_23 main ] stop
								 */

								/**
								 * [tMap_23 process_data_begin ] start
								 */

								currentComponent = "tMap_23";

								/**
								 * [tMap_23 process_data_begin ] stop
								 */
// Start of branch "copyOfcopyOft8_0_3"
								if (copyOfcopyOft8_0_3 != null) {

									/**
									 * [tUnite_8 main ] start
									 */

									currentComponent = "tUnite_8";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "copyOfcopyOft8_0_3"

										);
									}

//////////

// for output
									row16 = new row16Struct();

									row16.Motif = copyOfcopyOft8_0_3.Motif;

									nb_line_tUnite_8++;

//////////

									tos_count_tUnite_8++;

									/**
									 * [tUnite_8 main ] stop
									 */

									/**
									 * [tUnite_8 process_data_begin ] start
									 */

									currentComponent = "tUnite_8";

									/**
									 * [tUnite_8 process_data_begin ] stop
									 */

									/**
									 * [tMap_40 main ] start
									 */

									currentComponent = "tMap_40";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "row16"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_40 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_40 = false;
									boolean mainRowRejected_tMap_40 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row34"
									///////////////////////////////////////////////

									boolean forceLooprow34 = false;

									row34Struct row34ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_40) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_40 = false;

										row34HashKey.Motif = row16.Motif;

										row34HashKey.hashCodeDirty = true;

										tHash_Lookup_row34.lookup(row34HashKey);

										if (!tHash_Lookup_row34.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_40 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row34 != null && tHash_Lookup_row34.getCount(row34HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row34' and it contains more one result from keys : row34.Motif = '" +
										// row34HashKey.Motif + "'");
									} // G 071

									row34Struct row34 = null;

									row34Struct fromLookup_row34 = null;
									row34 = row34Default;

									if (tHash_Lookup_row34 != null && tHash_Lookup_row34.hasNext()) { // G 099

										fromLookup_row34 = tHash_Lookup_row34.next();

									} // G 099

									if (fromLookup_row34 != null) {
										row34 = fromLookup_row34;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_40__Struct Var = Var__tMap_40;// ###############################
										// ###############################
										// # Output tables

										z = null;

										if (!rejectedInnerJoin_tMap_40) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'z'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_40) {
											z_tmp.Motif = row16.Motif;
											z = z_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_40 = false;

									tos_count_tMap_40++;

									/**
									 * [tMap_40 main ] stop
									 */

									/**
									 * [tMap_40 process_data_begin ] start
									 */

									currentComponent = "tMap_40";

									/**
									 * [tMap_40 process_data_begin ] stop
									 */
// Start of branch "z"
									if (z != null) {

										/**
										 * [tUniqRow_8 main ] start
										 */

										currentComponent = "tUniqRow_8";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "z"

											);
										}

										row23 = null;
										finder_tUniqRow_8.Motif = z.Motif;
										finder_tUniqRow_8.hashCodeDirty = true;
										if (!keystUniqRow_8.contains(finder_tUniqRow_8)) {
											KeyStruct_tUniqRow_8 new_tUniqRow_8 = new KeyStruct_tUniqRow_8();

											new_tUniqRow_8.Motif = z.Motif;

											keystUniqRow_8.add(new_tUniqRow_8);
											if (row23 == null) {

												row23 = new row23Struct();
											}
											row23.Motif = z.Motif;
											nb_uniques_tUniqRow_8++;
										} else {
											nb_duplicates_tUniqRow_8++;
										}

										tos_count_tUniqRow_8++;

										/**
										 * [tUniqRow_8 main ] stop
										 */

										/**
										 * [tUniqRow_8 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_8";

										/**
										 * [tUniqRow_8 process_data_begin ] stop
										 */
// Start of branch "row23"
										if (row23 != null) {

											/**
											 * [tDBOutput_5 main ] start
											 */

											currentComponent = "tDBOutput_5";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row23"

												);
											}

											whetherReject_tDBOutput_5 = false;
											if (row23.Motif == null) {
												pstmt_tDBOutput_5.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_5.setString(1, row23.Motif);
											}

											pstmt_tDBOutput_5.addBatch();
											nb_line_tDBOutput_5++;

											batchSizeCounter_tDBOutput_5++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_5 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_5) throws Exception {
													try {

														for (int countEach_tDBOutput_5 : pstmt_tDBOutput_5
																.executeBatch()) {
															if (countEach_tDBOutput_5 == -2
																	|| countEach_tDBOutput_5 == -3) {
																break;
															}
															counter += countEach_tDBOutput_5;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_5_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_5 = 0;
														for (int countEach_tDBOutput_5 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_5 < 0 ? 0
																	: countEach_tDBOutput_5);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_5) throws Exception {
													try {

														for (int countEach_tDBOutput_5 : pstmt_tDBOutput_5
																.executeBatch()) {
															if (countEach_tDBOutput_5 == -2
																	|| countEach_tDBOutput_5 == -3) {
																break;
															}
															counter += countEach_tDBOutput_5;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_5_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_5 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_5 < 0 ? 0
																	: countEach_tDBOutput_5);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_5 > 0)
													&& (batchSize_tDBOutput_5 <= batchSizeCounter_tDBOutput_5)) {

												insertedCount_tDBOutput_5 = new LimitBytesHelper_tDBOutput_5()
														.limitBytePart1(insertedCount_tDBOutput_5, pstmt_tDBOutput_5);
												rowsToCommitCount_tDBOutput_5 = insertedCount_tDBOutput_5;

												batchSizeCounter_tDBOutput_5 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_5++;
											if (commitEvery_tDBOutput_5 <= commitCounter_tDBOutput_5) {
												if ((batchSize_tDBOutput_5 > 0) && (batchSizeCounter_tDBOutput_5 > 0)) {

													insertedCount_tDBOutput_5 = new LimitBytesHelper_tDBOutput_5()
															.limitBytePart1(insertedCount_tDBOutput_5,
																	pstmt_tDBOutput_5);

													batchSizeCounter_tDBOutput_5 = 0;
												}
												if (rowsToCommitCount_tDBOutput_5 != 0) {

												}
												conn_tDBOutput_5.commit();
												if (rowsToCommitCount_tDBOutput_5 != 0) {

													rowsToCommitCount_tDBOutput_5 = 0;
												}
												commitCounter_tDBOutput_5 = 0;
											}

											tos_count_tDBOutput_5++;

											/**
											 * [tDBOutput_5 main ] stop
											 */

											/**
											 * [tDBOutput_5 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_5";

											/**
											 * [tDBOutput_5 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_5 process_data_end ] start
											 */

											currentComponent = "tDBOutput_5";

											/**
											 * [tDBOutput_5 process_data_end ] stop
											 */

										} // End of branch "row23"

										/**
										 * [tUniqRow_8 process_data_end ] start
										 */

										currentComponent = "tUniqRow_8";

										/**
										 * [tUniqRow_8 process_data_end ] stop
										 */

									} // End of branch "z"

									/**
									 * [tMap_40 process_data_end ] start
									 */

									currentComponent = "tMap_40";

									/**
									 * [tMap_40 process_data_end ] stop
									 */

									/**
									 * [tUnite_8 process_data_end ] start
									 */

									currentComponent = "tUnite_8";

									/**
									 * [tUnite_8 process_data_end ] stop
									 */

								} // End of branch "copyOfcopyOft8_0_3"

								/**
								 * [tMap_23 process_data_end ] start
								 */

								currentComponent = "tMap_23";

								/**
								 * [tMap_23 process_data_end ] stop
								 */

							} // End of branch "row32"

							/**
							 * [tFileInputExcel_23 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_23";

							/**
							 * [tFileInputExcel_23 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_23 end ] start
							 */

							currentComponent = "tFileInputExcel_23";

						}

						globalMap.put("tFileInputExcel_23_NB_LINE", nb_line_tFileInputExcel_23);

					}

				} finally {

					if (!(source_tFileInputExcel_23 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_23.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_23", true);
				end_Hash.put("tFileInputExcel_23", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_23 end ] stop
				 */

				/**
				 * [tMap_23 end ] start
				 */

				currentComponent = "tMap_23";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row32");
				}

				ok_Hash.put("tMap_23", true);
				end_Hash.put("tMap_23", System.currentTimeMillis());

				/**
				 * [tMap_23 end ] stop
				 */

				/**
				 * [tMap_24 begin ] start
				 */

				ok_Hash.put("tMap_24", false);
				start_Hash.put("tMap_24", System.currentTimeMillis());

				currentComponent = "tMap_24";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row33");
				}

				int tos_count_tMap_24 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_24__Struct {
				}
				Var__tMap_24__Struct Var__tMap_24 = new Var__tMap_24__Struct();
// ###############################

// ###############################
// # Outputs initialization
				copyOfcopyOft7_0_3Struct copyOfcopyOft7_0_3_tmp = new copyOfcopyOft7_0_3Struct();
// ###############################

				/**
				 * [tMap_24 begin ] stop
				 */

				/**
				 * [tFileInputExcel_24 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_24", false);
				start_Hash.put("tFileInputExcel_24", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_24";

				int tos_count_tFileInputExcel_24 = 0;

				final String decryptedPassword_tFileInputExcel_24 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:Wk4UE0rT6IsokCruldQzpCQPZZkSGI9ohx2QZQ==");
				String password_tFileInputExcel_24 = decryptedPassword_tFileInputExcel_24;
				if (password_tFileInputExcel_24.isEmpty()) {
					password_tFileInputExcel_24 = null;
				}
				class RegexUtil_tFileInputExcel_24 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_24 regexUtil_tFileInputExcel_24 = new RegexUtil_tFileInputExcel_24();

				Object source_tFileInputExcel_24 = "C:/Users/DELL/Downloads/parc facturé Mars 2022 (1).xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_24 = null;

				if (source_tFileInputExcel_24 instanceof String) {
					workbook_tFileInputExcel_24 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_24), password_tFileInputExcel_24,
									true);
				} else if (source_tFileInputExcel_24 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_24 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_24, password_tFileInputExcel_24);
				} else {
					workbook_tFileInputExcel_24 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_24 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_24.addAll(
							regexUtil_tFileInputExcel_24.getSheets(workbook_tFileInputExcel_24, "Résiliation", false));
					if (sheetList_tFileInputExcel_24.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_24 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_24 : sheetList_tFileInputExcel_24) {
						if (sheet_FilterNull_tFileInputExcel_24 != null
								&& sheetList_FilterNull_tFileInputExcel_24.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_24.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_24.add(sheet_FilterNull_tFileInputExcel_24);
						}
					}
					sheetList_tFileInputExcel_24 = sheetList_FilterNull_tFileInputExcel_24;
					if (sheetList_tFileInputExcel_24.size() > 0) {
						int nb_line_tFileInputExcel_24 = 0;

						int begin_line_tFileInputExcel_24 = 1;

						int footer_input_tFileInputExcel_24 = 0;

						int end_line_tFileInputExcel_24 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_24 : sheetList_tFileInputExcel_24) {
							end_line_tFileInputExcel_24 += (sheet_tFileInputExcel_24.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_24 -= footer_input_tFileInputExcel_24;
						int limit_tFileInputExcel_24 = -1;
						int start_column_tFileInputExcel_24 = 1 - 1;
						int end_column_tFileInputExcel_24 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_24 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_24 = sheetList_tFileInputExcel_24
								.get(0);
						int rowCount_tFileInputExcel_24 = 0;
						int sheetIndex_tFileInputExcel_24 = 0;
						int currentRows_tFileInputExcel_24 = (sheetList_tFileInputExcel_24.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_24 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_24 = df_tFileInputExcel_24.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_24 = begin_line_tFileInputExcel_24; i_tFileInputExcel_24 < end_line_tFileInputExcel_24; i_tFileInputExcel_24++) {

							int emptyColumnCount_tFileInputExcel_24 = 0;

							if (limit_tFileInputExcel_24 != -1
									&& nb_line_tFileInputExcel_24 >= limit_tFileInputExcel_24) {
								break;
							}

							while (i_tFileInputExcel_24 >= rowCount_tFileInputExcel_24
									+ currentRows_tFileInputExcel_24) {
								rowCount_tFileInputExcel_24 += currentRows_tFileInputExcel_24;
								sheet_tFileInputExcel_24 = sheetList_tFileInputExcel_24
										.get(++sheetIndex_tFileInputExcel_24);
								currentRows_tFileInputExcel_24 = (sheet_tFileInputExcel_24.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_24_CURRENT_SHEET", sheet_tFileInputExcel_24.getSheetName());
							if (rowCount_tFileInputExcel_24 <= i_tFileInputExcel_24) {
								row_tFileInputExcel_24 = sheet_tFileInputExcel_24
										.getRow(i_tFileInputExcel_24 - rowCount_tFileInputExcel_24);
							}
							row33 = null;
							int tempRowLength_tFileInputExcel_24 = 11;

							int columnIndex_tFileInputExcel_24 = 0;

							String[] temp_row_tFileInputExcel_24 = new String[tempRowLength_tFileInputExcel_24];
							int excel_end_column_tFileInputExcel_24;
							if (row_tFileInputExcel_24 == null) {
								excel_end_column_tFileInputExcel_24 = 0;
							} else {
								excel_end_column_tFileInputExcel_24 = row_tFileInputExcel_24.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_24;
							if (end_column_tFileInputExcel_24 == -1) {
								actual_end_column_tFileInputExcel_24 = excel_end_column_tFileInputExcel_24;
							} else {
								actual_end_column_tFileInputExcel_24 = end_column_tFileInputExcel_24 > excel_end_column_tFileInputExcel_24
										? excel_end_column_tFileInputExcel_24
										: end_column_tFileInputExcel_24;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_24 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_24; i++) {
								if (i + start_column_tFileInputExcel_24 < actual_end_column_tFileInputExcel_24) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_24 = row_tFileInputExcel_24
											.getCell(i + start_column_tFileInputExcel_24);
									if (cell_tFileInputExcel_24 != null) {
										switch (cell_tFileInputExcel_24.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_24[i] = cell_tFileInputExcel_24
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_24)) {
												temp_row_tFileInputExcel_24[i] = cell_tFileInputExcel_24
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_24[i] = df_tFileInputExcel_24
														.format(cell_tFileInputExcel_24.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_24[i] = String
													.valueOf(cell_tFileInputExcel_24.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_24.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_24[i] = cell_tFileInputExcel_24
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_24)) {
													temp_row_tFileInputExcel_24[i] = cell_tFileInputExcel_24
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_24 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_24.getNumericCellValue());
													temp_row_tFileInputExcel_24[i] = ne_tFileInputExcel_24
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_24[i] = String
														.valueOf(cell_tFileInputExcel_24.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_24[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_24[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_24[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_24[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_24 = false;
							row33 = new row33Struct();
							int curColNum_tFileInputExcel_24 = -1;
							String curColName_tFileInputExcel_24 = "";
							try {
								columnIndex_tFileInputExcel_24 = 0;

								if (temp_row_tFileInputExcel_24[columnIndex_tFileInputExcel_24].length() > 0) {
									curColNum_tFileInputExcel_24 = columnIndex_tFileInputExcel_24
											+ start_column_tFileInputExcel_24 + 1;
									curColName_tFileInputExcel_24 = "Custcode";

									row33.Custcode = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_24[columnIndex_tFileInputExcel_24], null,
											'.' == decimalChar_tFileInputExcel_24 ? null
													: decimalChar_tFileInputExcel_24));
								} else {
									row33.Custcode = null;
									emptyColumnCount_tFileInputExcel_24++;
								}
								columnIndex_tFileInputExcel_24 = 1;

								if (temp_row_tFileInputExcel_24[columnIndex_tFileInputExcel_24].length() > 0) {
									curColNum_tFileInputExcel_24 = columnIndex_tFileInputExcel_24
											+ start_column_tFileInputExcel_24 + 1;
									curColName_tFileInputExcel_24 = "Raison_Sociale";

									row33.Raison_Sociale = temp_row_tFileInputExcel_24[columnIndex_tFileInputExcel_24];
								} else {
									row33.Raison_Sociale = null;
									emptyColumnCount_tFileInputExcel_24++;
								}
								columnIndex_tFileInputExcel_24 = 2;

								if (temp_row_tFileInputExcel_24[columnIndex_tFileInputExcel_24].length() > 0) {
									curColNum_tFileInputExcel_24 = columnIndex_tFileInputExcel_24
											+ start_column_tFileInputExcel_24 + 1;
									curColName_tFileInputExcel_24 = "Groupe_Client";

									row33.Groupe_Client = temp_row_tFileInputExcel_24[columnIndex_tFileInputExcel_24];
								} else {
									row33.Groupe_Client = null;
									emptyColumnCount_tFileInputExcel_24++;
								}
								columnIndex_tFileInputExcel_24 = 3;

								if (temp_row_tFileInputExcel_24[columnIndex_tFileInputExcel_24].length() > 0) {
									curColNum_tFileInputExcel_24 = columnIndex_tFileInputExcel_24
											+ start_column_tFileInputExcel_24 + 1;
									curColName_tFileInputExcel_24 = "Account_Manager";

									row33.Account_Manager = temp_row_tFileInputExcel_24[columnIndex_tFileInputExcel_24];
								} else {
									row33.Account_Manager = null;
									emptyColumnCount_tFileInputExcel_24++;
								}
								columnIndex_tFileInputExcel_24 = 4;

								if (temp_row_tFileInputExcel_24[columnIndex_tFileInputExcel_24].length() > 0) {
									curColNum_tFileInputExcel_24 = columnIndex_tFileInputExcel_24
											+ start_column_tFileInputExcel_24 + 1;
									curColName_tFileInputExcel_24 = "Equipe";

									row33.Equipe = temp_row_tFileInputExcel_24[columnIndex_tFileInputExcel_24];
								} else {
									row33.Equipe = null;
									emptyColumnCount_tFileInputExcel_24++;
								}
								columnIndex_tFileInputExcel_24 = 5;

								if (temp_row_tFileInputExcel_24[columnIndex_tFileInputExcel_24].length() > 0) {
									curColNum_tFileInputExcel_24 = columnIndex_tFileInputExcel_24
											+ start_column_tFileInputExcel_24 + 1;
									curColName_tFileInputExcel_24 = "Somme_de_Resiliation";

									row33.Somme_de_Resiliation = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_24[columnIndex_tFileInputExcel_24], null,
											'.' == decimalChar_tFileInputExcel_24 ? null
													: decimalChar_tFileInputExcel_24));
								} else {
									row33.Somme_de_Resiliation = null;
									emptyColumnCount_tFileInputExcel_24++;
								}
								columnIndex_tFileInputExcel_24 = 6;

								if (temp_row_tFileInputExcel_24[columnIndex_tFileInputExcel_24].length() > 0) {
									curColNum_tFileInputExcel_24 = columnIndex_tFileInputExcel_24
											+ start_column_tFileInputExcel_24 + 1;
									curColName_tFileInputExcel_24 = "Type_Resiliation";

									row33.Type_Resiliation = temp_row_tFileInputExcel_24[columnIndex_tFileInputExcel_24];
								} else {
									row33.Type_Resiliation = null;
									emptyColumnCount_tFileInputExcel_24++;
								}
								columnIndex_tFileInputExcel_24 = 7;

								if (temp_row_tFileInputExcel_24[columnIndex_tFileInputExcel_24].length() > 0) {
									curColNum_tFileInputExcel_24 = columnIndex_tFileInputExcel_24
											+ start_column_tFileInputExcel_24 + 1;
									curColName_tFileInputExcel_24 = "Motif";

									row33.Motif = temp_row_tFileInputExcel_24[columnIndex_tFileInputExcel_24];
								} else {
									row33.Motif = null;
									emptyColumnCount_tFileInputExcel_24++;
								}
								columnIndex_tFileInputExcel_24 = 8;

								if (temp_row_tFileInputExcel_24[columnIndex_tFileInputExcel_24].length() > 0) {
									curColNum_tFileInputExcel_24 = columnIndex_tFileInputExcel_24
											+ start_column_tFileInputExcel_24 + 1;
									curColName_tFileInputExcel_24 = "DFE";

									row33.DFE = temp_row_tFileInputExcel_24[columnIndex_tFileInputExcel_24];
								} else {
									row33.DFE = null;
									emptyColumnCount_tFileInputExcel_24++;
								}
								columnIndex_tFileInputExcel_24 = 9;

								if (temp_row_tFileInputExcel_24[columnIndex_tFileInputExcel_24].length() > 0) {
									curColNum_tFileInputExcel_24 = columnIndex_tFileInputExcel_24
											+ start_column_tFileInputExcel_24 + 1;
									curColName_tFileInputExcel_24 = "Engage_Oui_Non";

									row33.Engage_Oui_Non = temp_row_tFileInputExcel_24[columnIndex_tFileInputExcel_24];
								} else {
									row33.Engage_Oui_Non = null;
									emptyColumnCount_tFileInputExcel_24++;
								}
								columnIndex_tFileInputExcel_24 = 10;

								if (temp_row_tFileInputExcel_24[columnIndex_tFileInputExcel_24].length() > 0) {
									curColNum_tFileInputExcel_24 = columnIndex_tFileInputExcel_24
											+ start_column_tFileInputExcel_24 + 1;
									curColName_tFileInputExcel_24 = "Date_Depot";

									row33.Date_Depot = temp_row_tFileInputExcel_24[columnIndex_tFileInputExcel_24];
								} else {
									row33.Date_Depot = null;
									emptyColumnCount_tFileInputExcel_24++;
								}

								nb_line_tFileInputExcel_24++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_24_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_24 = true;
								System.err.println(e.getMessage());
								row33 = null;
							}

							/**
							 * [tFileInputExcel_24 begin ] stop
							 */

							/**
							 * [tFileInputExcel_24 main ] start
							 */

							currentComponent = "tFileInputExcel_24";

							tos_count_tFileInputExcel_24++;

							/**
							 * [tFileInputExcel_24 main ] stop
							 */

							/**
							 * [tFileInputExcel_24 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_24";

							/**
							 * [tFileInputExcel_24 process_data_begin ] stop
							 */
// Start of branch "row33"
							if (row33 != null) {

								/**
								 * [tMap_24 main ] start
								 */

								currentComponent = "tMap_24";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row33"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_24 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_24 = false;
								boolean mainRowRejected_tMap_24 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_24__Struct Var = Var__tMap_24;// ###############################
									// ###############################
									// # Output tables

									copyOfcopyOft7_0_3 = null;

// # Output table : 'copyOfcopyOft7_0_3'
									copyOfcopyOft7_0_3_tmp.Motif = row33.Motif;
									copyOfcopyOft7_0_3 = copyOfcopyOft7_0_3_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_24 = false;

								tos_count_tMap_24++;

								/**
								 * [tMap_24 main ] stop
								 */

								/**
								 * [tMap_24 process_data_begin ] start
								 */

								currentComponent = "tMap_24";

								/**
								 * [tMap_24 process_data_begin ] stop
								 */
// Start of branch "copyOfcopyOft7_0_3"
								if (copyOfcopyOft7_0_3 != null) {

									/**
									 * [tUnite_8 main ] start
									 */

									currentComponent = "tUnite_8";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "copyOfcopyOft7_0_3"

										);
									}

//////////

// for output
									row16 = new row16Struct();

									row16.Motif = copyOfcopyOft7_0_3.Motif;

									nb_line_tUnite_8++;

//////////

									tos_count_tUnite_8++;

									/**
									 * [tUnite_8 main ] stop
									 */

									/**
									 * [tUnite_8 process_data_begin ] start
									 */

									currentComponent = "tUnite_8";

									/**
									 * [tUnite_8 process_data_begin ] stop
									 */

									/**
									 * [tMap_40 main ] start
									 */

									currentComponent = "tMap_40";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "row16"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_40 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_40 = false;
									boolean mainRowRejected_tMap_40 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row34"
									///////////////////////////////////////////////

									boolean forceLooprow34 = false;

									row34Struct row34ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_40) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_40 = false;

										row34HashKey.Motif = row16.Motif;

										row34HashKey.hashCodeDirty = true;

										tHash_Lookup_row34.lookup(row34HashKey);

										if (!tHash_Lookup_row34.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_40 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row34 != null && tHash_Lookup_row34.getCount(row34HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row34' and it contains more one result from keys : row34.Motif = '" +
										// row34HashKey.Motif + "'");
									} // G 071

									row34Struct row34 = null;

									row34Struct fromLookup_row34 = null;
									row34 = row34Default;

									if (tHash_Lookup_row34 != null && tHash_Lookup_row34.hasNext()) { // G 099

										fromLookup_row34 = tHash_Lookup_row34.next();

									} // G 099

									if (fromLookup_row34 != null) {
										row34 = fromLookup_row34;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_40__Struct Var = Var__tMap_40;// ###############################
										// ###############################
										// # Output tables

										z = null;

										if (!rejectedInnerJoin_tMap_40) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'z'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_40) {
											z_tmp.Motif = row16.Motif;
											z = z_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_40 = false;

									tos_count_tMap_40++;

									/**
									 * [tMap_40 main ] stop
									 */

									/**
									 * [tMap_40 process_data_begin ] start
									 */

									currentComponent = "tMap_40";

									/**
									 * [tMap_40 process_data_begin ] stop
									 */
// Start of branch "z"
									if (z != null) {

										/**
										 * [tUniqRow_8 main ] start
										 */

										currentComponent = "tUniqRow_8";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "z"

											);
										}

										row23 = null;
										finder_tUniqRow_8.Motif = z.Motif;
										finder_tUniqRow_8.hashCodeDirty = true;
										if (!keystUniqRow_8.contains(finder_tUniqRow_8)) {
											KeyStruct_tUniqRow_8 new_tUniqRow_8 = new KeyStruct_tUniqRow_8();

											new_tUniqRow_8.Motif = z.Motif;

											keystUniqRow_8.add(new_tUniqRow_8);
											if (row23 == null) {

												row23 = new row23Struct();
											}
											row23.Motif = z.Motif;
											nb_uniques_tUniqRow_8++;
										} else {
											nb_duplicates_tUniqRow_8++;
										}

										tos_count_tUniqRow_8++;

										/**
										 * [tUniqRow_8 main ] stop
										 */

										/**
										 * [tUniqRow_8 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_8";

										/**
										 * [tUniqRow_8 process_data_begin ] stop
										 */
// Start of branch "row23"
										if (row23 != null) {

											/**
											 * [tDBOutput_5 main ] start
											 */

											currentComponent = "tDBOutput_5";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row23"

												);
											}

											whetherReject_tDBOutput_5 = false;
											if (row23.Motif == null) {
												pstmt_tDBOutput_5.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_5.setString(1, row23.Motif);
											}

											pstmt_tDBOutput_5.addBatch();
											nb_line_tDBOutput_5++;

											batchSizeCounter_tDBOutput_5++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_5 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_5) throws Exception {
													try {

														for (int countEach_tDBOutput_5 : pstmt_tDBOutput_5
																.executeBatch()) {
															if (countEach_tDBOutput_5 == -2
																	|| countEach_tDBOutput_5 == -3) {
																break;
															}
															counter += countEach_tDBOutput_5;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_5_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_5 = 0;
														for (int countEach_tDBOutput_5 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_5 < 0 ? 0
																	: countEach_tDBOutput_5);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_5) throws Exception {
													try {

														for (int countEach_tDBOutput_5 : pstmt_tDBOutput_5
																.executeBatch()) {
															if (countEach_tDBOutput_5 == -2
																	|| countEach_tDBOutput_5 == -3) {
																break;
															}
															counter += countEach_tDBOutput_5;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_5_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_5 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_5 < 0 ? 0
																	: countEach_tDBOutput_5);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_5 > 0)
													&& (batchSize_tDBOutput_5 <= batchSizeCounter_tDBOutput_5)) {

												insertedCount_tDBOutput_5 = new LimitBytesHelper_tDBOutput_5()
														.limitBytePart1(insertedCount_tDBOutput_5, pstmt_tDBOutput_5);
												rowsToCommitCount_tDBOutput_5 = insertedCount_tDBOutput_5;

												batchSizeCounter_tDBOutput_5 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_5++;
											if (commitEvery_tDBOutput_5 <= commitCounter_tDBOutput_5) {
												if ((batchSize_tDBOutput_5 > 0) && (batchSizeCounter_tDBOutput_5 > 0)) {

													insertedCount_tDBOutput_5 = new LimitBytesHelper_tDBOutput_5()
															.limitBytePart1(insertedCount_tDBOutput_5,
																	pstmt_tDBOutput_5);

													batchSizeCounter_tDBOutput_5 = 0;
												}
												if (rowsToCommitCount_tDBOutput_5 != 0) {

												}
												conn_tDBOutput_5.commit();
												if (rowsToCommitCount_tDBOutput_5 != 0) {

													rowsToCommitCount_tDBOutput_5 = 0;
												}
												commitCounter_tDBOutput_5 = 0;
											}

											tos_count_tDBOutput_5++;

											/**
											 * [tDBOutput_5 main ] stop
											 */

											/**
											 * [tDBOutput_5 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_5";

											/**
											 * [tDBOutput_5 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_5 process_data_end ] start
											 */

											currentComponent = "tDBOutput_5";

											/**
											 * [tDBOutput_5 process_data_end ] stop
											 */

										} // End of branch "row23"

										/**
										 * [tUniqRow_8 process_data_end ] start
										 */

										currentComponent = "tUniqRow_8";

										/**
										 * [tUniqRow_8 process_data_end ] stop
										 */

									} // End of branch "z"

									/**
									 * [tMap_40 process_data_end ] start
									 */

									currentComponent = "tMap_40";

									/**
									 * [tMap_40 process_data_end ] stop
									 */

									/**
									 * [tUnite_8 process_data_end ] start
									 */

									currentComponent = "tUnite_8";

									/**
									 * [tUnite_8 process_data_end ] stop
									 */

								} // End of branch "copyOfcopyOft7_0_3"

								/**
								 * [tMap_24 process_data_end ] start
								 */

								currentComponent = "tMap_24";

								/**
								 * [tMap_24 process_data_end ] stop
								 */

							} // End of branch "row33"

							/**
							 * [tFileInputExcel_24 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_24";

							/**
							 * [tFileInputExcel_24 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_24 end ] start
							 */

							currentComponent = "tFileInputExcel_24";

						}

						globalMap.put("tFileInputExcel_24_NB_LINE", nb_line_tFileInputExcel_24);

					}

				} finally {

					if (!(source_tFileInputExcel_24 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_24.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_24", true);
				end_Hash.put("tFileInputExcel_24", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_24 end ] stop
				 */

				/**
				 * [tMap_24 end ] start
				 */

				currentComponent = "tMap_24";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row33");
				}

				ok_Hash.put("tMap_24", true);
				end_Hash.put("tMap_24", System.currentTimeMillis());

				/**
				 * [tMap_24 end ] stop
				 */

				/**
				 * [tUnite_8 end ] start
				 */

				currentComponent = "tUnite_8";

				globalMap.put("tUnite_8_NB_LINE", nb_line_tUnite_8);
				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "copyOfcopyOft8_0_3", "copyOfcopyOft7_0_3");
				}

				ok_Hash.put("tUnite_8", true);
				end_Hash.put("tUnite_8", System.currentTimeMillis());

				/**
				 * [tUnite_8 end ] stop
				 */

				/**
				 * [tMap_40 end ] start
				 */

				currentComponent = "tMap_40";

// ###############################
// # Lookup hashes releasing
				if (tHash_Lookup_row34 != null) {
					tHash_Lookup_row34.endGet();
				}
				globalMap.remove("tHash_Lookup_row34");

// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row16");
				}

				ok_Hash.put("tMap_40", true);
				end_Hash.put("tMap_40", System.currentTimeMillis());

				/**
				 * [tMap_40 end ] stop
				 */

				/**
				 * [tUniqRow_8 end ] start
				 */

				currentComponent = "tUniqRow_8";

				globalMap.put("tUniqRow_8_NB_UNIQUES", nb_uniques_tUniqRow_8);
				globalMap.put("tUniqRow_8_NB_DUPLICATES", nb_duplicates_tUniqRow_8);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "z");
				}

				ok_Hash.put("tUniqRow_8", true);
				end_Hash.put("tUniqRow_8", System.currentTimeMillis());

				/**
				 * [tUniqRow_8 end ] stop
				 */

				/**
				 * [tDBOutput_5 end ] start
				 */

				currentComponent = "tDBOutput_5";

				try {
					int countSum_tDBOutput_5 = 0;
					if (pstmt_tDBOutput_5 != null && batchSizeCounter_tDBOutput_5 > 0) {

						for (int countEach_tDBOutput_5 : pstmt_tDBOutput_5.executeBatch()) {
							if (countEach_tDBOutput_5 == -2 || countEach_tDBOutput_5 == -3) {
								break;
							}
							countSum_tDBOutput_5 += countEach_tDBOutput_5;
						}
						rowsToCommitCount_tDBOutput_5 += countSum_tDBOutput_5;

					}

					insertedCount_tDBOutput_5 += countSum_tDBOutput_5;

				} catch (java.sql.BatchUpdateException e) {
					globalMap.put("tDBOutput_5_ERROR_MESSAGE", e.getMessage());

					int countSum_tDBOutput_5 = 0;
					for (int countEach_tDBOutput_5 : e.getUpdateCounts()) {
						countSum_tDBOutput_5 += (countEach_tDBOutput_5 < 0 ? 0 : countEach_tDBOutput_5);
					}
					rowsToCommitCount_tDBOutput_5 += countSum_tDBOutput_5;

					insertedCount_tDBOutput_5 += countSum_tDBOutput_5;

					System.err.println(e.getMessage());

				}
				if (pstmt_tDBOutput_5 != null) {

					pstmt_tDBOutput_5.close();
					resourceMap.remove("pstmt_tDBOutput_5");

				}
				resourceMap.put("statementClosed_tDBOutput_5", true);
				if (rowsToCommitCount_tDBOutput_5 != 0) {

				}
				conn_tDBOutput_5.commit();
				if (rowsToCommitCount_tDBOutput_5 != 0) {

					rowsToCommitCount_tDBOutput_5 = 0;
				}
				commitCounter_tDBOutput_5 = 0;
				conn_tDBOutput_5.close();
				resourceMap.put("finish_tDBOutput_5", true);

				nb_line_deleted_tDBOutput_5 = nb_line_deleted_tDBOutput_5 + deletedCount_tDBOutput_5;
				nb_line_update_tDBOutput_5 = nb_line_update_tDBOutput_5 + updatedCount_tDBOutput_5;
				nb_line_inserted_tDBOutput_5 = nb_line_inserted_tDBOutput_5 + insertedCount_tDBOutput_5;
				nb_line_rejected_tDBOutput_5 = nb_line_rejected_tDBOutput_5 + rejectedCount_tDBOutput_5;

				globalMap.put("tDBOutput_5_NB_LINE", nb_line_tDBOutput_5);
				globalMap.put("tDBOutput_5_NB_LINE_UPDATED", nb_line_update_tDBOutput_5);
				globalMap.put("tDBOutput_5_NB_LINE_INSERTED", nb_line_inserted_tDBOutput_5);
				globalMap.put("tDBOutput_5_NB_LINE_DELETED", nb_line_deleted_tDBOutput_5);
				globalMap.put("tDBOutput_5_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_5);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row23");
				}

				ok_Hash.put("tDBOutput_5", true);
				end_Hash.put("tDBOutput_5", System.currentTimeMillis());

				/**
				 * [tDBOutput_5 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			// free memory for "tMap_40"
			globalMap.remove("tHash_Lookup_row34");

			try {

				/**
				 * [tFileInputExcel_23 finally ] start
				 */

				currentComponent = "tFileInputExcel_23";

				/**
				 * [tFileInputExcel_23 finally ] stop
				 */

				/**
				 * [tMap_23 finally ] start
				 */

				currentComponent = "tMap_23";

				/**
				 * [tMap_23 finally ] stop
				 */

				/**
				 * [tFileInputExcel_24 finally ] start
				 */

				currentComponent = "tFileInputExcel_24";

				/**
				 * [tFileInputExcel_24 finally ] stop
				 */

				/**
				 * [tMap_24 finally ] start
				 */

				currentComponent = "tMap_24";

				/**
				 * [tMap_24 finally ] stop
				 */

				/**
				 * [tUnite_8 finally ] start
				 */

				currentComponent = "tUnite_8";

				/**
				 * [tUnite_8 finally ] stop
				 */

				/**
				 * [tMap_40 finally ] start
				 */

				currentComponent = "tMap_40";

				/**
				 * [tMap_40 finally ] stop
				 */

				/**
				 * [tUniqRow_8 finally ] start
				 */

				currentComponent = "tUniqRow_8";

				/**
				 * [tUniqRow_8 finally ] stop
				 */

				/**
				 * [tDBOutput_5 finally ] start
				 */

				currentComponent = "tDBOutput_5";

				try {
					if (resourceMap.get("statementClosed_tDBOutput_5") == null) {
						java.sql.PreparedStatement pstmtToClose_tDBOutput_5 = null;
						if ((pstmtToClose_tDBOutput_5 = (java.sql.PreparedStatement) resourceMap
								.remove("pstmt_tDBOutput_5")) != null) {
							pstmtToClose_tDBOutput_5.close();
						}
					}
				} finally {
					if (resourceMap.get("finish_tDBOutput_5") == null) {
						java.sql.Connection ctn_tDBOutput_5 = null;
						if ((ctn_tDBOutput_5 = (java.sql.Connection) resourceMap.get("conn_tDBOutput_5")) != null) {
							try {
								ctn_tDBOutput_5.close();
							} catch (java.sql.SQLException sqlEx_tDBOutput_5) {
								String errorMessage_tDBOutput_5 = "failed to close the connection in tDBOutput_5 :"
										+ sqlEx_tDBOutput_5.getMessage();
								System.err.println(errorMessage_tDBOutput_5);
							}
						}
					}
				}

				/**
				 * [tDBOutput_5 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tFileInputExcel_23_SUBPROCESS_STATE", 1);
	}

	public static class row39Struct implements routines.system.IPersistableRow<row39Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Equipe = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Equipe = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Equipe, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Equipe, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Equipe=" + Equipe);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row39Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class pStruct implements routines.system.IPersistableRow<pStruct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Equipe = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Equipe = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Equipe, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Equipe, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Equipe=" + Equipe);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(pStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row49Struct implements routines.system.IPersistableRow<row49Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Equipe = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Equipe = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Equipe, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Equipe, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Equipe=" + Equipe);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row49Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class copyOfcopyOft18Struct implements routines.system.IPersistableRow<copyOfcopyOft18Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Equipe = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Equipe = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Equipe, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Equipe, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Equipe=" + Equipe);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(copyOfcopyOft18Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row43Struct implements routines.system.IPersistableRow<row43Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Client_Prospect;

		public String getClient_Prospect() {
			return this.Client_Prospect;
		}

		public String Sujet;

		public String getSujet() {
			return this.Sujet;
		}

		public String Acces;

		public String getAcces() {
			return this.Acces;
		}

		public String Type_d_acces;

		public String getType_d_acces() {
			return this.Type_d_acces;
		}

		public String Account_Manager__Client_Prospect;

		public String getAccount_Manager__Client_Prospect() {
			return this.Account_Manager__Client_Prospect;
		}

		public String Cree_le;

		public String getCree_le() {
			return this.Cree_le;
		}

		public String Mois_et_annee_de_creation;

		public String getMois_et_annee_de_creation() {
			return this.Mois_et_annee_de_creation;
		}

		public String Cree_par;

		public String getCree_par() {
			return this.Cree_par;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public String Proprietaire;

		public String getProprietaire() {
			return this.Proprietaire;
		}

		public String Phase_de_l_opportunite;

		public String getPhase_de_l_opportunite() {
			return this.Phase_de_l_opportunite;
		}

		public Float Valeur_ordering;

		public Float getValeur_ordering() {
			return this.Valeur_ordering;
		}

		public String Statut;

		public String getStatut() {
			return this.Statut;
		}

		public String Staut_Final;

		public String getStaut_Final() {
			return this.Staut_Final;
		}

		public String Tarifs;

		public String getTarifs() {
			return this.Tarifs;
		}

		public String Montant_total;

		public String getMontant_total() {
			return this.Montant_total;
		}

		public String Parent__Produit_existant;

		public String getParent__Produit_existant() {
			return this.Parent__Produit_existant;
		}

		public String Produit_existant;

		public String getProduit_existant() {
			return this.Produit_existant;
		}

		public String Operation;

		public String getOperation() {
			return this.Operation;
		}

		public String Type_d_operation;

		public String getType_d_operation() {
			return this.Type_d_operation;
		}

		public String Prix_unitaire;

		public String getPrix_unitaire() {
			return this.Prix_unitaire;
		}

		public Float Quantite;

		public Float getQuantite() {
			return this.Quantite;
		}

		public String Remise;

		public String getRemise() {
			return this.Remise;
		}

		public String Montant_de_la_remise_manuelle;

		public String getMontant_de_la_remise_manuelle() {
			return this.Montant_de_la_remise_manuelle;
		}

		public String Total_final;

		public String getTotal_final() {
			return this.Total_final;
		}

		public String Modifie_le;

		public String getModifie_le() {
			return this.Modifie_le;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

					this.Sujet = readString(dis);

					this.Acces = readString(dis);

					this.Type_d_acces = readString(dis);

					this.Account_Manager__Client_Prospect = readString(dis);

					this.Cree_le = readString(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Proprietaire = readString(dis);

					this.Phase_de_l_opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Valeur_ordering = null;
					} else {
						this.Valeur_ordering = dis.readFloat();
					}

					this.Statut = readString(dis);

					this.Staut_Final = readString(dis);

					this.Tarifs = readString(dis);

					this.Montant_total = readString(dis);

					this.Parent__Produit_existant = readString(dis);

					this.Produit_existant = readString(dis);

					this.Operation = readString(dis);

					this.Type_d_operation = readString(dis);

					this.Prix_unitaire = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Quantite = null;
					} else {
						this.Quantite = dis.readFloat();
					}

					this.Remise = readString(dis);

					this.Montant_de_la_remise_manuelle = readString(dis);

					this.Total_final = readString(dis);

					this.Modifie_le = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

					this.Sujet = readString(dis);

					this.Acces = readString(dis);

					this.Type_d_acces = readString(dis);

					this.Account_Manager__Client_Prospect = readString(dis);

					this.Cree_le = readString(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Proprietaire = readString(dis);

					this.Phase_de_l_opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Valeur_ordering = null;
					} else {
						this.Valeur_ordering = dis.readFloat();
					}

					this.Statut = readString(dis);

					this.Staut_Final = readString(dis);

					this.Tarifs = readString(dis);

					this.Montant_total = readString(dis);

					this.Parent__Produit_existant = readString(dis);

					this.Produit_existant = readString(dis);

					this.Operation = readString(dis);

					this.Type_d_operation = readString(dis);

					this.Prix_unitaire = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Quantite = null;
					} else {
						this.Quantite = dis.readFloat();
					}

					this.Remise = readString(dis);

					this.Montant_de_la_remise_manuelle = readString(dis);

					this.Total_final = readString(dis);

					this.Modifie_le = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Acces, dos);

				// String

				writeString(this.Type_d_acces, dos);

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

				// String

				writeString(this.Cree_le, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Proprietaire, dos);

				// String

				writeString(this.Phase_de_l_opportunite, dos);

				// Float

				if (this.Valeur_ordering == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Valeur_ordering);
				}

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Tarifs, dos);

				// String

				writeString(this.Montant_total, dos);

				// String

				writeString(this.Parent__Produit_existant, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Operation, dos);

				// String

				writeString(this.Type_d_operation, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// Float

				if (this.Quantite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Quantite);
				}

				// String

				writeString(this.Remise, dos);

				// String

				writeString(this.Montant_de_la_remise_manuelle, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Modifie_le, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Acces, dos);

				// String

				writeString(this.Type_d_acces, dos);

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

				// String

				writeString(this.Cree_le, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Proprietaire, dos);

				// String

				writeString(this.Phase_de_l_opportunite, dos);

				// Float

				if (this.Valeur_ordering == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Valeur_ordering);
				}

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Tarifs, dos);

				// String

				writeString(this.Montant_total, dos);

				// String

				writeString(this.Parent__Produit_existant, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Operation, dos);

				// String

				writeString(this.Type_d_operation, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// Float

				if (this.Quantite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Quantite);
				}

				// String

				writeString(this.Remise, dos);

				// String

				writeString(this.Montant_de_la_remise_manuelle, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Modifie_le, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Client_Prospect=" + Client_Prospect);
			sb.append(",Sujet=" + Sujet);
			sb.append(",Acces=" + Acces);
			sb.append(",Type_d_acces=" + Type_d_acces);
			sb.append(",Account_Manager__Client_Prospect=" + Account_Manager__Client_Prospect);
			sb.append(",Cree_le=" + Cree_le);
			sb.append(",Mois_et_annee_de_creation=" + Mois_et_annee_de_creation);
			sb.append(",Cree_par=" + Cree_par);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Proprietaire=" + Proprietaire);
			sb.append(",Phase_de_l_opportunite=" + Phase_de_l_opportunite);
			sb.append(",Valeur_ordering=" + String.valueOf(Valeur_ordering));
			sb.append(",Statut=" + Statut);
			sb.append(",Staut_Final=" + Staut_Final);
			sb.append(",Tarifs=" + Tarifs);
			sb.append(",Montant_total=" + Montant_total);
			sb.append(",Parent__Produit_existant=" + Parent__Produit_existant);
			sb.append(",Produit_existant=" + Produit_existant);
			sb.append(",Operation=" + Operation);
			sb.append(",Type_d_operation=" + Type_d_operation);
			sb.append(",Prix_unitaire=" + Prix_unitaire);
			sb.append(",Quantite=" + String.valueOf(Quantite));
			sb.append(",Remise=" + Remise);
			sb.append(",Montant_de_la_remise_manuelle=" + Montant_de_la_remise_manuelle);
			sb.append(",Total_final=" + Total_final);
			sb.append(",Modifie_le=" + Modifie_le);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row43Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class after_tFileInputExcel_25Struct
			implements routines.system.IPersistableRow<after_tFileInputExcel_25Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Client_Prospect;

		public String getClient_Prospect() {
			return this.Client_Prospect;
		}

		public String Sujet;

		public String getSujet() {
			return this.Sujet;
		}

		public String Acces;

		public String getAcces() {
			return this.Acces;
		}

		public String Type_d_acces;

		public String getType_d_acces() {
			return this.Type_d_acces;
		}

		public String Account_Manager__Client_Prospect;

		public String getAccount_Manager__Client_Prospect() {
			return this.Account_Manager__Client_Prospect;
		}

		public String Cree_le;

		public String getCree_le() {
			return this.Cree_le;
		}

		public String Mois_et_annee_de_creation;

		public String getMois_et_annee_de_creation() {
			return this.Mois_et_annee_de_creation;
		}

		public String Cree_par;

		public String getCree_par() {
			return this.Cree_par;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public String Proprietaire;

		public String getProprietaire() {
			return this.Proprietaire;
		}

		public String Phase_de_l_opportunite;

		public String getPhase_de_l_opportunite() {
			return this.Phase_de_l_opportunite;
		}

		public Float Valeur_ordering;

		public Float getValeur_ordering() {
			return this.Valeur_ordering;
		}

		public String Statut;

		public String getStatut() {
			return this.Statut;
		}

		public String Staut_Final;

		public String getStaut_Final() {
			return this.Staut_Final;
		}

		public String Tarifs;

		public String getTarifs() {
			return this.Tarifs;
		}

		public String Montant_total;

		public String getMontant_total() {
			return this.Montant_total;
		}

		public String Parent__Produit_existant;

		public String getParent__Produit_existant() {
			return this.Parent__Produit_existant;
		}

		public String Produit_existant;

		public String getProduit_existant() {
			return this.Produit_existant;
		}

		public String Operation;

		public String getOperation() {
			return this.Operation;
		}

		public String Type_d_operation;

		public String getType_d_operation() {
			return this.Type_d_operation;
		}

		public String Prix_unitaire;

		public String getPrix_unitaire() {
			return this.Prix_unitaire;
		}

		public Float Quantite;

		public Float getQuantite() {
			return this.Quantite;
		}

		public String Remise;

		public String getRemise() {
			return this.Remise;
		}

		public String Montant_de_la_remise_manuelle;

		public String getMontant_de_la_remise_manuelle() {
			return this.Montant_de_la_remise_manuelle;
		}

		public String Total_final;

		public String getTotal_final() {
			return this.Total_final;
		}

		public String Modifie_le;

		public String getModifie_le() {
			return this.Modifie_le;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

					this.Sujet = readString(dis);

					this.Acces = readString(dis);

					this.Type_d_acces = readString(dis);

					this.Account_Manager__Client_Prospect = readString(dis);

					this.Cree_le = readString(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Proprietaire = readString(dis);

					this.Phase_de_l_opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Valeur_ordering = null;
					} else {
						this.Valeur_ordering = dis.readFloat();
					}

					this.Statut = readString(dis);

					this.Staut_Final = readString(dis);

					this.Tarifs = readString(dis);

					this.Montant_total = readString(dis);

					this.Parent__Produit_existant = readString(dis);

					this.Produit_existant = readString(dis);

					this.Operation = readString(dis);

					this.Type_d_operation = readString(dis);

					this.Prix_unitaire = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Quantite = null;
					} else {
						this.Quantite = dis.readFloat();
					}

					this.Remise = readString(dis);

					this.Montant_de_la_remise_manuelle = readString(dis);

					this.Total_final = readString(dis);

					this.Modifie_le = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

					this.Sujet = readString(dis);

					this.Acces = readString(dis);

					this.Type_d_acces = readString(dis);

					this.Account_Manager__Client_Prospect = readString(dis);

					this.Cree_le = readString(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Proprietaire = readString(dis);

					this.Phase_de_l_opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Valeur_ordering = null;
					} else {
						this.Valeur_ordering = dis.readFloat();
					}

					this.Statut = readString(dis);

					this.Staut_Final = readString(dis);

					this.Tarifs = readString(dis);

					this.Montant_total = readString(dis);

					this.Parent__Produit_existant = readString(dis);

					this.Produit_existant = readString(dis);

					this.Operation = readString(dis);

					this.Type_d_operation = readString(dis);

					this.Prix_unitaire = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Quantite = null;
					} else {
						this.Quantite = dis.readFloat();
					}

					this.Remise = readString(dis);

					this.Montant_de_la_remise_manuelle = readString(dis);

					this.Total_final = readString(dis);

					this.Modifie_le = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Acces, dos);

				// String

				writeString(this.Type_d_acces, dos);

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

				// String

				writeString(this.Cree_le, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Proprietaire, dos);

				// String

				writeString(this.Phase_de_l_opportunite, dos);

				// Float

				if (this.Valeur_ordering == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Valeur_ordering);
				}

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Tarifs, dos);

				// String

				writeString(this.Montant_total, dos);

				// String

				writeString(this.Parent__Produit_existant, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Operation, dos);

				// String

				writeString(this.Type_d_operation, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// Float

				if (this.Quantite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Quantite);
				}

				// String

				writeString(this.Remise, dos);

				// String

				writeString(this.Montant_de_la_remise_manuelle, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Modifie_le, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Acces, dos);

				// String

				writeString(this.Type_d_acces, dos);

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

				// String

				writeString(this.Cree_le, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Proprietaire, dos);

				// String

				writeString(this.Phase_de_l_opportunite, dos);

				// Float

				if (this.Valeur_ordering == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Valeur_ordering);
				}

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Tarifs, dos);

				// String

				writeString(this.Montant_total, dos);

				// String

				writeString(this.Parent__Produit_existant, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Operation, dos);

				// String

				writeString(this.Type_d_operation, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// Float

				if (this.Quantite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Quantite);
				}

				// String

				writeString(this.Remise, dos);

				// String

				writeString(this.Montant_de_la_remise_manuelle, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Modifie_le, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Client_Prospect=" + Client_Prospect);
			sb.append(",Sujet=" + Sujet);
			sb.append(",Acces=" + Acces);
			sb.append(",Type_d_acces=" + Type_d_acces);
			sb.append(",Account_Manager__Client_Prospect=" + Account_Manager__Client_Prospect);
			sb.append(",Cree_le=" + Cree_le);
			sb.append(",Mois_et_annee_de_creation=" + Mois_et_annee_de_creation);
			sb.append(",Cree_par=" + Cree_par);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Proprietaire=" + Proprietaire);
			sb.append(",Phase_de_l_opportunite=" + Phase_de_l_opportunite);
			sb.append(",Valeur_ordering=" + String.valueOf(Valeur_ordering));
			sb.append(",Statut=" + Statut);
			sb.append(",Staut_Final=" + Staut_Final);
			sb.append(",Tarifs=" + Tarifs);
			sb.append(",Montant_total=" + Montant_total);
			sb.append(",Parent__Produit_existant=" + Parent__Produit_existant);
			sb.append(",Produit_existant=" + Produit_existant);
			sb.append(",Operation=" + Operation);
			sb.append(",Type_d_operation=" + Type_d_operation);
			sb.append(",Prix_unitaire=" + Prix_unitaire);
			sb.append(",Quantite=" + String.valueOf(Quantite));
			sb.append(",Remise=" + Remise);
			sb.append(",Montant_de_la_remise_manuelle=" + Montant_de_la_remise_manuelle);
			sb.append(",Total_final=" + Total_final);
			sb.append(",Modifie_le=" + Modifie_le);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(after_tFileInputExcel_25Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class copyOfcopyOfcopyOft5Struct
			implements routines.system.IPersistableRow<copyOfcopyOfcopyOft5Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Equipe = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Equipe = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Equipe, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Equipe, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Equipe=" + Equipe);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(copyOfcopyOfcopyOft5Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row45Struct implements routines.system.IPersistableRow<row45Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Reference_OSM_mere__Opportunite;

		public String getReference_OSM_mere__Opportunite() {
			return this.Reference_OSM_mere__Opportunite;
		}

		public String Reference_OSM__Opportunite;

		public String getReference_OSM__Opportunite() {
			return this.Reference_OSM__Opportunite;
		}

		public String Client_Prospect__Opportunite;

		public String getClient_Prospect__Opportunite() {
			return this.Client_Prospect__Opportunite;
		}

		public String Offre;

		public String getOffre() {
			return this.Offre;
		}

		public String Nature_Offre;

		public String getNature_Offre() {
			return this.Nature_Offre;
		}

		public String Produit_existant;

		public String getProduit_existant() {
			return this.Produit_existant;
		}

		public String Nature_produit__Produit_existant;

		public String getNature_produit__Produit_existant() {
			return this.Nature_produit__Produit_existant;
		}

		public Integer Quantite;

		public Integer getQuantite() {
			return this.Quantite;
		}

		public String Prix_unitaire;

		public String getPrix_unitaire() {
			return this.Prix_unitaire;
		}

		public String Total_final;

		public String getTotal_final() {
			return this.Total_final;
		}

		public String Remise______Opportunite;

		public String getRemise______Opportunite() {
			return this.Remise______Opportunite;
		}

		public Float Total_remise_HT;

		public Float getTotal_remise_HT() {
			return this.Total_remise_HT;
		}

		public String Extension__Opportunite;

		public String getExtension__Opportunite() {
			return this.Extension__Opportunite;
		}

		public String Budget_a_valider__Opportunite;

		public String getBudget_a_valider__Opportunite() {
			return this.Budget_a_valider__Opportunite;
		}

		public String Budget_a_valider_Extension__Opportunite;

		public String getBudget_a_valider_Extension__Opportunite() {
			return this.Budget_a_valider_Extension__Opportunite;
		}

		public String Duree_d_engagement__Opportunite;

		public String getDuree_d_engagement__Opportunite() {
			return this.Duree_d_engagement__Opportunite;
		}

		public String Type_d_engagement__Opportunite;

		public String getType_d_engagement__Opportunite() {
			return this.Type_d_engagement__Opportunite;
		}

		public String Demandeur__Opportunite;

		public String getDemandeur__Opportunite() {
			return this.Demandeur__Opportunite;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public String Cree_le__Opportunite;

		public String getCree_le__Opportunite() {
			return this.Cree_le__Opportunite;
		}

		public Integer Mois_de_creation;

		public Integer getMois_de_creation() {
			return this.Mois_de_creation;
		}

		public Integer Annee_de_creation;

		public Integer getAnnee_de_creation() {
			return this.Annee_de_creation;
		}

		public String Mois_et_annee_de_creation;

		public String getMois_et_annee_de_creation() {
			return this.Mois_et_annee_de_creation;
		}

		public String Raison_de_statut_OSM__Opportunite;

		public String getRaison_de_statut_OSM__Opportunite() {
			return this.Raison_de_statut_OSM__Opportunite;
		}

		public String Statut_OSM__Opportunite;

		public String getStatut_OSM__Opportunite() {
			return this.Statut_OSM__Opportunite;
		}

		public String Statut_activation__Commande;

		public String getStatut_activation__Commande() {
			return this.Statut_activation__Commande;
		}

		public String Date_d_activation__Commande;

		public String getDate_d_activation__Commande() {
			return this.Date_d_activation__Commande;
		}

		public Integer Mois_d_activation;

		public Integer getMois_d_activation() {
			return this.Mois_d_activation;
		}

		public String Staut_Final;

		public String getStaut_Final() {
			return this.Staut_Final;
		}

		public String Gouvernorat;

		public String getGouvernorat() {
			return this.Gouvernorat;
		}

		public String Phase_de_l_opportunite__Opportunite;

		public String getPhase_de_l_opportunite__Opportunite() {
			return this.Phase_de_l_opportunite__Opportunite;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Reference_OSM_mere__Opportunite = readString(dis);

					this.Reference_OSM__Opportunite = readString(dis);

					this.Client_Prospect__Opportunite = readString(dis);

					this.Offre = readString(dis);

					this.Nature_Offre = readString(dis);

					this.Produit_existant = readString(dis);

					this.Nature_produit__Produit_existant = readString(dis);

					this.Quantite = readInteger(dis);

					this.Prix_unitaire = readString(dis);

					this.Total_final = readString(dis);

					this.Remise______Opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Total_remise_HT = null;
					} else {
						this.Total_remise_HT = dis.readFloat();
					}

					this.Extension__Opportunite = readString(dis);

					this.Budget_a_valider__Opportunite = readString(dis);

					this.Budget_a_valider_Extension__Opportunite = readString(dis);

					this.Duree_d_engagement__Opportunite = readString(dis);

					this.Type_d_engagement__Opportunite = readString(dis);

					this.Demandeur__Opportunite = readString(dis);

					this.Equipe = readString(dis);

					this.Cree_le__Opportunite = readString(dis);

					this.Mois_de_creation = readInteger(dis);

					this.Annee_de_creation = readInteger(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Raison_de_statut_OSM__Opportunite = readString(dis);

					this.Statut_OSM__Opportunite = readString(dis);

					this.Statut_activation__Commande = readString(dis);

					this.Date_d_activation__Commande = readString(dis);

					this.Mois_d_activation = readInteger(dis);

					this.Staut_Final = readString(dis);

					this.Gouvernorat = readString(dis);

					this.Phase_de_l_opportunite__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Reference_OSM_mere__Opportunite = readString(dis);

					this.Reference_OSM__Opportunite = readString(dis);

					this.Client_Prospect__Opportunite = readString(dis);

					this.Offre = readString(dis);

					this.Nature_Offre = readString(dis);

					this.Produit_existant = readString(dis);

					this.Nature_produit__Produit_existant = readString(dis);

					this.Quantite = readInteger(dis);

					this.Prix_unitaire = readString(dis);

					this.Total_final = readString(dis);

					this.Remise______Opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Total_remise_HT = null;
					} else {
						this.Total_remise_HT = dis.readFloat();
					}

					this.Extension__Opportunite = readString(dis);

					this.Budget_a_valider__Opportunite = readString(dis);

					this.Budget_a_valider_Extension__Opportunite = readString(dis);

					this.Duree_d_engagement__Opportunite = readString(dis);

					this.Type_d_engagement__Opportunite = readString(dis);

					this.Demandeur__Opportunite = readString(dis);

					this.Equipe = readString(dis);

					this.Cree_le__Opportunite = readString(dis);

					this.Mois_de_creation = readInteger(dis);

					this.Annee_de_creation = readInteger(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Raison_de_statut_OSM__Opportunite = readString(dis);

					this.Statut_OSM__Opportunite = readString(dis);

					this.Statut_activation__Commande = readString(dis);

					this.Date_d_activation__Commande = readString(dis);

					this.Mois_d_activation = readInteger(dis);

					this.Staut_Final = readString(dis);

					this.Gouvernorat = readString(dis);

					this.Phase_de_l_opportunite__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Reference_OSM_mere__Opportunite, dos);

				// String

				writeString(this.Reference_OSM__Opportunite, dos);

				// String

				writeString(this.Client_Prospect__Opportunite, dos);

				// String

				writeString(this.Offre, dos);

				// String

				writeString(this.Nature_Offre, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Nature_produit__Produit_existant, dos);

				// Integer

				writeInteger(this.Quantite, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Remise______Opportunite, dos);

				// Float

				if (this.Total_remise_HT == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Total_remise_HT);
				}

				// String

				writeString(this.Extension__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider_Extension__Opportunite, dos);

				// String

				writeString(this.Duree_d_engagement__Opportunite, dos);

				// String

				writeString(this.Type_d_engagement__Opportunite, dos);

				// String

				writeString(this.Demandeur__Opportunite, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Cree_le__Opportunite, dos);

				// Integer

				writeInteger(this.Mois_de_creation, dos);

				// Integer

				writeInteger(this.Annee_de_creation, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Raison_de_statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_activation__Commande, dos);

				// String

				writeString(this.Date_d_activation__Commande, dos);

				// Integer

				writeInteger(this.Mois_d_activation, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Gouvernorat, dos);

				// String

				writeString(this.Phase_de_l_opportunite__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Reference_OSM_mere__Opportunite, dos);

				// String

				writeString(this.Reference_OSM__Opportunite, dos);

				// String

				writeString(this.Client_Prospect__Opportunite, dos);

				// String

				writeString(this.Offre, dos);

				// String

				writeString(this.Nature_Offre, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Nature_produit__Produit_existant, dos);

				// Integer

				writeInteger(this.Quantite, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Remise______Opportunite, dos);

				// Float

				if (this.Total_remise_HT == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Total_remise_HT);
				}

				// String

				writeString(this.Extension__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider__Opportunite, dos);

				// String

				writeString(this.Budget_a_valider_Extension__Opportunite, dos);

				// String

				writeString(this.Duree_d_engagement__Opportunite, dos);

				// String

				writeString(this.Type_d_engagement__Opportunite, dos);

				// String

				writeString(this.Demandeur__Opportunite, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Cree_le__Opportunite, dos);

				// Integer

				writeInteger(this.Mois_de_creation, dos);

				// Integer

				writeInteger(this.Annee_de_creation, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Raison_de_statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_activation__Commande, dos);

				// String

				writeString(this.Date_d_activation__Commande, dos);

				// Integer

				writeInteger(this.Mois_d_activation, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Gouvernorat, dos);

				// String

				writeString(this.Phase_de_l_opportunite__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Reference_OSM_mere__Opportunite=" + Reference_OSM_mere__Opportunite);
			sb.append(",Reference_OSM__Opportunite=" + Reference_OSM__Opportunite);
			sb.append(",Client_Prospect__Opportunite=" + Client_Prospect__Opportunite);
			sb.append(",Offre=" + Offre);
			sb.append(",Nature_Offre=" + Nature_Offre);
			sb.append(",Produit_existant=" + Produit_existant);
			sb.append(",Nature_produit__Produit_existant=" + Nature_produit__Produit_existant);
			sb.append(",Quantite=" + String.valueOf(Quantite));
			sb.append(",Prix_unitaire=" + Prix_unitaire);
			sb.append(",Total_final=" + Total_final);
			sb.append(",Remise______Opportunite=" + Remise______Opportunite);
			sb.append(",Total_remise_HT=" + String.valueOf(Total_remise_HT));
			sb.append(",Extension__Opportunite=" + Extension__Opportunite);
			sb.append(",Budget_a_valider__Opportunite=" + Budget_a_valider__Opportunite);
			sb.append(",Budget_a_valider_Extension__Opportunite=" + Budget_a_valider_Extension__Opportunite);
			sb.append(",Duree_d_engagement__Opportunite=" + Duree_d_engagement__Opportunite);
			sb.append(",Type_d_engagement__Opportunite=" + Type_d_engagement__Opportunite);
			sb.append(",Demandeur__Opportunite=" + Demandeur__Opportunite);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Cree_le__Opportunite=" + Cree_le__Opportunite);
			sb.append(",Mois_de_creation=" + String.valueOf(Mois_de_creation));
			sb.append(",Annee_de_creation=" + String.valueOf(Annee_de_creation));
			sb.append(",Mois_et_annee_de_creation=" + Mois_et_annee_de_creation);
			sb.append(",Raison_de_statut_OSM__Opportunite=" + Raison_de_statut_OSM__Opportunite);
			sb.append(",Statut_OSM__Opportunite=" + Statut_OSM__Opportunite);
			sb.append(",Statut_activation__Commande=" + Statut_activation__Commande);
			sb.append(",Date_d_activation__Commande=" + Date_d_activation__Commande);
			sb.append(",Mois_d_activation=" + String.valueOf(Mois_d_activation));
			sb.append(",Staut_Final=" + Staut_Final);
			sb.append(",Gouvernorat=" + Gouvernorat);
			sb.append(",Phase_de_l_opportunite__Opportunite=" + Phase_de_l_opportunite__Opportunite);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row45Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class copyOfcopyOfcopyOft8Struct
			implements routines.system.IPersistableRow<copyOfcopyOfcopyOft8Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Equipe = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Equipe = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Equipe, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Equipe, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Equipe=" + Equipe);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(copyOfcopyOfcopyOft8Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row46Struct implements routines.system.IPersistableRow<row46Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public Float Custcode;

		public Float getCustcode() {
			return this.Custcode;
		}

		public String Raison_Sociale;

		public String getRaison_Sociale() {
			return this.Raison_Sociale;
		}

		public String Groupe_Client;

		public String getGroupe_Client() {
			return this.Groupe_Client;
		}

		public String Account_Manager;

		public String getAccount_Manager() {
			return this.Account_Manager;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public Integer Somme_de_Suspension;

		public Integer getSomme_de_Suspension() {
			return this.Somme_de_Suspension;
		}

		public String Type_de_suspension;

		public String getType_de_suspension() {
			return this.Type_de_suspension;
		}

		public String Motif;

		public String getMotif() {
			return this.Motif;
		}

		public String DFE;

		public String getDFE() {
			return this.DFE;
		}

		public String Engage_Oui_Non;

		public String getEngage_Oui_Non() {
			return this.Engage_Oui_Non;
		}

		public java.util.Date Date_Depot;

		public java.util.Date getDate_Depot() {
			return this.Date_Depot;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		private java.util.Date readDate(ObjectInputStream dis) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(dis.readLong());
			}
			return dateReturn;
		}

		private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(unmarshaller.readLong());
			}
			return dateReturn;
		}

		private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException {
			if (date1 == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeLong(date1.getTime());
			}
		}

		private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (date1 == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeLong(date1.getTime());
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Suspension = readInteger(dis);

					this.Type_de_suspension = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readDate(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Suspension = readInteger(dis);

					this.Type_de_suspension = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readDate(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Suspension, dos);

				// String

				writeString(this.Type_de_suspension, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// java.util.Date

				writeDate(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Suspension, dos);

				// String

				writeString(this.Type_de_suspension, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// java.util.Date

				writeDate(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Custcode=" + String.valueOf(Custcode));
			sb.append(",Raison_Sociale=" + Raison_Sociale);
			sb.append(",Groupe_Client=" + Groupe_Client);
			sb.append(",Account_Manager=" + Account_Manager);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Somme_de_Suspension=" + String.valueOf(Somme_de_Suspension));
			sb.append(",Type_de_suspension=" + Type_de_suspension);
			sb.append(",Motif=" + Motif);
			sb.append(",DFE=" + DFE);
			sb.append(",Engage_Oui_Non=" + Engage_Oui_Non);
			sb.append(",Date_Depot=" + String.valueOf(Date_Depot));
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row46Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class copyOfcopyOfcopyOft7Struct
			implements routines.system.IPersistableRow<copyOfcopyOfcopyOft7Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Equipe = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Equipe = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Equipe, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Equipe, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Equipe=" + Equipe);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(copyOfcopyOfcopyOft7Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row392Struct implements routines.system.IPersistableRow<row392Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public Float Custcode;

		public Float getCustcode() {
			return this.Custcode;
		}

		public String Raison_Sociale;

		public String getRaison_Sociale() {
			return this.Raison_Sociale;
		}

		public String Groupe_Client;

		public String getGroupe_Client() {
			return this.Groupe_Client;
		}

		public String Account_Manager;

		public String getAccount_Manager() {
			return this.Account_Manager;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public Integer Somme_de_Resiliation;

		public Integer getSomme_de_Resiliation() {
			return this.Somme_de_Resiliation;
		}

		public String Type_Resiliation;

		public String getType_Resiliation() {
			return this.Type_Resiliation;
		}

		public String Motif;

		public String getMotif() {
			return this.Motif;
		}

		public String DFE;

		public String getDFE() {
			return this.DFE;
		}

		public String Engage_Oui_Non;

		public String getEngage_Oui_Non() {
			return this.Engage_Oui_Non;
		}

		public java.util.Date Date_Depot;

		public java.util.Date getDate_Depot() {
			return this.Date_Depot;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		private java.util.Date readDate(ObjectInputStream dis) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(dis.readLong());
			}
			return dateReturn;
		}

		private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(unmarshaller.readLong());
			}
			return dateReturn;
		}

		private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException {
			if (date1 == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeLong(date1.getTime());
			}
		}

		private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (date1 == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeLong(date1.getTime());
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Resiliation = readInteger(dis);

					this.Type_Resiliation = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readDate(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					length = dis.readByte();
					if (length == -1) {
						this.Custcode = null;
					} else {
						this.Custcode = dis.readFloat();
					}

					this.Raison_Sociale = readString(dis);

					this.Groupe_Client = readString(dis);

					this.Account_Manager = readString(dis);

					this.Equipe = readString(dis);

					this.Somme_de_Resiliation = readInteger(dis);

					this.Type_Resiliation = readString(dis);

					this.Motif = readString(dis);

					this.DFE = readString(dis);

					this.Engage_Oui_Non = readString(dis);

					this.Date_Depot = readDate(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Resiliation, dos);

				// String

				writeString(this.Type_Resiliation, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// java.util.Date

				writeDate(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// Float

				if (this.Custcode == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Custcode);
				}

				// String

				writeString(this.Raison_Sociale, dos);

				// String

				writeString(this.Groupe_Client, dos);

				// String

				writeString(this.Account_Manager, dos);

				// String

				writeString(this.Equipe, dos);

				// Integer

				writeInteger(this.Somme_de_Resiliation, dos);

				// String

				writeString(this.Type_Resiliation, dos);

				// String

				writeString(this.Motif, dos);

				// String

				writeString(this.DFE, dos);

				// String

				writeString(this.Engage_Oui_Non, dos);

				// java.util.Date

				writeDate(this.Date_Depot, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Custcode=" + String.valueOf(Custcode));
			sb.append(",Raison_Sociale=" + Raison_Sociale);
			sb.append(",Groupe_Client=" + Groupe_Client);
			sb.append(",Account_Manager=" + Account_Manager);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Somme_de_Resiliation=" + String.valueOf(Somme_de_Resiliation));
			sb.append(",Type_Resiliation=" + Type_Resiliation);
			sb.append(",Motif=" + Motif);
			sb.append(",DFE=" + DFE);
			sb.append(",Engage_Oui_Non=" + Engage_Oui_Non);
			sb.append(",Date_Depot=" + String.valueOf(Date_Depot));
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row392Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class copyOfcopyOfcopyOft9Struct
			implements routines.system.IPersistableRow<copyOfcopyOfcopyOft9Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Equipe = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Equipe = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Equipe, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Equipe, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Equipe=" + Equipe);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(copyOfcopyOfcopyOft9Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row48Struct implements routines.system.IPersistableRow<row48Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Sujet;

		public String getSujet() {
			return this.Sujet;
		}

		public java.util.Date Cree_le;

		public java.util.Date getCree_le() {
			return this.Cree_le;
		}

		public String Concernant;

		public String getConcernant() {
			return this.Concernant;
		}

		public String Cree_par;

		public String getCree_par() {
			return this.Cree_par;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public String Emplacement;

		public String getEmplacement() {
			return this.Emplacement;
		}

		public java.util.Date Heure_de_debut;

		public java.util.Date getHeure_de_debut() {
			return this.Heure_de_debut;
		}

		public String Heure_de_fin;

		public String getHeure_de_fin() {
			return this.Heure_de_fin;
		}

		public String Statut;

		public String getStatut() {
			return this.Statut;
		}

		public String Raison_sociale__Concernant;

		public String getRaison_sociale__Concernant() {
			return this.Raison_sociale__Concernant;
		}

		public String Delegation__Concernant;

		public String getDelegation__Concernant() {
			return this.Delegation__Concernant;
		}

		public String Gouvernorat__Concernant;

		public String getGouvernorat__Concernant() {
			return this.Gouvernorat__Concernant;
		}

		public String Jour_de_la_semaine;

		public String getJour_de_la_semaine() {
			return this.Jour_de_la_semaine;
		}

		public String Description;

		public String getDescription() {
			return this.Description;
		}

		public String Categorie;

		public String getCategorie() {
			return this.Categorie;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private java.util.Date readDate(ObjectInputStream dis) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(dis.readLong());
			}
			return dateReturn;
		}

		private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(unmarshaller.readLong());
			}
			return dateReturn;
		}

		private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException {
			if (date1 == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeLong(date1.getTime());
			}
		}

		private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (date1 == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeLong(date1.getTime());
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Sujet = readString(dis);

					this.Cree_le = readDate(dis);

					this.Concernant = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Emplacement = readString(dis);

					this.Heure_de_debut = readDate(dis);

					this.Heure_de_fin = readString(dis);

					this.Statut = readString(dis);

					this.Raison_sociale__Concernant = readString(dis);

					this.Delegation__Concernant = readString(dis);

					this.Gouvernorat__Concernant = readString(dis);

					this.Jour_de_la_semaine = readString(dis);

					this.Description = readString(dis);

					this.Categorie = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Sujet = readString(dis);

					this.Cree_le = readDate(dis);

					this.Concernant = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Emplacement = readString(dis);

					this.Heure_de_debut = readDate(dis);

					this.Heure_de_fin = readString(dis);

					this.Statut = readString(dis);

					this.Raison_sociale__Concernant = readString(dis);

					this.Delegation__Concernant = readString(dis);

					this.Gouvernorat__Concernant = readString(dis);

					this.Jour_de_la_semaine = readString(dis);

					this.Description = readString(dis);

					this.Categorie = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Sujet, dos);

				// java.util.Date

				writeDate(this.Cree_le, dos);

				// String

				writeString(this.Concernant, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Emplacement, dos);

				// java.util.Date

				writeDate(this.Heure_de_debut, dos);

				// String

				writeString(this.Heure_de_fin, dos);

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Raison_sociale__Concernant, dos);

				// String

				writeString(this.Delegation__Concernant, dos);

				// String

				writeString(this.Gouvernorat__Concernant, dos);

				// String

				writeString(this.Jour_de_la_semaine, dos);

				// String

				writeString(this.Description, dos);

				// String

				writeString(this.Categorie, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Sujet, dos);

				// java.util.Date

				writeDate(this.Cree_le, dos);

				// String

				writeString(this.Concernant, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Emplacement, dos);

				// java.util.Date

				writeDate(this.Heure_de_debut, dos);

				// String

				writeString(this.Heure_de_fin, dos);

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Raison_sociale__Concernant, dos);

				// String

				writeString(this.Delegation__Concernant, dos);

				// String

				writeString(this.Gouvernorat__Concernant, dos);

				// String

				writeString(this.Jour_de_la_semaine, dos);

				// String

				writeString(this.Description, dos);

				// String

				writeString(this.Categorie, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Sujet=" + Sujet);
			sb.append(",Cree_le=" + String.valueOf(Cree_le));
			sb.append(",Concernant=" + Concernant);
			sb.append(",Cree_par=" + Cree_par);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Emplacement=" + Emplacement);
			sb.append(",Heure_de_debut=" + String.valueOf(Heure_de_debut));
			sb.append(",Heure_de_fin=" + Heure_de_fin);
			sb.append(",Statut=" + Statut);
			sb.append(",Raison_sociale__Concernant=" + Raison_sociale__Concernant);
			sb.append(",Delegation__Concernant=" + Delegation__Concernant);
			sb.append(",Gouvernorat__Concernant=" + Gouvernorat__Concernant);
			sb.append(",Jour_de_la_semaine=" + Jour_de_la_semaine);
			sb.append(",Description=" + Description);
			sb.append(",Categorie=" + Categorie);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row48Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tFileInputExcel_25Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tFileInputExcel_25_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				tDBInput_4Process(globalMap);

				row43Struct row43 = new row43Struct();
				copyOfcopyOft18Struct copyOfcopyOft18 = new copyOfcopyOft18Struct();

				row45Struct row45 = new row45Struct();
				copyOfcopyOfcopyOft5Struct copyOfcopyOfcopyOft5 = new copyOfcopyOfcopyOft5Struct();

				row48Struct row48 = new row48Struct();
				copyOfcopyOfcopyOft9Struct copyOfcopyOfcopyOft9 = new copyOfcopyOfcopyOft9Struct();

				row46Struct row46 = new row46Struct();
				copyOfcopyOfcopyOft8Struct copyOfcopyOfcopyOft8 = new copyOfcopyOfcopyOft8Struct();

				row392Struct row392 = new row392Struct();
				copyOfcopyOfcopyOft7Struct copyOfcopyOfcopyOft7 = new copyOfcopyOfcopyOft7Struct();

				row49Struct row49 = new row49Struct();
				pStruct p = new pStruct();
				row39Struct row39 = new row39Struct();

				/**
				 * [tDBOutput_2 begin ] start
				 */

				ok_Hash.put("tDBOutput_2", false);
				start_Hash.put("tDBOutput_2", System.currentTimeMillis());

				currentComponent = "tDBOutput_2";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row39");
				}

				int tos_count_tDBOutput_2 = 0;

				int nb_line_tDBOutput_2 = 0;
				int nb_line_update_tDBOutput_2 = 0;
				int nb_line_inserted_tDBOutput_2 = 0;
				int nb_line_deleted_tDBOutput_2 = 0;
				int nb_line_rejected_tDBOutput_2 = 0;

				int deletedCount_tDBOutput_2 = 0;
				int updatedCount_tDBOutput_2 = 0;
				int insertedCount_tDBOutput_2 = 0;
				int rowsToCommitCount_tDBOutput_2 = 0;
				int rejectedCount_tDBOutput_2 = 0;
				String dbschema_tDBOutput_2 = null;
				String tableName_tDBOutput_2 = null;
				boolean whetherReject_tDBOutput_2 = false;

				java.util.Calendar calendar_tDBOutput_2 = java.util.Calendar.getInstance();
				long year1_tDBOutput_2 = TalendDate.parseDate("yyyy-MM-dd", "0001-01-01").getTime();
				long year2_tDBOutput_2 = TalendDate.parseDate("yyyy-MM-dd", "1753-01-01").getTime();
				long year10000_tDBOutput_2 = TalendDate.parseDate("yyyy-MM-dd HH:mm:ss", "9999-12-31 24:00:00")
						.getTime();
				long date_tDBOutput_2;

				java.util.Calendar calendar_datetimeoffset_tDBOutput_2 = java.util.Calendar
						.getInstance(java.util.TimeZone.getTimeZone("UTC"));

				java.sql.Connection conn_tDBOutput_2 = null;
				String dbUser_tDBOutput_2 = null;
				dbschema_tDBOutput_2 = "dbo";
				String driverClass_tDBOutput_2 = "net.sourceforge.jtds.jdbc.Driver";

				java.lang.Class.forName(driverClass_tDBOutput_2);
				String port_tDBOutput_2 = "1433";
				String dbname_tDBOutput_2 = "orange_DW__";
				String url_tDBOutput_2 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBOutput_2)) {
					url_tDBOutput_2 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBOutput_2)) {
					url_tDBOutput_2 += "//" + "orange_DW__";

				}
				url_tDBOutput_2 += ";appName=" + projectName + ";" + "";
				dbUser_tDBOutput_2 = "sa";

				final String decryptedPassword_tDBOutput_2 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:3Su1iTbT6hULfJ5Io2smoEx2jh2Cf3DrIe7CKHo6XbXt3gFtc/U=");

				String dbPwd_tDBOutput_2 = decryptedPassword_tDBOutput_2;
				conn_tDBOutput_2 = java.sql.DriverManager.getConnection(url_tDBOutput_2, dbUser_tDBOutput_2,
						dbPwd_tDBOutput_2);

				resourceMap.put("conn_tDBOutput_2", conn_tDBOutput_2);

				conn_tDBOutput_2.setAutoCommit(false);
				int commitEvery_tDBOutput_2 = 10000;
				int commitCounter_tDBOutput_2 = 0;

				int batchSize_tDBOutput_2 = 10000;
				int batchSizeCounter_tDBOutput_2 = 0;

				if (dbschema_tDBOutput_2 == null || dbschema_tDBOutput_2.trim().length() == 0) {
					tableName_tDBOutput_2 = "Dim_equipe";
				} else {
					tableName_tDBOutput_2 = dbschema_tDBOutput_2 + "].[" + "Dim_equipe";
				}
				int count_tDBOutput_2 = 0;

				String insert_tDBOutput_2 = "INSERT INTO [" + tableName_tDBOutput_2 + "] ([Equipe]) VALUES (?)";
				java.sql.PreparedStatement pstmt_tDBOutput_2 = conn_tDBOutput_2.prepareStatement(insert_tDBOutput_2);
				resourceMap.put("pstmt_tDBOutput_2", pstmt_tDBOutput_2);

				/**
				 * [tDBOutput_2 begin ] stop
				 */

				/**
				 * [tUniqRow_9 begin ] start
				 */

				ok_Hash.put("tUniqRow_9", false);
				start_Hash.put("tUniqRow_9", System.currentTimeMillis());

				currentComponent = "tUniqRow_9";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "p");
				}

				int tos_count_tUniqRow_9 = 0;

				class KeyStruct_tUniqRow_9 {

					private static final int DEFAULT_HASHCODE = 1;
					private static final int PRIME = 31;
					private int hashCode = DEFAULT_HASHCODE;
					public boolean hashCodeDirty = true;

					String Equipe;

					@Override
					public int hashCode() {
						if (this.hashCodeDirty) {
							final int prime = PRIME;
							int result = DEFAULT_HASHCODE;

							result = prime * result + ((this.Equipe == null) ? 0 : this.Equipe.hashCode());

							this.hashCode = result;
							this.hashCodeDirty = false;
						}
						return this.hashCode;
					}

					@Override
					public boolean equals(Object obj) {
						if (this == obj)
							return true;
						if (obj == null)
							return false;
						if (getClass() != obj.getClass())
							return false;
						final KeyStruct_tUniqRow_9 other = (KeyStruct_tUniqRow_9) obj;

						if (this.Equipe == null) {
							if (other.Equipe != null)
								return false;

						} else if (!this.Equipe.equals(other.Equipe))

							return false;

						return true;
					}

				}

				int nb_uniques_tUniqRow_9 = 0;
				int nb_duplicates_tUniqRow_9 = 0;
				KeyStruct_tUniqRow_9 finder_tUniqRow_9 = new KeyStruct_tUniqRow_9();
				java.util.Set<KeyStruct_tUniqRow_9> keystUniqRow_9 = new java.util.HashSet<KeyStruct_tUniqRow_9>();

				/**
				 * [tUniqRow_9 begin ] stop
				 */

				/**
				 * [tMap_9 begin ] start
				 */

				ok_Hash.put("tMap_9", false);
				start_Hash.put("tMap_9", System.currentTimeMillis());

				currentComponent = "tMap_9";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row49");
				}

				int tos_count_tMap_9 = 0;

// ###############################
// # Lookup's keys initialization

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row50Struct> tHash_Lookup_row50 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row50Struct>) ((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row50Struct>) globalMap
						.get("tHash_Lookup_row50"));

				row50Struct row50HashKey = new row50Struct();
				row50Struct row50Default = new row50Struct();
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_9__Struct {
				}
				Var__tMap_9__Struct Var__tMap_9 = new Var__tMap_9__Struct();
// ###############################

// ###############################
// # Outputs initialization
				pStruct p_tmp = new pStruct();
// ###############################

				/**
				 * [tMap_9 begin ] stop
				 */

				/**
				 * [tUnite_9 begin ] start
				 */

				ok_Hash.put("tUnite_9", false);
				start_Hash.put("tUnite_9", System.currentTimeMillis());

				currentComponent = "tUnite_9";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "copyOfcopyOfcopyOft8",
							"copyOfcopyOfcopyOft7", "copyOfcopyOfcopyOft5", "copyOfcopyOft18", "copyOfcopyOfcopyOft9");
				}

				int tos_count_tUnite_9 = 0;

				int nb_line_tUnite_9 = 0;

				/**
				 * [tUnite_9 begin ] stop
				 */

				/**
				 * [tMap_25 begin ] start
				 */

				ok_Hash.put("tMap_25", false);
				start_Hash.put("tMap_25", System.currentTimeMillis());

				currentComponent = "tMap_25";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row43");
				}

				int tos_count_tMap_25 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_25__Struct {
				}
				Var__tMap_25__Struct Var__tMap_25 = new Var__tMap_25__Struct();
// ###############################

// ###############################
// # Outputs initialization
				copyOfcopyOft18Struct copyOfcopyOft18_tmp = new copyOfcopyOft18Struct();
// ###############################

				/**
				 * [tMap_25 begin ] stop
				 */

				/**
				 * [tFileInputExcel_25 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_25", false);
				start_Hash.put("tFileInputExcel_25", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_25";

				int tos_count_tFileInputExcel_25 = 0;

				final String decryptedPassword_tFileInputExcel_25 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:yC9LnzJdXO4KrR20UkIDh+iOTf/DMQ8mfigbXA==");
				String password_tFileInputExcel_25 = decryptedPassword_tFileInputExcel_25;
				if (password_tFileInputExcel_25.isEmpty()) {
					password_tFileInputExcel_25 = null;
				}
				class RegexUtil_tFileInputExcel_25 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_25 regexUtil_tFileInputExcel_25 = new RegexUtil_tFileInputExcel_25();

				Object source_tFileInputExcel_25 = "C:/Users/DELL/Downloads/Copie de Rapport Pipe et realisations DME Data et VoIP (2).xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_25 = null;

				if (source_tFileInputExcel_25 instanceof String) {
					workbook_tFileInputExcel_25 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_25), password_tFileInputExcel_25,
									true);
				} else if (source_tFileInputExcel_25 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_25 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_25, password_tFileInputExcel_25);
				} else {
					workbook_tFileInputExcel_25 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_25 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_25.addAll(
							regexUtil_tFileInputExcel_25.getSheets(workbook_tFileInputExcel_25, "Source", false));
					if (sheetList_tFileInputExcel_25.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_25 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_25 : sheetList_tFileInputExcel_25) {
						if (sheet_FilterNull_tFileInputExcel_25 != null
								&& sheetList_FilterNull_tFileInputExcel_25.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_25.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_25.add(sheet_FilterNull_tFileInputExcel_25);
						}
					}
					sheetList_tFileInputExcel_25 = sheetList_FilterNull_tFileInputExcel_25;
					if (sheetList_tFileInputExcel_25.size() > 0) {
						int nb_line_tFileInputExcel_25 = 0;

						int begin_line_tFileInputExcel_25 = 1;

						int footer_input_tFileInputExcel_25 = 0;

						int end_line_tFileInputExcel_25 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_25 : sheetList_tFileInputExcel_25) {
							end_line_tFileInputExcel_25 += (sheet_tFileInputExcel_25.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_25 -= footer_input_tFileInputExcel_25;
						int limit_tFileInputExcel_25 = -1;
						int start_column_tFileInputExcel_25 = 1 - 1;
						int end_column_tFileInputExcel_25 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_25 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_25 = sheetList_tFileInputExcel_25
								.get(0);
						int rowCount_tFileInputExcel_25 = 0;
						int sheetIndex_tFileInputExcel_25 = 0;
						int currentRows_tFileInputExcel_25 = (sheetList_tFileInputExcel_25.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_25 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_25 = df_tFileInputExcel_25.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_25 = begin_line_tFileInputExcel_25; i_tFileInputExcel_25 < end_line_tFileInputExcel_25; i_tFileInputExcel_25++) {

							int emptyColumnCount_tFileInputExcel_25 = 0;

							if (limit_tFileInputExcel_25 != -1
									&& nb_line_tFileInputExcel_25 >= limit_tFileInputExcel_25) {
								break;
							}

							while (i_tFileInputExcel_25 >= rowCount_tFileInputExcel_25
									+ currentRows_tFileInputExcel_25) {
								rowCount_tFileInputExcel_25 += currentRows_tFileInputExcel_25;
								sheet_tFileInputExcel_25 = sheetList_tFileInputExcel_25
										.get(++sheetIndex_tFileInputExcel_25);
								currentRows_tFileInputExcel_25 = (sheet_tFileInputExcel_25.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_25_CURRENT_SHEET", sheet_tFileInputExcel_25.getSheetName());
							if (rowCount_tFileInputExcel_25 <= i_tFileInputExcel_25) {
								row_tFileInputExcel_25 = sheet_tFileInputExcel_25
										.getRow(i_tFileInputExcel_25 - rowCount_tFileInputExcel_25);
							}
							row43 = null;
							int tempRowLength_tFileInputExcel_25 = 26;

							int columnIndex_tFileInputExcel_25 = 0;

							String[] temp_row_tFileInputExcel_25 = new String[tempRowLength_tFileInputExcel_25];
							int excel_end_column_tFileInputExcel_25;
							if (row_tFileInputExcel_25 == null) {
								excel_end_column_tFileInputExcel_25 = 0;
							} else {
								excel_end_column_tFileInputExcel_25 = row_tFileInputExcel_25.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_25;
							if (end_column_tFileInputExcel_25 == -1) {
								actual_end_column_tFileInputExcel_25 = excel_end_column_tFileInputExcel_25;
							} else {
								actual_end_column_tFileInputExcel_25 = end_column_tFileInputExcel_25 > excel_end_column_tFileInputExcel_25
										? excel_end_column_tFileInputExcel_25
										: end_column_tFileInputExcel_25;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_25 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_25; i++) {
								if (i + start_column_tFileInputExcel_25 < actual_end_column_tFileInputExcel_25) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_25 = row_tFileInputExcel_25
											.getCell(i + start_column_tFileInputExcel_25);
									if (cell_tFileInputExcel_25 != null) {
										switch (cell_tFileInputExcel_25.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_25[i] = cell_tFileInputExcel_25
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_25)) {
												temp_row_tFileInputExcel_25[i] = cell_tFileInputExcel_25
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_25[i] = df_tFileInputExcel_25
														.format(cell_tFileInputExcel_25.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_25[i] = String
													.valueOf(cell_tFileInputExcel_25.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_25.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_25[i] = cell_tFileInputExcel_25
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_25)) {
													temp_row_tFileInputExcel_25[i] = cell_tFileInputExcel_25
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_25 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_25.getNumericCellValue());
													temp_row_tFileInputExcel_25[i] = ne_tFileInputExcel_25
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_25[i] = String
														.valueOf(cell_tFileInputExcel_25.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_25[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_25[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_25[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_25[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_25 = false;
							row43 = new row43Struct();
							int curColNum_tFileInputExcel_25 = -1;
							String curColName_tFileInputExcel_25 = "";
							try {
								columnIndex_tFileInputExcel_25 = 0;

								if (temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25].length() > 0) {
									curColNum_tFileInputExcel_25 = columnIndex_tFileInputExcel_25
											+ start_column_tFileInputExcel_25 + 1;
									curColName_tFileInputExcel_25 = "Client_Prospect";

									row43.Client_Prospect = temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25];
								} else {
									row43.Client_Prospect = null;
									emptyColumnCount_tFileInputExcel_25++;
								}
								columnIndex_tFileInputExcel_25 = 1;

								if (temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25].length() > 0) {
									curColNum_tFileInputExcel_25 = columnIndex_tFileInputExcel_25
											+ start_column_tFileInputExcel_25 + 1;
									curColName_tFileInputExcel_25 = "Sujet";

									row43.Sujet = temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25];
								} else {
									row43.Sujet = null;
									emptyColumnCount_tFileInputExcel_25++;
								}
								columnIndex_tFileInputExcel_25 = 2;

								if (temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25].length() > 0) {
									curColNum_tFileInputExcel_25 = columnIndex_tFileInputExcel_25
											+ start_column_tFileInputExcel_25 + 1;
									curColName_tFileInputExcel_25 = "Acces";

									row43.Acces = temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25];
								} else {
									row43.Acces = null;
									emptyColumnCount_tFileInputExcel_25++;
								}
								columnIndex_tFileInputExcel_25 = 3;

								if (temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25].length() > 0) {
									curColNum_tFileInputExcel_25 = columnIndex_tFileInputExcel_25
											+ start_column_tFileInputExcel_25 + 1;
									curColName_tFileInputExcel_25 = "Type_d_acces";

									row43.Type_d_acces = temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25];
								} else {
									row43.Type_d_acces = null;
									emptyColumnCount_tFileInputExcel_25++;
								}
								columnIndex_tFileInputExcel_25 = 4;

								if (temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25].length() > 0) {
									curColNum_tFileInputExcel_25 = columnIndex_tFileInputExcel_25
											+ start_column_tFileInputExcel_25 + 1;
									curColName_tFileInputExcel_25 = "Account_Manager__Client_Prospect";

									row43.Account_Manager__Client_Prospect = temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25];
								} else {
									row43.Account_Manager__Client_Prospect = null;
									emptyColumnCount_tFileInputExcel_25++;
								}
								columnIndex_tFileInputExcel_25 = 5;

								if (temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25].length() > 0) {
									curColNum_tFileInputExcel_25 = columnIndex_tFileInputExcel_25
											+ start_column_tFileInputExcel_25 + 1;
									curColName_tFileInputExcel_25 = "Cree_le";

									row43.Cree_le = temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25];
								} else {
									row43.Cree_le = null;
									emptyColumnCount_tFileInputExcel_25++;
								}
								columnIndex_tFileInputExcel_25 = 6;

								if (temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25].length() > 0) {
									curColNum_tFileInputExcel_25 = columnIndex_tFileInputExcel_25
											+ start_column_tFileInputExcel_25 + 1;
									curColName_tFileInputExcel_25 = "Mois_et_annee_de_creation";

									row43.Mois_et_annee_de_creation = temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25];
								} else {
									row43.Mois_et_annee_de_creation = null;
									emptyColumnCount_tFileInputExcel_25++;
								}
								columnIndex_tFileInputExcel_25 = 7;

								if (temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25].length() > 0) {
									curColNum_tFileInputExcel_25 = columnIndex_tFileInputExcel_25
											+ start_column_tFileInputExcel_25 + 1;
									curColName_tFileInputExcel_25 = "Cree_par";

									row43.Cree_par = temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25];
								} else {
									row43.Cree_par = null;
									emptyColumnCount_tFileInputExcel_25++;
								}
								columnIndex_tFileInputExcel_25 = 8;

								if (temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25].length() > 0) {
									curColNum_tFileInputExcel_25 = columnIndex_tFileInputExcel_25
											+ start_column_tFileInputExcel_25 + 1;
									curColName_tFileInputExcel_25 = "Equipe";

									row43.Equipe = temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25];
								} else {
									row43.Equipe = null;
									emptyColumnCount_tFileInputExcel_25++;
								}
								columnIndex_tFileInputExcel_25 = 9;

								if (temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25].length() > 0) {
									curColNum_tFileInputExcel_25 = columnIndex_tFileInputExcel_25
											+ start_column_tFileInputExcel_25 + 1;
									curColName_tFileInputExcel_25 = "Proprietaire";

									row43.Proprietaire = temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25];
								} else {
									row43.Proprietaire = null;
									emptyColumnCount_tFileInputExcel_25++;
								}
								columnIndex_tFileInputExcel_25 = 10;

								if (temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25].length() > 0) {
									curColNum_tFileInputExcel_25 = columnIndex_tFileInputExcel_25
											+ start_column_tFileInputExcel_25 + 1;
									curColName_tFileInputExcel_25 = "Phase_de_l_opportunite";

									row43.Phase_de_l_opportunite = temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25];
								} else {
									row43.Phase_de_l_opportunite = null;
									emptyColumnCount_tFileInputExcel_25++;
								}
								columnIndex_tFileInputExcel_25 = 11;

								if (temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25].length() > 0) {
									curColNum_tFileInputExcel_25 = columnIndex_tFileInputExcel_25
											+ start_column_tFileInputExcel_25 + 1;
									curColName_tFileInputExcel_25 = "Valeur_ordering";

									row43.Valeur_ordering = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25], null,
											'.' == decimalChar_tFileInputExcel_25 ? null
													: decimalChar_tFileInputExcel_25));
								} else {
									row43.Valeur_ordering = null;
									emptyColumnCount_tFileInputExcel_25++;
								}
								columnIndex_tFileInputExcel_25 = 12;

								if (temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25].length() > 0) {
									curColNum_tFileInputExcel_25 = columnIndex_tFileInputExcel_25
											+ start_column_tFileInputExcel_25 + 1;
									curColName_tFileInputExcel_25 = "Statut";

									row43.Statut = temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25];
								} else {
									row43.Statut = null;
									emptyColumnCount_tFileInputExcel_25++;
								}
								columnIndex_tFileInputExcel_25 = 13;

								if (temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25].length() > 0) {
									curColNum_tFileInputExcel_25 = columnIndex_tFileInputExcel_25
											+ start_column_tFileInputExcel_25 + 1;
									curColName_tFileInputExcel_25 = "Staut_Final";

									row43.Staut_Final = temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25];
								} else {
									row43.Staut_Final = null;
									emptyColumnCount_tFileInputExcel_25++;
								}
								columnIndex_tFileInputExcel_25 = 14;

								if (temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25].length() > 0) {
									curColNum_tFileInputExcel_25 = columnIndex_tFileInputExcel_25
											+ start_column_tFileInputExcel_25 + 1;
									curColName_tFileInputExcel_25 = "Tarifs";

									row43.Tarifs = temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25];
								} else {
									row43.Tarifs = null;
									emptyColumnCount_tFileInputExcel_25++;
								}
								columnIndex_tFileInputExcel_25 = 15;

								if (temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25].length() > 0) {
									curColNum_tFileInputExcel_25 = columnIndex_tFileInputExcel_25
											+ start_column_tFileInputExcel_25 + 1;
									curColName_tFileInputExcel_25 = "Montant_total";

									row43.Montant_total = temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25];
								} else {
									row43.Montant_total = null;
									emptyColumnCount_tFileInputExcel_25++;
								}
								columnIndex_tFileInputExcel_25 = 16;

								if (temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25].length() > 0) {
									curColNum_tFileInputExcel_25 = columnIndex_tFileInputExcel_25
											+ start_column_tFileInputExcel_25 + 1;
									curColName_tFileInputExcel_25 = "Parent__Produit_existant";

									row43.Parent__Produit_existant = temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25];
								} else {
									row43.Parent__Produit_existant = null;
									emptyColumnCount_tFileInputExcel_25++;
								}
								columnIndex_tFileInputExcel_25 = 17;

								if (temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25].length() > 0) {
									curColNum_tFileInputExcel_25 = columnIndex_tFileInputExcel_25
											+ start_column_tFileInputExcel_25 + 1;
									curColName_tFileInputExcel_25 = "Produit_existant";

									row43.Produit_existant = temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25];
								} else {
									row43.Produit_existant = null;
									emptyColumnCount_tFileInputExcel_25++;
								}
								columnIndex_tFileInputExcel_25 = 18;

								if (temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25].length() > 0) {
									curColNum_tFileInputExcel_25 = columnIndex_tFileInputExcel_25
											+ start_column_tFileInputExcel_25 + 1;
									curColName_tFileInputExcel_25 = "Operation";

									row43.Operation = temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25];
								} else {
									row43.Operation = null;
									emptyColumnCount_tFileInputExcel_25++;
								}
								columnIndex_tFileInputExcel_25 = 19;

								if (temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25].length() > 0) {
									curColNum_tFileInputExcel_25 = columnIndex_tFileInputExcel_25
											+ start_column_tFileInputExcel_25 + 1;
									curColName_tFileInputExcel_25 = "Type_d_operation";

									row43.Type_d_operation = temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25];
								} else {
									row43.Type_d_operation = null;
									emptyColumnCount_tFileInputExcel_25++;
								}
								columnIndex_tFileInputExcel_25 = 20;

								if (temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25].length() > 0) {
									curColNum_tFileInputExcel_25 = columnIndex_tFileInputExcel_25
											+ start_column_tFileInputExcel_25 + 1;
									curColName_tFileInputExcel_25 = "Prix_unitaire";

									row43.Prix_unitaire = temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25];
								} else {
									row43.Prix_unitaire = null;
									emptyColumnCount_tFileInputExcel_25++;
								}
								columnIndex_tFileInputExcel_25 = 21;

								if (temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25].length() > 0) {
									curColNum_tFileInputExcel_25 = columnIndex_tFileInputExcel_25
											+ start_column_tFileInputExcel_25 + 1;
									curColName_tFileInputExcel_25 = "Quantite";

									row43.Quantite = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25], null,
											'.' == decimalChar_tFileInputExcel_25 ? null
													: decimalChar_tFileInputExcel_25));
								} else {
									row43.Quantite = null;
									emptyColumnCount_tFileInputExcel_25++;
								}
								columnIndex_tFileInputExcel_25 = 22;

								if (temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25].length() > 0) {
									curColNum_tFileInputExcel_25 = columnIndex_tFileInputExcel_25
											+ start_column_tFileInputExcel_25 + 1;
									curColName_tFileInputExcel_25 = "Remise";

									row43.Remise = temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25];
								} else {
									row43.Remise = null;
									emptyColumnCount_tFileInputExcel_25++;
								}
								columnIndex_tFileInputExcel_25 = 23;

								if (temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25].length() > 0) {
									curColNum_tFileInputExcel_25 = columnIndex_tFileInputExcel_25
											+ start_column_tFileInputExcel_25 + 1;
									curColName_tFileInputExcel_25 = "Montant_de_la_remise_manuelle";

									row43.Montant_de_la_remise_manuelle = temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25];
								} else {
									row43.Montant_de_la_remise_manuelle = null;
									emptyColumnCount_tFileInputExcel_25++;
								}
								columnIndex_tFileInputExcel_25 = 24;

								if (temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25].length() > 0) {
									curColNum_tFileInputExcel_25 = columnIndex_tFileInputExcel_25
											+ start_column_tFileInputExcel_25 + 1;
									curColName_tFileInputExcel_25 = "Total_final";

									row43.Total_final = temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25];
								} else {
									row43.Total_final = null;
									emptyColumnCount_tFileInputExcel_25++;
								}
								columnIndex_tFileInputExcel_25 = 25;

								if (temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25].length() > 0) {
									curColNum_tFileInputExcel_25 = columnIndex_tFileInputExcel_25
											+ start_column_tFileInputExcel_25 + 1;
									curColName_tFileInputExcel_25 = "Modifie_le";

									row43.Modifie_le = temp_row_tFileInputExcel_25[columnIndex_tFileInputExcel_25];
								} else {
									row43.Modifie_le = null;
									emptyColumnCount_tFileInputExcel_25++;
								}

								nb_line_tFileInputExcel_25++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_25_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_25 = true;
								System.err.println(e.getMessage());
								row43 = null;
							}

							/**
							 * [tFileInputExcel_25 begin ] stop
							 */

							/**
							 * [tFileInputExcel_25 main ] start
							 */

							currentComponent = "tFileInputExcel_25";

							tos_count_tFileInputExcel_25++;

							/**
							 * [tFileInputExcel_25 main ] stop
							 */

							/**
							 * [tFileInputExcel_25 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_25";

							/**
							 * [tFileInputExcel_25 process_data_begin ] stop
							 */
// Start of branch "row43"
							if (row43 != null) {

								/**
								 * [tMap_25 main ] start
								 */

								currentComponent = "tMap_25";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row43"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_25 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_25 = false;
								boolean mainRowRejected_tMap_25 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_25__Struct Var = Var__tMap_25;// ###############################
									// ###############################
									// # Output tables

									copyOfcopyOft18 = null;

// # Output table : 'copyOfcopyOft18'
									copyOfcopyOft18_tmp.Equipe = row43.Equipe;
									copyOfcopyOft18 = copyOfcopyOft18_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_25 = false;

								tos_count_tMap_25++;

								/**
								 * [tMap_25 main ] stop
								 */

								/**
								 * [tMap_25 process_data_begin ] start
								 */

								currentComponent = "tMap_25";

								/**
								 * [tMap_25 process_data_begin ] stop
								 */
// Start of branch "copyOfcopyOft18"
								if (copyOfcopyOft18 != null) {

									/**
									 * [tUnite_9 main ] start
									 */

									currentComponent = "tUnite_9";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "copyOfcopyOft18"

										);
									}

//////////

// for output
									row49 = new row49Struct();

									row49.Equipe = copyOfcopyOft18.Equipe;

									nb_line_tUnite_9++;

//////////

									tos_count_tUnite_9++;

									/**
									 * [tUnite_9 main ] stop
									 */

									/**
									 * [tUnite_9 process_data_begin ] start
									 */

									currentComponent = "tUnite_9";

									/**
									 * [tUnite_9 process_data_begin ] stop
									 */

									/**
									 * [tMap_9 main ] start
									 */

									currentComponent = "tMap_9";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "row49"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_9 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_9 = false;
									boolean mainRowRejected_tMap_9 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row50"
									///////////////////////////////////////////////

									boolean forceLooprow50 = false;

									row50Struct row50ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_9) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_9 = false;

										row50HashKey.Equipe = row49.Equipe;

										row50HashKey.hashCodeDirty = true;

										tHash_Lookup_row50.lookup(row50HashKey);

										if (!tHash_Lookup_row50.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_9 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row50 != null && tHash_Lookup_row50.getCount(row50HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row50' and it contains more one result from keys : row50.Equipe = '" +
										// row50HashKey.Equipe + "'");
									} // G 071

									row50Struct row50 = null;

									row50Struct fromLookup_row50 = null;
									row50 = row50Default;

									if (tHash_Lookup_row50 != null && tHash_Lookup_row50.hasNext()) { // G 099

										fromLookup_row50 = tHash_Lookup_row50.next();

									} // G 099

									if (fromLookup_row50 != null) {
										row50 = fromLookup_row50;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_9__Struct Var = Var__tMap_9;// ###############################
										// ###############################
										// # Output tables

										p = null;

										if (!rejectedInnerJoin_tMap_9) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'p'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_9) {
											p_tmp.Equipe = row49.Equipe;
											p = p_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_9 = false;

									tos_count_tMap_9++;

									/**
									 * [tMap_9 main ] stop
									 */

									/**
									 * [tMap_9 process_data_begin ] start
									 */

									currentComponent = "tMap_9";

									/**
									 * [tMap_9 process_data_begin ] stop
									 */
// Start of branch "p"
									if (p != null) {

										/**
										 * [tUniqRow_9 main ] start
										 */

										currentComponent = "tUniqRow_9";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "p"

											);
										}

										row39 = null;
										finder_tUniqRow_9.Equipe = p.Equipe;
										finder_tUniqRow_9.hashCodeDirty = true;
										if (!keystUniqRow_9.contains(finder_tUniqRow_9)) {
											KeyStruct_tUniqRow_9 new_tUniqRow_9 = new KeyStruct_tUniqRow_9();

											new_tUniqRow_9.Equipe = p.Equipe;

											keystUniqRow_9.add(new_tUniqRow_9);
											if (row39 == null) {

												row39 = new row39Struct();
											}
											row39.Equipe = p.Equipe;
											nb_uniques_tUniqRow_9++;
										} else {
											nb_duplicates_tUniqRow_9++;
										}

										tos_count_tUniqRow_9++;

										/**
										 * [tUniqRow_9 main ] stop
										 */

										/**
										 * [tUniqRow_9 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_9";

										/**
										 * [tUniqRow_9 process_data_begin ] stop
										 */
// Start of branch "row39"
										if (row39 != null) {

											/**
											 * [tDBOutput_2 main ] start
											 */

											currentComponent = "tDBOutput_2";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row39"

												);
											}

											whetherReject_tDBOutput_2 = false;
											if (row39.Equipe == null) {
												pstmt_tDBOutput_2.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_2.setString(1, row39.Equipe);
											}

											pstmt_tDBOutput_2.addBatch();
											nb_line_tDBOutput_2++;

											batchSizeCounter_tDBOutput_2++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_2 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_2) throws Exception {
													try {

														for (int countEach_tDBOutput_2 : pstmt_tDBOutput_2
																.executeBatch()) {
															if (countEach_tDBOutput_2 == -2
																	|| countEach_tDBOutput_2 == -3) {
																break;
															}
															counter += countEach_tDBOutput_2;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_2_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_2 = 0;
														for (int countEach_tDBOutput_2 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_2 < 0 ? 0
																	: countEach_tDBOutput_2);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_2) throws Exception {
													try {

														for (int countEach_tDBOutput_2 : pstmt_tDBOutput_2
																.executeBatch()) {
															if (countEach_tDBOutput_2 == -2
																	|| countEach_tDBOutput_2 == -3) {
																break;
															}
															counter += countEach_tDBOutput_2;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_2_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_2 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_2 < 0 ? 0
																	: countEach_tDBOutput_2);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_2 > 0)
													&& (batchSize_tDBOutput_2 <= batchSizeCounter_tDBOutput_2)) {

												insertedCount_tDBOutput_2 = new LimitBytesHelper_tDBOutput_2()
														.limitBytePart1(insertedCount_tDBOutput_2, pstmt_tDBOutput_2);
												rowsToCommitCount_tDBOutput_2 = insertedCount_tDBOutput_2;

												batchSizeCounter_tDBOutput_2 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_2++;
											if (commitEvery_tDBOutput_2 <= commitCounter_tDBOutput_2) {
												if ((batchSize_tDBOutput_2 > 0) && (batchSizeCounter_tDBOutput_2 > 0)) {

													insertedCount_tDBOutput_2 = new LimitBytesHelper_tDBOutput_2()
															.limitBytePart1(insertedCount_tDBOutput_2,
																	pstmt_tDBOutput_2);

													batchSizeCounter_tDBOutput_2 = 0;
												}
												if (rowsToCommitCount_tDBOutput_2 != 0) {

												}
												conn_tDBOutput_2.commit();
												if (rowsToCommitCount_tDBOutput_2 != 0) {

													rowsToCommitCount_tDBOutput_2 = 0;
												}
												commitCounter_tDBOutput_2 = 0;
											}

											tos_count_tDBOutput_2++;

											/**
											 * [tDBOutput_2 main ] stop
											 */

											/**
											 * [tDBOutput_2 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_2";

											/**
											 * [tDBOutput_2 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_2 process_data_end ] start
											 */

											currentComponent = "tDBOutput_2";

											/**
											 * [tDBOutput_2 process_data_end ] stop
											 */

										} // End of branch "row39"

										/**
										 * [tUniqRow_9 process_data_end ] start
										 */

										currentComponent = "tUniqRow_9";

										/**
										 * [tUniqRow_9 process_data_end ] stop
										 */

									} // End of branch "p"

									/**
									 * [tMap_9 process_data_end ] start
									 */

									currentComponent = "tMap_9";

									/**
									 * [tMap_9 process_data_end ] stop
									 */

									/**
									 * [tUnite_9 process_data_end ] start
									 */

									currentComponent = "tUnite_9";

									/**
									 * [tUnite_9 process_data_end ] stop
									 */

								} // End of branch "copyOfcopyOft18"

								/**
								 * [tMap_25 process_data_end ] start
								 */

								currentComponent = "tMap_25";

								/**
								 * [tMap_25 process_data_end ] stop
								 */

							} // End of branch "row43"

							/**
							 * [tFileInputExcel_25 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_25";

							/**
							 * [tFileInputExcel_25 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_25 end ] start
							 */

							currentComponent = "tFileInputExcel_25";

						}

						globalMap.put("tFileInputExcel_25_NB_LINE", nb_line_tFileInputExcel_25);

					}

				} finally {

					if (!(source_tFileInputExcel_25 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_25.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_25", true);
				end_Hash.put("tFileInputExcel_25", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_25 end ] stop
				 */

				/**
				 * [tMap_25 end ] start
				 */

				currentComponent = "tMap_25";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row43");
				}

				ok_Hash.put("tMap_25", true);
				end_Hash.put("tMap_25", System.currentTimeMillis());

				/**
				 * [tMap_25 end ] stop
				 */

				/**
				 * [tMap_29 begin ] start
				 */

				ok_Hash.put("tMap_29", false);
				start_Hash.put("tMap_29", System.currentTimeMillis());

				currentComponent = "tMap_29";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row45");
				}

				int tos_count_tMap_29 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_29__Struct {
				}
				Var__tMap_29__Struct Var__tMap_29 = new Var__tMap_29__Struct();
// ###############################

// ###############################
// # Outputs initialization
				copyOfcopyOfcopyOft5Struct copyOfcopyOfcopyOft5_tmp = new copyOfcopyOfcopyOft5Struct();
// ###############################

				/**
				 * [tMap_29 begin ] stop
				 */

				/**
				 * [tFileInputExcel_29 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_29", false);
				start_Hash.put("tFileInputExcel_29", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_29";

				int tos_count_tFileInputExcel_29 = 0;

				final String decryptedPassword_tFileInputExcel_29 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:nF6mq611W84lneKCL1mAVP3XtJz/dTiKxXqyRg==");
				String password_tFileInputExcel_29 = decryptedPassword_tFileInputExcel_29;
				if (password_tFileInputExcel_29.isEmpty()) {
					password_tFileInputExcel_29 = null;
				}
				class RegexUtil_tFileInputExcel_29 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_29 regexUtil_tFileInputExcel_29 = new RegexUtil_tFileInputExcel_29();

				Object source_tFileInputExcel_29 = "C:/Users/DELL/Downloads/Copie_de_EXTRACT_OPPORTUNITES_MOBILE_BB_VF_090520222381_1ans.xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_29 = null;

				if (source_tFileInputExcel_29 instanceof String) {
					workbook_tFileInputExcel_29 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_29), password_tFileInputExcel_29,
									true);
				} else if (source_tFileInputExcel_29 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_29 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_29, password_tFileInputExcel_29);
				} else {
					workbook_tFileInputExcel_29 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_29 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_29.addAll(
							regexUtil_tFileInputExcel_29.getSheets(workbook_tFileInputExcel_29, "Source", false));
					if (sheetList_tFileInputExcel_29.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_29 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_29 : sheetList_tFileInputExcel_29) {
						if (sheet_FilterNull_tFileInputExcel_29 != null
								&& sheetList_FilterNull_tFileInputExcel_29.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_29.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_29.add(sheet_FilterNull_tFileInputExcel_29);
						}
					}
					sheetList_tFileInputExcel_29 = sheetList_FilterNull_tFileInputExcel_29;
					if (sheetList_tFileInputExcel_29.size() > 0) {
						int nb_line_tFileInputExcel_29 = 0;

						int begin_line_tFileInputExcel_29 = 1;

						int footer_input_tFileInputExcel_29 = 0;

						int end_line_tFileInputExcel_29 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_29 : sheetList_tFileInputExcel_29) {
							end_line_tFileInputExcel_29 += (sheet_tFileInputExcel_29.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_29 -= footer_input_tFileInputExcel_29;
						int limit_tFileInputExcel_29 = -1;
						int start_column_tFileInputExcel_29 = 1 - 1;
						int end_column_tFileInputExcel_29 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_29 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_29 = sheetList_tFileInputExcel_29
								.get(0);
						int rowCount_tFileInputExcel_29 = 0;
						int sheetIndex_tFileInputExcel_29 = 0;
						int currentRows_tFileInputExcel_29 = (sheetList_tFileInputExcel_29.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_29 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_29 = df_tFileInputExcel_29.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_29 = begin_line_tFileInputExcel_29; i_tFileInputExcel_29 < end_line_tFileInputExcel_29; i_tFileInputExcel_29++) {

							int emptyColumnCount_tFileInputExcel_29 = 0;

							if (limit_tFileInputExcel_29 != -1
									&& nb_line_tFileInputExcel_29 >= limit_tFileInputExcel_29) {
								break;
							}

							while (i_tFileInputExcel_29 >= rowCount_tFileInputExcel_29
									+ currentRows_tFileInputExcel_29) {
								rowCount_tFileInputExcel_29 += currentRows_tFileInputExcel_29;
								sheet_tFileInputExcel_29 = sheetList_tFileInputExcel_29
										.get(++sheetIndex_tFileInputExcel_29);
								currentRows_tFileInputExcel_29 = (sheet_tFileInputExcel_29.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_29_CURRENT_SHEET", sheet_tFileInputExcel_29.getSheetName());
							if (rowCount_tFileInputExcel_29 <= i_tFileInputExcel_29) {
								row_tFileInputExcel_29 = sheet_tFileInputExcel_29
										.getRow(i_tFileInputExcel_29 - rowCount_tFileInputExcel_29);
							}
							row45 = null;
							int tempRowLength_tFileInputExcel_29 = 31;

							int columnIndex_tFileInputExcel_29 = 0;

							String[] temp_row_tFileInputExcel_29 = new String[tempRowLength_tFileInputExcel_29];
							int excel_end_column_tFileInputExcel_29;
							if (row_tFileInputExcel_29 == null) {
								excel_end_column_tFileInputExcel_29 = 0;
							} else {
								excel_end_column_tFileInputExcel_29 = row_tFileInputExcel_29.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_29;
							if (end_column_tFileInputExcel_29 == -1) {
								actual_end_column_tFileInputExcel_29 = excel_end_column_tFileInputExcel_29;
							} else {
								actual_end_column_tFileInputExcel_29 = end_column_tFileInputExcel_29 > excel_end_column_tFileInputExcel_29
										? excel_end_column_tFileInputExcel_29
										: end_column_tFileInputExcel_29;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_29 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_29; i++) {
								if (i + start_column_tFileInputExcel_29 < actual_end_column_tFileInputExcel_29) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_29 = row_tFileInputExcel_29
											.getCell(i + start_column_tFileInputExcel_29);
									if (cell_tFileInputExcel_29 != null) {
										switch (cell_tFileInputExcel_29.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_29[i] = cell_tFileInputExcel_29
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_29)) {
												temp_row_tFileInputExcel_29[i] = cell_tFileInputExcel_29
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_29[i] = df_tFileInputExcel_29
														.format(cell_tFileInputExcel_29.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_29[i] = String
													.valueOf(cell_tFileInputExcel_29.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_29.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_29[i] = cell_tFileInputExcel_29
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_29)) {
													temp_row_tFileInputExcel_29[i] = cell_tFileInputExcel_29
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_29 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_29.getNumericCellValue());
													temp_row_tFileInputExcel_29[i] = ne_tFileInputExcel_29
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_29[i] = String
														.valueOf(cell_tFileInputExcel_29.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_29[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_29[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_29[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_29[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_29 = false;
							row45 = new row45Struct();
							int curColNum_tFileInputExcel_29 = -1;
							String curColName_tFileInputExcel_29 = "";
							try {
								columnIndex_tFileInputExcel_29 = 0;

								if (temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29].length() > 0) {
									curColNum_tFileInputExcel_29 = columnIndex_tFileInputExcel_29
											+ start_column_tFileInputExcel_29 + 1;
									curColName_tFileInputExcel_29 = "Reference_OSM_mere__Opportunite";

									row45.Reference_OSM_mere__Opportunite = temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29];
								} else {
									row45.Reference_OSM_mere__Opportunite = null;
									emptyColumnCount_tFileInputExcel_29++;
								}
								columnIndex_tFileInputExcel_29 = 1;

								if (temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29].length() > 0) {
									curColNum_tFileInputExcel_29 = columnIndex_tFileInputExcel_29
											+ start_column_tFileInputExcel_29 + 1;
									curColName_tFileInputExcel_29 = "Reference_OSM__Opportunite";

									row45.Reference_OSM__Opportunite = temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29];
								} else {
									row45.Reference_OSM__Opportunite = null;
									emptyColumnCount_tFileInputExcel_29++;
								}
								columnIndex_tFileInputExcel_29 = 2;

								if (temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29].length() > 0) {
									curColNum_tFileInputExcel_29 = columnIndex_tFileInputExcel_29
											+ start_column_tFileInputExcel_29 + 1;
									curColName_tFileInputExcel_29 = "Client_Prospect__Opportunite";

									row45.Client_Prospect__Opportunite = temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29];
								} else {
									row45.Client_Prospect__Opportunite = null;
									emptyColumnCount_tFileInputExcel_29++;
								}
								columnIndex_tFileInputExcel_29 = 3;

								if (temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29].length() > 0) {
									curColNum_tFileInputExcel_29 = columnIndex_tFileInputExcel_29
											+ start_column_tFileInputExcel_29 + 1;
									curColName_tFileInputExcel_29 = "Offre";

									row45.Offre = temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29];
								} else {
									row45.Offre = null;
									emptyColumnCount_tFileInputExcel_29++;
								}
								columnIndex_tFileInputExcel_29 = 4;

								if (temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29].length() > 0) {
									curColNum_tFileInputExcel_29 = columnIndex_tFileInputExcel_29
											+ start_column_tFileInputExcel_29 + 1;
									curColName_tFileInputExcel_29 = "Nature_Offre";

									row45.Nature_Offre = temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29];
								} else {
									row45.Nature_Offre = null;
									emptyColumnCount_tFileInputExcel_29++;
								}
								columnIndex_tFileInputExcel_29 = 5;

								if (temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29].length() > 0) {
									curColNum_tFileInputExcel_29 = columnIndex_tFileInputExcel_29
											+ start_column_tFileInputExcel_29 + 1;
									curColName_tFileInputExcel_29 = "Produit_existant";

									row45.Produit_existant = temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29];
								} else {
									row45.Produit_existant = null;
									emptyColumnCount_tFileInputExcel_29++;
								}
								columnIndex_tFileInputExcel_29 = 6;

								if (temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29].length() > 0) {
									curColNum_tFileInputExcel_29 = columnIndex_tFileInputExcel_29
											+ start_column_tFileInputExcel_29 + 1;
									curColName_tFileInputExcel_29 = "Nature_produit__Produit_existant";

									row45.Nature_produit__Produit_existant = temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29];
								} else {
									row45.Nature_produit__Produit_existant = null;
									emptyColumnCount_tFileInputExcel_29++;
								}
								columnIndex_tFileInputExcel_29 = 7;

								if (temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29].length() > 0) {
									curColNum_tFileInputExcel_29 = columnIndex_tFileInputExcel_29
											+ start_column_tFileInputExcel_29 + 1;
									curColName_tFileInputExcel_29 = "Quantite";

									row45.Quantite = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29], null,
											'.' == decimalChar_tFileInputExcel_29 ? null
													: decimalChar_tFileInputExcel_29));
								} else {
									row45.Quantite = null;
									emptyColumnCount_tFileInputExcel_29++;
								}
								columnIndex_tFileInputExcel_29 = 8;

								if (temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29].length() > 0) {
									curColNum_tFileInputExcel_29 = columnIndex_tFileInputExcel_29
											+ start_column_tFileInputExcel_29 + 1;
									curColName_tFileInputExcel_29 = "Prix_unitaire";

									row45.Prix_unitaire = temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29];
								} else {
									row45.Prix_unitaire = null;
									emptyColumnCount_tFileInputExcel_29++;
								}
								columnIndex_tFileInputExcel_29 = 9;

								if (temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29].length() > 0) {
									curColNum_tFileInputExcel_29 = columnIndex_tFileInputExcel_29
											+ start_column_tFileInputExcel_29 + 1;
									curColName_tFileInputExcel_29 = "Total_final";

									row45.Total_final = temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29];
								} else {
									row45.Total_final = null;
									emptyColumnCount_tFileInputExcel_29++;
								}
								columnIndex_tFileInputExcel_29 = 10;

								if (temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29].length() > 0) {
									curColNum_tFileInputExcel_29 = columnIndex_tFileInputExcel_29
											+ start_column_tFileInputExcel_29 + 1;
									curColName_tFileInputExcel_29 = "Remise______Opportunite";

									row45.Remise______Opportunite = temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29];
								} else {
									row45.Remise______Opportunite = null;
									emptyColumnCount_tFileInputExcel_29++;
								}
								columnIndex_tFileInputExcel_29 = 11;

								if (temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29].length() > 0) {
									curColNum_tFileInputExcel_29 = columnIndex_tFileInputExcel_29
											+ start_column_tFileInputExcel_29 + 1;
									curColName_tFileInputExcel_29 = "Total_remise_HT";

									row45.Total_remise_HT = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29], null,
											'.' == decimalChar_tFileInputExcel_29 ? null
													: decimalChar_tFileInputExcel_29));
								} else {
									row45.Total_remise_HT = null;
									emptyColumnCount_tFileInputExcel_29++;
								}
								columnIndex_tFileInputExcel_29 = 12;

								if (temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29].length() > 0) {
									curColNum_tFileInputExcel_29 = columnIndex_tFileInputExcel_29
											+ start_column_tFileInputExcel_29 + 1;
									curColName_tFileInputExcel_29 = "Extension__Opportunite";

									row45.Extension__Opportunite = temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29];
								} else {
									row45.Extension__Opportunite = null;
									emptyColumnCount_tFileInputExcel_29++;
								}
								columnIndex_tFileInputExcel_29 = 13;

								if (temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29].length() > 0) {
									curColNum_tFileInputExcel_29 = columnIndex_tFileInputExcel_29
											+ start_column_tFileInputExcel_29 + 1;
									curColName_tFileInputExcel_29 = "Budget_a_valider__Opportunite";

									row45.Budget_a_valider__Opportunite = temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29];
								} else {
									row45.Budget_a_valider__Opportunite = null;
									emptyColumnCount_tFileInputExcel_29++;
								}
								columnIndex_tFileInputExcel_29 = 14;

								if (temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29].length() > 0) {
									curColNum_tFileInputExcel_29 = columnIndex_tFileInputExcel_29
											+ start_column_tFileInputExcel_29 + 1;
									curColName_tFileInputExcel_29 = "Budget_a_valider_Extension__Opportunite";

									row45.Budget_a_valider_Extension__Opportunite = temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29];
								} else {
									row45.Budget_a_valider_Extension__Opportunite = null;
									emptyColumnCount_tFileInputExcel_29++;
								}
								columnIndex_tFileInputExcel_29 = 15;

								if (temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29].length() > 0) {
									curColNum_tFileInputExcel_29 = columnIndex_tFileInputExcel_29
											+ start_column_tFileInputExcel_29 + 1;
									curColName_tFileInputExcel_29 = "Duree_d_engagement__Opportunite";

									row45.Duree_d_engagement__Opportunite = temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29];
								} else {
									row45.Duree_d_engagement__Opportunite = null;
									emptyColumnCount_tFileInputExcel_29++;
								}
								columnIndex_tFileInputExcel_29 = 16;

								if (temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29].length() > 0) {
									curColNum_tFileInputExcel_29 = columnIndex_tFileInputExcel_29
											+ start_column_tFileInputExcel_29 + 1;
									curColName_tFileInputExcel_29 = "Type_d_engagement__Opportunite";

									row45.Type_d_engagement__Opportunite = temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29];
								} else {
									row45.Type_d_engagement__Opportunite = null;
									emptyColumnCount_tFileInputExcel_29++;
								}
								columnIndex_tFileInputExcel_29 = 17;

								if (temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29].length() > 0) {
									curColNum_tFileInputExcel_29 = columnIndex_tFileInputExcel_29
											+ start_column_tFileInputExcel_29 + 1;
									curColName_tFileInputExcel_29 = "Demandeur__Opportunite";

									row45.Demandeur__Opportunite = temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29];
								} else {
									row45.Demandeur__Opportunite = null;
									emptyColumnCount_tFileInputExcel_29++;
								}
								columnIndex_tFileInputExcel_29 = 18;

								if (temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29].length() > 0) {
									curColNum_tFileInputExcel_29 = columnIndex_tFileInputExcel_29
											+ start_column_tFileInputExcel_29 + 1;
									curColName_tFileInputExcel_29 = "Equipe";

									row45.Equipe = temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29];
								} else {
									row45.Equipe = null;
									emptyColumnCount_tFileInputExcel_29++;
								}
								columnIndex_tFileInputExcel_29 = 19;

								if (temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29].length() > 0) {
									curColNum_tFileInputExcel_29 = columnIndex_tFileInputExcel_29
											+ start_column_tFileInputExcel_29 + 1;
									curColName_tFileInputExcel_29 = "Cree_le__Opportunite";

									row45.Cree_le__Opportunite = temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29];
								} else {
									row45.Cree_le__Opportunite = null;
									emptyColumnCount_tFileInputExcel_29++;
								}
								columnIndex_tFileInputExcel_29 = 20;

								if (temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29].length() > 0) {
									curColNum_tFileInputExcel_29 = columnIndex_tFileInputExcel_29
											+ start_column_tFileInputExcel_29 + 1;
									curColName_tFileInputExcel_29 = "Mois_de_creation";

									row45.Mois_de_creation = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29], null,
											'.' == decimalChar_tFileInputExcel_29 ? null
													: decimalChar_tFileInputExcel_29));
								} else {
									row45.Mois_de_creation = null;
									emptyColumnCount_tFileInputExcel_29++;
								}
								columnIndex_tFileInputExcel_29 = 21;

								if (temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29].length() > 0) {
									curColNum_tFileInputExcel_29 = columnIndex_tFileInputExcel_29
											+ start_column_tFileInputExcel_29 + 1;
									curColName_tFileInputExcel_29 = "Annee_de_creation";

									row45.Annee_de_creation = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29], null,
											'.' == decimalChar_tFileInputExcel_29 ? null
													: decimalChar_tFileInputExcel_29));
								} else {
									row45.Annee_de_creation = null;
									emptyColumnCount_tFileInputExcel_29++;
								}
								columnIndex_tFileInputExcel_29 = 22;

								if (temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29].length() > 0) {
									curColNum_tFileInputExcel_29 = columnIndex_tFileInputExcel_29
											+ start_column_tFileInputExcel_29 + 1;
									curColName_tFileInputExcel_29 = "Mois_et_annee_de_creation";

									row45.Mois_et_annee_de_creation = temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29];
								} else {
									row45.Mois_et_annee_de_creation = null;
									emptyColumnCount_tFileInputExcel_29++;
								}
								columnIndex_tFileInputExcel_29 = 23;

								if (temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29].length() > 0) {
									curColNum_tFileInputExcel_29 = columnIndex_tFileInputExcel_29
											+ start_column_tFileInputExcel_29 + 1;
									curColName_tFileInputExcel_29 = "Raison_de_statut_OSM__Opportunite";

									row45.Raison_de_statut_OSM__Opportunite = temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29];
								} else {
									row45.Raison_de_statut_OSM__Opportunite = null;
									emptyColumnCount_tFileInputExcel_29++;
								}
								columnIndex_tFileInputExcel_29 = 24;

								if (temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29].length() > 0) {
									curColNum_tFileInputExcel_29 = columnIndex_tFileInputExcel_29
											+ start_column_tFileInputExcel_29 + 1;
									curColName_tFileInputExcel_29 = "Statut_OSM__Opportunite";

									row45.Statut_OSM__Opportunite = temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29];
								} else {
									row45.Statut_OSM__Opportunite = null;
									emptyColumnCount_tFileInputExcel_29++;
								}
								columnIndex_tFileInputExcel_29 = 25;

								if (temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29].length() > 0) {
									curColNum_tFileInputExcel_29 = columnIndex_tFileInputExcel_29
											+ start_column_tFileInputExcel_29 + 1;
									curColName_tFileInputExcel_29 = "Statut_activation__Commande";

									row45.Statut_activation__Commande = temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29];
								} else {
									row45.Statut_activation__Commande = null;
									emptyColumnCount_tFileInputExcel_29++;
								}
								columnIndex_tFileInputExcel_29 = 26;

								if (temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29].length() > 0) {
									curColNum_tFileInputExcel_29 = columnIndex_tFileInputExcel_29
											+ start_column_tFileInputExcel_29 + 1;
									curColName_tFileInputExcel_29 = "Date_d_activation__Commande";

									row45.Date_d_activation__Commande = temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29];
								} else {
									row45.Date_d_activation__Commande = null;
									emptyColumnCount_tFileInputExcel_29++;
								}
								columnIndex_tFileInputExcel_29 = 27;

								if (temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29].length() > 0) {
									curColNum_tFileInputExcel_29 = columnIndex_tFileInputExcel_29
											+ start_column_tFileInputExcel_29 + 1;
									curColName_tFileInputExcel_29 = "Mois_d_activation";

									row45.Mois_d_activation = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29], null,
											'.' == decimalChar_tFileInputExcel_29 ? null
													: decimalChar_tFileInputExcel_29));
								} else {
									row45.Mois_d_activation = null;
									emptyColumnCount_tFileInputExcel_29++;
								}
								columnIndex_tFileInputExcel_29 = 28;

								if (temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29].length() > 0) {
									curColNum_tFileInputExcel_29 = columnIndex_tFileInputExcel_29
											+ start_column_tFileInputExcel_29 + 1;
									curColName_tFileInputExcel_29 = "Staut_Final";

									row45.Staut_Final = temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29];
								} else {
									row45.Staut_Final = null;
									emptyColumnCount_tFileInputExcel_29++;
								}
								columnIndex_tFileInputExcel_29 = 29;

								if (temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29].length() > 0) {
									curColNum_tFileInputExcel_29 = columnIndex_tFileInputExcel_29
											+ start_column_tFileInputExcel_29 + 1;
									curColName_tFileInputExcel_29 = "Gouvernorat";

									row45.Gouvernorat = temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29];
								} else {
									row45.Gouvernorat = null;
									emptyColumnCount_tFileInputExcel_29++;
								}
								columnIndex_tFileInputExcel_29 = 30;

								if (temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29].length() > 0) {
									curColNum_tFileInputExcel_29 = columnIndex_tFileInputExcel_29
											+ start_column_tFileInputExcel_29 + 1;
									curColName_tFileInputExcel_29 = "Phase_de_l_opportunite__Opportunite";

									row45.Phase_de_l_opportunite__Opportunite = temp_row_tFileInputExcel_29[columnIndex_tFileInputExcel_29];
								} else {
									row45.Phase_de_l_opportunite__Opportunite = null;
									emptyColumnCount_tFileInputExcel_29++;
								}

								nb_line_tFileInputExcel_29++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_29_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_29 = true;
								System.err.println(e.getMessage());
								row45 = null;
							}

							/**
							 * [tFileInputExcel_29 begin ] stop
							 */

							/**
							 * [tFileInputExcel_29 main ] start
							 */

							currentComponent = "tFileInputExcel_29";

							tos_count_tFileInputExcel_29++;

							/**
							 * [tFileInputExcel_29 main ] stop
							 */

							/**
							 * [tFileInputExcel_29 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_29";

							/**
							 * [tFileInputExcel_29 process_data_begin ] stop
							 */
// Start of branch "row45"
							if (row45 != null) {

								/**
								 * [tMap_29 main ] start
								 */

								currentComponent = "tMap_29";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row45"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_29 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_29 = false;
								boolean mainRowRejected_tMap_29 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_29__Struct Var = Var__tMap_29;// ###############################
									// ###############################
									// # Output tables

									copyOfcopyOfcopyOft5 = null;

// # Output table : 'copyOfcopyOfcopyOft5'
									copyOfcopyOfcopyOft5_tmp.Equipe = row45.Equipe;
									copyOfcopyOfcopyOft5 = copyOfcopyOfcopyOft5_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_29 = false;

								tos_count_tMap_29++;

								/**
								 * [tMap_29 main ] stop
								 */

								/**
								 * [tMap_29 process_data_begin ] start
								 */

								currentComponent = "tMap_29";

								/**
								 * [tMap_29 process_data_begin ] stop
								 */
// Start of branch "copyOfcopyOfcopyOft5"
								if (copyOfcopyOfcopyOft5 != null) {

									/**
									 * [tUnite_9 main ] start
									 */

									currentComponent = "tUnite_9";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "copyOfcopyOfcopyOft5"

										);
									}

//////////

// for output
									row49 = new row49Struct();

									row49.Equipe = copyOfcopyOfcopyOft5.Equipe;

									nb_line_tUnite_9++;

//////////

									tos_count_tUnite_9++;

									/**
									 * [tUnite_9 main ] stop
									 */

									/**
									 * [tUnite_9 process_data_begin ] start
									 */

									currentComponent = "tUnite_9";

									/**
									 * [tUnite_9 process_data_begin ] stop
									 */

									/**
									 * [tMap_9 main ] start
									 */

									currentComponent = "tMap_9";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "row49"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_9 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_9 = false;
									boolean mainRowRejected_tMap_9 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row50"
									///////////////////////////////////////////////

									boolean forceLooprow50 = false;

									row50Struct row50ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_9) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_9 = false;

										row50HashKey.Equipe = row49.Equipe;

										row50HashKey.hashCodeDirty = true;

										tHash_Lookup_row50.lookup(row50HashKey);

										if (!tHash_Lookup_row50.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_9 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row50 != null && tHash_Lookup_row50.getCount(row50HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row50' and it contains more one result from keys : row50.Equipe = '" +
										// row50HashKey.Equipe + "'");
									} // G 071

									row50Struct row50 = null;

									row50Struct fromLookup_row50 = null;
									row50 = row50Default;

									if (tHash_Lookup_row50 != null && tHash_Lookup_row50.hasNext()) { // G 099

										fromLookup_row50 = tHash_Lookup_row50.next();

									} // G 099

									if (fromLookup_row50 != null) {
										row50 = fromLookup_row50;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_9__Struct Var = Var__tMap_9;// ###############################
										// ###############################
										// # Output tables

										p = null;

										if (!rejectedInnerJoin_tMap_9) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'p'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_9) {
											p_tmp.Equipe = row49.Equipe;
											p = p_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_9 = false;

									tos_count_tMap_9++;

									/**
									 * [tMap_9 main ] stop
									 */

									/**
									 * [tMap_9 process_data_begin ] start
									 */

									currentComponent = "tMap_9";

									/**
									 * [tMap_9 process_data_begin ] stop
									 */
// Start of branch "p"
									if (p != null) {

										/**
										 * [tUniqRow_9 main ] start
										 */

										currentComponent = "tUniqRow_9";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "p"

											);
										}

										row39 = null;
										finder_tUniqRow_9.Equipe = p.Equipe;
										finder_tUniqRow_9.hashCodeDirty = true;
										if (!keystUniqRow_9.contains(finder_tUniqRow_9)) {
											KeyStruct_tUniqRow_9 new_tUniqRow_9 = new KeyStruct_tUniqRow_9();

											new_tUniqRow_9.Equipe = p.Equipe;

											keystUniqRow_9.add(new_tUniqRow_9);
											if (row39 == null) {

												row39 = new row39Struct();
											}
											row39.Equipe = p.Equipe;
											nb_uniques_tUniqRow_9++;
										} else {
											nb_duplicates_tUniqRow_9++;
										}

										tos_count_tUniqRow_9++;

										/**
										 * [tUniqRow_9 main ] stop
										 */

										/**
										 * [tUniqRow_9 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_9";

										/**
										 * [tUniqRow_9 process_data_begin ] stop
										 */
// Start of branch "row39"
										if (row39 != null) {

											/**
											 * [tDBOutput_2 main ] start
											 */

											currentComponent = "tDBOutput_2";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row39"

												);
											}

											whetherReject_tDBOutput_2 = false;
											if (row39.Equipe == null) {
												pstmt_tDBOutput_2.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_2.setString(1, row39.Equipe);
											}

											pstmt_tDBOutput_2.addBatch();
											nb_line_tDBOutput_2++;

											batchSizeCounter_tDBOutput_2++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_2 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_2) throws Exception {
													try {

														for (int countEach_tDBOutput_2 : pstmt_tDBOutput_2
																.executeBatch()) {
															if (countEach_tDBOutput_2 == -2
																	|| countEach_tDBOutput_2 == -3) {
																break;
															}
															counter += countEach_tDBOutput_2;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_2_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_2 = 0;
														for (int countEach_tDBOutput_2 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_2 < 0 ? 0
																	: countEach_tDBOutput_2);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_2) throws Exception {
													try {

														for (int countEach_tDBOutput_2 : pstmt_tDBOutput_2
																.executeBatch()) {
															if (countEach_tDBOutput_2 == -2
																	|| countEach_tDBOutput_2 == -3) {
																break;
															}
															counter += countEach_tDBOutput_2;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_2_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_2 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_2 < 0 ? 0
																	: countEach_tDBOutput_2);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_2 > 0)
													&& (batchSize_tDBOutput_2 <= batchSizeCounter_tDBOutput_2)) {

												insertedCount_tDBOutput_2 = new LimitBytesHelper_tDBOutput_2()
														.limitBytePart1(insertedCount_tDBOutput_2, pstmt_tDBOutput_2);
												rowsToCommitCount_tDBOutput_2 = insertedCount_tDBOutput_2;

												batchSizeCounter_tDBOutput_2 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_2++;
											if (commitEvery_tDBOutput_2 <= commitCounter_tDBOutput_2) {
												if ((batchSize_tDBOutput_2 > 0) && (batchSizeCounter_tDBOutput_2 > 0)) {

													insertedCount_tDBOutput_2 = new LimitBytesHelper_tDBOutput_2()
															.limitBytePart1(insertedCount_tDBOutput_2,
																	pstmt_tDBOutput_2);

													batchSizeCounter_tDBOutput_2 = 0;
												}
												if (rowsToCommitCount_tDBOutput_2 != 0) {

												}
												conn_tDBOutput_2.commit();
												if (rowsToCommitCount_tDBOutput_2 != 0) {

													rowsToCommitCount_tDBOutput_2 = 0;
												}
												commitCounter_tDBOutput_2 = 0;
											}

											tos_count_tDBOutput_2++;

											/**
											 * [tDBOutput_2 main ] stop
											 */

											/**
											 * [tDBOutput_2 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_2";

											/**
											 * [tDBOutput_2 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_2 process_data_end ] start
											 */

											currentComponent = "tDBOutput_2";

											/**
											 * [tDBOutput_2 process_data_end ] stop
											 */

										} // End of branch "row39"

										/**
										 * [tUniqRow_9 process_data_end ] start
										 */

										currentComponent = "tUniqRow_9";

										/**
										 * [tUniqRow_9 process_data_end ] stop
										 */

									} // End of branch "p"

									/**
									 * [tMap_9 process_data_end ] start
									 */

									currentComponent = "tMap_9";

									/**
									 * [tMap_9 process_data_end ] stop
									 */

									/**
									 * [tUnite_9 process_data_end ] start
									 */

									currentComponent = "tUnite_9";

									/**
									 * [tUnite_9 process_data_end ] stop
									 */

								} // End of branch "copyOfcopyOfcopyOft5"

								/**
								 * [tMap_29 process_data_end ] start
								 */

								currentComponent = "tMap_29";

								/**
								 * [tMap_29 process_data_end ] stop
								 */

							} // End of branch "row45"

							/**
							 * [tFileInputExcel_29 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_29";

							/**
							 * [tFileInputExcel_29 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_29 end ] start
							 */

							currentComponent = "tFileInputExcel_29";

						}

						globalMap.put("tFileInputExcel_29_NB_LINE", nb_line_tFileInputExcel_29);

					}

				} finally {

					if (!(source_tFileInputExcel_29 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_29.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_29", true);
				end_Hash.put("tFileInputExcel_29", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_29 end ] stop
				 */

				/**
				 * [tMap_29 end ] start
				 */

				currentComponent = "tMap_29";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row45");
				}

				ok_Hash.put("tMap_29", true);
				end_Hash.put("tMap_29", System.currentTimeMillis());

				/**
				 * [tMap_29 end ] stop
				 */

				/**
				 * [tMap_32 begin ] start
				 */

				ok_Hash.put("tMap_32", false);
				start_Hash.put("tMap_32", System.currentTimeMillis());

				currentComponent = "tMap_32";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row48");
				}

				int tos_count_tMap_32 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_32__Struct {
				}
				Var__tMap_32__Struct Var__tMap_32 = new Var__tMap_32__Struct();
// ###############################

// ###############################
// # Outputs initialization
				copyOfcopyOfcopyOft9Struct copyOfcopyOfcopyOft9_tmp = new copyOfcopyOfcopyOft9Struct();
// ###############################

				/**
				 * [tMap_32 begin ] stop
				 */

				/**
				 * [tFileInputExcel_32 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_32", false);
				start_Hash.put("tFileInputExcel_32", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_32";

				int tos_count_tFileInputExcel_32 = 0;

				final String decryptedPassword_tFileInputExcel_32 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:qykRsNSnC73U3zN5tVCuFo4beI3PGKoXFBWWsA==");
				String password_tFileInputExcel_32 = decryptedPassword_tFileInputExcel_32;
				if (password_tFileInputExcel_32.isEmpty()) {
					password_tFileInputExcel_32 = null;
				}
				class RegexUtil_tFileInputExcel_32 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_32 regexUtil_tFileInputExcel_32 = new RegexUtil_tFileInputExcel_32();

				Object source_tFileInputExcel_32 = "C:/Users/DELL/Downloads/suivi rdv slide test (Enregistré automatiquement) VF (1).xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_32 = null;

				if (source_tFileInputExcel_32 instanceof String) {
					workbook_tFileInputExcel_32 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_32), password_tFileInputExcel_32,
									true);
				} else if (source_tFileInputExcel_32 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_32 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_32, password_tFileInputExcel_32);
				} else {
					workbook_tFileInputExcel_32 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_32 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_32.addAll(regexUtil_tFileInputExcel_32
							.getSheets(workbook_tFileInputExcel_32, "{40AAA5D9-FC5C-EC11-80E1-005056", false));
					if (sheetList_tFileInputExcel_32.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_32 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_32 : sheetList_tFileInputExcel_32) {
						if (sheet_FilterNull_tFileInputExcel_32 != null
								&& sheetList_FilterNull_tFileInputExcel_32.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_32.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_32.add(sheet_FilterNull_tFileInputExcel_32);
						}
					}
					sheetList_tFileInputExcel_32 = sheetList_FilterNull_tFileInputExcel_32;
					if (sheetList_tFileInputExcel_32.size() > 0) {
						int nb_line_tFileInputExcel_32 = 0;

						int begin_line_tFileInputExcel_32 = 1;

						int footer_input_tFileInputExcel_32 = 0;

						int end_line_tFileInputExcel_32 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_32 : sheetList_tFileInputExcel_32) {
							end_line_tFileInputExcel_32 += (sheet_tFileInputExcel_32.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_32 -= footer_input_tFileInputExcel_32;
						int limit_tFileInputExcel_32 = -1;
						int start_column_tFileInputExcel_32 = 1 - 1;
						int end_column_tFileInputExcel_32 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_32 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_32 = sheetList_tFileInputExcel_32
								.get(0);
						int rowCount_tFileInputExcel_32 = 0;
						int sheetIndex_tFileInputExcel_32 = 0;
						int currentRows_tFileInputExcel_32 = (sheetList_tFileInputExcel_32.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_32 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_32 = df_tFileInputExcel_32.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_32 = begin_line_tFileInputExcel_32; i_tFileInputExcel_32 < end_line_tFileInputExcel_32; i_tFileInputExcel_32++) {

							int emptyColumnCount_tFileInputExcel_32 = 0;

							if (limit_tFileInputExcel_32 != -1
									&& nb_line_tFileInputExcel_32 >= limit_tFileInputExcel_32) {
								break;
							}

							while (i_tFileInputExcel_32 >= rowCount_tFileInputExcel_32
									+ currentRows_tFileInputExcel_32) {
								rowCount_tFileInputExcel_32 += currentRows_tFileInputExcel_32;
								sheet_tFileInputExcel_32 = sheetList_tFileInputExcel_32
										.get(++sheetIndex_tFileInputExcel_32);
								currentRows_tFileInputExcel_32 = (sheet_tFileInputExcel_32.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_32_CURRENT_SHEET", sheet_tFileInputExcel_32.getSheetName());
							if (rowCount_tFileInputExcel_32 <= i_tFileInputExcel_32) {
								row_tFileInputExcel_32 = sheet_tFileInputExcel_32
										.getRow(i_tFileInputExcel_32 - rowCount_tFileInputExcel_32);
							}
							row48 = null;
							int tempRowLength_tFileInputExcel_32 = 15;

							int columnIndex_tFileInputExcel_32 = 0;

							String[] temp_row_tFileInputExcel_32 = new String[tempRowLength_tFileInputExcel_32];
							int excel_end_column_tFileInputExcel_32;
							if (row_tFileInputExcel_32 == null) {
								excel_end_column_tFileInputExcel_32 = 0;
							} else {
								excel_end_column_tFileInputExcel_32 = row_tFileInputExcel_32.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_32;
							if (end_column_tFileInputExcel_32 == -1) {
								actual_end_column_tFileInputExcel_32 = excel_end_column_tFileInputExcel_32;
							} else {
								actual_end_column_tFileInputExcel_32 = end_column_tFileInputExcel_32 > excel_end_column_tFileInputExcel_32
										? excel_end_column_tFileInputExcel_32
										: end_column_tFileInputExcel_32;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_32 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_32; i++) {
								if (i + start_column_tFileInputExcel_32 < actual_end_column_tFileInputExcel_32) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_32 = row_tFileInputExcel_32
											.getCell(i + start_column_tFileInputExcel_32);
									if (cell_tFileInputExcel_32 != null) {
										switch (cell_tFileInputExcel_32.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_32[i] = cell_tFileInputExcel_32
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_32)) {
												temp_row_tFileInputExcel_32[i] = cell_tFileInputExcel_32
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_32[i] = df_tFileInputExcel_32
														.format(cell_tFileInputExcel_32.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_32[i] = String
													.valueOf(cell_tFileInputExcel_32.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_32.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_32[i] = cell_tFileInputExcel_32
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_32)) {
													temp_row_tFileInputExcel_32[i] = cell_tFileInputExcel_32
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_32 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_32.getNumericCellValue());
													temp_row_tFileInputExcel_32[i] = ne_tFileInputExcel_32
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_32[i] = String
														.valueOf(cell_tFileInputExcel_32.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_32[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_32[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_32[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_32[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_32 = false;
							row48 = new row48Struct();
							int curColNum_tFileInputExcel_32 = -1;
							String curColName_tFileInputExcel_32 = "";
							try {
								columnIndex_tFileInputExcel_32 = 0;

								if (temp_row_tFileInputExcel_32[columnIndex_tFileInputExcel_32].length() > 0) {
									curColNum_tFileInputExcel_32 = columnIndex_tFileInputExcel_32
											+ start_column_tFileInputExcel_32 + 1;
									curColName_tFileInputExcel_32 = "Sujet";

									row48.Sujet = temp_row_tFileInputExcel_32[columnIndex_tFileInputExcel_32];
								} else {
									row48.Sujet = null;
									emptyColumnCount_tFileInputExcel_32++;
								}
								columnIndex_tFileInputExcel_32 = 1;

								if (temp_row_tFileInputExcel_32[columnIndex_tFileInputExcel_32].length() > 0) {
									curColNum_tFileInputExcel_32 = columnIndex_tFileInputExcel_32
											+ start_column_tFileInputExcel_32 + 1;
									curColName_tFileInputExcel_32 = "Cree_le";

									if (1 < actual_end_column_tFileInputExcel_32) {
										try {
											if (row_tFileInputExcel_32
													.getCell(columnIndex_tFileInputExcel_32
															+ start_column_tFileInputExcel_32)
													.getCellType() == org.apache.poi.ss.usermodel.CellType.NUMERIC
													&& org.apache.poi.ss.usermodel.DateUtil
															.isCellDateFormatted(row_tFileInputExcel_32
																	.getCell(columnIndex_tFileInputExcel_32
																			+ start_column_tFileInputExcel_32))) {
												row48.Cree_le = row_tFileInputExcel_32
														.getCell(columnIndex_tFileInputExcel_32
																+ start_column_tFileInputExcel_32)
														.getDateCellValue();
											} else {
												java.util.Date tempDate_tFileInputExcel_32 = ParserUtils.parseTo_Date(
														temp_row_tFileInputExcel_32[columnIndex_tFileInputExcel_32],
														"dd-MM-yyyy");
												if (tempDate_tFileInputExcel_32
														.after((new SimpleDateFormat("yyyy/MM/dd hh:mm:ss.SSS"))
																.parse("9999/12/31 23:59:59.999"))
														|| tempDate_tFileInputExcel_32
																.before((new SimpleDateFormat("yyyy/MM/dd"))
																		.parse("1900/01/01"))) {
													throw new RuntimeException("The cell format is not Date in ( Row. "
															+ (nb_line_tFileInputExcel_32 + 1) + " and ColumnNum. "
															+ curColNum_tFileInputExcel_32 + " )");
												} else {
													row48.Cree_le = tempDate_tFileInputExcel_32;
												}
											}
										} catch (java.lang.Exception e) {
											globalMap.put("tFileInputExcel_32_ERROR_MESSAGE", e.getMessage());

											throw new RuntimeException("The cell format is not Date in ( Row. "
													+ (nb_line_tFileInputExcel_32 + 1) + " and ColumnNum. "
													+ curColNum_tFileInputExcel_32 + " )");
										}
									}

								} else {
									row48.Cree_le = null;
									emptyColumnCount_tFileInputExcel_32++;
								}
								columnIndex_tFileInputExcel_32 = 2;

								if (temp_row_tFileInputExcel_32[columnIndex_tFileInputExcel_32].length() > 0) {
									curColNum_tFileInputExcel_32 = columnIndex_tFileInputExcel_32
											+ start_column_tFileInputExcel_32 + 1;
									curColName_tFileInputExcel_32 = "Concernant";

									row48.Concernant = temp_row_tFileInputExcel_32[columnIndex_tFileInputExcel_32];
								} else {
									row48.Concernant = null;
									emptyColumnCount_tFileInputExcel_32++;
								}
								columnIndex_tFileInputExcel_32 = 3;

								if (temp_row_tFileInputExcel_32[columnIndex_tFileInputExcel_32].length() > 0) {
									curColNum_tFileInputExcel_32 = columnIndex_tFileInputExcel_32
											+ start_column_tFileInputExcel_32 + 1;
									curColName_tFileInputExcel_32 = "Cree_par";

									row48.Cree_par = temp_row_tFileInputExcel_32[columnIndex_tFileInputExcel_32];
								} else {
									row48.Cree_par = null;
									emptyColumnCount_tFileInputExcel_32++;
								}
								columnIndex_tFileInputExcel_32 = 4;

								if (temp_row_tFileInputExcel_32[columnIndex_tFileInputExcel_32].length() > 0) {
									curColNum_tFileInputExcel_32 = columnIndex_tFileInputExcel_32
											+ start_column_tFileInputExcel_32 + 1;
									curColName_tFileInputExcel_32 = "Equipe";

									row48.Equipe = temp_row_tFileInputExcel_32[columnIndex_tFileInputExcel_32];
								} else {
									row48.Equipe = null;
									emptyColumnCount_tFileInputExcel_32++;
								}
								columnIndex_tFileInputExcel_32 = 5;

								if (temp_row_tFileInputExcel_32[columnIndex_tFileInputExcel_32].length() > 0) {
									curColNum_tFileInputExcel_32 = columnIndex_tFileInputExcel_32
											+ start_column_tFileInputExcel_32 + 1;
									curColName_tFileInputExcel_32 = "Emplacement";

									row48.Emplacement = temp_row_tFileInputExcel_32[columnIndex_tFileInputExcel_32];
								} else {
									row48.Emplacement = null;
									emptyColumnCount_tFileInputExcel_32++;
								}
								columnIndex_tFileInputExcel_32 = 6;

								if (temp_row_tFileInputExcel_32[columnIndex_tFileInputExcel_32].length() > 0) {
									curColNum_tFileInputExcel_32 = columnIndex_tFileInputExcel_32
											+ start_column_tFileInputExcel_32 + 1;
									curColName_tFileInputExcel_32 = "Heure_de_debut";

									if (6 < actual_end_column_tFileInputExcel_32) {
										try {
											if (row_tFileInputExcel_32
													.getCell(columnIndex_tFileInputExcel_32
															+ start_column_tFileInputExcel_32)
													.getCellType() == org.apache.poi.ss.usermodel.CellType.NUMERIC
													&& org.apache.poi.ss.usermodel.DateUtil
															.isCellDateFormatted(row_tFileInputExcel_32
																	.getCell(columnIndex_tFileInputExcel_32
																			+ start_column_tFileInputExcel_32))) {
												row48.Heure_de_debut = row_tFileInputExcel_32
														.getCell(columnIndex_tFileInputExcel_32
																+ start_column_tFileInputExcel_32)
														.getDateCellValue();
											} else {
												java.util.Date tempDate_tFileInputExcel_32 = ParserUtils.parseTo_Date(
														temp_row_tFileInputExcel_32[columnIndex_tFileInputExcel_32],
														"yyyy-MM-dd HH:mm:ss");
												if (tempDate_tFileInputExcel_32
														.after((new SimpleDateFormat("yyyy/MM/dd hh:mm:ss.SSS"))
																.parse("9999/12/31 23:59:59.999"))
														|| tempDate_tFileInputExcel_32
																.before((new SimpleDateFormat("yyyy/MM/dd"))
																		.parse("1900/01/01"))) {
													throw new RuntimeException("The cell format is not Date in ( Row. "
															+ (nb_line_tFileInputExcel_32 + 1) + " and ColumnNum. "
															+ curColNum_tFileInputExcel_32 + " )");
												} else {
													row48.Heure_de_debut = tempDate_tFileInputExcel_32;
												}
											}
										} catch (java.lang.Exception e) {
											globalMap.put("tFileInputExcel_32_ERROR_MESSAGE", e.getMessage());

											throw new RuntimeException("The cell format is not Date in ( Row. "
													+ (nb_line_tFileInputExcel_32 + 1) + " and ColumnNum. "
													+ curColNum_tFileInputExcel_32 + " )");
										}
									}

								} else {
									row48.Heure_de_debut = null;
									emptyColumnCount_tFileInputExcel_32++;
								}
								columnIndex_tFileInputExcel_32 = 7;

								if (temp_row_tFileInputExcel_32[columnIndex_tFileInputExcel_32].length() > 0) {
									curColNum_tFileInputExcel_32 = columnIndex_tFileInputExcel_32
											+ start_column_tFileInputExcel_32 + 1;
									curColName_tFileInputExcel_32 = "Heure_de_fin";

									row48.Heure_de_fin = temp_row_tFileInputExcel_32[columnIndex_tFileInputExcel_32];
								} else {
									row48.Heure_de_fin = null;
									emptyColumnCount_tFileInputExcel_32++;
								}
								columnIndex_tFileInputExcel_32 = 8;

								if (temp_row_tFileInputExcel_32[columnIndex_tFileInputExcel_32].length() > 0) {
									curColNum_tFileInputExcel_32 = columnIndex_tFileInputExcel_32
											+ start_column_tFileInputExcel_32 + 1;
									curColName_tFileInputExcel_32 = "Statut";

									row48.Statut = temp_row_tFileInputExcel_32[columnIndex_tFileInputExcel_32];
								} else {
									row48.Statut = null;
									emptyColumnCount_tFileInputExcel_32++;
								}
								columnIndex_tFileInputExcel_32 = 9;

								if (temp_row_tFileInputExcel_32[columnIndex_tFileInputExcel_32].length() > 0) {
									curColNum_tFileInputExcel_32 = columnIndex_tFileInputExcel_32
											+ start_column_tFileInputExcel_32 + 1;
									curColName_tFileInputExcel_32 = "Raison_sociale__Concernant";

									row48.Raison_sociale__Concernant = temp_row_tFileInputExcel_32[columnIndex_tFileInputExcel_32];
								} else {
									row48.Raison_sociale__Concernant = null;
									emptyColumnCount_tFileInputExcel_32++;
								}
								columnIndex_tFileInputExcel_32 = 10;

								if (temp_row_tFileInputExcel_32[columnIndex_tFileInputExcel_32].length() > 0) {
									curColNum_tFileInputExcel_32 = columnIndex_tFileInputExcel_32
											+ start_column_tFileInputExcel_32 + 1;
									curColName_tFileInputExcel_32 = "Delegation__Concernant";

									row48.Delegation__Concernant = temp_row_tFileInputExcel_32[columnIndex_tFileInputExcel_32];
								} else {
									row48.Delegation__Concernant = null;
									emptyColumnCount_tFileInputExcel_32++;
								}
								columnIndex_tFileInputExcel_32 = 11;

								if (temp_row_tFileInputExcel_32[columnIndex_tFileInputExcel_32].length() > 0) {
									curColNum_tFileInputExcel_32 = columnIndex_tFileInputExcel_32
											+ start_column_tFileInputExcel_32 + 1;
									curColName_tFileInputExcel_32 = "Gouvernorat__Concernant";

									row48.Gouvernorat__Concernant = temp_row_tFileInputExcel_32[columnIndex_tFileInputExcel_32];
								} else {
									row48.Gouvernorat__Concernant = null;
									emptyColumnCount_tFileInputExcel_32++;
								}
								columnIndex_tFileInputExcel_32 = 12;

								if (temp_row_tFileInputExcel_32[columnIndex_tFileInputExcel_32].length() > 0) {
									curColNum_tFileInputExcel_32 = columnIndex_tFileInputExcel_32
											+ start_column_tFileInputExcel_32 + 1;
									curColName_tFileInputExcel_32 = "Jour_de_la_semaine";

									row48.Jour_de_la_semaine = temp_row_tFileInputExcel_32[columnIndex_tFileInputExcel_32];
								} else {
									row48.Jour_de_la_semaine = null;
									emptyColumnCount_tFileInputExcel_32++;
								}
								columnIndex_tFileInputExcel_32 = 13;

								if (temp_row_tFileInputExcel_32[columnIndex_tFileInputExcel_32].length() > 0) {
									curColNum_tFileInputExcel_32 = columnIndex_tFileInputExcel_32
											+ start_column_tFileInputExcel_32 + 1;
									curColName_tFileInputExcel_32 = "Description";

									row48.Description = temp_row_tFileInputExcel_32[columnIndex_tFileInputExcel_32];
								} else {
									row48.Description = null;
									emptyColumnCount_tFileInputExcel_32++;
								}
								columnIndex_tFileInputExcel_32 = 14;

								if (temp_row_tFileInputExcel_32[columnIndex_tFileInputExcel_32].length() > 0) {
									curColNum_tFileInputExcel_32 = columnIndex_tFileInputExcel_32
											+ start_column_tFileInputExcel_32 + 1;
									curColName_tFileInputExcel_32 = "Categorie";

									row48.Categorie = temp_row_tFileInputExcel_32[columnIndex_tFileInputExcel_32];
								} else {
									row48.Categorie = null;
									emptyColumnCount_tFileInputExcel_32++;
								}

								nb_line_tFileInputExcel_32++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_32_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_32 = true;
								System.err.println(e.getMessage());
								row48 = null;
							}

							/**
							 * [tFileInputExcel_32 begin ] stop
							 */

							/**
							 * [tFileInputExcel_32 main ] start
							 */

							currentComponent = "tFileInputExcel_32";

							tos_count_tFileInputExcel_32++;

							/**
							 * [tFileInputExcel_32 main ] stop
							 */

							/**
							 * [tFileInputExcel_32 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_32";

							/**
							 * [tFileInputExcel_32 process_data_begin ] stop
							 */
// Start of branch "row48"
							if (row48 != null) {

								/**
								 * [tMap_32 main ] start
								 */

								currentComponent = "tMap_32";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row48"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_32 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_32 = false;
								boolean mainRowRejected_tMap_32 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_32__Struct Var = Var__tMap_32;// ###############################
									// ###############################
									// # Output tables

									copyOfcopyOfcopyOft9 = null;

// # Output table : 'copyOfcopyOfcopyOft9'
									copyOfcopyOfcopyOft9_tmp.Equipe = StringHandling.CHANGE(row48.Equipe,
											"Fidélisation", "FID");
									copyOfcopyOfcopyOft9 = copyOfcopyOfcopyOft9_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_32 = false;

								tos_count_tMap_32++;

								/**
								 * [tMap_32 main ] stop
								 */

								/**
								 * [tMap_32 process_data_begin ] start
								 */

								currentComponent = "tMap_32";

								/**
								 * [tMap_32 process_data_begin ] stop
								 */
// Start of branch "copyOfcopyOfcopyOft9"
								if (copyOfcopyOfcopyOft9 != null) {

									/**
									 * [tUnite_9 main ] start
									 */

									currentComponent = "tUnite_9";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "copyOfcopyOfcopyOft9"

										);
									}

//////////

// for output
									row49 = new row49Struct();

									row49.Equipe = copyOfcopyOfcopyOft9.Equipe;

									nb_line_tUnite_9++;

//////////

									tos_count_tUnite_9++;

									/**
									 * [tUnite_9 main ] stop
									 */

									/**
									 * [tUnite_9 process_data_begin ] start
									 */

									currentComponent = "tUnite_9";

									/**
									 * [tUnite_9 process_data_begin ] stop
									 */

									/**
									 * [tMap_9 main ] start
									 */

									currentComponent = "tMap_9";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "row49"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_9 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_9 = false;
									boolean mainRowRejected_tMap_9 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row50"
									///////////////////////////////////////////////

									boolean forceLooprow50 = false;

									row50Struct row50ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_9) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_9 = false;

										row50HashKey.Equipe = row49.Equipe;

										row50HashKey.hashCodeDirty = true;

										tHash_Lookup_row50.lookup(row50HashKey);

										if (!tHash_Lookup_row50.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_9 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row50 != null && tHash_Lookup_row50.getCount(row50HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row50' and it contains more one result from keys : row50.Equipe = '" +
										// row50HashKey.Equipe + "'");
									} // G 071

									row50Struct row50 = null;

									row50Struct fromLookup_row50 = null;
									row50 = row50Default;

									if (tHash_Lookup_row50 != null && tHash_Lookup_row50.hasNext()) { // G 099

										fromLookup_row50 = tHash_Lookup_row50.next();

									} // G 099

									if (fromLookup_row50 != null) {
										row50 = fromLookup_row50;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_9__Struct Var = Var__tMap_9;// ###############################
										// ###############################
										// # Output tables

										p = null;

										if (!rejectedInnerJoin_tMap_9) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'p'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_9) {
											p_tmp.Equipe = row49.Equipe;
											p = p_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_9 = false;

									tos_count_tMap_9++;

									/**
									 * [tMap_9 main ] stop
									 */

									/**
									 * [tMap_9 process_data_begin ] start
									 */

									currentComponent = "tMap_9";

									/**
									 * [tMap_9 process_data_begin ] stop
									 */
// Start of branch "p"
									if (p != null) {

										/**
										 * [tUniqRow_9 main ] start
										 */

										currentComponent = "tUniqRow_9";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "p"

											);
										}

										row39 = null;
										finder_tUniqRow_9.Equipe = p.Equipe;
										finder_tUniqRow_9.hashCodeDirty = true;
										if (!keystUniqRow_9.contains(finder_tUniqRow_9)) {
											KeyStruct_tUniqRow_9 new_tUniqRow_9 = new KeyStruct_tUniqRow_9();

											new_tUniqRow_9.Equipe = p.Equipe;

											keystUniqRow_9.add(new_tUniqRow_9);
											if (row39 == null) {

												row39 = new row39Struct();
											}
											row39.Equipe = p.Equipe;
											nb_uniques_tUniqRow_9++;
										} else {
											nb_duplicates_tUniqRow_9++;
										}

										tos_count_tUniqRow_9++;

										/**
										 * [tUniqRow_9 main ] stop
										 */

										/**
										 * [tUniqRow_9 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_9";

										/**
										 * [tUniqRow_9 process_data_begin ] stop
										 */
// Start of branch "row39"
										if (row39 != null) {

											/**
											 * [tDBOutput_2 main ] start
											 */

											currentComponent = "tDBOutput_2";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row39"

												);
											}

											whetherReject_tDBOutput_2 = false;
											if (row39.Equipe == null) {
												pstmt_tDBOutput_2.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_2.setString(1, row39.Equipe);
											}

											pstmt_tDBOutput_2.addBatch();
											nb_line_tDBOutput_2++;

											batchSizeCounter_tDBOutput_2++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_2 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_2) throws Exception {
													try {

														for (int countEach_tDBOutput_2 : pstmt_tDBOutput_2
																.executeBatch()) {
															if (countEach_tDBOutput_2 == -2
																	|| countEach_tDBOutput_2 == -3) {
																break;
															}
															counter += countEach_tDBOutput_2;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_2_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_2 = 0;
														for (int countEach_tDBOutput_2 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_2 < 0 ? 0
																	: countEach_tDBOutput_2);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_2) throws Exception {
													try {

														for (int countEach_tDBOutput_2 : pstmt_tDBOutput_2
																.executeBatch()) {
															if (countEach_tDBOutput_2 == -2
																	|| countEach_tDBOutput_2 == -3) {
																break;
															}
															counter += countEach_tDBOutput_2;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_2_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_2 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_2 < 0 ? 0
																	: countEach_tDBOutput_2);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_2 > 0)
													&& (batchSize_tDBOutput_2 <= batchSizeCounter_tDBOutput_2)) {

												insertedCount_tDBOutput_2 = new LimitBytesHelper_tDBOutput_2()
														.limitBytePart1(insertedCount_tDBOutput_2, pstmt_tDBOutput_2);
												rowsToCommitCount_tDBOutput_2 = insertedCount_tDBOutput_2;

												batchSizeCounter_tDBOutput_2 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_2++;
											if (commitEvery_tDBOutput_2 <= commitCounter_tDBOutput_2) {
												if ((batchSize_tDBOutput_2 > 0) && (batchSizeCounter_tDBOutput_2 > 0)) {

													insertedCount_tDBOutput_2 = new LimitBytesHelper_tDBOutput_2()
															.limitBytePart1(insertedCount_tDBOutput_2,
																	pstmt_tDBOutput_2);

													batchSizeCounter_tDBOutput_2 = 0;
												}
												if (rowsToCommitCount_tDBOutput_2 != 0) {

												}
												conn_tDBOutput_2.commit();
												if (rowsToCommitCount_tDBOutput_2 != 0) {

													rowsToCommitCount_tDBOutput_2 = 0;
												}
												commitCounter_tDBOutput_2 = 0;
											}

											tos_count_tDBOutput_2++;

											/**
											 * [tDBOutput_2 main ] stop
											 */

											/**
											 * [tDBOutput_2 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_2";

											/**
											 * [tDBOutput_2 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_2 process_data_end ] start
											 */

											currentComponent = "tDBOutput_2";

											/**
											 * [tDBOutput_2 process_data_end ] stop
											 */

										} // End of branch "row39"

										/**
										 * [tUniqRow_9 process_data_end ] start
										 */

										currentComponent = "tUniqRow_9";

										/**
										 * [tUniqRow_9 process_data_end ] stop
										 */

									} // End of branch "p"

									/**
									 * [tMap_9 process_data_end ] start
									 */

									currentComponent = "tMap_9";

									/**
									 * [tMap_9 process_data_end ] stop
									 */

									/**
									 * [tUnite_9 process_data_end ] start
									 */

									currentComponent = "tUnite_9";

									/**
									 * [tUnite_9 process_data_end ] stop
									 */

								} // End of branch "copyOfcopyOfcopyOft9"

								/**
								 * [tMap_32 process_data_end ] start
								 */

								currentComponent = "tMap_32";

								/**
								 * [tMap_32 process_data_end ] stop
								 */

							} // End of branch "row48"

							/**
							 * [tFileInputExcel_32 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_32";

							/**
							 * [tFileInputExcel_32 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_32 end ] start
							 */

							currentComponent = "tFileInputExcel_32";

						}

						globalMap.put("tFileInputExcel_32_NB_LINE", nb_line_tFileInputExcel_32);

					}

				} finally {

					if (!(source_tFileInputExcel_32 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_32.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_32", true);
				end_Hash.put("tFileInputExcel_32", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_32 end ] stop
				 */

				/**
				 * [tMap_32 end ] start
				 */

				currentComponent = "tMap_32";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row48");
				}

				ok_Hash.put("tMap_32", true);
				end_Hash.put("tMap_32", System.currentTimeMillis());

				/**
				 * [tMap_32 end ] stop
				 */

				/**
				 * [tMap_30 begin ] start
				 */

				ok_Hash.put("tMap_30", false);
				start_Hash.put("tMap_30", System.currentTimeMillis());

				currentComponent = "tMap_30";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row46");
				}

				int tos_count_tMap_30 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_30__Struct {
				}
				Var__tMap_30__Struct Var__tMap_30 = new Var__tMap_30__Struct();
// ###############################

// ###############################
// # Outputs initialization
				copyOfcopyOfcopyOft8Struct copyOfcopyOfcopyOft8_tmp = new copyOfcopyOfcopyOft8Struct();
// ###############################

				/**
				 * [tMap_30 begin ] stop
				 */

				/**
				 * [tFileInputExcel_30 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_30", false);
				start_Hash.put("tFileInputExcel_30", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_30";

				int tos_count_tFileInputExcel_30 = 0;

				final String decryptedPassword_tFileInputExcel_30 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:0pV4eGcm+MYa0/egVzzKIWnMQYD1OMHePw0qDA==");
				String password_tFileInputExcel_30 = decryptedPassword_tFileInputExcel_30;
				if (password_tFileInputExcel_30.isEmpty()) {
					password_tFileInputExcel_30 = null;
				}
				class RegexUtil_tFileInputExcel_30 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_30 regexUtil_tFileInputExcel_30 = new RegexUtil_tFileInputExcel_30();

				Object source_tFileInputExcel_30 = "C:/Users/DELL/Downloads/parc facturé Mars 2022 (1).xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_30 = null;

				if (source_tFileInputExcel_30 instanceof String) {
					workbook_tFileInputExcel_30 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_30), password_tFileInputExcel_30,
									true);
				} else if (source_tFileInputExcel_30 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_30 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_30, password_tFileInputExcel_30);
				} else {
					workbook_tFileInputExcel_30 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_30 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_30.addAll(
							regexUtil_tFileInputExcel_30.getSheets(workbook_tFileInputExcel_30, "Suspension", false));
					if (sheetList_tFileInputExcel_30.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_30 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_30 : sheetList_tFileInputExcel_30) {
						if (sheet_FilterNull_tFileInputExcel_30 != null
								&& sheetList_FilterNull_tFileInputExcel_30.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_30.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_30.add(sheet_FilterNull_tFileInputExcel_30);
						}
					}
					sheetList_tFileInputExcel_30 = sheetList_FilterNull_tFileInputExcel_30;
					if (sheetList_tFileInputExcel_30.size() > 0) {
						int nb_line_tFileInputExcel_30 = 0;

						int begin_line_tFileInputExcel_30 = 1;

						int footer_input_tFileInputExcel_30 = 0;

						int end_line_tFileInputExcel_30 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_30 : sheetList_tFileInputExcel_30) {
							end_line_tFileInputExcel_30 += (sheet_tFileInputExcel_30.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_30 -= footer_input_tFileInputExcel_30;
						int limit_tFileInputExcel_30 = -1;
						int start_column_tFileInputExcel_30 = 1 - 1;
						int end_column_tFileInputExcel_30 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_30 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_30 = sheetList_tFileInputExcel_30
								.get(0);
						int rowCount_tFileInputExcel_30 = 0;
						int sheetIndex_tFileInputExcel_30 = 0;
						int currentRows_tFileInputExcel_30 = (sheetList_tFileInputExcel_30.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_30 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_30 = df_tFileInputExcel_30.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_30 = begin_line_tFileInputExcel_30; i_tFileInputExcel_30 < end_line_tFileInputExcel_30; i_tFileInputExcel_30++) {

							int emptyColumnCount_tFileInputExcel_30 = 0;

							if (limit_tFileInputExcel_30 != -1
									&& nb_line_tFileInputExcel_30 >= limit_tFileInputExcel_30) {
								break;
							}

							while (i_tFileInputExcel_30 >= rowCount_tFileInputExcel_30
									+ currentRows_tFileInputExcel_30) {
								rowCount_tFileInputExcel_30 += currentRows_tFileInputExcel_30;
								sheet_tFileInputExcel_30 = sheetList_tFileInputExcel_30
										.get(++sheetIndex_tFileInputExcel_30);
								currentRows_tFileInputExcel_30 = (sheet_tFileInputExcel_30.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_30_CURRENT_SHEET", sheet_tFileInputExcel_30.getSheetName());
							if (rowCount_tFileInputExcel_30 <= i_tFileInputExcel_30) {
								row_tFileInputExcel_30 = sheet_tFileInputExcel_30
										.getRow(i_tFileInputExcel_30 - rowCount_tFileInputExcel_30);
							}
							row46 = null;
							int tempRowLength_tFileInputExcel_30 = 11;

							int columnIndex_tFileInputExcel_30 = 0;

							String[] temp_row_tFileInputExcel_30 = new String[tempRowLength_tFileInputExcel_30];
							int excel_end_column_tFileInputExcel_30;
							if (row_tFileInputExcel_30 == null) {
								excel_end_column_tFileInputExcel_30 = 0;
							} else {
								excel_end_column_tFileInputExcel_30 = row_tFileInputExcel_30.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_30;
							if (end_column_tFileInputExcel_30 == -1) {
								actual_end_column_tFileInputExcel_30 = excel_end_column_tFileInputExcel_30;
							} else {
								actual_end_column_tFileInputExcel_30 = end_column_tFileInputExcel_30 > excel_end_column_tFileInputExcel_30
										? excel_end_column_tFileInputExcel_30
										: end_column_tFileInputExcel_30;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_30 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_30; i++) {
								if (i + start_column_tFileInputExcel_30 < actual_end_column_tFileInputExcel_30) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_30 = row_tFileInputExcel_30
											.getCell(i + start_column_tFileInputExcel_30);
									if (cell_tFileInputExcel_30 != null) {
										switch (cell_tFileInputExcel_30.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_30[i] = cell_tFileInputExcel_30
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_30)) {
												temp_row_tFileInputExcel_30[i] = cell_tFileInputExcel_30
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_30[i] = df_tFileInputExcel_30
														.format(cell_tFileInputExcel_30.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_30[i] = String
													.valueOf(cell_tFileInputExcel_30.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_30.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_30[i] = cell_tFileInputExcel_30
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_30)) {
													temp_row_tFileInputExcel_30[i] = cell_tFileInputExcel_30
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_30 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_30.getNumericCellValue());
													temp_row_tFileInputExcel_30[i] = ne_tFileInputExcel_30
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_30[i] = String
														.valueOf(cell_tFileInputExcel_30.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_30[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_30[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_30[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_30[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_30 = false;
							row46 = new row46Struct();
							int curColNum_tFileInputExcel_30 = -1;
							String curColName_tFileInputExcel_30 = "";
							try {
								columnIndex_tFileInputExcel_30 = 0;

								if (temp_row_tFileInputExcel_30[columnIndex_tFileInputExcel_30].length() > 0) {
									curColNum_tFileInputExcel_30 = columnIndex_tFileInputExcel_30
											+ start_column_tFileInputExcel_30 + 1;
									curColName_tFileInputExcel_30 = "Custcode";

									row46.Custcode = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_30[columnIndex_tFileInputExcel_30], null,
											'.' == decimalChar_tFileInputExcel_30 ? null
													: decimalChar_tFileInputExcel_30));
								} else {
									row46.Custcode = null;
									emptyColumnCount_tFileInputExcel_30++;
								}
								columnIndex_tFileInputExcel_30 = 1;

								if (temp_row_tFileInputExcel_30[columnIndex_tFileInputExcel_30].length() > 0) {
									curColNum_tFileInputExcel_30 = columnIndex_tFileInputExcel_30
											+ start_column_tFileInputExcel_30 + 1;
									curColName_tFileInputExcel_30 = "Raison_Sociale";

									row46.Raison_Sociale = temp_row_tFileInputExcel_30[columnIndex_tFileInputExcel_30];
								} else {
									row46.Raison_Sociale = null;
									emptyColumnCount_tFileInputExcel_30++;
								}
								columnIndex_tFileInputExcel_30 = 2;

								if (temp_row_tFileInputExcel_30[columnIndex_tFileInputExcel_30].length() > 0) {
									curColNum_tFileInputExcel_30 = columnIndex_tFileInputExcel_30
											+ start_column_tFileInputExcel_30 + 1;
									curColName_tFileInputExcel_30 = "Groupe_Client";

									row46.Groupe_Client = temp_row_tFileInputExcel_30[columnIndex_tFileInputExcel_30];
								} else {
									row46.Groupe_Client = null;
									emptyColumnCount_tFileInputExcel_30++;
								}
								columnIndex_tFileInputExcel_30 = 3;

								if (temp_row_tFileInputExcel_30[columnIndex_tFileInputExcel_30].length() > 0) {
									curColNum_tFileInputExcel_30 = columnIndex_tFileInputExcel_30
											+ start_column_tFileInputExcel_30 + 1;
									curColName_tFileInputExcel_30 = "Account_Manager";

									row46.Account_Manager = temp_row_tFileInputExcel_30[columnIndex_tFileInputExcel_30];
								} else {
									row46.Account_Manager = null;
									emptyColumnCount_tFileInputExcel_30++;
								}
								columnIndex_tFileInputExcel_30 = 4;

								if (temp_row_tFileInputExcel_30[columnIndex_tFileInputExcel_30].length() > 0) {
									curColNum_tFileInputExcel_30 = columnIndex_tFileInputExcel_30
											+ start_column_tFileInputExcel_30 + 1;
									curColName_tFileInputExcel_30 = "Equipe";

									row46.Equipe = temp_row_tFileInputExcel_30[columnIndex_tFileInputExcel_30];
								} else {
									row46.Equipe = null;
									emptyColumnCount_tFileInputExcel_30++;
								}
								columnIndex_tFileInputExcel_30 = 5;

								if (temp_row_tFileInputExcel_30[columnIndex_tFileInputExcel_30].length() > 0) {
									curColNum_tFileInputExcel_30 = columnIndex_tFileInputExcel_30
											+ start_column_tFileInputExcel_30 + 1;
									curColName_tFileInputExcel_30 = "Somme_de_Suspension";

									row46.Somme_de_Suspension = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_30[columnIndex_tFileInputExcel_30], null,
											'.' == decimalChar_tFileInputExcel_30 ? null
													: decimalChar_tFileInputExcel_30));
								} else {
									row46.Somme_de_Suspension = null;
									emptyColumnCount_tFileInputExcel_30++;
								}
								columnIndex_tFileInputExcel_30 = 6;

								if (temp_row_tFileInputExcel_30[columnIndex_tFileInputExcel_30].length() > 0) {
									curColNum_tFileInputExcel_30 = columnIndex_tFileInputExcel_30
											+ start_column_tFileInputExcel_30 + 1;
									curColName_tFileInputExcel_30 = "Type_de_suspension";

									row46.Type_de_suspension = temp_row_tFileInputExcel_30[columnIndex_tFileInputExcel_30];
								} else {
									row46.Type_de_suspension = null;
									emptyColumnCount_tFileInputExcel_30++;
								}
								columnIndex_tFileInputExcel_30 = 7;

								if (temp_row_tFileInputExcel_30[columnIndex_tFileInputExcel_30].length() > 0) {
									curColNum_tFileInputExcel_30 = columnIndex_tFileInputExcel_30
											+ start_column_tFileInputExcel_30 + 1;
									curColName_tFileInputExcel_30 = "Motif";

									row46.Motif = temp_row_tFileInputExcel_30[columnIndex_tFileInputExcel_30];
								} else {
									row46.Motif = null;
									emptyColumnCount_tFileInputExcel_30++;
								}
								columnIndex_tFileInputExcel_30 = 8;

								if (temp_row_tFileInputExcel_30[columnIndex_tFileInputExcel_30].length() > 0) {
									curColNum_tFileInputExcel_30 = columnIndex_tFileInputExcel_30
											+ start_column_tFileInputExcel_30 + 1;
									curColName_tFileInputExcel_30 = "DFE";

									row46.DFE = temp_row_tFileInputExcel_30[columnIndex_tFileInputExcel_30];
								} else {
									row46.DFE = null;
									emptyColumnCount_tFileInputExcel_30++;
								}
								columnIndex_tFileInputExcel_30 = 9;

								if (temp_row_tFileInputExcel_30[columnIndex_tFileInputExcel_30].length() > 0) {
									curColNum_tFileInputExcel_30 = columnIndex_tFileInputExcel_30
											+ start_column_tFileInputExcel_30 + 1;
									curColName_tFileInputExcel_30 = "Engage_Oui_Non";

									row46.Engage_Oui_Non = temp_row_tFileInputExcel_30[columnIndex_tFileInputExcel_30];
								} else {
									row46.Engage_Oui_Non = null;
									emptyColumnCount_tFileInputExcel_30++;
								}
								columnIndex_tFileInputExcel_30 = 10;

								if (temp_row_tFileInputExcel_30[columnIndex_tFileInputExcel_30].length() > 0) {
									curColNum_tFileInputExcel_30 = columnIndex_tFileInputExcel_30
											+ start_column_tFileInputExcel_30 + 1;
									curColName_tFileInputExcel_30 = "Date_Depot";

									if (10 < actual_end_column_tFileInputExcel_30) {
										try {
											if (row_tFileInputExcel_30
													.getCell(columnIndex_tFileInputExcel_30
															+ start_column_tFileInputExcel_30)
													.getCellType() == org.apache.poi.ss.usermodel.CellType.NUMERIC
													&& org.apache.poi.ss.usermodel.DateUtil
															.isCellDateFormatted(row_tFileInputExcel_30
																	.getCell(columnIndex_tFileInputExcel_30
																			+ start_column_tFileInputExcel_30))) {
												row46.Date_Depot = row_tFileInputExcel_30
														.getCell(columnIndex_tFileInputExcel_30
																+ start_column_tFileInputExcel_30)
														.getDateCellValue();
											} else {
												java.util.Date tempDate_tFileInputExcel_30 = ParserUtils.parseTo_Date(
														temp_row_tFileInputExcel_30[columnIndex_tFileInputExcel_30],
														"yyyy-MM-dd HH:mm:ss");
												if (tempDate_tFileInputExcel_30
														.after((new SimpleDateFormat("yyyy/MM/dd hh:mm:ss.SSS"))
																.parse("9999/12/31 23:59:59.999"))
														|| tempDate_tFileInputExcel_30
																.before((new SimpleDateFormat("yyyy/MM/dd"))
																		.parse("1900/01/01"))) {
													throw new RuntimeException("The cell format is not Date in ( Row. "
															+ (nb_line_tFileInputExcel_30 + 1) + " and ColumnNum. "
															+ curColNum_tFileInputExcel_30 + " )");
												} else {
													row46.Date_Depot = tempDate_tFileInputExcel_30;
												}
											}
										} catch (java.lang.Exception e) {
											globalMap.put("tFileInputExcel_30_ERROR_MESSAGE", e.getMessage());

											throw new RuntimeException("The cell format is not Date in ( Row. "
													+ (nb_line_tFileInputExcel_30 + 1) + " and ColumnNum. "
													+ curColNum_tFileInputExcel_30 + " )");
										}
									}

								} else {
									row46.Date_Depot = null;
									emptyColumnCount_tFileInputExcel_30++;
								}

								nb_line_tFileInputExcel_30++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_30_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_30 = true;
								System.err.println(e.getMessage());
								row46 = null;
							}

							/**
							 * [tFileInputExcel_30 begin ] stop
							 */

							/**
							 * [tFileInputExcel_30 main ] start
							 */

							currentComponent = "tFileInputExcel_30";

							tos_count_tFileInputExcel_30++;

							/**
							 * [tFileInputExcel_30 main ] stop
							 */

							/**
							 * [tFileInputExcel_30 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_30";

							/**
							 * [tFileInputExcel_30 process_data_begin ] stop
							 */
// Start of branch "row46"
							if (row46 != null) {

								/**
								 * [tMap_30 main ] start
								 */

								currentComponent = "tMap_30";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row46"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_30 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_30 = false;
								boolean mainRowRejected_tMap_30 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_30__Struct Var = Var__tMap_30;// ###############################
									// ###############################
									// # Output tables

									copyOfcopyOfcopyOft8 = null;

// # Output table : 'copyOfcopyOfcopyOft8'
									copyOfcopyOfcopyOft8_tmp.Equipe = StringHandling.CHANGE(
											StringHandling.CHANGE(StringHandling.UPCASE(row46.Equipe), "PME", "DME"),
											"FIDÉLISATION", "FID");
									copyOfcopyOfcopyOft8 = copyOfcopyOfcopyOft8_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_30 = false;

								tos_count_tMap_30++;

								/**
								 * [tMap_30 main ] stop
								 */

								/**
								 * [tMap_30 process_data_begin ] start
								 */

								currentComponent = "tMap_30";

								/**
								 * [tMap_30 process_data_begin ] stop
								 */
// Start of branch "copyOfcopyOfcopyOft8"
								if (copyOfcopyOfcopyOft8 != null) {

									/**
									 * [tUnite_9 main ] start
									 */

									currentComponent = "tUnite_9";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "copyOfcopyOfcopyOft8"

										);
									}

//////////

// for output
									row49 = new row49Struct();

									row49.Equipe = copyOfcopyOfcopyOft8.Equipe;

									nb_line_tUnite_9++;

//////////

									tos_count_tUnite_9++;

									/**
									 * [tUnite_9 main ] stop
									 */

									/**
									 * [tUnite_9 process_data_begin ] start
									 */

									currentComponent = "tUnite_9";

									/**
									 * [tUnite_9 process_data_begin ] stop
									 */

									/**
									 * [tMap_9 main ] start
									 */

									currentComponent = "tMap_9";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "row49"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_9 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_9 = false;
									boolean mainRowRejected_tMap_9 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row50"
									///////////////////////////////////////////////

									boolean forceLooprow50 = false;

									row50Struct row50ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_9) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_9 = false;

										row50HashKey.Equipe = row49.Equipe;

										row50HashKey.hashCodeDirty = true;

										tHash_Lookup_row50.lookup(row50HashKey);

										if (!tHash_Lookup_row50.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_9 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row50 != null && tHash_Lookup_row50.getCount(row50HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row50' and it contains more one result from keys : row50.Equipe = '" +
										// row50HashKey.Equipe + "'");
									} // G 071

									row50Struct row50 = null;

									row50Struct fromLookup_row50 = null;
									row50 = row50Default;

									if (tHash_Lookup_row50 != null && tHash_Lookup_row50.hasNext()) { // G 099

										fromLookup_row50 = tHash_Lookup_row50.next();

									} // G 099

									if (fromLookup_row50 != null) {
										row50 = fromLookup_row50;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_9__Struct Var = Var__tMap_9;// ###############################
										// ###############################
										// # Output tables

										p = null;

										if (!rejectedInnerJoin_tMap_9) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'p'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_9) {
											p_tmp.Equipe = row49.Equipe;
											p = p_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_9 = false;

									tos_count_tMap_9++;

									/**
									 * [tMap_9 main ] stop
									 */

									/**
									 * [tMap_9 process_data_begin ] start
									 */

									currentComponent = "tMap_9";

									/**
									 * [tMap_9 process_data_begin ] stop
									 */
// Start of branch "p"
									if (p != null) {

										/**
										 * [tUniqRow_9 main ] start
										 */

										currentComponent = "tUniqRow_9";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "p"

											);
										}

										row39 = null;
										finder_tUniqRow_9.Equipe = p.Equipe;
										finder_tUniqRow_9.hashCodeDirty = true;
										if (!keystUniqRow_9.contains(finder_tUniqRow_9)) {
											KeyStruct_tUniqRow_9 new_tUniqRow_9 = new KeyStruct_tUniqRow_9();

											new_tUniqRow_9.Equipe = p.Equipe;

											keystUniqRow_9.add(new_tUniqRow_9);
											if (row39 == null) {

												row39 = new row39Struct();
											}
											row39.Equipe = p.Equipe;
											nb_uniques_tUniqRow_9++;
										} else {
											nb_duplicates_tUniqRow_9++;
										}

										tos_count_tUniqRow_9++;

										/**
										 * [tUniqRow_9 main ] stop
										 */

										/**
										 * [tUniqRow_9 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_9";

										/**
										 * [tUniqRow_9 process_data_begin ] stop
										 */
// Start of branch "row39"
										if (row39 != null) {

											/**
											 * [tDBOutput_2 main ] start
											 */

											currentComponent = "tDBOutput_2";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row39"

												);
											}

											whetherReject_tDBOutput_2 = false;
											if (row39.Equipe == null) {
												pstmt_tDBOutput_2.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_2.setString(1, row39.Equipe);
											}

											pstmt_tDBOutput_2.addBatch();
											nb_line_tDBOutput_2++;

											batchSizeCounter_tDBOutput_2++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_2 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_2) throws Exception {
													try {

														for (int countEach_tDBOutput_2 : pstmt_tDBOutput_2
																.executeBatch()) {
															if (countEach_tDBOutput_2 == -2
																	|| countEach_tDBOutput_2 == -3) {
																break;
															}
															counter += countEach_tDBOutput_2;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_2_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_2 = 0;
														for (int countEach_tDBOutput_2 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_2 < 0 ? 0
																	: countEach_tDBOutput_2);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_2) throws Exception {
													try {

														for (int countEach_tDBOutput_2 : pstmt_tDBOutput_2
																.executeBatch()) {
															if (countEach_tDBOutput_2 == -2
																	|| countEach_tDBOutput_2 == -3) {
																break;
															}
															counter += countEach_tDBOutput_2;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_2_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_2 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_2 < 0 ? 0
																	: countEach_tDBOutput_2);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_2 > 0)
													&& (batchSize_tDBOutput_2 <= batchSizeCounter_tDBOutput_2)) {

												insertedCount_tDBOutput_2 = new LimitBytesHelper_tDBOutput_2()
														.limitBytePart1(insertedCount_tDBOutput_2, pstmt_tDBOutput_2);
												rowsToCommitCount_tDBOutput_2 = insertedCount_tDBOutput_2;

												batchSizeCounter_tDBOutput_2 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_2++;
											if (commitEvery_tDBOutput_2 <= commitCounter_tDBOutput_2) {
												if ((batchSize_tDBOutput_2 > 0) && (batchSizeCounter_tDBOutput_2 > 0)) {

													insertedCount_tDBOutput_2 = new LimitBytesHelper_tDBOutput_2()
															.limitBytePart1(insertedCount_tDBOutput_2,
																	pstmt_tDBOutput_2);

													batchSizeCounter_tDBOutput_2 = 0;
												}
												if (rowsToCommitCount_tDBOutput_2 != 0) {

												}
												conn_tDBOutput_2.commit();
												if (rowsToCommitCount_tDBOutput_2 != 0) {

													rowsToCommitCount_tDBOutput_2 = 0;
												}
												commitCounter_tDBOutput_2 = 0;
											}

											tos_count_tDBOutput_2++;

											/**
											 * [tDBOutput_2 main ] stop
											 */

											/**
											 * [tDBOutput_2 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_2";

											/**
											 * [tDBOutput_2 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_2 process_data_end ] start
											 */

											currentComponent = "tDBOutput_2";

											/**
											 * [tDBOutput_2 process_data_end ] stop
											 */

										} // End of branch "row39"

										/**
										 * [tUniqRow_9 process_data_end ] start
										 */

										currentComponent = "tUniqRow_9";

										/**
										 * [tUniqRow_9 process_data_end ] stop
										 */

									} // End of branch "p"

									/**
									 * [tMap_9 process_data_end ] start
									 */

									currentComponent = "tMap_9";

									/**
									 * [tMap_9 process_data_end ] stop
									 */

									/**
									 * [tUnite_9 process_data_end ] start
									 */

									currentComponent = "tUnite_9";

									/**
									 * [tUnite_9 process_data_end ] stop
									 */

								} // End of branch "copyOfcopyOfcopyOft8"

								/**
								 * [tMap_30 process_data_end ] start
								 */

								currentComponent = "tMap_30";

								/**
								 * [tMap_30 process_data_end ] stop
								 */

							} // End of branch "row46"

							/**
							 * [tFileInputExcel_30 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_30";

							/**
							 * [tFileInputExcel_30 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_30 end ] start
							 */

							currentComponent = "tFileInputExcel_30";

						}

						globalMap.put("tFileInputExcel_30_NB_LINE", nb_line_tFileInputExcel_30);

					}

				} finally {

					if (!(source_tFileInputExcel_30 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_30.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_30", true);
				end_Hash.put("tFileInputExcel_30", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_30 end ] stop
				 */

				/**
				 * [tMap_30 end ] start
				 */

				currentComponent = "tMap_30";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row46");
				}

				ok_Hash.put("tMap_30", true);
				end_Hash.put("tMap_30", System.currentTimeMillis());

				/**
				 * [tMap_30 end ] stop
				 */

				/**
				 * [tMap_31 begin ] start
				 */

				ok_Hash.put("tMap_31", false);
				start_Hash.put("tMap_31", System.currentTimeMillis());

				currentComponent = "tMap_31";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row392");
				}

				int tos_count_tMap_31 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_31__Struct {
				}
				Var__tMap_31__Struct Var__tMap_31 = new Var__tMap_31__Struct();
// ###############################

// ###############################
// # Outputs initialization
				copyOfcopyOfcopyOft7Struct copyOfcopyOfcopyOft7_tmp = new copyOfcopyOfcopyOft7Struct();
// ###############################

				/**
				 * [tMap_31 begin ] stop
				 */

				/**
				 * [tFileInputExcel_31 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_31", false);
				start_Hash.put("tFileInputExcel_31", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_31";

				int tos_count_tFileInputExcel_31 = 0;

				final String decryptedPassword_tFileInputExcel_31 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:9opA4fbPu48P3NUFsIyZlBRJ/BD49LilowUtiw==");
				String password_tFileInputExcel_31 = decryptedPassword_tFileInputExcel_31;
				if (password_tFileInputExcel_31.isEmpty()) {
					password_tFileInputExcel_31 = null;
				}
				class RegexUtil_tFileInputExcel_31 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_31 regexUtil_tFileInputExcel_31 = new RegexUtil_tFileInputExcel_31();

				Object source_tFileInputExcel_31 = "C:/Users/DELL/Downloads/parc facturé Mars 2022 (1).xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_31 = null;

				if (source_tFileInputExcel_31 instanceof String) {
					workbook_tFileInputExcel_31 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_31), password_tFileInputExcel_31,
									true);
				} else if (source_tFileInputExcel_31 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_31 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_31, password_tFileInputExcel_31);
				} else {
					workbook_tFileInputExcel_31 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_31 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_31.addAll(
							regexUtil_tFileInputExcel_31.getSheets(workbook_tFileInputExcel_31, "Résiliation", false));
					if (sheetList_tFileInputExcel_31.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_31 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_31 : sheetList_tFileInputExcel_31) {
						if (sheet_FilterNull_tFileInputExcel_31 != null
								&& sheetList_FilterNull_tFileInputExcel_31.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_31.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_31.add(sheet_FilterNull_tFileInputExcel_31);
						}
					}
					sheetList_tFileInputExcel_31 = sheetList_FilterNull_tFileInputExcel_31;
					if (sheetList_tFileInputExcel_31.size() > 0) {
						int nb_line_tFileInputExcel_31 = 0;

						int begin_line_tFileInputExcel_31 = 1;

						int footer_input_tFileInputExcel_31 = 0;

						int end_line_tFileInputExcel_31 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_31 : sheetList_tFileInputExcel_31) {
							end_line_tFileInputExcel_31 += (sheet_tFileInputExcel_31.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_31 -= footer_input_tFileInputExcel_31;
						int limit_tFileInputExcel_31 = -1;
						int start_column_tFileInputExcel_31 = 1 - 1;
						int end_column_tFileInputExcel_31 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_31 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_31 = sheetList_tFileInputExcel_31
								.get(0);
						int rowCount_tFileInputExcel_31 = 0;
						int sheetIndex_tFileInputExcel_31 = 0;
						int currentRows_tFileInputExcel_31 = (sheetList_tFileInputExcel_31.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_31 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_31 = df_tFileInputExcel_31.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_31 = begin_line_tFileInputExcel_31; i_tFileInputExcel_31 < end_line_tFileInputExcel_31; i_tFileInputExcel_31++) {

							int emptyColumnCount_tFileInputExcel_31 = 0;

							if (limit_tFileInputExcel_31 != -1
									&& nb_line_tFileInputExcel_31 >= limit_tFileInputExcel_31) {
								break;
							}

							while (i_tFileInputExcel_31 >= rowCount_tFileInputExcel_31
									+ currentRows_tFileInputExcel_31) {
								rowCount_tFileInputExcel_31 += currentRows_tFileInputExcel_31;
								sheet_tFileInputExcel_31 = sheetList_tFileInputExcel_31
										.get(++sheetIndex_tFileInputExcel_31);
								currentRows_tFileInputExcel_31 = (sheet_tFileInputExcel_31.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_31_CURRENT_SHEET", sheet_tFileInputExcel_31.getSheetName());
							if (rowCount_tFileInputExcel_31 <= i_tFileInputExcel_31) {
								row_tFileInputExcel_31 = sheet_tFileInputExcel_31
										.getRow(i_tFileInputExcel_31 - rowCount_tFileInputExcel_31);
							}
							row392 = null;
							int tempRowLength_tFileInputExcel_31 = 11;

							int columnIndex_tFileInputExcel_31 = 0;

							String[] temp_row_tFileInputExcel_31 = new String[tempRowLength_tFileInputExcel_31];
							int excel_end_column_tFileInputExcel_31;
							if (row_tFileInputExcel_31 == null) {
								excel_end_column_tFileInputExcel_31 = 0;
							} else {
								excel_end_column_tFileInputExcel_31 = row_tFileInputExcel_31.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_31;
							if (end_column_tFileInputExcel_31 == -1) {
								actual_end_column_tFileInputExcel_31 = excel_end_column_tFileInputExcel_31;
							} else {
								actual_end_column_tFileInputExcel_31 = end_column_tFileInputExcel_31 > excel_end_column_tFileInputExcel_31
										? excel_end_column_tFileInputExcel_31
										: end_column_tFileInputExcel_31;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_31 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_31; i++) {
								if (i + start_column_tFileInputExcel_31 < actual_end_column_tFileInputExcel_31) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_31 = row_tFileInputExcel_31
											.getCell(i + start_column_tFileInputExcel_31);
									if (cell_tFileInputExcel_31 != null) {
										switch (cell_tFileInputExcel_31.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_31[i] = cell_tFileInputExcel_31
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_31)) {
												temp_row_tFileInputExcel_31[i] = cell_tFileInputExcel_31
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_31[i] = df_tFileInputExcel_31
														.format(cell_tFileInputExcel_31.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_31[i] = String
													.valueOf(cell_tFileInputExcel_31.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_31.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_31[i] = cell_tFileInputExcel_31
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_31)) {
													temp_row_tFileInputExcel_31[i] = cell_tFileInputExcel_31
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_31 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_31.getNumericCellValue());
													temp_row_tFileInputExcel_31[i] = ne_tFileInputExcel_31
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_31[i] = String
														.valueOf(cell_tFileInputExcel_31.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_31[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_31[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_31[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_31[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_31 = false;
							row392 = new row392Struct();
							int curColNum_tFileInputExcel_31 = -1;
							String curColName_tFileInputExcel_31 = "";
							try {
								columnIndex_tFileInputExcel_31 = 0;

								if (temp_row_tFileInputExcel_31[columnIndex_tFileInputExcel_31].length() > 0) {
									curColNum_tFileInputExcel_31 = columnIndex_tFileInputExcel_31
											+ start_column_tFileInputExcel_31 + 1;
									curColName_tFileInputExcel_31 = "Custcode";

									row392.Custcode = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_31[columnIndex_tFileInputExcel_31], null,
											'.' == decimalChar_tFileInputExcel_31 ? null
													: decimalChar_tFileInputExcel_31));
								} else {
									row392.Custcode = null;
									emptyColumnCount_tFileInputExcel_31++;
								}
								columnIndex_tFileInputExcel_31 = 1;

								if (temp_row_tFileInputExcel_31[columnIndex_tFileInputExcel_31].length() > 0) {
									curColNum_tFileInputExcel_31 = columnIndex_tFileInputExcel_31
											+ start_column_tFileInputExcel_31 + 1;
									curColName_tFileInputExcel_31 = "Raison_Sociale";

									row392.Raison_Sociale = temp_row_tFileInputExcel_31[columnIndex_tFileInputExcel_31];
								} else {
									row392.Raison_Sociale = null;
									emptyColumnCount_tFileInputExcel_31++;
								}
								columnIndex_tFileInputExcel_31 = 2;

								if (temp_row_tFileInputExcel_31[columnIndex_tFileInputExcel_31].length() > 0) {
									curColNum_tFileInputExcel_31 = columnIndex_tFileInputExcel_31
											+ start_column_tFileInputExcel_31 + 1;
									curColName_tFileInputExcel_31 = "Groupe_Client";

									row392.Groupe_Client = temp_row_tFileInputExcel_31[columnIndex_tFileInputExcel_31];
								} else {
									row392.Groupe_Client = null;
									emptyColumnCount_tFileInputExcel_31++;
								}
								columnIndex_tFileInputExcel_31 = 3;

								if (temp_row_tFileInputExcel_31[columnIndex_tFileInputExcel_31].length() > 0) {
									curColNum_tFileInputExcel_31 = columnIndex_tFileInputExcel_31
											+ start_column_tFileInputExcel_31 + 1;
									curColName_tFileInputExcel_31 = "Account_Manager";

									row392.Account_Manager = temp_row_tFileInputExcel_31[columnIndex_tFileInputExcel_31];
								} else {
									row392.Account_Manager = null;
									emptyColumnCount_tFileInputExcel_31++;
								}
								columnIndex_tFileInputExcel_31 = 4;

								if (temp_row_tFileInputExcel_31[columnIndex_tFileInputExcel_31].length() > 0) {
									curColNum_tFileInputExcel_31 = columnIndex_tFileInputExcel_31
											+ start_column_tFileInputExcel_31 + 1;
									curColName_tFileInputExcel_31 = "Equipe";

									row392.Equipe = temp_row_tFileInputExcel_31[columnIndex_tFileInputExcel_31];
								} else {
									row392.Equipe = null;
									emptyColumnCount_tFileInputExcel_31++;
								}
								columnIndex_tFileInputExcel_31 = 5;

								if (temp_row_tFileInputExcel_31[columnIndex_tFileInputExcel_31].length() > 0) {
									curColNum_tFileInputExcel_31 = columnIndex_tFileInputExcel_31
											+ start_column_tFileInputExcel_31 + 1;
									curColName_tFileInputExcel_31 = "Somme_de_Resiliation";

									row392.Somme_de_Resiliation = ParserUtils.parseTo_Integer(ParserUtils
											.parseTo_Number(temp_row_tFileInputExcel_31[columnIndex_tFileInputExcel_31],
													null, '.' == decimalChar_tFileInputExcel_31 ? null
															: decimalChar_tFileInputExcel_31));
								} else {
									row392.Somme_de_Resiliation = null;
									emptyColumnCount_tFileInputExcel_31++;
								}
								columnIndex_tFileInputExcel_31 = 6;

								if (temp_row_tFileInputExcel_31[columnIndex_tFileInputExcel_31].length() > 0) {
									curColNum_tFileInputExcel_31 = columnIndex_tFileInputExcel_31
											+ start_column_tFileInputExcel_31 + 1;
									curColName_tFileInputExcel_31 = "Type_Resiliation";

									row392.Type_Resiliation = temp_row_tFileInputExcel_31[columnIndex_tFileInputExcel_31];
								} else {
									row392.Type_Resiliation = null;
									emptyColumnCount_tFileInputExcel_31++;
								}
								columnIndex_tFileInputExcel_31 = 7;

								if (temp_row_tFileInputExcel_31[columnIndex_tFileInputExcel_31].length() > 0) {
									curColNum_tFileInputExcel_31 = columnIndex_tFileInputExcel_31
											+ start_column_tFileInputExcel_31 + 1;
									curColName_tFileInputExcel_31 = "Motif";

									row392.Motif = temp_row_tFileInputExcel_31[columnIndex_tFileInputExcel_31];
								} else {
									row392.Motif = null;
									emptyColumnCount_tFileInputExcel_31++;
								}
								columnIndex_tFileInputExcel_31 = 8;

								if (temp_row_tFileInputExcel_31[columnIndex_tFileInputExcel_31].length() > 0) {
									curColNum_tFileInputExcel_31 = columnIndex_tFileInputExcel_31
											+ start_column_tFileInputExcel_31 + 1;
									curColName_tFileInputExcel_31 = "DFE";

									row392.DFE = temp_row_tFileInputExcel_31[columnIndex_tFileInputExcel_31];
								} else {
									row392.DFE = null;
									emptyColumnCount_tFileInputExcel_31++;
								}
								columnIndex_tFileInputExcel_31 = 9;

								if (temp_row_tFileInputExcel_31[columnIndex_tFileInputExcel_31].length() > 0) {
									curColNum_tFileInputExcel_31 = columnIndex_tFileInputExcel_31
											+ start_column_tFileInputExcel_31 + 1;
									curColName_tFileInputExcel_31 = "Engage_Oui_Non";

									row392.Engage_Oui_Non = temp_row_tFileInputExcel_31[columnIndex_tFileInputExcel_31];
								} else {
									row392.Engage_Oui_Non = null;
									emptyColumnCount_tFileInputExcel_31++;
								}
								columnIndex_tFileInputExcel_31 = 10;

								if (temp_row_tFileInputExcel_31[columnIndex_tFileInputExcel_31].length() > 0) {
									curColNum_tFileInputExcel_31 = columnIndex_tFileInputExcel_31
											+ start_column_tFileInputExcel_31 + 1;
									curColName_tFileInputExcel_31 = "Date_Depot";

									if (10 < actual_end_column_tFileInputExcel_31) {
										try {
											if (row_tFileInputExcel_31
													.getCell(columnIndex_tFileInputExcel_31
															+ start_column_tFileInputExcel_31)
													.getCellType() == org.apache.poi.ss.usermodel.CellType.NUMERIC
													&& org.apache.poi.ss.usermodel.DateUtil
															.isCellDateFormatted(row_tFileInputExcel_31
																	.getCell(columnIndex_tFileInputExcel_31
																			+ start_column_tFileInputExcel_31))) {
												row392.Date_Depot = row_tFileInputExcel_31
														.getCell(columnIndex_tFileInputExcel_31
																+ start_column_tFileInputExcel_31)
														.getDateCellValue();
											} else {
												java.util.Date tempDate_tFileInputExcel_31 = ParserUtils.parseTo_Date(
														temp_row_tFileInputExcel_31[columnIndex_tFileInputExcel_31],
														"yyyy-MM-dd HH:mm:ss");
												if (tempDate_tFileInputExcel_31
														.after((new SimpleDateFormat("yyyy/MM/dd hh:mm:ss.SSS"))
																.parse("9999/12/31 23:59:59.999"))
														|| tempDate_tFileInputExcel_31
																.before((new SimpleDateFormat("yyyy/MM/dd"))
																		.parse("1900/01/01"))) {
													throw new RuntimeException("The cell format is not Date in ( Row. "
															+ (nb_line_tFileInputExcel_31 + 1) + " and ColumnNum. "
															+ curColNum_tFileInputExcel_31 + " )");
												} else {
													row392.Date_Depot = tempDate_tFileInputExcel_31;
												}
											}
										} catch (java.lang.Exception e) {
											globalMap.put("tFileInputExcel_31_ERROR_MESSAGE", e.getMessage());

											throw new RuntimeException("The cell format is not Date in ( Row. "
													+ (nb_line_tFileInputExcel_31 + 1) + " and ColumnNum. "
													+ curColNum_tFileInputExcel_31 + " )");
										}
									}

								} else {
									row392.Date_Depot = null;
									emptyColumnCount_tFileInputExcel_31++;
								}

								nb_line_tFileInputExcel_31++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_31_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_31 = true;
								System.err.println(e.getMessage());
								row392 = null;
							}

							/**
							 * [tFileInputExcel_31 begin ] stop
							 */

							/**
							 * [tFileInputExcel_31 main ] start
							 */

							currentComponent = "tFileInputExcel_31";

							tos_count_tFileInputExcel_31++;

							/**
							 * [tFileInputExcel_31 main ] stop
							 */

							/**
							 * [tFileInputExcel_31 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_31";

							/**
							 * [tFileInputExcel_31 process_data_begin ] stop
							 */
// Start of branch "row392"
							if (row392 != null) {

								/**
								 * [tMap_31 main ] start
								 */

								currentComponent = "tMap_31";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row392"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_31 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_31 = false;
								boolean mainRowRejected_tMap_31 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_31__Struct Var = Var__tMap_31;// ###############################
									// ###############################
									// # Output tables

									copyOfcopyOfcopyOft7 = null;

// # Output table : 'copyOfcopyOfcopyOft7'
									copyOfcopyOfcopyOft7_tmp.Equipe = StringHandling.CHANGE(
											StringHandling.CHANGE(StringHandling.UPCASE(row392.Equipe), "PME", "DME"),
											"FIDÉLISATION", "FID");
									copyOfcopyOfcopyOft7 = copyOfcopyOfcopyOft7_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_31 = false;

								tos_count_tMap_31++;

								/**
								 * [tMap_31 main ] stop
								 */

								/**
								 * [tMap_31 process_data_begin ] start
								 */

								currentComponent = "tMap_31";

								/**
								 * [tMap_31 process_data_begin ] stop
								 */
// Start of branch "copyOfcopyOfcopyOft7"
								if (copyOfcopyOfcopyOft7 != null) {

									/**
									 * [tUnite_9 main ] start
									 */

									currentComponent = "tUnite_9";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "copyOfcopyOfcopyOft7"

										);
									}

//////////

// for output
									row49 = new row49Struct();

									row49.Equipe = copyOfcopyOfcopyOft7.Equipe;

									nb_line_tUnite_9++;

//////////

									tos_count_tUnite_9++;

									/**
									 * [tUnite_9 main ] stop
									 */

									/**
									 * [tUnite_9 process_data_begin ] start
									 */

									currentComponent = "tUnite_9";

									/**
									 * [tUnite_9 process_data_begin ] stop
									 */

									/**
									 * [tMap_9 main ] start
									 */

									currentComponent = "tMap_9";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "row49"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_9 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_9 = false;
									boolean mainRowRejected_tMap_9 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row50"
									///////////////////////////////////////////////

									boolean forceLooprow50 = false;

									row50Struct row50ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_9) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_9 = false;

										row50HashKey.Equipe = row49.Equipe;

										row50HashKey.hashCodeDirty = true;

										tHash_Lookup_row50.lookup(row50HashKey);

										if (!tHash_Lookup_row50.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_9 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row50 != null && tHash_Lookup_row50.getCount(row50HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row50' and it contains more one result from keys : row50.Equipe = '" +
										// row50HashKey.Equipe + "'");
									} // G 071

									row50Struct row50 = null;

									row50Struct fromLookup_row50 = null;
									row50 = row50Default;

									if (tHash_Lookup_row50 != null && tHash_Lookup_row50.hasNext()) { // G 099

										fromLookup_row50 = tHash_Lookup_row50.next();

									} // G 099

									if (fromLookup_row50 != null) {
										row50 = fromLookup_row50;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_9__Struct Var = Var__tMap_9;// ###############################
										// ###############################
										// # Output tables

										p = null;

										if (!rejectedInnerJoin_tMap_9) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'p'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_9) {
											p_tmp.Equipe = row49.Equipe;
											p = p_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_9 = false;

									tos_count_tMap_9++;

									/**
									 * [tMap_9 main ] stop
									 */

									/**
									 * [tMap_9 process_data_begin ] start
									 */

									currentComponent = "tMap_9";

									/**
									 * [tMap_9 process_data_begin ] stop
									 */
// Start of branch "p"
									if (p != null) {

										/**
										 * [tUniqRow_9 main ] start
										 */

										currentComponent = "tUniqRow_9";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "p"

											);
										}

										row39 = null;
										finder_tUniqRow_9.Equipe = p.Equipe;
										finder_tUniqRow_9.hashCodeDirty = true;
										if (!keystUniqRow_9.contains(finder_tUniqRow_9)) {
											KeyStruct_tUniqRow_9 new_tUniqRow_9 = new KeyStruct_tUniqRow_9();

											new_tUniqRow_9.Equipe = p.Equipe;

											keystUniqRow_9.add(new_tUniqRow_9);
											if (row39 == null) {

												row39 = new row39Struct();
											}
											row39.Equipe = p.Equipe;
											nb_uniques_tUniqRow_9++;
										} else {
											nb_duplicates_tUniqRow_9++;
										}

										tos_count_tUniqRow_9++;

										/**
										 * [tUniqRow_9 main ] stop
										 */

										/**
										 * [tUniqRow_9 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_9";

										/**
										 * [tUniqRow_9 process_data_begin ] stop
										 */
// Start of branch "row39"
										if (row39 != null) {

											/**
											 * [tDBOutput_2 main ] start
											 */

											currentComponent = "tDBOutput_2";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row39"

												);
											}

											whetherReject_tDBOutput_2 = false;
											if (row39.Equipe == null) {
												pstmt_tDBOutput_2.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_2.setString(1, row39.Equipe);
											}

											pstmt_tDBOutput_2.addBatch();
											nb_line_tDBOutput_2++;

											batchSizeCounter_tDBOutput_2++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_2 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_2) throws Exception {
													try {

														for (int countEach_tDBOutput_2 : pstmt_tDBOutput_2
																.executeBatch()) {
															if (countEach_tDBOutput_2 == -2
																	|| countEach_tDBOutput_2 == -3) {
																break;
															}
															counter += countEach_tDBOutput_2;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_2_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_2 = 0;
														for (int countEach_tDBOutput_2 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_2 < 0 ? 0
																	: countEach_tDBOutput_2);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_2) throws Exception {
													try {

														for (int countEach_tDBOutput_2 : pstmt_tDBOutput_2
																.executeBatch()) {
															if (countEach_tDBOutput_2 == -2
																	|| countEach_tDBOutput_2 == -3) {
																break;
															}
															counter += countEach_tDBOutput_2;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_2_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_2 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_2 < 0 ? 0
																	: countEach_tDBOutput_2);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_2 > 0)
													&& (batchSize_tDBOutput_2 <= batchSizeCounter_tDBOutput_2)) {

												insertedCount_tDBOutput_2 = new LimitBytesHelper_tDBOutput_2()
														.limitBytePart1(insertedCount_tDBOutput_2, pstmt_tDBOutput_2);
												rowsToCommitCount_tDBOutput_2 = insertedCount_tDBOutput_2;

												batchSizeCounter_tDBOutput_2 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_2++;
											if (commitEvery_tDBOutput_2 <= commitCounter_tDBOutput_2) {
												if ((batchSize_tDBOutput_2 > 0) && (batchSizeCounter_tDBOutput_2 > 0)) {

													insertedCount_tDBOutput_2 = new LimitBytesHelper_tDBOutput_2()
															.limitBytePart1(insertedCount_tDBOutput_2,
																	pstmt_tDBOutput_2);

													batchSizeCounter_tDBOutput_2 = 0;
												}
												if (rowsToCommitCount_tDBOutput_2 != 0) {

												}
												conn_tDBOutput_2.commit();
												if (rowsToCommitCount_tDBOutput_2 != 0) {

													rowsToCommitCount_tDBOutput_2 = 0;
												}
												commitCounter_tDBOutput_2 = 0;
											}

											tos_count_tDBOutput_2++;

											/**
											 * [tDBOutput_2 main ] stop
											 */

											/**
											 * [tDBOutput_2 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_2";

											/**
											 * [tDBOutput_2 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_2 process_data_end ] start
											 */

											currentComponent = "tDBOutput_2";

											/**
											 * [tDBOutput_2 process_data_end ] stop
											 */

										} // End of branch "row39"

										/**
										 * [tUniqRow_9 process_data_end ] start
										 */

										currentComponent = "tUniqRow_9";

										/**
										 * [tUniqRow_9 process_data_end ] stop
										 */

									} // End of branch "p"

									/**
									 * [tMap_9 process_data_end ] start
									 */

									currentComponent = "tMap_9";

									/**
									 * [tMap_9 process_data_end ] stop
									 */

									/**
									 * [tUnite_9 process_data_end ] start
									 */

									currentComponent = "tUnite_9";

									/**
									 * [tUnite_9 process_data_end ] stop
									 */

								} // End of branch "copyOfcopyOfcopyOft7"

								/**
								 * [tMap_31 process_data_end ] start
								 */

								currentComponent = "tMap_31";

								/**
								 * [tMap_31 process_data_end ] stop
								 */

							} // End of branch "row392"

							/**
							 * [tFileInputExcel_31 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_31";

							/**
							 * [tFileInputExcel_31 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_31 end ] start
							 */

							currentComponent = "tFileInputExcel_31";

						}

						globalMap.put("tFileInputExcel_31_NB_LINE", nb_line_tFileInputExcel_31);

					}

				} finally {

					if (!(source_tFileInputExcel_31 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_31.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_31", true);
				end_Hash.put("tFileInputExcel_31", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_31 end ] stop
				 */

				/**
				 * [tMap_31 end ] start
				 */

				currentComponent = "tMap_31";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row392");
				}

				ok_Hash.put("tMap_31", true);
				end_Hash.put("tMap_31", System.currentTimeMillis());

				/**
				 * [tMap_31 end ] stop
				 */

				/**
				 * [tUnite_9 end ] start
				 */

				currentComponent = "tUnite_9";

				globalMap.put("tUnite_9_NB_LINE", nb_line_tUnite_9);
				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "copyOfcopyOfcopyOft8", "copyOfcopyOfcopyOft7",
							"copyOfcopyOfcopyOft5", "copyOfcopyOft18", "copyOfcopyOfcopyOft9");
				}

				ok_Hash.put("tUnite_9", true);
				end_Hash.put("tUnite_9", System.currentTimeMillis());

				/**
				 * [tUnite_9 end ] stop
				 */

				/**
				 * [tMap_9 end ] start
				 */

				currentComponent = "tMap_9";

// ###############################
// # Lookup hashes releasing
				if (tHash_Lookup_row50 != null) {
					tHash_Lookup_row50.endGet();
				}
				globalMap.remove("tHash_Lookup_row50");

// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row49");
				}

				ok_Hash.put("tMap_9", true);
				end_Hash.put("tMap_9", System.currentTimeMillis());

				/**
				 * [tMap_9 end ] stop
				 */

				/**
				 * [tUniqRow_9 end ] start
				 */

				currentComponent = "tUniqRow_9";

				globalMap.put("tUniqRow_9_NB_UNIQUES", nb_uniques_tUniqRow_9);
				globalMap.put("tUniqRow_9_NB_DUPLICATES", nb_duplicates_tUniqRow_9);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "p");
				}

				ok_Hash.put("tUniqRow_9", true);
				end_Hash.put("tUniqRow_9", System.currentTimeMillis());

				/**
				 * [tUniqRow_9 end ] stop
				 */

				/**
				 * [tDBOutput_2 end ] start
				 */

				currentComponent = "tDBOutput_2";

				try {
					int countSum_tDBOutput_2 = 0;
					if (pstmt_tDBOutput_2 != null && batchSizeCounter_tDBOutput_2 > 0) {

						for (int countEach_tDBOutput_2 : pstmt_tDBOutput_2.executeBatch()) {
							if (countEach_tDBOutput_2 == -2 || countEach_tDBOutput_2 == -3) {
								break;
							}
							countSum_tDBOutput_2 += countEach_tDBOutput_2;
						}
						rowsToCommitCount_tDBOutput_2 += countSum_tDBOutput_2;

					}

					insertedCount_tDBOutput_2 += countSum_tDBOutput_2;

				} catch (java.sql.BatchUpdateException e) {
					globalMap.put("tDBOutput_2_ERROR_MESSAGE", e.getMessage());

					int countSum_tDBOutput_2 = 0;
					for (int countEach_tDBOutput_2 : e.getUpdateCounts()) {
						countSum_tDBOutput_2 += (countEach_tDBOutput_2 < 0 ? 0 : countEach_tDBOutput_2);
					}
					rowsToCommitCount_tDBOutput_2 += countSum_tDBOutput_2;

					insertedCount_tDBOutput_2 += countSum_tDBOutput_2;

					System.err.println(e.getMessage());

				}
				if (pstmt_tDBOutput_2 != null) {

					pstmt_tDBOutput_2.close();
					resourceMap.remove("pstmt_tDBOutput_2");

				}
				resourceMap.put("statementClosed_tDBOutput_2", true);
				if (rowsToCommitCount_tDBOutput_2 != 0) {

				}
				conn_tDBOutput_2.commit();
				if (rowsToCommitCount_tDBOutput_2 != 0) {

					rowsToCommitCount_tDBOutput_2 = 0;
				}
				commitCounter_tDBOutput_2 = 0;
				conn_tDBOutput_2.close();
				resourceMap.put("finish_tDBOutput_2", true);

				nb_line_deleted_tDBOutput_2 = nb_line_deleted_tDBOutput_2 + deletedCount_tDBOutput_2;
				nb_line_update_tDBOutput_2 = nb_line_update_tDBOutput_2 + updatedCount_tDBOutput_2;
				nb_line_inserted_tDBOutput_2 = nb_line_inserted_tDBOutput_2 + insertedCount_tDBOutput_2;
				nb_line_rejected_tDBOutput_2 = nb_line_rejected_tDBOutput_2 + rejectedCount_tDBOutput_2;

				globalMap.put("tDBOutput_2_NB_LINE", nb_line_tDBOutput_2);
				globalMap.put("tDBOutput_2_NB_LINE_UPDATED", nb_line_update_tDBOutput_2);
				globalMap.put("tDBOutput_2_NB_LINE_INSERTED", nb_line_inserted_tDBOutput_2);
				globalMap.put("tDBOutput_2_NB_LINE_DELETED", nb_line_deleted_tDBOutput_2);
				globalMap.put("tDBOutput_2_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_2);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row39");
				}

				ok_Hash.put("tDBOutput_2", true);
				end_Hash.put("tDBOutput_2", System.currentTimeMillis());

				/**
				 * [tDBOutput_2 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			// free memory for "tMap_9"
			globalMap.remove("tHash_Lookup_row50");

			try {

				/**
				 * [tFileInputExcel_25 finally ] start
				 */

				currentComponent = "tFileInputExcel_25";

				/**
				 * [tFileInputExcel_25 finally ] stop
				 */

				/**
				 * [tMap_25 finally ] start
				 */

				currentComponent = "tMap_25";

				/**
				 * [tMap_25 finally ] stop
				 */

				/**
				 * [tFileInputExcel_29 finally ] start
				 */

				currentComponent = "tFileInputExcel_29";

				/**
				 * [tFileInputExcel_29 finally ] stop
				 */

				/**
				 * [tMap_29 finally ] start
				 */

				currentComponent = "tMap_29";

				/**
				 * [tMap_29 finally ] stop
				 */

				/**
				 * [tFileInputExcel_32 finally ] start
				 */

				currentComponent = "tFileInputExcel_32";

				/**
				 * [tFileInputExcel_32 finally ] stop
				 */

				/**
				 * [tMap_32 finally ] start
				 */

				currentComponent = "tMap_32";

				/**
				 * [tMap_32 finally ] stop
				 */

				/**
				 * [tFileInputExcel_30 finally ] start
				 */

				currentComponent = "tFileInputExcel_30";

				/**
				 * [tFileInputExcel_30 finally ] stop
				 */

				/**
				 * [tMap_30 finally ] start
				 */

				currentComponent = "tMap_30";

				/**
				 * [tMap_30 finally ] stop
				 */

				/**
				 * [tFileInputExcel_31 finally ] start
				 */

				currentComponent = "tFileInputExcel_31";

				/**
				 * [tFileInputExcel_31 finally ] stop
				 */

				/**
				 * [tMap_31 finally ] start
				 */

				currentComponent = "tMap_31";

				/**
				 * [tMap_31 finally ] stop
				 */

				/**
				 * [tUnite_9 finally ] start
				 */

				currentComponent = "tUnite_9";

				/**
				 * [tUnite_9 finally ] stop
				 */

				/**
				 * [tMap_9 finally ] start
				 */

				currentComponent = "tMap_9";

				/**
				 * [tMap_9 finally ] stop
				 */

				/**
				 * [tUniqRow_9 finally ] start
				 */

				currentComponent = "tUniqRow_9";

				/**
				 * [tUniqRow_9 finally ] stop
				 */

				/**
				 * [tDBOutput_2 finally ] start
				 */

				currentComponent = "tDBOutput_2";

				try {
					if (resourceMap.get("statementClosed_tDBOutput_2") == null) {
						java.sql.PreparedStatement pstmtToClose_tDBOutput_2 = null;
						if ((pstmtToClose_tDBOutput_2 = (java.sql.PreparedStatement) resourceMap
								.remove("pstmt_tDBOutput_2")) != null) {
							pstmtToClose_tDBOutput_2.close();
						}
					}
				} finally {
					if (resourceMap.get("finish_tDBOutput_2") == null) {
						java.sql.Connection ctn_tDBOutput_2 = null;
						if ((ctn_tDBOutput_2 = (java.sql.Connection) resourceMap.get("conn_tDBOutput_2")) != null) {
							try {
								ctn_tDBOutput_2.close();
							} catch (java.sql.SQLException sqlEx_tDBOutput_2) {
								String errorMessage_tDBOutput_2 = "failed to close the connection in tDBOutput_2 :"
										+ sqlEx_tDBOutput_2.getMessage();
								System.err.println(errorMessage_tDBOutput_2);
							}
						}
					}
				}

				/**
				 * [tDBOutput_2 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tFileInputExcel_25_SUBPROCESS_STATE", 1);
	}

	public static class row57Struct implements routines.system.IPersistableRow<row57Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Phase_de_l_opportunite;

		public String getPhase_de_l_opportunite() {
			return this.Phase_de_l_opportunite;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Phase_de_l_opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Phase_de_l_opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Phase_de_l_opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Phase_de_l_opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Phase_de_l_opportunite=" + Phase_de_l_opportunite);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row57Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class wwStruct implements routines.system.IPersistableRow<wwStruct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Phase_de_l_opportunite;

		public String getPhase_de_l_opportunite() {
			return this.Phase_de_l_opportunite;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Phase_de_l_opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Phase_de_l_opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Phase_de_l_opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Phase_de_l_opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Phase_de_l_opportunite=" + Phase_de_l_opportunite);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(wwStruct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row52Struct implements routines.system.IPersistableRow<row52Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Phase_de_l_opportunite;

		public String getPhase_de_l_opportunite() {
			return this.Phase_de_l_opportunite;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Phase_de_l_opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Phase_de_l_opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Phase_de_l_opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Phase_de_l_opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Phase_de_l_opportunite=" + Phase_de_l_opportunite);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row52Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class copyOfcopyOft8_0_0Struct implements routines.system.IPersistableRow<copyOfcopyOft8_0_0Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Phase_de_l_opportunite;

		public String getPhase_de_l_opportunite() {
			return this.Phase_de_l_opportunite;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Phase_de_l_opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Phase_de_l_opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Phase_de_l_opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Phase_de_l_opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Phase_de_l_opportunite=" + Phase_de_l_opportunite);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(copyOfcopyOft8_0_0Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row55Struct implements routines.system.IPersistableRow<row55Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Client_Prospect;

		public String getClient_Prospect() {
			return this.Client_Prospect;
		}

		public String Sujet;

		public String getSujet() {
			return this.Sujet;
		}

		public String Acces;

		public String getAcces() {
			return this.Acces;
		}

		public String Type_d_acces;

		public String getType_d_acces() {
			return this.Type_d_acces;
		}

		public String Account_Manager__Client_Prospect;

		public String getAccount_Manager__Client_Prospect() {
			return this.Account_Manager__Client_Prospect;
		}

		public String Cree_le;

		public String getCree_le() {
			return this.Cree_le;
		}

		public String Mois_et_annee_de_creation;

		public String getMois_et_annee_de_creation() {
			return this.Mois_et_annee_de_creation;
		}

		public String Cree_par;

		public String getCree_par() {
			return this.Cree_par;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public String Proprietaire;

		public String getProprietaire() {
			return this.Proprietaire;
		}

		public String Phase_de_l_opportunite;

		public String getPhase_de_l_opportunite() {
			return this.Phase_de_l_opportunite;
		}

		public Integer Valeur_ordering;

		public Integer getValeur_ordering() {
			return this.Valeur_ordering;
		}

		public String Statut;

		public String getStatut() {
			return this.Statut;
		}

		public String Staut_Final;

		public String getStaut_Final() {
			return this.Staut_Final;
		}

		public String Tarifs;

		public String getTarifs() {
			return this.Tarifs;
		}

		public String Montant_total;

		public String getMontant_total() {
			return this.Montant_total;
		}

		public String Parent__Produit_existant;

		public String getParent__Produit_existant() {
			return this.Parent__Produit_existant;
		}

		public String Produit_existant;

		public String getProduit_existant() {
			return this.Produit_existant;
		}

		public String Operation;

		public String getOperation() {
			return this.Operation;
		}

		public String Type_d_operation;

		public String getType_d_operation() {
			return this.Type_d_operation;
		}

		public String Prix_unitaire;

		public String getPrix_unitaire() {
			return this.Prix_unitaire;
		}

		public Integer Quantite;

		public Integer getQuantite() {
			return this.Quantite;
		}

		public String Remise;

		public String getRemise() {
			return this.Remise;
		}

		public String Montant_de_la_remise_manuelle;

		public String getMontant_de_la_remise_manuelle() {
			return this.Montant_de_la_remise_manuelle;
		}

		public String Total_final;

		public String getTotal_final() {
			return this.Total_final;
		}

		public String Mois_et_annee_de_modification;

		public String getMois_et_annee_de_modification() {
			return this.Mois_et_annee_de_modification;
		}

		public java.util.Date Modifie_le;

		public java.util.Date getModifie_le() {
			return this.Modifie_le;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		private java.util.Date readDate(ObjectInputStream dis) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(dis.readLong());
			}
			return dateReturn;
		}

		private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(unmarshaller.readLong());
			}
			return dateReturn;
		}

		private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException {
			if (date1 == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeLong(date1.getTime());
			}
		}

		private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (date1 == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeLong(date1.getTime());
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

					this.Sujet = readString(dis);

					this.Acces = readString(dis);

					this.Type_d_acces = readString(dis);

					this.Account_Manager__Client_Prospect = readString(dis);

					this.Cree_le = readString(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Proprietaire = readString(dis);

					this.Phase_de_l_opportunite = readString(dis);

					this.Valeur_ordering = readInteger(dis);

					this.Statut = readString(dis);

					this.Staut_Final = readString(dis);

					this.Tarifs = readString(dis);

					this.Montant_total = readString(dis);

					this.Parent__Produit_existant = readString(dis);

					this.Produit_existant = readString(dis);

					this.Operation = readString(dis);

					this.Type_d_operation = readString(dis);

					this.Prix_unitaire = readString(dis);

					this.Quantite = readInteger(dis);

					this.Remise = readString(dis);

					this.Montant_de_la_remise_manuelle = readString(dis);

					this.Total_final = readString(dis);

					this.Mois_et_annee_de_modification = readString(dis);

					this.Modifie_le = readDate(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

					this.Sujet = readString(dis);

					this.Acces = readString(dis);

					this.Type_d_acces = readString(dis);

					this.Account_Manager__Client_Prospect = readString(dis);

					this.Cree_le = readString(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Proprietaire = readString(dis);

					this.Phase_de_l_opportunite = readString(dis);

					this.Valeur_ordering = readInteger(dis);

					this.Statut = readString(dis);

					this.Staut_Final = readString(dis);

					this.Tarifs = readString(dis);

					this.Montant_total = readString(dis);

					this.Parent__Produit_existant = readString(dis);

					this.Produit_existant = readString(dis);

					this.Operation = readString(dis);

					this.Type_d_operation = readString(dis);

					this.Prix_unitaire = readString(dis);

					this.Quantite = readInteger(dis);

					this.Remise = readString(dis);

					this.Montant_de_la_remise_manuelle = readString(dis);

					this.Total_final = readString(dis);

					this.Mois_et_annee_de_modification = readString(dis);

					this.Modifie_le = readDate(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Acces, dos);

				// String

				writeString(this.Type_d_acces, dos);

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

				// String

				writeString(this.Cree_le, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Proprietaire, dos);

				// String

				writeString(this.Phase_de_l_opportunite, dos);

				// Integer

				writeInteger(this.Valeur_ordering, dos);

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Tarifs, dos);

				// String

				writeString(this.Montant_total, dos);

				// String

				writeString(this.Parent__Produit_existant, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Operation, dos);

				// String

				writeString(this.Type_d_operation, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// Integer

				writeInteger(this.Quantite, dos);

				// String

				writeString(this.Remise, dos);

				// String

				writeString(this.Montant_de_la_remise_manuelle, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Mois_et_annee_de_modification, dos);

				// java.util.Date

				writeDate(this.Modifie_le, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Acces, dos);

				// String

				writeString(this.Type_d_acces, dos);

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

				// String

				writeString(this.Cree_le, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Proprietaire, dos);

				// String

				writeString(this.Phase_de_l_opportunite, dos);

				// Integer

				writeInteger(this.Valeur_ordering, dos);

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Tarifs, dos);

				// String

				writeString(this.Montant_total, dos);

				// String

				writeString(this.Parent__Produit_existant, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Operation, dos);

				// String

				writeString(this.Type_d_operation, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// Integer

				writeInteger(this.Quantite, dos);

				// String

				writeString(this.Remise, dos);

				// String

				writeString(this.Montant_de_la_remise_manuelle, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Mois_et_annee_de_modification, dos);

				// java.util.Date

				writeDate(this.Modifie_le, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Client_Prospect=" + Client_Prospect);
			sb.append(",Sujet=" + Sujet);
			sb.append(",Acces=" + Acces);
			sb.append(",Type_d_acces=" + Type_d_acces);
			sb.append(",Account_Manager__Client_Prospect=" + Account_Manager__Client_Prospect);
			sb.append(",Cree_le=" + Cree_le);
			sb.append(",Mois_et_annee_de_creation=" + Mois_et_annee_de_creation);
			sb.append(",Cree_par=" + Cree_par);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Proprietaire=" + Proprietaire);
			sb.append(",Phase_de_l_opportunite=" + Phase_de_l_opportunite);
			sb.append(",Valeur_ordering=" + String.valueOf(Valeur_ordering));
			sb.append(",Statut=" + Statut);
			sb.append(",Staut_Final=" + Staut_Final);
			sb.append(",Tarifs=" + Tarifs);
			sb.append(",Montant_total=" + Montant_total);
			sb.append(",Parent__Produit_existant=" + Parent__Produit_existant);
			sb.append(",Produit_existant=" + Produit_existant);
			sb.append(",Operation=" + Operation);
			sb.append(",Type_d_operation=" + Type_d_operation);
			sb.append(",Prix_unitaire=" + Prix_unitaire);
			sb.append(",Quantite=" + String.valueOf(Quantite));
			sb.append(",Remise=" + Remise);
			sb.append(",Montant_de_la_remise_manuelle=" + Montant_de_la_remise_manuelle);
			sb.append(",Total_final=" + Total_final);
			sb.append(",Mois_et_annee_de_modification=" + Mois_et_annee_de_modification);
			sb.append(",Modifie_le=" + String.valueOf(Modifie_le));
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row55Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class after_tFileInputExcel_36Struct
			implements routines.system.IPersistableRow<after_tFileInputExcel_36Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Client_Prospect;

		public String getClient_Prospect() {
			return this.Client_Prospect;
		}

		public String Sujet;

		public String getSujet() {
			return this.Sujet;
		}

		public String Acces;

		public String getAcces() {
			return this.Acces;
		}

		public String Type_d_acces;

		public String getType_d_acces() {
			return this.Type_d_acces;
		}

		public String Account_Manager__Client_Prospect;

		public String getAccount_Manager__Client_Prospect() {
			return this.Account_Manager__Client_Prospect;
		}

		public String Cree_le;

		public String getCree_le() {
			return this.Cree_le;
		}

		public String Mois_et_annee_de_creation;

		public String getMois_et_annee_de_creation() {
			return this.Mois_et_annee_de_creation;
		}

		public String Cree_par;

		public String getCree_par() {
			return this.Cree_par;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public String Proprietaire;

		public String getProprietaire() {
			return this.Proprietaire;
		}

		public String Phase_de_l_opportunite;

		public String getPhase_de_l_opportunite() {
			return this.Phase_de_l_opportunite;
		}

		public Integer Valeur_ordering;

		public Integer getValeur_ordering() {
			return this.Valeur_ordering;
		}

		public String Statut;

		public String getStatut() {
			return this.Statut;
		}

		public String Staut_Final;

		public String getStaut_Final() {
			return this.Staut_Final;
		}

		public String Tarifs;

		public String getTarifs() {
			return this.Tarifs;
		}

		public String Montant_total;

		public String getMontant_total() {
			return this.Montant_total;
		}

		public String Parent__Produit_existant;

		public String getParent__Produit_existant() {
			return this.Parent__Produit_existant;
		}

		public String Produit_existant;

		public String getProduit_existant() {
			return this.Produit_existant;
		}

		public String Operation;

		public String getOperation() {
			return this.Operation;
		}

		public String Type_d_operation;

		public String getType_d_operation() {
			return this.Type_d_operation;
		}

		public String Prix_unitaire;

		public String getPrix_unitaire() {
			return this.Prix_unitaire;
		}

		public Integer Quantite;

		public Integer getQuantite() {
			return this.Quantite;
		}

		public String Remise;

		public String getRemise() {
			return this.Remise;
		}

		public String Montant_de_la_remise_manuelle;

		public String getMontant_de_la_remise_manuelle() {
			return this.Montant_de_la_remise_manuelle;
		}

		public String Total_final;

		public String getTotal_final() {
			return this.Total_final;
		}

		public String Mois_et_annee_de_modification;

		public String getMois_et_annee_de_modification() {
			return this.Mois_et_annee_de_modification;
		}

		public java.util.Date Modifie_le;

		public java.util.Date getModifie_le() {
			return this.Modifie_le;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		private java.util.Date readDate(ObjectInputStream dis) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(dis.readLong());
			}
			return dateReturn;
		}

		private java.util.Date readDate(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			java.util.Date dateReturn = null;
			int length = 0;
			length = unmarshaller.readByte();
			if (length == -1) {
				dateReturn = null;
			} else {
				dateReturn = new Date(unmarshaller.readLong());
			}
			return dateReturn;
		}

		private void writeDate(java.util.Date date1, ObjectOutputStream dos) throws IOException {
			if (date1 == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeLong(date1.getTime());
			}
		}

		private void writeDate(java.util.Date date1, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (date1 == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeLong(date1.getTime());
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

					this.Sujet = readString(dis);

					this.Acces = readString(dis);

					this.Type_d_acces = readString(dis);

					this.Account_Manager__Client_Prospect = readString(dis);

					this.Cree_le = readString(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Proprietaire = readString(dis);

					this.Phase_de_l_opportunite = readString(dis);

					this.Valeur_ordering = readInteger(dis);

					this.Statut = readString(dis);

					this.Staut_Final = readString(dis);

					this.Tarifs = readString(dis);

					this.Montant_total = readString(dis);

					this.Parent__Produit_existant = readString(dis);

					this.Produit_existant = readString(dis);

					this.Operation = readString(dis);

					this.Type_d_operation = readString(dis);

					this.Prix_unitaire = readString(dis);

					this.Quantite = readInteger(dis);

					this.Remise = readString(dis);

					this.Montant_de_la_remise_manuelle = readString(dis);

					this.Total_final = readString(dis);

					this.Mois_et_annee_de_modification = readString(dis);

					this.Modifie_le = readDate(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Client_Prospect = readString(dis);

					this.Sujet = readString(dis);

					this.Acces = readString(dis);

					this.Type_d_acces = readString(dis);

					this.Account_Manager__Client_Prospect = readString(dis);

					this.Cree_le = readString(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Cree_par = readString(dis);

					this.Equipe = readString(dis);

					this.Proprietaire = readString(dis);

					this.Phase_de_l_opportunite = readString(dis);

					this.Valeur_ordering = readInteger(dis);

					this.Statut = readString(dis);

					this.Staut_Final = readString(dis);

					this.Tarifs = readString(dis);

					this.Montant_total = readString(dis);

					this.Parent__Produit_existant = readString(dis);

					this.Produit_existant = readString(dis);

					this.Operation = readString(dis);

					this.Type_d_operation = readString(dis);

					this.Prix_unitaire = readString(dis);

					this.Quantite = readInteger(dis);

					this.Remise = readString(dis);

					this.Montant_de_la_remise_manuelle = readString(dis);

					this.Total_final = readString(dis);

					this.Mois_et_annee_de_modification = readString(dis);

					this.Modifie_le = readDate(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Acces, dos);

				// String

				writeString(this.Type_d_acces, dos);

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

				// String

				writeString(this.Cree_le, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Proprietaire, dos);

				// String

				writeString(this.Phase_de_l_opportunite, dos);

				// Integer

				writeInteger(this.Valeur_ordering, dos);

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Tarifs, dos);

				// String

				writeString(this.Montant_total, dos);

				// String

				writeString(this.Parent__Produit_existant, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Operation, dos);

				// String

				writeString(this.Type_d_operation, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// Integer

				writeInteger(this.Quantite, dos);

				// String

				writeString(this.Remise, dos);

				// String

				writeString(this.Montant_de_la_remise_manuelle, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Mois_et_annee_de_modification, dos);

				// java.util.Date

				writeDate(this.Modifie_le, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Client_Prospect, dos);

				// String

				writeString(this.Sujet, dos);

				// String

				writeString(this.Acces, dos);

				// String

				writeString(this.Type_d_acces, dos);

				// String

				writeString(this.Account_Manager__Client_Prospect, dos);

				// String

				writeString(this.Cree_le, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Cree_par, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Proprietaire, dos);

				// String

				writeString(this.Phase_de_l_opportunite, dos);

				// Integer

				writeInteger(this.Valeur_ordering, dos);

				// String

				writeString(this.Statut, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Tarifs, dos);

				// String

				writeString(this.Montant_total, dos);

				// String

				writeString(this.Parent__Produit_existant, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Operation, dos);

				// String

				writeString(this.Type_d_operation, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// Integer

				writeInteger(this.Quantite, dos);

				// String

				writeString(this.Remise, dos);

				// String

				writeString(this.Montant_de_la_remise_manuelle, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Mois_et_annee_de_modification, dos);

				// java.util.Date

				writeDate(this.Modifie_le, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Client_Prospect=" + Client_Prospect);
			sb.append(",Sujet=" + Sujet);
			sb.append(",Acces=" + Acces);
			sb.append(",Type_d_acces=" + Type_d_acces);
			sb.append(",Account_Manager__Client_Prospect=" + Account_Manager__Client_Prospect);
			sb.append(",Cree_le=" + Cree_le);
			sb.append(",Mois_et_annee_de_creation=" + Mois_et_annee_de_creation);
			sb.append(",Cree_par=" + Cree_par);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Proprietaire=" + Proprietaire);
			sb.append(",Phase_de_l_opportunite=" + Phase_de_l_opportunite);
			sb.append(",Valeur_ordering=" + String.valueOf(Valeur_ordering));
			sb.append(",Statut=" + Statut);
			sb.append(",Staut_Final=" + Staut_Final);
			sb.append(",Tarifs=" + Tarifs);
			sb.append(",Montant_total=" + Montant_total);
			sb.append(",Parent__Produit_existant=" + Parent__Produit_existant);
			sb.append(",Produit_existant=" + Produit_existant);
			sb.append(",Operation=" + Operation);
			sb.append(",Type_d_operation=" + Type_d_operation);
			sb.append(",Prix_unitaire=" + Prix_unitaire);
			sb.append(",Quantite=" + String.valueOf(Quantite));
			sb.append(",Remise=" + Remise);
			sb.append(",Montant_de_la_remise_manuelle=" + Montant_de_la_remise_manuelle);
			sb.append(",Total_final=" + Total_final);
			sb.append(",Mois_et_annee_de_modification=" + Mois_et_annee_de_modification);
			sb.append(",Modifie_le=" + String.valueOf(Modifie_le));
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(after_tFileInputExcel_36Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class copyOfcopyOft7_0_0Struct implements routines.system.IPersistableRow<copyOfcopyOft7_0_0Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Phase_de_l_opportunite__Opportunite;

		public String getPhase_de_l_opportunite__Opportunite() {
			return this.Phase_de_l_opportunite__Opportunite;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Phase_de_l_opportunite__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Phase_de_l_opportunite__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Phase_de_l_opportunite__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Phase_de_l_opportunite__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Phase_de_l_opportunite__Opportunite=" + Phase_de_l_opportunite__Opportunite);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(copyOfcopyOft7_0_0Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public static class row53Struct implements routines.system.IPersistableRow<row53Struct> {
		final static byte[] commonByteArrayLock_ORANGE_Commun = new byte[0];
		static byte[] commonByteArray_ORANGE_Commun = new byte[0];

		public String Reference_OSM_mere__Opportunite;

		public String getReference_OSM_mere__Opportunite() {
			return this.Reference_OSM_mere__Opportunite;
		}

		public String Reference_OSM__Opportunite;

		public String getReference_OSM__Opportunite() {
			return this.Reference_OSM__Opportunite;
		}

		public String Client_Prospect__Opportunite;

		public String getClient_Prospect__Opportunite() {
			return this.Client_Prospect__Opportunite;
		}

		public String Offre;

		public String getOffre() {
			return this.Offre;
		}

		public String Nature_Offre;

		public String getNature_Offre() {
			return this.Nature_Offre;
		}

		public String Produit_existant;

		public String getProduit_existant() {
			return this.Produit_existant;
		}

		public String Nature_produit__Produit_existant;

		public String getNature_produit__Produit_existant() {
			return this.Nature_produit__Produit_existant;
		}

		public Integer Quantite;

		public Integer getQuantite() {
			return this.Quantite;
		}

		public String Prix_unitaire;

		public String getPrix_unitaire() {
			return this.Prix_unitaire;
		}

		public String Total_final;

		public String getTotal_final() {
			return this.Total_final;
		}

		public String Remise______Opportunite;

		public String getRemise______Opportunite() {
			return this.Remise______Opportunite;
		}

		public Float Total_remise_HT;

		public Float getTotal_remise_HT() {
			return this.Total_remise_HT;
		}

		public String Extension__Opportunite;

		public String getExtension__Opportunite() {
			return this.Extension__Opportunite;
		}

		public Float Budget_a_valider__Opportunite;

		public Float getBudget_a_valider__Opportunite() {
			return this.Budget_a_valider__Opportunite;
		}

		public Float Budget_a_valider_Extension__Opportunite;

		public Float getBudget_a_valider_Extension__Opportunite() {
			return this.Budget_a_valider_Extension__Opportunite;
		}

		public String Duree_d_engagement__Opportunite;

		public String getDuree_d_engagement__Opportunite() {
			return this.Duree_d_engagement__Opportunite;
		}

		public String Type_d_engagement__Opportunite;

		public String getType_d_engagement__Opportunite() {
			return this.Type_d_engagement__Opportunite;
		}

		public String Demandeur__Opportunite;

		public String getDemandeur__Opportunite() {
			return this.Demandeur__Opportunite;
		}

		public String Equipe;

		public String getEquipe() {
			return this.Equipe;
		}

		public String Cree_le__Opportunite;

		public String getCree_le__Opportunite() {
			return this.Cree_le__Opportunite;
		}

		public Integer Mois_de_creation;

		public Integer getMois_de_creation() {
			return this.Mois_de_creation;
		}

		public Integer Annee_de_creation;

		public Integer getAnnee_de_creation() {
			return this.Annee_de_creation;
		}

		public String Mois_et_annee_de_creation;

		public String getMois_et_annee_de_creation() {
			return this.Mois_et_annee_de_creation;
		}

		public String Raison_de_statut_OSM__Opportunite;

		public String getRaison_de_statut_OSM__Opportunite() {
			return this.Raison_de_statut_OSM__Opportunite;
		}

		public String Statut_OSM__Opportunite;

		public String getStatut_OSM__Opportunite() {
			return this.Statut_OSM__Opportunite;
		}

		public String Statut_activation__Commande;

		public String getStatut_activation__Commande() {
			return this.Statut_activation__Commande;
		}

		public String Date_d_activation__Commande;

		public String getDate_d_activation__Commande() {
			return this.Date_d_activation__Commande;
		}

		public Integer Mois_d_activation;

		public Integer getMois_d_activation() {
			return this.Mois_d_activation;
		}

		public String Staut_Final;

		public String getStaut_Final() {
			return this.Staut_Final;
		}

		public String Gouvernorat;

		public String getGouvernorat() {
			return this.Gouvernorat;
		}

		public String Phase_de_l_opportunite__Opportunite;

		public String getPhase_de_l_opportunite__Opportunite() {
			return this.Phase_de_l_opportunite__Opportunite;
		}

		private String readString(ObjectInputStream dis) throws IOException {
			String strReturn = null;
			int length = 0;
			length = dis.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				dis.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private String readString(org.jboss.marshalling.Unmarshaller unmarshaller) throws IOException {
			String strReturn = null;
			int length = 0;
			length = unmarshaller.readInt();
			if (length == -1) {
				strReturn = null;
			} else {
				if (length > commonByteArray_ORANGE_Commun.length) {
					if (length < 1024 && commonByteArray_ORANGE_Commun.length == 0) {
						commonByteArray_ORANGE_Commun = new byte[1024];
					} else {
						commonByteArray_ORANGE_Commun = new byte[2 * length];
					}
				}
				unmarshaller.readFully(commonByteArray_ORANGE_Commun, 0, length);
				strReturn = new String(commonByteArray_ORANGE_Commun, 0, length, utf8Charset);
			}
			return strReturn;
		}

		private void writeString(String str, ObjectOutputStream dos) throws IOException {
			if (str == null) {
				dos.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				dos.writeInt(byteArray.length);
				dos.write(byteArray);
			}
		}

		private void writeString(String str, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (str == null) {
				marshaller.writeInt(-1);
			} else {
				byte[] byteArray = str.getBytes(utf8Charset);
				marshaller.writeInt(byteArray.length);
				marshaller.write(byteArray);
			}
		}

		private Integer readInteger(ObjectInputStream dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private Integer readInteger(org.jboss.marshalling.Unmarshaller dis) throws IOException {
			Integer intReturn;
			int length = 0;
			length = dis.readByte();
			if (length == -1) {
				intReturn = null;
			} else {
				intReturn = dis.readInt();
			}
			return intReturn;
		}

		private void writeInteger(Integer intNum, ObjectOutputStream dos) throws IOException {
			if (intNum == null) {
				dos.writeByte(-1);
			} else {
				dos.writeByte(0);
				dos.writeInt(intNum);
			}
		}

		private void writeInteger(Integer intNum, org.jboss.marshalling.Marshaller marshaller) throws IOException {
			if (intNum == null) {
				marshaller.writeByte(-1);
			} else {
				marshaller.writeByte(0);
				marshaller.writeInt(intNum);
			}
		}

		public void readData(ObjectInputStream dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Reference_OSM_mere__Opportunite = readString(dis);

					this.Reference_OSM__Opportunite = readString(dis);

					this.Client_Prospect__Opportunite = readString(dis);

					this.Offre = readString(dis);

					this.Nature_Offre = readString(dis);

					this.Produit_existant = readString(dis);

					this.Nature_produit__Produit_existant = readString(dis);

					this.Quantite = readInteger(dis);

					this.Prix_unitaire = readString(dis);

					this.Total_final = readString(dis);

					this.Remise______Opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Total_remise_HT = null;
					} else {
						this.Total_remise_HT = dis.readFloat();
					}

					this.Extension__Opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Budget_a_valider__Opportunite = null;
					} else {
						this.Budget_a_valider__Opportunite = dis.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Budget_a_valider_Extension__Opportunite = null;
					} else {
						this.Budget_a_valider_Extension__Opportunite = dis.readFloat();
					}

					this.Duree_d_engagement__Opportunite = readString(dis);

					this.Type_d_engagement__Opportunite = readString(dis);

					this.Demandeur__Opportunite = readString(dis);

					this.Equipe = readString(dis);

					this.Cree_le__Opportunite = readString(dis);

					this.Mois_de_creation = readInteger(dis);

					this.Annee_de_creation = readInteger(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Raison_de_statut_OSM__Opportunite = readString(dis);

					this.Statut_OSM__Opportunite = readString(dis);

					this.Statut_activation__Commande = readString(dis);

					this.Date_d_activation__Commande = readString(dis);

					this.Mois_d_activation = readInteger(dis);

					this.Staut_Final = readString(dis);

					this.Gouvernorat = readString(dis);

					this.Phase_de_l_opportunite__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void readData(org.jboss.marshalling.Unmarshaller dis) {

			synchronized (commonByteArrayLock_ORANGE_Commun) {

				try {

					int length = 0;

					this.Reference_OSM_mere__Opportunite = readString(dis);

					this.Reference_OSM__Opportunite = readString(dis);

					this.Client_Prospect__Opportunite = readString(dis);

					this.Offre = readString(dis);

					this.Nature_Offre = readString(dis);

					this.Produit_existant = readString(dis);

					this.Nature_produit__Produit_existant = readString(dis);

					this.Quantite = readInteger(dis);

					this.Prix_unitaire = readString(dis);

					this.Total_final = readString(dis);

					this.Remise______Opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Total_remise_HT = null;
					} else {
						this.Total_remise_HT = dis.readFloat();
					}

					this.Extension__Opportunite = readString(dis);

					length = dis.readByte();
					if (length == -1) {
						this.Budget_a_valider__Opportunite = null;
					} else {
						this.Budget_a_valider__Opportunite = dis.readFloat();
					}

					length = dis.readByte();
					if (length == -1) {
						this.Budget_a_valider_Extension__Opportunite = null;
					} else {
						this.Budget_a_valider_Extension__Opportunite = dis.readFloat();
					}

					this.Duree_d_engagement__Opportunite = readString(dis);

					this.Type_d_engagement__Opportunite = readString(dis);

					this.Demandeur__Opportunite = readString(dis);

					this.Equipe = readString(dis);

					this.Cree_le__Opportunite = readString(dis);

					this.Mois_de_creation = readInteger(dis);

					this.Annee_de_creation = readInteger(dis);

					this.Mois_et_annee_de_creation = readString(dis);

					this.Raison_de_statut_OSM__Opportunite = readString(dis);

					this.Statut_OSM__Opportunite = readString(dis);

					this.Statut_activation__Commande = readString(dis);

					this.Date_d_activation__Commande = readString(dis);

					this.Mois_d_activation = readInteger(dis);

					this.Staut_Final = readString(dis);

					this.Gouvernorat = readString(dis);

					this.Phase_de_l_opportunite__Opportunite = readString(dis);

				} catch (IOException e) {
					throw new RuntimeException(e);

				}

			}

		}

		public void writeData(ObjectOutputStream dos) {
			try {

				// String

				writeString(this.Reference_OSM_mere__Opportunite, dos);

				// String

				writeString(this.Reference_OSM__Opportunite, dos);

				// String

				writeString(this.Client_Prospect__Opportunite, dos);

				// String

				writeString(this.Offre, dos);

				// String

				writeString(this.Nature_Offre, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Nature_produit__Produit_existant, dos);

				// Integer

				writeInteger(this.Quantite, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Remise______Opportunite, dos);

				// Float

				if (this.Total_remise_HT == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Total_remise_HT);
				}

				// String

				writeString(this.Extension__Opportunite, dos);

				// Float

				if (this.Budget_a_valider__Opportunite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Budget_a_valider__Opportunite);
				}

				// Float

				if (this.Budget_a_valider_Extension__Opportunite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Budget_a_valider_Extension__Opportunite);
				}

				// String

				writeString(this.Duree_d_engagement__Opportunite, dos);

				// String

				writeString(this.Type_d_engagement__Opportunite, dos);

				// String

				writeString(this.Demandeur__Opportunite, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Cree_le__Opportunite, dos);

				// Integer

				writeInteger(this.Mois_de_creation, dos);

				// Integer

				writeInteger(this.Annee_de_creation, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Raison_de_statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_activation__Commande, dos);

				// String

				writeString(this.Date_d_activation__Commande, dos);

				// Integer

				writeInteger(this.Mois_d_activation, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Gouvernorat, dos);

				// String

				writeString(this.Phase_de_l_opportunite__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public void writeData(org.jboss.marshalling.Marshaller dos) {
			try {

				// String

				writeString(this.Reference_OSM_mere__Opportunite, dos);

				// String

				writeString(this.Reference_OSM__Opportunite, dos);

				// String

				writeString(this.Client_Prospect__Opportunite, dos);

				// String

				writeString(this.Offre, dos);

				// String

				writeString(this.Nature_Offre, dos);

				// String

				writeString(this.Produit_existant, dos);

				// String

				writeString(this.Nature_produit__Produit_existant, dos);

				// Integer

				writeInteger(this.Quantite, dos);

				// String

				writeString(this.Prix_unitaire, dos);

				// String

				writeString(this.Total_final, dos);

				// String

				writeString(this.Remise______Opportunite, dos);

				// Float

				if (this.Total_remise_HT == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Total_remise_HT);
				}

				// String

				writeString(this.Extension__Opportunite, dos);

				// Float

				if (this.Budget_a_valider__Opportunite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Budget_a_valider__Opportunite);
				}

				// Float

				if (this.Budget_a_valider_Extension__Opportunite == null) {
					dos.writeByte(-1);
				} else {
					dos.writeByte(0);
					dos.writeFloat(this.Budget_a_valider_Extension__Opportunite);
				}

				// String

				writeString(this.Duree_d_engagement__Opportunite, dos);

				// String

				writeString(this.Type_d_engagement__Opportunite, dos);

				// String

				writeString(this.Demandeur__Opportunite, dos);

				// String

				writeString(this.Equipe, dos);

				// String

				writeString(this.Cree_le__Opportunite, dos);

				// Integer

				writeInteger(this.Mois_de_creation, dos);

				// Integer

				writeInteger(this.Annee_de_creation, dos);

				// String

				writeString(this.Mois_et_annee_de_creation, dos);

				// String

				writeString(this.Raison_de_statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_OSM__Opportunite, dos);

				// String

				writeString(this.Statut_activation__Commande, dos);

				// String

				writeString(this.Date_d_activation__Commande, dos);

				// Integer

				writeInteger(this.Mois_d_activation, dos);

				// String

				writeString(this.Staut_Final, dos);

				// String

				writeString(this.Gouvernorat, dos);

				// String

				writeString(this.Phase_de_l_opportunite__Opportunite, dos);

			} catch (IOException e) {
				throw new RuntimeException(e);
			}

		}

		public String toString() {

			StringBuilder sb = new StringBuilder();
			sb.append(super.toString());
			sb.append("[");
			sb.append("Reference_OSM_mere__Opportunite=" + Reference_OSM_mere__Opportunite);
			sb.append(",Reference_OSM__Opportunite=" + Reference_OSM__Opportunite);
			sb.append(",Client_Prospect__Opportunite=" + Client_Prospect__Opportunite);
			sb.append(",Offre=" + Offre);
			sb.append(",Nature_Offre=" + Nature_Offre);
			sb.append(",Produit_existant=" + Produit_existant);
			sb.append(",Nature_produit__Produit_existant=" + Nature_produit__Produit_existant);
			sb.append(",Quantite=" + String.valueOf(Quantite));
			sb.append(",Prix_unitaire=" + Prix_unitaire);
			sb.append(",Total_final=" + Total_final);
			sb.append(",Remise______Opportunite=" + Remise______Opportunite);
			sb.append(",Total_remise_HT=" + String.valueOf(Total_remise_HT));
			sb.append(",Extension__Opportunite=" + Extension__Opportunite);
			sb.append(",Budget_a_valider__Opportunite=" + String.valueOf(Budget_a_valider__Opportunite));
			sb.append(",Budget_a_valider_Extension__Opportunite="
					+ String.valueOf(Budget_a_valider_Extension__Opportunite));
			sb.append(",Duree_d_engagement__Opportunite=" + Duree_d_engagement__Opportunite);
			sb.append(",Type_d_engagement__Opportunite=" + Type_d_engagement__Opportunite);
			sb.append(",Demandeur__Opportunite=" + Demandeur__Opportunite);
			sb.append(",Equipe=" + Equipe);
			sb.append(",Cree_le__Opportunite=" + Cree_le__Opportunite);
			sb.append(",Mois_de_creation=" + String.valueOf(Mois_de_creation));
			sb.append(",Annee_de_creation=" + String.valueOf(Annee_de_creation));
			sb.append(",Mois_et_annee_de_creation=" + Mois_et_annee_de_creation);
			sb.append(",Raison_de_statut_OSM__Opportunite=" + Raison_de_statut_OSM__Opportunite);
			sb.append(",Statut_OSM__Opportunite=" + Statut_OSM__Opportunite);
			sb.append(",Statut_activation__Commande=" + Statut_activation__Commande);
			sb.append(",Date_d_activation__Commande=" + Date_d_activation__Commande);
			sb.append(",Mois_d_activation=" + String.valueOf(Mois_d_activation));
			sb.append(",Staut_Final=" + Staut_Final);
			sb.append(",Gouvernorat=" + Gouvernorat);
			sb.append(",Phase_de_l_opportunite__Opportunite=" + Phase_de_l_opportunite__Opportunite);
			sb.append("]");

			return sb.toString();
		}

		/**
		 * Compare keys
		 */
		public int compareTo(row53Struct other) {

			int returnValue = -1;

			return returnValue;
		}

		private int checkNullsAndCompare(Object object1, Object object2) {
			int returnValue = 0;
			if (object1 instanceof Comparable && object2 instanceof Comparable) {
				returnValue = ((Comparable) object1).compareTo(object2);
			} else if (object1 != null && object2 != null) {
				returnValue = compareStrings(object1.toString(), object2.toString());
			} else if (object1 == null && object2 != null) {
				returnValue = 1;
			} else if (object1 != null && object2 == null) {
				returnValue = -1;
			} else {
				returnValue = 0;
			}

			return returnValue;
		}

		private int compareStrings(String string1, String string2) {
			return string1.compareTo(string2);
		}

	}

	public void tFileInputExcel_36Process(final java.util.Map<String, Object> globalMap) throws TalendException {
		globalMap.put("tFileInputExcel_36_SUBPROCESS_STATE", 0);

		final boolean execStat = this.execStat;

		String iterateId = "";

		String currentComponent = "";
		java.util.Map<String, Object> resourceMap = new java.util.HashMap<String, Object>();

		try {
			// TDI-39566 avoid throwing an useless Exception
			boolean resumeIt = true;
			if (globalResumeTicket == false && resumeEntryMethodName != null) {
				String currentMethodName = new java.lang.Exception().getStackTrace()[0].getMethodName();
				resumeIt = resumeEntryMethodName.equals(currentMethodName);
			}
			if (resumeIt || globalResumeTicket) { // start the resume
				globalResumeTicket = true;

				tDBInput_10Process(globalMap);

				row55Struct row55 = new row55Struct();
				copyOfcopyOft8_0_0Struct copyOfcopyOft8_0_0 = new copyOfcopyOft8_0_0Struct();

				row53Struct row53 = new row53Struct();
				copyOfcopyOft7_0_0Struct copyOfcopyOft7_0_0 = new copyOfcopyOft7_0_0Struct();

				row52Struct row52 = new row52Struct();
				wwStruct ww = new wwStruct();
				row57Struct row57 = new row57Struct();

				/**
				 * [tDBOutput_12 begin ] start
				 */

				ok_Hash.put("tDBOutput_12", false);
				start_Hash.put("tDBOutput_12", System.currentTimeMillis());

				currentComponent = "tDBOutput_12";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row57");
				}

				int tos_count_tDBOutput_12 = 0;

				int nb_line_tDBOutput_12 = 0;
				int nb_line_update_tDBOutput_12 = 0;
				int nb_line_inserted_tDBOutput_12 = 0;
				int nb_line_deleted_tDBOutput_12 = 0;
				int nb_line_rejected_tDBOutput_12 = 0;

				int deletedCount_tDBOutput_12 = 0;
				int updatedCount_tDBOutput_12 = 0;
				int insertedCount_tDBOutput_12 = 0;
				int rowsToCommitCount_tDBOutput_12 = 0;
				int rejectedCount_tDBOutput_12 = 0;
				String dbschema_tDBOutput_12 = null;
				String tableName_tDBOutput_12 = null;
				boolean whetherReject_tDBOutput_12 = false;

				java.util.Calendar calendar_tDBOutput_12 = java.util.Calendar.getInstance();
				long year1_tDBOutput_12 = TalendDate.parseDate("yyyy-MM-dd", "0001-01-01").getTime();
				long year2_tDBOutput_12 = TalendDate.parseDate("yyyy-MM-dd", "1753-01-01").getTime();
				long year10000_tDBOutput_12 = TalendDate.parseDate("yyyy-MM-dd HH:mm:ss", "9999-12-31 24:00:00")
						.getTime();
				long date_tDBOutput_12;

				java.util.Calendar calendar_datetimeoffset_tDBOutput_12 = java.util.Calendar
						.getInstance(java.util.TimeZone.getTimeZone("UTC"));

				java.sql.Connection conn_tDBOutput_12 = null;
				String dbUser_tDBOutput_12 = null;
				dbschema_tDBOutput_12 = "dbo";
				String driverClass_tDBOutput_12 = "net.sourceforge.jtds.jdbc.Driver";

				java.lang.Class.forName(driverClass_tDBOutput_12);
				String port_tDBOutput_12 = "1433";
				String dbname_tDBOutput_12 = "orange_DW__";
				String url_tDBOutput_12 = "jdbc:jtds:sqlserver://" + "DESKTOP-6RL9E91";
				if (!"".equals(port_tDBOutput_12)) {
					url_tDBOutput_12 += ":" + "1433";
				}
				if (!"".equals(dbname_tDBOutput_12)) {
					url_tDBOutput_12 += "//" + "orange_DW__";

				}
				url_tDBOutput_12 += ";appName=" + projectName + ";" + "";
				dbUser_tDBOutput_12 = "sa";

				final String decryptedPassword_tDBOutput_12 = routines.system.PasswordEncryptUtil.decryptPassword(
						"enc:routine.encryption.key.v1:88hD6D6hgyCHPbC1Is7eCcA2mZujg1LcsCL+4GNs+/OZTZb6Taw=");

				String dbPwd_tDBOutput_12 = decryptedPassword_tDBOutput_12;
				conn_tDBOutput_12 = java.sql.DriverManager.getConnection(url_tDBOutput_12, dbUser_tDBOutput_12,
						dbPwd_tDBOutput_12);

				resourceMap.put("conn_tDBOutput_12", conn_tDBOutput_12);

				conn_tDBOutput_12.setAutoCommit(false);
				int commitEvery_tDBOutput_12 = 10000;
				int commitCounter_tDBOutput_12 = 0;

				int batchSize_tDBOutput_12 = 10000;
				int batchSizeCounter_tDBOutput_12 = 0;

				if (dbschema_tDBOutput_12 == null || dbschema_tDBOutput_12.trim().length() == 0) {
					tableName_tDBOutput_12 = "Dim_phase_de_l_opportunite";
				} else {
					tableName_tDBOutput_12 = dbschema_tDBOutput_12 + "].[" + "Dim_phase_de_l_opportunite";
				}
				int count_tDBOutput_12 = 0;

				String insert_tDBOutput_12 = "INSERT INTO [" + tableName_tDBOutput_12
						+ "] ([Phase_de_l_opportunite]) VALUES (?)";
				java.sql.PreparedStatement pstmt_tDBOutput_12 = conn_tDBOutput_12.prepareStatement(insert_tDBOutput_12);
				resourceMap.put("pstmt_tDBOutput_12", pstmt_tDBOutput_12);

				/**
				 * [tDBOutput_12 begin ] stop
				 */

				/**
				 * [tUniqRow_11 begin ] start
				 */

				ok_Hash.put("tUniqRow_11", false);
				start_Hash.put("tUniqRow_11", System.currentTimeMillis());

				currentComponent = "tUniqRow_11";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "ww");
				}

				int tos_count_tUniqRow_11 = 0;

				class KeyStruct_tUniqRow_11 {

					private static final int DEFAULT_HASHCODE = 1;
					private static final int PRIME = 31;
					private int hashCode = DEFAULT_HASHCODE;
					public boolean hashCodeDirty = true;

					String Phase_de_l_opportunite;

					@Override
					public int hashCode() {
						if (this.hashCodeDirty) {
							final int prime = PRIME;
							int result = DEFAULT_HASHCODE;

							result = prime * result + ((this.Phase_de_l_opportunite == null) ? 0
									: this.Phase_de_l_opportunite.hashCode());

							this.hashCode = result;
							this.hashCodeDirty = false;
						}
						return this.hashCode;
					}

					@Override
					public boolean equals(Object obj) {
						if (this == obj)
							return true;
						if (obj == null)
							return false;
						if (getClass() != obj.getClass())
							return false;
						final KeyStruct_tUniqRow_11 other = (KeyStruct_tUniqRow_11) obj;

						if (this.Phase_de_l_opportunite == null) {
							if (other.Phase_de_l_opportunite != null)
								return false;

						} else if (!this.Phase_de_l_opportunite.equals(other.Phase_de_l_opportunite))

							return false;

						return true;
					}

				}

				int nb_uniques_tUniqRow_11 = 0;
				int nb_duplicates_tUniqRow_11 = 0;
				KeyStruct_tUniqRow_11 finder_tUniqRow_11 = new KeyStruct_tUniqRow_11();
				java.util.Set<KeyStruct_tUniqRow_11> keystUniqRow_11 = new java.util.HashSet<KeyStruct_tUniqRow_11>();

				/**
				 * [tUniqRow_11 begin ] stop
				 */

				/**
				 * [tMap_42 begin ] start
				 */

				ok_Hash.put("tMap_42", false);
				start_Hash.put("tMap_42", System.currentTimeMillis());

				currentComponent = "tMap_42";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row52");
				}

				int tos_count_tMap_42 = 0;

// ###############################
// # Lookup's keys initialization

				org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row56Struct> tHash_Lookup_row56 = (org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row56Struct>) ((org.talend.designer.components.lookup.memory.AdvancedMemoryLookup<row56Struct>) globalMap
						.get("tHash_Lookup_row56"));

				row56Struct row56HashKey = new row56Struct();
				row56Struct row56Default = new row56Struct();
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_42__Struct {
				}
				Var__tMap_42__Struct Var__tMap_42 = new Var__tMap_42__Struct();
// ###############################

// ###############################
// # Outputs initialization
				wwStruct ww_tmp = new wwStruct();
// ###############################

				/**
				 * [tMap_42 begin ] stop
				 */

				/**
				 * [tUnite_10 begin ] start
				 */

				ok_Hash.put("tUnite_10", false);
				start_Hash.put("tUnite_10", System.currentTimeMillis());

				currentComponent = "tUnite_10";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "copyOfcopyOft7_0_0",
							"copyOfcopyOft8_0_0");
				}

				int tos_count_tUnite_10 = 0;

				int nb_line_tUnite_10 = 0;

				/**
				 * [tUnite_10 begin ] stop
				 */

				/**
				 * [tMap_36 begin ] start
				 */

				ok_Hash.put("tMap_36", false);
				start_Hash.put("tMap_36", System.currentTimeMillis());

				currentComponent = "tMap_36";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row55");
				}

				int tos_count_tMap_36 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_36__Struct {
				}
				Var__tMap_36__Struct Var__tMap_36 = new Var__tMap_36__Struct();
// ###############################

// ###############################
// # Outputs initialization
				copyOfcopyOft8_0_0Struct copyOfcopyOft8_0_0_tmp = new copyOfcopyOft8_0_0Struct();
// ###############################

				/**
				 * [tMap_36 begin ] stop
				 */

				/**
				 * [tFileInputExcel_36 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_36", false);
				start_Hash.put("tFileInputExcel_36", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_36";

				int tos_count_tFileInputExcel_36 = 0;

				final String decryptedPassword_tFileInputExcel_36 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:CNMOZNs+no7x5ot/oaCtpRnn/XnTfzMV/lD+2A==");
				String password_tFileInputExcel_36 = decryptedPassword_tFileInputExcel_36;
				if (password_tFileInputExcel_36.isEmpty()) {
					password_tFileInputExcel_36 = null;
				}
				class RegexUtil_tFileInputExcel_36 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_36 regexUtil_tFileInputExcel_36 = new RegexUtil_tFileInputExcel_36();

				Object source_tFileInputExcel_36 = "C:/Users/DELL/Downloads/Copie de Rapport Pipe et realisations DME Data et VoIP (2).xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_36 = null;

				if (source_tFileInputExcel_36 instanceof String) {
					workbook_tFileInputExcel_36 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_36), password_tFileInputExcel_36,
									true);
				} else if (source_tFileInputExcel_36 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_36 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_36, password_tFileInputExcel_36);
				} else {
					workbook_tFileInputExcel_36 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_36 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_36.addAll(
							regexUtil_tFileInputExcel_36.getSheets(workbook_tFileInputExcel_36, "Source", false));
					if (sheetList_tFileInputExcel_36.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_36 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_36 : sheetList_tFileInputExcel_36) {
						if (sheet_FilterNull_tFileInputExcel_36 != null
								&& sheetList_FilterNull_tFileInputExcel_36.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_36.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_36.add(sheet_FilterNull_tFileInputExcel_36);
						}
					}
					sheetList_tFileInputExcel_36 = sheetList_FilterNull_tFileInputExcel_36;
					if (sheetList_tFileInputExcel_36.size() > 0) {
						int nb_line_tFileInputExcel_36 = 0;

						int begin_line_tFileInputExcel_36 = 1;

						int footer_input_tFileInputExcel_36 = 0;

						int end_line_tFileInputExcel_36 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_36 : sheetList_tFileInputExcel_36) {
							end_line_tFileInputExcel_36 += (sheet_tFileInputExcel_36.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_36 -= footer_input_tFileInputExcel_36;
						int limit_tFileInputExcel_36 = -1;
						int start_column_tFileInputExcel_36 = 1 - 1;
						int end_column_tFileInputExcel_36 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_36 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_36 = sheetList_tFileInputExcel_36
								.get(0);
						int rowCount_tFileInputExcel_36 = 0;
						int sheetIndex_tFileInputExcel_36 = 0;
						int currentRows_tFileInputExcel_36 = (sheetList_tFileInputExcel_36.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_36 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_36 = df_tFileInputExcel_36.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_36 = begin_line_tFileInputExcel_36; i_tFileInputExcel_36 < end_line_tFileInputExcel_36; i_tFileInputExcel_36++) {

							int emptyColumnCount_tFileInputExcel_36 = 0;

							if (limit_tFileInputExcel_36 != -1
									&& nb_line_tFileInputExcel_36 >= limit_tFileInputExcel_36) {
								break;
							}

							while (i_tFileInputExcel_36 >= rowCount_tFileInputExcel_36
									+ currentRows_tFileInputExcel_36) {
								rowCount_tFileInputExcel_36 += currentRows_tFileInputExcel_36;
								sheet_tFileInputExcel_36 = sheetList_tFileInputExcel_36
										.get(++sheetIndex_tFileInputExcel_36);
								currentRows_tFileInputExcel_36 = (sheet_tFileInputExcel_36.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_36_CURRENT_SHEET", sheet_tFileInputExcel_36.getSheetName());
							if (rowCount_tFileInputExcel_36 <= i_tFileInputExcel_36) {
								row_tFileInputExcel_36 = sheet_tFileInputExcel_36
										.getRow(i_tFileInputExcel_36 - rowCount_tFileInputExcel_36);
							}
							row55 = null;
							int tempRowLength_tFileInputExcel_36 = 27;

							int columnIndex_tFileInputExcel_36 = 0;

							String[] temp_row_tFileInputExcel_36 = new String[tempRowLength_tFileInputExcel_36];
							int excel_end_column_tFileInputExcel_36;
							if (row_tFileInputExcel_36 == null) {
								excel_end_column_tFileInputExcel_36 = 0;
							} else {
								excel_end_column_tFileInputExcel_36 = row_tFileInputExcel_36.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_36;
							if (end_column_tFileInputExcel_36 == -1) {
								actual_end_column_tFileInputExcel_36 = excel_end_column_tFileInputExcel_36;
							} else {
								actual_end_column_tFileInputExcel_36 = end_column_tFileInputExcel_36 > excel_end_column_tFileInputExcel_36
										? excel_end_column_tFileInputExcel_36
										: end_column_tFileInputExcel_36;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_36 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_36; i++) {
								if (i + start_column_tFileInputExcel_36 < actual_end_column_tFileInputExcel_36) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_36 = row_tFileInputExcel_36
											.getCell(i + start_column_tFileInputExcel_36);
									if (cell_tFileInputExcel_36 != null) {
										switch (cell_tFileInputExcel_36.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_36[i] = cell_tFileInputExcel_36
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_36)) {
												temp_row_tFileInputExcel_36[i] = cell_tFileInputExcel_36
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_36[i] = df_tFileInputExcel_36
														.format(cell_tFileInputExcel_36.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_36[i] = String
													.valueOf(cell_tFileInputExcel_36.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_36.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_36[i] = cell_tFileInputExcel_36
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_36)) {
													temp_row_tFileInputExcel_36[i] = cell_tFileInputExcel_36
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_36 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_36.getNumericCellValue());
													temp_row_tFileInputExcel_36[i] = ne_tFileInputExcel_36
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_36[i] = String
														.valueOf(cell_tFileInputExcel_36.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_36[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_36[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_36[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_36[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_36 = false;
							row55 = new row55Struct();
							int curColNum_tFileInputExcel_36 = -1;
							String curColName_tFileInputExcel_36 = "";
							try {
								columnIndex_tFileInputExcel_36 = 0;

								if (temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36].length() > 0) {
									curColNum_tFileInputExcel_36 = columnIndex_tFileInputExcel_36
											+ start_column_tFileInputExcel_36 + 1;
									curColName_tFileInputExcel_36 = "Client_Prospect";

									row55.Client_Prospect = temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36];
								} else {
									row55.Client_Prospect = null;
									emptyColumnCount_tFileInputExcel_36++;
								}
								columnIndex_tFileInputExcel_36 = 1;

								if (temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36].length() > 0) {
									curColNum_tFileInputExcel_36 = columnIndex_tFileInputExcel_36
											+ start_column_tFileInputExcel_36 + 1;
									curColName_tFileInputExcel_36 = "Sujet";

									row55.Sujet = temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36];
								} else {
									row55.Sujet = null;
									emptyColumnCount_tFileInputExcel_36++;
								}
								columnIndex_tFileInputExcel_36 = 2;

								if (temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36].length() > 0) {
									curColNum_tFileInputExcel_36 = columnIndex_tFileInputExcel_36
											+ start_column_tFileInputExcel_36 + 1;
									curColName_tFileInputExcel_36 = "Acces";

									row55.Acces = temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36];
								} else {
									row55.Acces = null;
									emptyColumnCount_tFileInputExcel_36++;
								}
								columnIndex_tFileInputExcel_36 = 3;

								if (temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36].length() > 0) {
									curColNum_tFileInputExcel_36 = columnIndex_tFileInputExcel_36
											+ start_column_tFileInputExcel_36 + 1;
									curColName_tFileInputExcel_36 = "Type_d_acces";

									row55.Type_d_acces = temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36];
								} else {
									row55.Type_d_acces = null;
									emptyColumnCount_tFileInputExcel_36++;
								}
								columnIndex_tFileInputExcel_36 = 4;

								if (temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36].length() > 0) {
									curColNum_tFileInputExcel_36 = columnIndex_tFileInputExcel_36
											+ start_column_tFileInputExcel_36 + 1;
									curColName_tFileInputExcel_36 = "Account_Manager__Client_Prospect";

									row55.Account_Manager__Client_Prospect = temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36];
								} else {
									row55.Account_Manager__Client_Prospect = null;
									emptyColumnCount_tFileInputExcel_36++;
								}
								columnIndex_tFileInputExcel_36 = 5;

								if (temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36].length() > 0) {
									curColNum_tFileInputExcel_36 = columnIndex_tFileInputExcel_36
											+ start_column_tFileInputExcel_36 + 1;
									curColName_tFileInputExcel_36 = "Cree_le";

									row55.Cree_le = temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36];
								} else {
									row55.Cree_le = null;
									emptyColumnCount_tFileInputExcel_36++;
								}
								columnIndex_tFileInputExcel_36 = 6;

								if (temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36].length() > 0) {
									curColNum_tFileInputExcel_36 = columnIndex_tFileInputExcel_36
											+ start_column_tFileInputExcel_36 + 1;
									curColName_tFileInputExcel_36 = "Mois_et_annee_de_creation";

									row55.Mois_et_annee_de_creation = temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36];
								} else {
									row55.Mois_et_annee_de_creation = null;
									emptyColumnCount_tFileInputExcel_36++;
								}
								columnIndex_tFileInputExcel_36 = 7;

								if (temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36].length() > 0) {
									curColNum_tFileInputExcel_36 = columnIndex_tFileInputExcel_36
											+ start_column_tFileInputExcel_36 + 1;
									curColName_tFileInputExcel_36 = "Cree_par";

									row55.Cree_par = temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36];
								} else {
									row55.Cree_par = null;
									emptyColumnCount_tFileInputExcel_36++;
								}
								columnIndex_tFileInputExcel_36 = 8;

								if (temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36].length() > 0) {
									curColNum_tFileInputExcel_36 = columnIndex_tFileInputExcel_36
											+ start_column_tFileInputExcel_36 + 1;
									curColName_tFileInputExcel_36 = "Equipe";

									row55.Equipe = temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36];
								} else {
									row55.Equipe = null;
									emptyColumnCount_tFileInputExcel_36++;
								}
								columnIndex_tFileInputExcel_36 = 9;

								if (temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36].length() > 0) {
									curColNum_tFileInputExcel_36 = columnIndex_tFileInputExcel_36
											+ start_column_tFileInputExcel_36 + 1;
									curColName_tFileInputExcel_36 = "Proprietaire";

									row55.Proprietaire = temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36];
								} else {
									row55.Proprietaire = null;
									emptyColumnCount_tFileInputExcel_36++;
								}
								columnIndex_tFileInputExcel_36 = 10;

								if (temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36].length() > 0) {
									curColNum_tFileInputExcel_36 = columnIndex_tFileInputExcel_36
											+ start_column_tFileInputExcel_36 + 1;
									curColName_tFileInputExcel_36 = "Phase_de_l_opportunite";

									row55.Phase_de_l_opportunite = temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36];
								} else {
									row55.Phase_de_l_opportunite = null;
									emptyColumnCount_tFileInputExcel_36++;
								}
								columnIndex_tFileInputExcel_36 = 11;

								if (temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36].length() > 0) {
									curColNum_tFileInputExcel_36 = columnIndex_tFileInputExcel_36
											+ start_column_tFileInputExcel_36 + 1;
									curColName_tFileInputExcel_36 = "Valeur_ordering";

									row55.Valeur_ordering = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36], null,
											'.' == decimalChar_tFileInputExcel_36 ? null
													: decimalChar_tFileInputExcel_36));
								} else {
									row55.Valeur_ordering = null;
									emptyColumnCount_tFileInputExcel_36++;
								}
								columnIndex_tFileInputExcel_36 = 12;

								if (temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36].length() > 0) {
									curColNum_tFileInputExcel_36 = columnIndex_tFileInputExcel_36
											+ start_column_tFileInputExcel_36 + 1;
									curColName_tFileInputExcel_36 = "Statut";

									row55.Statut = temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36];
								} else {
									row55.Statut = null;
									emptyColumnCount_tFileInputExcel_36++;
								}
								columnIndex_tFileInputExcel_36 = 13;

								if (temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36].length() > 0) {
									curColNum_tFileInputExcel_36 = columnIndex_tFileInputExcel_36
											+ start_column_tFileInputExcel_36 + 1;
									curColName_tFileInputExcel_36 = "Staut_Final";

									row55.Staut_Final = temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36];
								} else {
									row55.Staut_Final = null;
									emptyColumnCount_tFileInputExcel_36++;
								}
								columnIndex_tFileInputExcel_36 = 14;

								if (temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36].length() > 0) {
									curColNum_tFileInputExcel_36 = columnIndex_tFileInputExcel_36
											+ start_column_tFileInputExcel_36 + 1;
									curColName_tFileInputExcel_36 = "Tarifs";

									row55.Tarifs = temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36];
								} else {
									row55.Tarifs = null;
									emptyColumnCount_tFileInputExcel_36++;
								}
								columnIndex_tFileInputExcel_36 = 15;

								if (temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36].length() > 0) {
									curColNum_tFileInputExcel_36 = columnIndex_tFileInputExcel_36
											+ start_column_tFileInputExcel_36 + 1;
									curColName_tFileInputExcel_36 = "Montant_total";

									row55.Montant_total = temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36];
								} else {
									row55.Montant_total = null;
									emptyColumnCount_tFileInputExcel_36++;
								}
								columnIndex_tFileInputExcel_36 = 16;

								if (temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36].length() > 0) {
									curColNum_tFileInputExcel_36 = columnIndex_tFileInputExcel_36
											+ start_column_tFileInputExcel_36 + 1;
									curColName_tFileInputExcel_36 = "Parent__Produit_existant";

									row55.Parent__Produit_existant = temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36];
								} else {
									row55.Parent__Produit_existant = null;
									emptyColumnCount_tFileInputExcel_36++;
								}
								columnIndex_tFileInputExcel_36 = 17;

								if (temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36].length() > 0) {
									curColNum_tFileInputExcel_36 = columnIndex_tFileInputExcel_36
											+ start_column_tFileInputExcel_36 + 1;
									curColName_tFileInputExcel_36 = "Produit_existant";

									row55.Produit_existant = temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36];
								} else {
									row55.Produit_existant = null;
									emptyColumnCount_tFileInputExcel_36++;
								}
								columnIndex_tFileInputExcel_36 = 18;

								if (temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36].length() > 0) {
									curColNum_tFileInputExcel_36 = columnIndex_tFileInputExcel_36
											+ start_column_tFileInputExcel_36 + 1;
									curColName_tFileInputExcel_36 = "Operation";

									row55.Operation = temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36];
								} else {
									row55.Operation = null;
									emptyColumnCount_tFileInputExcel_36++;
								}
								columnIndex_tFileInputExcel_36 = 19;

								if (temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36].length() > 0) {
									curColNum_tFileInputExcel_36 = columnIndex_tFileInputExcel_36
											+ start_column_tFileInputExcel_36 + 1;
									curColName_tFileInputExcel_36 = "Type_d_operation";

									row55.Type_d_operation = temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36];
								} else {
									row55.Type_d_operation = null;
									emptyColumnCount_tFileInputExcel_36++;
								}
								columnIndex_tFileInputExcel_36 = 20;

								if (temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36].length() > 0) {
									curColNum_tFileInputExcel_36 = columnIndex_tFileInputExcel_36
											+ start_column_tFileInputExcel_36 + 1;
									curColName_tFileInputExcel_36 = "Prix_unitaire";

									row55.Prix_unitaire = temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36];
								} else {
									row55.Prix_unitaire = null;
									emptyColumnCount_tFileInputExcel_36++;
								}
								columnIndex_tFileInputExcel_36 = 21;

								if (temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36].length() > 0) {
									curColNum_tFileInputExcel_36 = columnIndex_tFileInputExcel_36
											+ start_column_tFileInputExcel_36 + 1;
									curColName_tFileInputExcel_36 = "Quantite";

									row55.Quantite = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36], null,
											'.' == decimalChar_tFileInputExcel_36 ? null
													: decimalChar_tFileInputExcel_36));
								} else {
									row55.Quantite = null;
									emptyColumnCount_tFileInputExcel_36++;
								}
								columnIndex_tFileInputExcel_36 = 22;

								if (temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36].length() > 0) {
									curColNum_tFileInputExcel_36 = columnIndex_tFileInputExcel_36
											+ start_column_tFileInputExcel_36 + 1;
									curColName_tFileInputExcel_36 = "Remise";

									row55.Remise = temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36];
								} else {
									row55.Remise = null;
									emptyColumnCount_tFileInputExcel_36++;
								}
								columnIndex_tFileInputExcel_36 = 23;

								if (temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36].length() > 0) {
									curColNum_tFileInputExcel_36 = columnIndex_tFileInputExcel_36
											+ start_column_tFileInputExcel_36 + 1;
									curColName_tFileInputExcel_36 = "Montant_de_la_remise_manuelle";

									row55.Montant_de_la_remise_manuelle = temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36];
								} else {
									row55.Montant_de_la_remise_manuelle = null;
									emptyColumnCount_tFileInputExcel_36++;
								}
								columnIndex_tFileInputExcel_36 = 24;

								if (temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36].length() > 0) {
									curColNum_tFileInputExcel_36 = columnIndex_tFileInputExcel_36
											+ start_column_tFileInputExcel_36 + 1;
									curColName_tFileInputExcel_36 = "Total_final";

									row55.Total_final = temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36];
								} else {
									row55.Total_final = null;
									emptyColumnCount_tFileInputExcel_36++;
								}
								columnIndex_tFileInputExcel_36 = 25;

								if (temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36].length() > 0) {
									curColNum_tFileInputExcel_36 = columnIndex_tFileInputExcel_36
											+ start_column_tFileInputExcel_36 + 1;
									curColName_tFileInputExcel_36 = "Mois_et_annee_de_modification";

									row55.Mois_et_annee_de_modification = temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36];
								} else {
									row55.Mois_et_annee_de_modification = null;
									emptyColumnCount_tFileInputExcel_36++;
								}
								columnIndex_tFileInputExcel_36 = 26;

								if (temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36].length() > 0) {
									curColNum_tFileInputExcel_36 = columnIndex_tFileInputExcel_36
											+ start_column_tFileInputExcel_36 + 1;
									curColName_tFileInputExcel_36 = "Modifie_le";

									if (26 < actual_end_column_tFileInputExcel_36) {
										try {
											if (row_tFileInputExcel_36
													.getCell(columnIndex_tFileInputExcel_36
															+ start_column_tFileInputExcel_36)
													.getCellType() == org.apache.poi.ss.usermodel.CellType.NUMERIC
													&& org.apache.poi.ss.usermodel.DateUtil
															.isCellDateFormatted(row_tFileInputExcel_36
																	.getCell(columnIndex_tFileInputExcel_36
																			+ start_column_tFileInputExcel_36))) {
												row55.Modifie_le = row_tFileInputExcel_36
														.getCell(columnIndex_tFileInputExcel_36
																+ start_column_tFileInputExcel_36)
														.getDateCellValue();
											} else {
												java.util.Date tempDate_tFileInputExcel_36 = ParserUtils.parseTo_Date(
														temp_row_tFileInputExcel_36[columnIndex_tFileInputExcel_36],
														"dd-MM-yyyy");
												if (tempDate_tFileInputExcel_36
														.after((new SimpleDateFormat("yyyy/MM/dd hh:mm:ss.SSS"))
																.parse("9999/12/31 23:59:59.999"))
														|| tempDate_tFileInputExcel_36
																.before((new SimpleDateFormat("yyyy/MM/dd"))
																		.parse("1900/01/01"))) {
													throw new RuntimeException("The cell format is not Date in ( Row. "
															+ (nb_line_tFileInputExcel_36 + 1) + " and ColumnNum. "
															+ curColNum_tFileInputExcel_36 + " )");
												} else {
													row55.Modifie_le = tempDate_tFileInputExcel_36;
												}
											}
										} catch (java.lang.Exception e) {
											globalMap.put("tFileInputExcel_36_ERROR_MESSAGE", e.getMessage());

											throw new RuntimeException("The cell format is not Date in ( Row. "
													+ (nb_line_tFileInputExcel_36 + 1) + " and ColumnNum. "
													+ curColNum_tFileInputExcel_36 + " )");
										}
									}

								} else {
									row55.Modifie_le = null;
									emptyColumnCount_tFileInputExcel_36++;
								}

								nb_line_tFileInputExcel_36++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_36_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_36 = true;
								System.err.println(e.getMessage());
								row55 = null;
							}

							/**
							 * [tFileInputExcel_36 begin ] stop
							 */

							/**
							 * [tFileInputExcel_36 main ] start
							 */

							currentComponent = "tFileInputExcel_36";

							tos_count_tFileInputExcel_36++;

							/**
							 * [tFileInputExcel_36 main ] stop
							 */

							/**
							 * [tFileInputExcel_36 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_36";

							/**
							 * [tFileInputExcel_36 process_data_begin ] stop
							 */
// Start of branch "row55"
							if (row55 != null) {

								/**
								 * [tMap_36 main ] start
								 */

								currentComponent = "tMap_36";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row55"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_36 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_36 = false;
								boolean mainRowRejected_tMap_36 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_36__Struct Var = Var__tMap_36;// ###############################
									// ###############################
									// # Output tables

									copyOfcopyOft8_0_0 = null;

// # Output table : 'copyOfcopyOft8_0_0'
									copyOfcopyOft8_0_0_tmp.Phase_de_l_opportunite = row55.Phase_de_l_opportunite;
									copyOfcopyOft8_0_0 = copyOfcopyOft8_0_0_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_36 = false;

								tos_count_tMap_36++;

								/**
								 * [tMap_36 main ] stop
								 */

								/**
								 * [tMap_36 process_data_begin ] start
								 */

								currentComponent = "tMap_36";

								/**
								 * [tMap_36 process_data_begin ] stop
								 */
// Start of branch "copyOfcopyOft8_0_0"
								if (copyOfcopyOft8_0_0 != null) {

									/**
									 * [tUnite_10 main ] start
									 */

									currentComponent = "tUnite_10";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "copyOfcopyOft8_0_0"

										);
									}

//////////

// for output
									row52 = new row52Struct();

									row52.Phase_de_l_opportunite = copyOfcopyOft8_0_0.Phase_de_l_opportunite;

									nb_line_tUnite_10++;

//////////

									tos_count_tUnite_10++;

									/**
									 * [tUnite_10 main ] stop
									 */

									/**
									 * [tUnite_10 process_data_begin ] start
									 */

									currentComponent = "tUnite_10";

									/**
									 * [tUnite_10 process_data_begin ] stop
									 */

									/**
									 * [tMap_42 main ] start
									 */

									currentComponent = "tMap_42";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "row52"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_42 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_42 = false;
									boolean mainRowRejected_tMap_42 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row56"
									///////////////////////////////////////////////

									boolean forceLooprow56 = false;

									row56Struct row56ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_42) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_42 = false;

										row56HashKey.Phase_de_l_opportunite = row52.Phase_de_l_opportunite;

										row56HashKey.hashCodeDirty = true;

										tHash_Lookup_row56.lookup(row56HashKey);

										if (!tHash_Lookup_row56.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_42 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row56 != null && tHash_Lookup_row56.getCount(row56HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row56' and it contains more one result from keys :
										// row56.Phase_de_l_opportunite = '" + row56HashKey.Phase_de_l_opportunite +
										// "'");
									} // G 071

									row56Struct row56 = null;

									row56Struct fromLookup_row56 = null;
									row56 = row56Default;

									if (tHash_Lookup_row56 != null && tHash_Lookup_row56.hasNext()) { // G 099

										fromLookup_row56 = tHash_Lookup_row56.next();

									} // G 099

									if (fromLookup_row56 != null) {
										row56 = fromLookup_row56;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_42__Struct Var = Var__tMap_42;// ###############################
										// ###############################
										// # Output tables

										ww = null;

										if (!rejectedInnerJoin_tMap_42) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'ww'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_42) {
											ww_tmp.Phase_de_l_opportunite = row52.Phase_de_l_opportunite;
											ww = ww_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_42 = false;

									tos_count_tMap_42++;

									/**
									 * [tMap_42 main ] stop
									 */

									/**
									 * [tMap_42 process_data_begin ] start
									 */

									currentComponent = "tMap_42";

									/**
									 * [tMap_42 process_data_begin ] stop
									 */
// Start of branch "ww"
									if (ww != null) {

										/**
										 * [tUniqRow_11 main ] start
										 */

										currentComponent = "tUniqRow_11";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "ww"

											);
										}

										row57 = null;
										finder_tUniqRow_11.Phase_de_l_opportunite = ww.Phase_de_l_opportunite;
										finder_tUniqRow_11.hashCodeDirty = true;
										if (!keystUniqRow_11.contains(finder_tUniqRow_11)) {
											KeyStruct_tUniqRow_11 new_tUniqRow_11 = new KeyStruct_tUniqRow_11();

											new_tUniqRow_11.Phase_de_l_opportunite = ww.Phase_de_l_opportunite;

											keystUniqRow_11.add(new_tUniqRow_11);
											if (row57 == null) {

												row57 = new row57Struct();
											}
											row57.Phase_de_l_opportunite = ww.Phase_de_l_opportunite;
											nb_uniques_tUniqRow_11++;
										} else {
											nb_duplicates_tUniqRow_11++;
										}

										tos_count_tUniqRow_11++;

										/**
										 * [tUniqRow_11 main ] stop
										 */

										/**
										 * [tUniqRow_11 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_11";

										/**
										 * [tUniqRow_11 process_data_begin ] stop
										 */
// Start of branch "row57"
										if (row57 != null) {

											/**
											 * [tDBOutput_12 main ] start
											 */

											currentComponent = "tDBOutput_12";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row57"

												);
											}

											whetherReject_tDBOutput_12 = false;
											if (row57.Phase_de_l_opportunite == null) {
												pstmt_tDBOutput_12.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_12.setString(1, row57.Phase_de_l_opportunite);
											}

											pstmt_tDBOutput_12.addBatch();
											nb_line_tDBOutput_12++;

											batchSizeCounter_tDBOutput_12++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_12 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_12)
														throws Exception {
													try {

														for (int countEach_tDBOutput_12 : pstmt_tDBOutput_12
																.executeBatch()) {
															if (countEach_tDBOutput_12 == -2
																	|| countEach_tDBOutput_12 == -3) {
																break;
															}
															counter += countEach_tDBOutput_12;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_12_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_12 = 0;
														for (int countEach_tDBOutput_12 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_12 < 0 ? 0
																	: countEach_tDBOutput_12);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_12)
														throws Exception {
													try {

														for (int countEach_tDBOutput_12 : pstmt_tDBOutput_12
																.executeBatch()) {
															if (countEach_tDBOutput_12 == -2
																	|| countEach_tDBOutput_12 == -3) {
																break;
															}
															counter += countEach_tDBOutput_12;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_12_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_12 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_12 < 0 ? 0
																	: countEach_tDBOutput_12);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_12 > 0)
													&& (batchSize_tDBOutput_12 <= batchSizeCounter_tDBOutput_12)) {

												insertedCount_tDBOutput_12 = new LimitBytesHelper_tDBOutput_12()
														.limitBytePart1(insertedCount_tDBOutput_12, pstmt_tDBOutput_12);
												rowsToCommitCount_tDBOutput_12 = insertedCount_tDBOutput_12;

												batchSizeCounter_tDBOutput_12 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_12++;
											if (commitEvery_tDBOutput_12 <= commitCounter_tDBOutput_12) {
												if ((batchSize_tDBOutput_12 > 0)
														&& (batchSizeCounter_tDBOutput_12 > 0)) {

													insertedCount_tDBOutput_12 = new LimitBytesHelper_tDBOutput_12()
															.limitBytePart1(insertedCount_tDBOutput_12,
																	pstmt_tDBOutput_12);

													batchSizeCounter_tDBOutput_12 = 0;
												}
												if (rowsToCommitCount_tDBOutput_12 != 0) {

												}
												conn_tDBOutput_12.commit();
												if (rowsToCommitCount_tDBOutput_12 != 0) {

													rowsToCommitCount_tDBOutput_12 = 0;
												}
												commitCounter_tDBOutput_12 = 0;
											}

											tos_count_tDBOutput_12++;

											/**
											 * [tDBOutput_12 main ] stop
											 */

											/**
											 * [tDBOutput_12 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_12";

											/**
											 * [tDBOutput_12 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_12 process_data_end ] start
											 */

											currentComponent = "tDBOutput_12";

											/**
											 * [tDBOutput_12 process_data_end ] stop
											 */

										} // End of branch "row57"

										/**
										 * [tUniqRow_11 process_data_end ] start
										 */

										currentComponent = "tUniqRow_11";

										/**
										 * [tUniqRow_11 process_data_end ] stop
										 */

									} // End of branch "ww"

									/**
									 * [tMap_42 process_data_end ] start
									 */

									currentComponent = "tMap_42";

									/**
									 * [tMap_42 process_data_end ] stop
									 */

									/**
									 * [tUnite_10 process_data_end ] start
									 */

									currentComponent = "tUnite_10";

									/**
									 * [tUnite_10 process_data_end ] stop
									 */

								} // End of branch "copyOfcopyOft8_0_0"

								/**
								 * [tMap_36 process_data_end ] start
								 */

								currentComponent = "tMap_36";

								/**
								 * [tMap_36 process_data_end ] stop
								 */

							} // End of branch "row55"

							/**
							 * [tFileInputExcel_36 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_36";

							/**
							 * [tFileInputExcel_36 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_36 end ] start
							 */

							currentComponent = "tFileInputExcel_36";

						}

						globalMap.put("tFileInputExcel_36_NB_LINE", nb_line_tFileInputExcel_36);

					}

				} finally {

					if (!(source_tFileInputExcel_36 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_36.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_36", true);
				end_Hash.put("tFileInputExcel_36", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_36 end ] stop
				 */

				/**
				 * [tMap_36 end ] start
				 */

				currentComponent = "tMap_36";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row55");
				}

				ok_Hash.put("tMap_36", true);
				end_Hash.put("tMap_36", System.currentTimeMillis());

				/**
				 * [tMap_36 end ] stop
				 */

				/**
				 * [tMap_37 begin ] start
				 */

				ok_Hash.put("tMap_37", false);
				start_Hash.put("tMap_37", System.currentTimeMillis());

				currentComponent = "tMap_37";

				if (execStat) {
					runStat.updateStatOnConnection(resourceMap, iterateId, 0, 0, "row53");
				}

				int tos_count_tMap_37 = 0;

// ###############################
// # Lookup's keys initialization
// ###############################        

// ###############################
// # Vars initialization
				class Var__tMap_37__Struct {
				}
				Var__tMap_37__Struct Var__tMap_37 = new Var__tMap_37__Struct();
// ###############################

// ###############################
// # Outputs initialization
				copyOfcopyOft7_0_0Struct copyOfcopyOft7_0_0_tmp = new copyOfcopyOft7_0_0Struct();
// ###############################

				/**
				 * [tMap_37 begin ] stop
				 */

				/**
				 * [tFileInputExcel_33 begin ] start
				 */

				ok_Hash.put("tFileInputExcel_33", false);
				start_Hash.put("tFileInputExcel_33", System.currentTimeMillis());

				currentComponent = "tFileInputExcel_33";

				int tos_count_tFileInputExcel_33 = 0;

				final String decryptedPassword_tFileInputExcel_33 = routines.system.PasswordEncryptUtil
						.decryptPassword("enc:routine.encryption.key.v1:JtfYe2m+ZoKMaRwjFInbwx0NKA89lAb2t69qxA==");
				String password_tFileInputExcel_33 = decryptedPassword_tFileInputExcel_33;
				if (password_tFileInputExcel_33.isEmpty()) {
					password_tFileInputExcel_33 = null;
				}
				class RegexUtil_tFileInputExcel_33 {

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, String oneSheetName,
							boolean useRegex) {

						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();

						if (useRegex) {// this part process the regex issue

							java.util.regex.Pattern pattern = java.util.regex.Pattern.compile(oneSheetName);
							for (org.apache.poi.ss.usermodel.Sheet sheet : workbook) {
								String sheetName = sheet.getSheetName();
								java.util.regex.Matcher matcher = pattern.matcher(sheetName);
								if (matcher.matches()) {
									if (sheet != null) {
										list.add((org.apache.poi.xssf.usermodel.XSSFSheet) sheet);
									}
								}
							}

						} else {
							org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
									.getSheet(oneSheetName);
							if (sheet != null) {
								list.add(sheet);
							}

						}

						return list;
					}

					public java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> getSheets(
							org.apache.poi.xssf.usermodel.XSSFWorkbook workbook, int index, boolean useRegex) {
						java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> list = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
						org.apache.poi.xssf.usermodel.XSSFSheet sheet = (org.apache.poi.xssf.usermodel.XSSFSheet) workbook
								.getSheetAt(index);
						if (sheet != null) {
							list.add(sheet);
						}
						return list;
					}

				}
				RegexUtil_tFileInputExcel_33 regexUtil_tFileInputExcel_33 = new RegexUtil_tFileInputExcel_33();

				Object source_tFileInputExcel_33 = "C:/Users/DELL/Downloads/Copie_de_EXTRACT_OPPORTUNITES_MOBILE_BB_VF_090520222381_1ans.xlsx";
				org.apache.poi.xssf.usermodel.XSSFWorkbook workbook_tFileInputExcel_33 = null;

				if (source_tFileInputExcel_33 instanceof String) {
					workbook_tFileInputExcel_33 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create(new java.io.File((String) source_tFileInputExcel_33), password_tFileInputExcel_33,
									true);
				} else if (source_tFileInputExcel_33 instanceof java.io.InputStream) {
					workbook_tFileInputExcel_33 = (org.apache.poi.xssf.usermodel.XSSFWorkbook) org.apache.poi.ss.usermodel.WorkbookFactory
							.create((java.io.InputStream) source_tFileInputExcel_33, password_tFileInputExcel_33);
				} else {
					workbook_tFileInputExcel_33 = null;
					throw new java.lang.Exception("The data source should be specified as Inputstream or File Path!");
				}
				try {

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_tFileInputExcel_33 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					sheetList_tFileInputExcel_33.addAll(
							regexUtil_tFileInputExcel_33.getSheets(workbook_tFileInputExcel_33, "Source", false));
					if (sheetList_tFileInputExcel_33.size() <= 0) {
						throw new RuntimeException("Special sheets not exist!");
					}

					java.util.List<org.apache.poi.xssf.usermodel.XSSFSheet> sheetList_FilterNull_tFileInputExcel_33 = new java.util.ArrayList<org.apache.poi.xssf.usermodel.XSSFSheet>();
					for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_FilterNull_tFileInputExcel_33 : sheetList_tFileInputExcel_33) {
						if (sheet_FilterNull_tFileInputExcel_33 != null
								&& sheetList_FilterNull_tFileInputExcel_33.iterator() != null
								&& sheet_FilterNull_tFileInputExcel_33.iterator().hasNext()) {
							sheetList_FilterNull_tFileInputExcel_33.add(sheet_FilterNull_tFileInputExcel_33);
						}
					}
					sheetList_tFileInputExcel_33 = sheetList_FilterNull_tFileInputExcel_33;
					if (sheetList_tFileInputExcel_33.size() > 0) {
						int nb_line_tFileInputExcel_33 = 0;

						int begin_line_tFileInputExcel_33 = 1;

						int footer_input_tFileInputExcel_33 = 0;

						int end_line_tFileInputExcel_33 = 0;
						for (org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_33 : sheetList_tFileInputExcel_33) {
							end_line_tFileInputExcel_33 += (sheet_tFileInputExcel_33.getLastRowNum() + 1);
						}
						end_line_tFileInputExcel_33 -= footer_input_tFileInputExcel_33;
						int limit_tFileInputExcel_33 = -1;
						int start_column_tFileInputExcel_33 = 1 - 1;
						int end_column_tFileInputExcel_33 = -1;

						org.apache.poi.xssf.usermodel.XSSFRow row_tFileInputExcel_33 = null;
						org.apache.poi.xssf.usermodel.XSSFSheet sheet_tFileInputExcel_33 = sheetList_tFileInputExcel_33
								.get(0);
						int rowCount_tFileInputExcel_33 = 0;
						int sheetIndex_tFileInputExcel_33 = 0;
						int currentRows_tFileInputExcel_33 = (sheetList_tFileInputExcel_33.get(0).getLastRowNum() + 1);

						// for the number format
						java.text.DecimalFormat df_tFileInputExcel_33 = new java.text.DecimalFormat(
								"#.####################################");
						char decimalChar_tFileInputExcel_33 = df_tFileInputExcel_33.getDecimalFormatSymbols()
								.getDecimalSeparator();

						for (int i_tFileInputExcel_33 = begin_line_tFileInputExcel_33; i_tFileInputExcel_33 < end_line_tFileInputExcel_33; i_tFileInputExcel_33++) {

							int emptyColumnCount_tFileInputExcel_33 = 0;

							if (limit_tFileInputExcel_33 != -1
									&& nb_line_tFileInputExcel_33 >= limit_tFileInputExcel_33) {
								break;
							}

							while (i_tFileInputExcel_33 >= rowCount_tFileInputExcel_33
									+ currentRows_tFileInputExcel_33) {
								rowCount_tFileInputExcel_33 += currentRows_tFileInputExcel_33;
								sheet_tFileInputExcel_33 = sheetList_tFileInputExcel_33
										.get(++sheetIndex_tFileInputExcel_33);
								currentRows_tFileInputExcel_33 = (sheet_tFileInputExcel_33.getLastRowNum() + 1);
							}
							globalMap.put("tFileInputExcel_33_CURRENT_SHEET", sheet_tFileInputExcel_33.getSheetName());
							if (rowCount_tFileInputExcel_33 <= i_tFileInputExcel_33) {
								row_tFileInputExcel_33 = sheet_tFileInputExcel_33
										.getRow(i_tFileInputExcel_33 - rowCount_tFileInputExcel_33);
							}
							row53 = null;
							int tempRowLength_tFileInputExcel_33 = 31;

							int columnIndex_tFileInputExcel_33 = 0;

							String[] temp_row_tFileInputExcel_33 = new String[tempRowLength_tFileInputExcel_33];
							int excel_end_column_tFileInputExcel_33;
							if (row_tFileInputExcel_33 == null) {
								excel_end_column_tFileInputExcel_33 = 0;
							} else {
								excel_end_column_tFileInputExcel_33 = row_tFileInputExcel_33.getLastCellNum();
							}
							int actual_end_column_tFileInputExcel_33;
							if (end_column_tFileInputExcel_33 == -1) {
								actual_end_column_tFileInputExcel_33 = excel_end_column_tFileInputExcel_33;
							} else {
								actual_end_column_tFileInputExcel_33 = end_column_tFileInputExcel_33 > excel_end_column_tFileInputExcel_33
										? excel_end_column_tFileInputExcel_33
										: end_column_tFileInputExcel_33;
							}
							org.apache.poi.ss.formula.eval.NumberEval ne_tFileInputExcel_33 = null;
							for (int i = 0; i < tempRowLength_tFileInputExcel_33; i++) {
								if (i + start_column_tFileInputExcel_33 < actual_end_column_tFileInputExcel_33) {
									org.apache.poi.ss.usermodel.Cell cell_tFileInputExcel_33 = row_tFileInputExcel_33
											.getCell(i + start_column_tFileInputExcel_33);
									if (cell_tFileInputExcel_33 != null) {
										switch (cell_tFileInputExcel_33.getCellType()) {
										case STRING:
											temp_row_tFileInputExcel_33[i] = cell_tFileInputExcel_33
													.getRichStringCellValue().getString();
											break;
										case NUMERIC:
											if (org.apache.poi.ss.usermodel.DateUtil
													.isCellDateFormatted(cell_tFileInputExcel_33)) {
												temp_row_tFileInputExcel_33[i] = cell_tFileInputExcel_33
														.getDateCellValue().toString();
											} else {
												temp_row_tFileInputExcel_33[i] = df_tFileInputExcel_33
														.format(cell_tFileInputExcel_33.getNumericCellValue());
											}
											break;
										case BOOLEAN:
											temp_row_tFileInputExcel_33[i] = String
													.valueOf(cell_tFileInputExcel_33.getBooleanCellValue());
											break;
										case FORMULA:
											switch (cell_tFileInputExcel_33.getCachedFormulaResultType()) {
											case STRING:
												temp_row_tFileInputExcel_33[i] = cell_tFileInputExcel_33
														.getRichStringCellValue().getString();
												break;
											case NUMERIC:
												if (org.apache.poi.ss.usermodel.DateUtil
														.isCellDateFormatted(cell_tFileInputExcel_33)) {
													temp_row_tFileInputExcel_33[i] = cell_tFileInputExcel_33
															.getDateCellValue().toString();
												} else {
													ne_tFileInputExcel_33 = new org.apache.poi.ss.formula.eval.NumberEval(
															cell_tFileInputExcel_33.getNumericCellValue());
													temp_row_tFileInputExcel_33[i] = ne_tFileInputExcel_33
															.getStringValue();
												}
												break;
											case BOOLEAN:
												temp_row_tFileInputExcel_33[i] = String
														.valueOf(cell_tFileInputExcel_33.getBooleanCellValue());
												break;
											default:
												temp_row_tFileInputExcel_33[i] = "";
											}
											break;
										default:
											temp_row_tFileInputExcel_33[i] = "";
										}
									} else {
										temp_row_tFileInputExcel_33[i] = "";
									}

								} else {
									temp_row_tFileInputExcel_33[i] = "";
								}
							}
							boolean whetherReject_tFileInputExcel_33 = false;
							row53 = new row53Struct();
							int curColNum_tFileInputExcel_33 = -1;
							String curColName_tFileInputExcel_33 = "";
							try {
								columnIndex_tFileInputExcel_33 = 0;

								if (temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33].length() > 0) {
									curColNum_tFileInputExcel_33 = columnIndex_tFileInputExcel_33
											+ start_column_tFileInputExcel_33 + 1;
									curColName_tFileInputExcel_33 = "Reference_OSM_mere__Opportunite";

									row53.Reference_OSM_mere__Opportunite = temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33];
								} else {
									row53.Reference_OSM_mere__Opportunite = null;
									emptyColumnCount_tFileInputExcel_33++;
								}
								columnIndex_tFileInputExcel_33 = 1;

								if (temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33].length() > 0) {
									curColNum_tFileInputExcel_33 = columnIndex_tFileInputExcel_33
											+ start_column_tFileInputExcel_33 + 1;
									curColName_tFileInputExcel_33 = "Reference_OSM__Opportunite";

									row53.Reference_OSM__Opportunite = temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33];
								} else {
									row53.Reference_OSM__Opportunite = null;
									emptyColumnCount_tFileInputExcel_33++;
								}
								columnIndex_tFileInputExcel_33 = 2;

								if (temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33].length() > 0) {
									curColNum_tFileInputExcel_33 = columnIndex_tFileInputExcel_33
											+ start_column_tFileInputExcel_33 + 1;
									curColName_tFileInputExcel_33 = "Client_Prospect__Opportunite";

									row53.Client_Prospect__Opportunite = temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33];
								} else {
									row53.Client_Prospect__Opportunite = null;
									emptyColumnCount_tFileInputExcel_33++;
								}
								columnIndex_tFileInputExcel_33 = 3;

								if (temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33].length() > 0) {
									curColNum_tFileInputExcel_33 = columnIndex_tFileInputExcel_33
											+ start_column_tFileInputExcel_33 + 1;
									curColName_tFileInputExcel_33 = "Offre";

									row53.Offre = temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33];
								} else {
									row53.Offre = null;
									emptyColumnCount_tFileInputExcel_33++;
								}
								columnIndex_tFileInputExcel_33 = 4;

								if (temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33].length() > 0) {
									curColNum_tFileInputExcel_33 = columnIndex_tFileInputExcel_33
											+ start_column_tFileInputExcel_33 + 1;
									curColName_tFileInputExcel_33 = "Nature_Offre";

									row53.Nature_Offre = temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33];
								} else {
									row53.Nature_Offre = null;
									emptyColumnCount_tFileInputExcel_33++;
								}
								columnIndex_tFileInputExcel_33 = 5;

								if (temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33].length() > 0) {
									curColNum_tFileInputExcel_33 = columnIndex_tFileInputExcel_33
											+ start_column_tFileInputExcel_33 + 1;
									curColName_tFileInputExcel_33 = "Produit_existant";

									row53.Produit_existant = temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33];
								} else {
									row53.Produit_existant = null;
									emptyColumnCount_tFileInputExcel_33++;
								}
								columnIndex_tFileInputExcel_33 = 6;

								if (temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33].length() > 0) {
									curColNum_tFileInputExcel_33 = columnIndex_tFileInputExcel_33
											+ start_column_tFileInputExcel_33 + 1;
									curColName_tFileInputExcel_33 = "Nature_produit__Produit_existant";

									row53.Nature_produit__Produit_existant = temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33];
								} else {
									row53.Nature_produit__Produit_existant = null;
									emptyColumnCount_tFileInputExcel_33++;
								}
								columnIndex_tFileInputExcel_33 = 7;

								if (temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33].length() > 0) {
									curColNum_tFileInputExcel_33 = columnIndex_tFileInputExcel_33
											+ start_column_tFileInputExcel_33 + 1;
									curColName_tFileInputExcel_33 = "Quantite";

									row53.Quantite = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33], null,
											'.' == decimalChar_tFileInputExcel_33 ? null
													: decimalChar_tFileInputExcel_33));
								} else {
									row53.Quantite = null;
									emptyColumnCount_tFileInputExcel_33++;
								}
								columnIndex_tFileInputExcel_33 = 8;

								if (temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33].length() > 0) {
									curColNum_tFileInputExcel_33 = columnIndex_tFileInputExcel_33
											+ start_column_tFileInputExcel_33 + 1;
									curColName_tFileInputExcel_33 = "Prix_unitaire";

									row53.Prix_unitaire = temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33];
								} else {
									row53.Prix_unitaire = null;
									emptyColumnCount_tFileInputExcel_33++;
								}
								columnIndex_tFileInputExcel_33 = 9;

								if (temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33].length() > 0) {
									curColNum_tFileInputExcel_33 = columnIndex_tFileInputExcel_33
											+ start_column_tFileInputExcel_33 + 1;
									curColName_tFileInputExcel_33 = "Total_final";

									row53.Total_final = temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33];
								} else {
									row53.Total_final = null;
									emptyColumnCount_tFileInputExcel_33++;
								}
								columnIndex_tFileInputExcel_33 = 10;

								if (temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33].length() > 0) {
									curColNum_tFileInputExcel_33 = columnIndex_tFileInputExcel_33
											+ start_column_tFileInputExcel_33 + 1;
									curColName_tFileInputExcel_33 = "Remise______Opportunite";

									row53.Remise______Opportunite = temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33];
								} else {
									row53.Remise______Opportunite = null;
									emptyColumnCount_tFileInputExcel_33++;
								}
								columnIndex_tFileInputExcel_33 = 11;

								if (temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33].length() > 0) {
									curColNum_tFileInputExcel_33 = columnIndex_tFileInputExcel_33
											+ start_column_tFileInputExcel_33 + 1;
									curColName_tFileInputExcel_33 = "Total_remise_HT";

									row53.Total_remise_HT = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33], null,
											'.' == decimalChar_tFileInputExcel_33 ? null
													: decimalChar_tFileInputExcel_33));
								} else {
									row53.Total_remise_HT = null;
									emptyColumnCount_tFileInputExcel_33++;
								}
								columnIndex_tFileInputExcel_33 = 12;

								if (temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33].length() > 0) {
									curColNum_tFileInputExcel_33 = columnIndex_tFileInputExcel_33
											+ start_column_tFileInputExcel_33 + 1;
									curColName_tFileInputExcel_33 = "Extension__Opportunite";

									row53.Extension__Opportunite = temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33];
								} else {
									row53.Extension__Opportunite = null;
									emptyColumnCount_tFileInputExcel_33++;
								}
								columnIndex_tFileInputExcel_33 = 13;

								if (temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33].length() > 0) {
									curColNum_tFileInputExcel_33 = columnIndex_tFileInputExcel_33
											+ start_column_tFileInputExcel_33 + 1;
									curColName_tFileInputExcel_33 = "Budget_a_valider__Opportunite";

									row53.Budget_a_valider__Opportunite = ParserUtils.parseTo_Float(ParserUtils
											.parseTo_Number(temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33],
													null, '.' == decimalChar_tFileInputExcel_33 ? null
															: decimalChar_tFileInputExcel_33));
								} else {
									row53.Budget_a_valider__Opportunite = null;
									emptyColumnCount_tFileInputExcel_33++;
								}
								columnIndex_tFileInputExcel_33 = 14;

								if (temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33].length() > 0) {
									curColNum_tFileInputExcel_33 = columnIndex_tFileInputExcel_33
											+ start_column_tFileInputExcel_33 + 1;
									curColName_tFileInputExcel_33 = "Budget_a_valider_Extension__Opportunite";

									row53.Budget_a_valider_Extension__Opportunite = ParserUtils
											.parseTo_Float(ParserUtils.parseTo_Number(
													temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33], null,
													'.' == decimalChar_tFileInputExcel_33 ? null
															: decimalChar_tFileInputExcel_33));
								} else {
									row53.Budget_a_valider_Extension__Opportunite = null;
									emptyColumnCount_tFileInputExcel_33++;
								}
								columnIndex_tFileInputExcel_33 = 15;

								if (temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33].length() > 0) {
									curColNum_tFileInputExcel_33 = columnIndex_tFileInputExcel_33
											+ start_column_tFileInputExcel_33 + 1;
									curColName_tFileInputExcel_33 = "Duree_d_engagement__Opportunite";

									row53.Duree_d_engagement__Opportunite = temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33];
								} else {
									row53.Duree_d_engagement__Opportunite = null;
									emptyColumnCount_tFileInputExcel_33++;
								}
								columnIndex_tFileInputExcel_33 = 16;

								if (temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33].length() > 0) {
									curColNum_tFileInputExcel_33 = columnIndex_tFileInputExcel_33
											+ start_column_tFileInputExcel_33 + 1;
									curColName_tFileInputExcel_33 = "Type_d_engagement__Opportunite";

									row53.Type_d_engagement__Opportunite = temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33];
								} else {
									row53.Type_d_engagement__Opportunite = null;
									emptyColumnCount_tFileInputExcel_33++;
								}
								columnIndex_tFileInputExcel_33 = 17;

								if (temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33].length() > 0) {
									curColNum_tFileInputExcel_33 = columnIndex_tFileInputExcel_33
											+ start_column_tFileInputExcel_33 + 1;
									curColName_tFileInputExcel_33 = "Demandeur__Opportunite";

									row53.Demandeur__Opportunite = temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33];
								} else {
									row53.Demandeur__Opportunite = null;
									emptyColumnCount_tFileInputExcel_33++;
								}
								columnIndex_tFileInputExcel_33 = 18;

								if (temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33].length() > 0) {
									curColNum_tFileInputExcel_33 = columnIndex_tFileInputExcel_33
											+ start_column_tFileInputExcel_33 + 1;
									curColName_tFileInputExcel_33 = "Equipe";

									row53.Equipe = temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33];
								} else {
									row53.Equipe = null;
									emptyColumnCount_tFileInputExcel_33++;
								}
								columnIndex_tFileInputExcel_33 = 19;

								if (temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33].length() > 0) {
									curColNum_tFileInputExcel_33 = columnIndex_tFileInputExcel_33
											+ start_column_tFileInputExcel_33 + 1;
									curColName_tFileInputExcel_33 = "Cree_le__Opportunite";

									row53.Cree_le__Opportunite = temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33];
								} else {
									row53.Cree_le__Opportunite = null;
									emptyColumnCount_tFileInputExcel_33++;
								}
								columnIndex_tFileInputExcel_33 = 20;

								if (temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33].length() > 0) {
									curColNum_tFileInputExcel_33 = columnIndex_tFileInputExcel_33
											+ start_column_tFileInputExcel_33 + 1;
									curColName_tFileInputExcel_33 = "Mois_de_creation";

									row53.Mois_de_creation = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33], null,
											'.' == decimalChar_tFileInputExcel_33 ? null
													: decimalChar_tFileInputExcel_33));
								} else {
									row53.Mois_de_creation = null;
									emptyColumnCount_tFileInputExcel_33++;
								}
								columnIndex_tFileInputExcel_33 = 21;

								if (temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33].length() > 0) {
									curColNum_tFileInputExcel_33 = columnIndex_tFileInputExcel_33
											+ start_column_tFileInputExcel_33 + 1;
									curColName_tFileInputExcel_33 = "Annee_de_creation";

									row53.Annee_de_creation = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33], null,
											'.' == decimalChar_tFileInputExcel_33 ? null
													: decimalChar_tFileInputExcel_33));
								} else {
									row53.Annee_de_creation = null;
									emptyColumnCount_tFileInputExcel_33++;
								}
								columnIndex_tFileInputExcel_33 = 22;

								if (temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33].length() > 0) {
									curColNum_tFileInputExcel_33 = columnIndex_tFileInputExcel_33
											+ start_column_tFileInputExcel_33 + 1;
									curColName_tFileInputExcel_33 = "Mois_et_annee_de_creation";

									row53.Mois_et_annee_de_creation = temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33];
								} else {
									row53.Mois_et_annee_de_creation = null;
									emptyColumnCount_tFileInputExcel_33++;
								}
								columnIndex_tFileInputExcel_33 = 23;

								if (temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33].length() > 0) {
									curColNum_tFileInputExcel_33 = columnIndex_tFileInputExcel_33
											+ start_column_tFileInputExcel_33 + 1;
									curColName_tFileInputExcel_33 = "Raison_de_statut_OSM__Opportunite";

									row53.Raison_de_statut_OSM__Opportunite = temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33];
								} else {
									row53.Raison_de_statut_OSM__Opportunite = null;
									emptyColumnCount_tFileInputExcel_33++;
								}
								columnIndex_tFileInputExcel_33 = 24;

								if (temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33].length() > 0) {
									curColNum_tFileInputExcel_33 = columnIndex_tFileInputExcel_33
											+ start_column_tFileInputExcel_33 + 1;
									curColName_tFileInputExcel_33 = "Statut_OSM__Opportunite";

									row53.Statut_OSM__Opportunite = temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33];
								} else {
									row53.Statut_OSM__Opportunite = null;
									emptyColumnCount_tFileInputExcel_33++;
								}
								columnIndex_tFileInputExcel_33 = 25;

								if (temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33].length() > 0) {
									curColNum_tFileInputExcel_33 = columnIndex_tFileInputExcel_33
											+ start_column_tFileInputExcel_33 + 1;
									curColName_tFileInputExcel_33 = "Statut_activation__Commande";

									row53.Statut_activation__Commande = temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33];
								} else {
									row53.Statut_activation__Commande = null;
									emptyColumnCount_tFileInputExcel_33++;
								}
								columnIndex_tFileInputExcel_33 = 26;

								if (temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33].length() > 0) {
									curColNum_tFileInputExcel_33 = columnIndex_tFileInputExcel_33
											+ start_column_tFileInputExcel_33 + 1;
									curColName_tFileInputExcel_33 = "Date_d_activation__Commande";

									row53.Date_d_activation__Commande = temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33];
								} else {
									row53.Date_d_activation__Commande = null;
									emptyColumnCount_tFileInputExcel_33++;
								}
								columnIndex_tFileInputExcel_33 = 27;

								if (temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33].length() > 0) {
									curColNum_tFileInputExcel_33 = columnIndex_tFileInputExcel_33
											+ start_column_tFileInputExcel_33 + 1;
									curColName_tFileInputExcel_33 = "Mois_d_activation";

									row53.Mois_d_activation = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(
											temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33], null,
											'.' == decimalChar_tFileInputExcel_33 ? null
													: decimalChar_tFileInputExcel_33));
								} else {
									row53.Mois_d_activation = null;
									emptyColumnCount_tFileInputExcel_33++;
								}
								columnIndex_tFileInputExcel_33 = 28;

								if (temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33].length() > 0) {
									curColNum_tFileInputExcel_33 = columnIndex_tFileInputExcel_33
											+ start_column_tFileInputExcel_33 + 1;
									curColName_tFileInputExcel_33 = "Staut_Final";

									row53.Staut_Final = temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33];
								} else {
									row53.Staut_Final = null;
									emptyColumnCount_tFileInputExcel_33++;
								}
								columnIndex_tFileInputExcel_33 = 29;

								if (temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33].length() > 0) {
									curColNum_tFileInputExcel_33 = columnIndex_tFileInputExcel_33
											+ start_column_tFileInputExcel_33 + 1;
									curColName_tFileInputExcel_33 = "Gouvernorat";

									row53.Gouvernorat = temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33];
								} else {
									row53.Gouvernorat = null;
									emptyColumnCount_tFileInputExcel_33++;
								}
								columnIndex_tFileInputExcel_33 = 30;

								if (temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33].length() > 0) {
									curColNum_tFileInputExcel_33 = columnIndex_tFileInputExcel_33
											+ start_column_tFileInputExcel_33 + 1;
									curColName_tFileInputExcel_33 = "Phase_de_l_opportunite__Opportunite";

									row53.Phase_de_l_opportunite__Opportunite = temp_row_tFileInputExcel_33[columnIndex_tFileInputExcel_33];
								} else {
									row53.Phase_de_l_opportunite__Opportunite = null;
									emptyColumnCount_tFileInputExcel_33++;
								}

								nb_line_tFileInputExcel_33++;

							} catch (java.lang.Exception e) {
								globalMap.put("tFileInputExcel_33_ERROR_MESSAGE", e.getMessage());
								whetherReject_tFileInputExcel_33 = true;
								System.err.println(e.getMessage());
								row53 = null;
							}

							/**
							 * [tFileInputExcel_33 begin ] stop
							 */

							/**
							 * [tFileInputExcel_33 main ] start
							 */

							currentComponent = "tFileInputExcel_33";

							tos_count_tFileInputExcel_33++;

							/**
							 * [tFileInputExcel_33 main ] stop
							 */

							/**
							 * [tFileInputExcel_33 process_data_begin ] start
							 */

							currentComponent = "tFileInputExcel_33";

							/**
							 * [tFileInputExcel_33 process_data_begin ] stop
							 */
// Start of branch "row53"
							if (row53 != null) {

								/**
								 * [tMap_37 main ] start
								 */

								currentComponent = "tMap_37";

								if (execStat) {
									runStat.updateStatOnConnection(iterateId, 1, 1

											, "row53"

									);
								}

								boolean hasCasePrimitiveKeyWithNull_tMap_37 = false;

								// ###############################
								// # Input tables (lookups)
								boolean rejectedInnerJoin_tMap_37 = false;
								boolean mainRowRejected_tMap_37 = false;

								// ###############################
								{ // start of Var scope

									// ###############################
									// # Vars tables

									Var__tMap_37__Struct Var = Var__tMap_37;// ###############################
									// ###############################
									// # Output tables

									copyOfcopyOft7_0_0 = null;

// # Output table : 'copyOfcopyOft7_0_0'
									copyOfcopyOft7_0_0_tmp.Phase_de_l_opportunite__Opportunite = row53.Phase_de_l_opportunite__Opportunite;
									copyOfcopyOft7_0_0 = copyOfcopyOft7_0_0_tmp;
// ###############################

								} // end of Var scope

								rejectedInnerJoin_tMap_37 = false;

								tos_count_tMap_37++;

								/**
								 * [tMap_37 main ] stop
								 */

								/**
								 * [tMap_37 process_data_begin ] start
								 */

								currentComponent = "tMap_37";

								/**
								 * [tMap_37 process_data_begin ] stop
								 */
// Start of branch "copyOfcopyOft7_0_0"
								if (copyOfcopyOft7_0_0 != null) {

									/**
									 * [tUnite_10 main ] start
									 */

									currentComponent = "tUnite_10";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "copyOfcopyOft7_0_0"

										);
									}

//////////

// for output
									row52 = new row52Struct();

									row52.Phase_de_l_opportunite = copyOfcopyOft7_0_0.Phase_de_l_opportunite__Opportunite;

									nb_line_tUnite_10++;

//////////

									tos_count_tUnite_10++;

									/**
									 * [tUnite_10 main ] stop
									 */

									/**
									 * [tUnite_10 process_data_begin ] start
									 */

									currentComponent = "tUnite_10";

									/**
									 * [tUnite_10 process_data_begin ] stop
									 */

									/**
									 * [tMap_42 main ] start
									 */

									currentComponent = "tMap_42";

									if (execStat) {
										runStat.updateStatOnConnection(iterateId, 1, 1

												, "row52"

										);
									}

									boolean hasCasePrimitiveKeyWithNull_tMap_42 = false;

									// ###############################
									// # Input tables (lookups)
									boolean rejectedInnerJoin_tMap_42 = false;
									boolean mainRowRejected_tMap_42 = false;

									///////////////////////////////////////////////
									// Starting Lookup Table "row56"
									///////////////////////////////////////////////

									boolean forceLooprow56 = false;

									row56Struct row56ObjectFromLookup = null;

									if (!rejectedInnerJoin_tMap_42) { // G_TM_M_020

										hasCasePrimitiveKeyWithNull_tMap_42 = false;

										row56HashKey.Phase_de_l_opportunite = row52.Phase_de_l_opportunite;

										row56HashKey.hashCodeDirty = true;

										tHash_Lookup_row56.lookup(row56HashKey);

										if (!tHash_Lookup_row56.hasNext()) { // G_TM_M_090

											rejectedInnerJoin_tMap_42 = true;

										} // G_TM_M_090

									} // G_TM_M_020

									if (tHash_Lookup_row56 != null && tHash_Lookup_row56.getCount(row56HashKey) > 1) { // G
																														// 071

										// System.out.println("WARNING: UNIQUE MATCH is configured for the lookup
										// 'row56' and it contains more one result from keys :
										// row56.Phase_de_l_opportunite = '" + row56HashKey.Phase_de_l_opportunite +
										// "'");
									} // G 071

									row56Struct row56 = null;

									row56Struct fromLookup_row56 = null;
									row56 = row56Default;

									if (tHash_Lookup_row56 != null && tHash_Lookup_row56.hasNext()) { // G 099

										fromLookup_row56 = tHash_Lookup_row56.next();

									} // G 099

									if (fromLookup_row56 != null) {
										row56 = fromLookup_row56;
									}

									// ###############################
									{ // start of Var scope

										// ###############################
										// # Vars tables

										Var__tMap_42__Struct Var = Var__tMap_42;// ###############################
										// ###############################
										// # Output tables

										ww = null;

										if (!rejectedInnerJoin_tMap_42) {
										} // closing inner join bracket (1)
// ###### START REJECTS ##### 

// # Output reject table : 'ww'
// # Filter conditions 
										if (rejectedInnerJoin_tMap_42) {
											ww_tmp.Phase_de_l_opportunite = row52.Phase_de_l_opportunite;
											ww = ww_tmp;
										} // closing filter/reject
// ###############################

									} // end of Var scope

									rejectedInnerJoin_tMap_42 = false;

									tos_count_tMap_42++;

									/**
									 * [tMap_42 main ] stop
									 */

									/**
									 * [tMap_42 process_data_begin ] start
									 */

									currentComponent = "tMap_42";

									/**
									 * [tMap_42 process_data_begin ] stop
									 */
// Start of branch "ww"
									if (ww != null) {

										/**
										 * [tUniqRow_11 main ] start
										 */

										currentComponent = "tUniqRow_11";

										if (execStat) {
											runStat.updateStatOnConnection(iterateId, 1, 1

													, "ww"

											);
										}

										row57 = null;
										finder_tUniqRow_11.Phase_de_l_opportunite = ww.Phase_de_l_opportunite;
										finder_tUniqRow_11.hashCodeDirty = true;
										if (!keystUniqRow_11.contains(finder_tUniqRow_11)) {
											KeyStruct_tUniqRow_11 new_tUniqRow_11 = new KeyStruct_tUniqRow_11();

											new_tUniqRow_11.Phase_de_l_opportunite = ww.Phase_de_l_opportunite;

											keystUniqRow_11.add(new_tUniqRow_11);
											if (row57 == null) {

												row57 = new row57Struct();
											}
											row57.Phase_de_l_opportunite = ww.Phase_de_l_opportunite;
											nb_uniques_tUniqRow_11++;
										} else {
											nb_duplicates_tUniqRow_11++;
										}

										tos_count_tUniqRow_11++;

										/**
										 * [tUniqRow_11 main ] stop
										 */

										/**
										 * [tUniqRow_11 process_data_begin ] start
										 */

										currentComponent = "tUniqRow_11";

										/**
										 * [tUniqRow_11 process_data_begin ] stop
										 */
// Start of branch "row57"
										if (row57 != null) {

											/**
											 * [tDBOutput_12 main ] start
											 */

											currentComponent = "tDBOutput_12";

											if (execStat) {
												runStat.updateStatOnConnection(iterateId, 1, 1

														, "row57"

												);
											}

											whetherReject_tDBOutput_12 = false;
											if (row57.Phase_de_l_opportunite == null) {
												pstmt_tDBOutput_12.setNull(1, java.sql.Types.VARCHAR);
											} else {
												pstmt_tDBOutput_12.setString(1, row57.Phase_de_l_opportunite);
											}

											pstmt_tDBOutput_12.addBatch();
											nb_line_tDBOutput_12++;

											batchSizeCounter_tDBOutput_12++;

											////////// batch execute by batch size///////
											class LimitBytesHelper_tDBOutput_12 {
												public int limitBytePart1(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_12)
														throws Exception {
													try {

														for (int countEach_tDBOutput_12 : pstmt_tDBOutput_12
																.executeBatch()) {
															if (countEach_tDBOutput_12 == -2
																	|| countEach_tDBOutput_12 == -3) {
																break;
															}
															counter += countEach_tDBOutput_12;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_12_ERROR_MESSAGE", e.getMessage());

														int countSum_tDBOutput_12 = 0;
														for (int countEach_tDBOutput_12 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_12 < 0 ? 0
																	: countEach_tDBOutput_12);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}

												public int limitBytePart2(int counter,
														java.sql.PreparedStatement pstmt_tDBOutput_12)
														throws Exception {
													try {

														for (int countEach_tDBOutput_12 : pstmt_tDBOutput_12
																.executeBatch()) {
															if (countEach_tDBOutput_12 == -2
																	|| countEach_tDBOutput_12 == -3) {
																break;
															}
															counter += countEach_tDBOutput_12;
														}

													} catch (java.sql.BatchUpdateException e) {
														globalMap.put("tDBOutput_12_ERROR_MESSAGE", e.getMessage());

														for (int countEach_tDBOutput_12 : e.getUpdateCounts()) {
															counter += (countEach_tDBOutput_12 < 0 ? 0
																	: countEach_tDBOutput_12);
														}

														System.err.println(e.getMessage());

													}
													return counter;
												}
											}
											if ((batchSize_tDBOutput_12 > 0)
													&& (batchSize_tDBOutput_12 <= batchSizeCounter_tDBOutput_12)) {

												insertedCount_tDBOutput_12 = new LimitBytesHelper_tDBOutput_12()
														.limitBytePart1(insertedCount_tDBOutput_12, pstmt_tDBOutput_12);
												rowsToCommitCount_tDBOutput_12 = insertedCount_tDBOutput_12;

												batchSizeCounter_tDBOutput_12 = 0;
											}

											//////////// commit every////////////

											commitCounter_tDBOutput_12++;
											if (commitEvery_tDBOutput_12 <= commitCounter_tDBOutput_12) {
												if ((batchSize_tDBOutput_12 > 0)
														&& (batchSizeCounter_tDBOutput_12 > 0)) {

													insertedCount_tDBOutput_12 = new LimitBytesHelper_tDBOutput_12()
															.limitBytePart1(insertedCount_tDBOutput_12,
																	pstmt_tDBOutput_12);

													batchSizeCounter_tDBOutput_12 = 0;
												}
												if (rowsToCommitCount_tDBOutput_12 != 0) {

												}
												conn_tDBOutput_12.commit();
												if (rowsToCommitCount_tDBOutput_12 != 0) {

													rowsToCommitCount_tDBOutput_12 = 0;
												}
												commitCounter_tDBOutput_12 = 0;
											}

											tos_count_tDBOutput_12++;

											/**
											 * [tDBOutput_12 main ] stop
											 */

											/**
											 * [tDBOutput_12 process_data_begin ] start
											 */

											currentComponent = "tDBOutput_12";

											/**
											 * [tDBOutput_12 process_data_begin ] stop
											 */

											/**
											 * [tDBOutput_12 process_data_end ] start
											 */

											currentComponent = "tDBOutput_12";

											/**
											 * [tDBOutput_12 process_data_end ] stop
											 */

										} // End of branch "row57"

										/**
										 * [tUniqRow_11 process_data_end ] start
										 */

										currentComponent = "tUniqRow_11";

										/**
										 * [tUniqRow_11 process_data_end ] stop
										 */

									} // End of branch "ww"

									/**
									 * [tMap_42 process_data_end ] start
									 */

									currentComponent = "tMap_42";

									/**
									 * [tMap_42 process_data_end ] stop
									 */

									/**
									 * [tUnite_10 process_data_end ] start
									 */

									currentComponent = "tUnite_10";

									/**
									 * [tUnite_10 process_data_end ] stop
									 */

								} // End of branch "copyOfcopyOft7_0_0"

								/**
								 * [tMap_37 process_data_end ] start
								 */

								currentComponent = "tMap_37";

								/**
								 * [tMap_37 process_data_end ] stop
								 */

							} // End of branch "row53"

							/**
							 * [tFileInputExcel_33 process_data_end ] start
							 */

							currentComponent = "tFileInputExcel_33";

							/**
							 * [tFileInputExcel_33 process_data_end ] stop
							 */

							/**
							 * [tFileInputExcel_33 end ] start
							 */

							currentComponent = "tFileInputExcel_33";

						}

						globalMap.put("tFileInputExcel_33_NB_LINE", nb_line_tFileInputExcel_33);

					}

				} finally {

					if (!(source_tFileInputExcel_33 instanceof java.io.InputStream)) {
						workbook_tFileInputExcel_33.getPackage().revert();
					}

				}

				ok_Hash.put("tFileInputExcel_33", true);
				end_Hash.put("tFileInputExcel_33", System.currentTimeMillis());

				/**
				 * [tFileInputExcel_33 end ] stop
				 */

				/**
				 * [tMap_37 end ] start
				 */

				currentComponent = "tMap_37";

// ###############################
// # Lookup hashes releasing
// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row53");
				}

				ok_Hash.put("tMap_37", true);
				end_Hash.put("tMap_37", System.currentTimeMillis());

				/**
				 * [tMap_37 end ] stop
				 */

				/**
				 * [tUnite_10 end ] start
				 */

				currentComponent = "tUnite_10";

				globalMap.put("tUnite_10_NB_LINE", nb_line_tUnite_10);
				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "copyOfcopyOft7_0_0", "copyOfcopyOft8_0_0");
				}

				ok_Hash.put("tUnite_10", true);
				end_Hash.put("tUnite_10", System.currentTimeMillis());

				/**
				 * [tUnite_10 end ] stop
				 */

				/**
				 * [tMap_42 end ] start
				 */

				currentComponent = "tMap_42";

// ###############################
// # Lookup hashes releasing
				if (tHash_Lookup_row56 != null) {
					tHash_Lookup_row56.endGet();
				}
				globalMap.remove("tHash_Lookup_row56");

// ###############################      

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row52");
				}

				ok_Hash.put("tMap_42", true);
				end_Hash.put("tMap_42", System.currentTimeMillis());

				/**
				 * [tMap_42 end ] stop
				 */

				/**
				 * [tUniqRow_11 end ] start
				 */

				currentComponent = "tUniqRow_11";

				globalMap.put("tUniqRow_11_NB_UNIQUES", nb_uniques_tUniqRow_11);
				globalMap.put("tUniqRow_11_NB_DUPLICATES", nb_duplicates_tUniqRow_11);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "ww");
				}

				ok_Hash.put("tUniqRow_11", true);
				end_Hash.put("tUniqRow_11", System.currentTimeMillis());

				/**
				 * [tUniqRow_11 end ] stop
				 */

				/**
				 * [tDBOutput_12 end ] start
				 */

				currentComponent = "tDBOutput_12";

				try {
					int countSum_tDBOutput_12 = 0;
					if (pstmt_tDBOutput_12 != null && batchSizeCounter_tDBOutput_12 > 0) {

						for (int countEach_tDBOutput_12 : pstmt_tDBOutput_12.executeBatch()) {
							if (countEach_tDBOutput_12 == -2 || countEach_tDBOutput_12 == -3) {
								break;
							}
							countSum_tDBOutput_12 += countEach_tDBOutput_12;
						}
						rowsToCommitCount_tDBOutput_12 += countSum_tDBOutput_12;

					}

					insertedCount_tDBOutput_12 += countSum_tDBOutput_12;

				} catch (java.sql.BatchUpdateException e) {
					globalMap.put("tDBOutput_12_ERROR_MESSAGE", e.getMessage());

					int countSum_tDBOutput_12 = 0;
					for (int countEach_tDBOutput_12 : e.getUpdateCounts()) {
						countSum_tDBOutput_12 += (countEach_tDBOutput_12 < 0 ? 0 : countEach_tDBOutput_12);
					}
					rowsToCommitCount_tDBOutput_12 += countSum_tDBOutput_12;

					insertedCount_tDBOutput_12 += countSum_tDBOutput_12;

					System.err.println(e.getMessage());

				}
				if (pstmt_tDBOutput_12 != null) {

					pstmt_tDBOutput_12.close();
					resourceMap.remove("pstmt_tDBOutput_12");

				}
				resourceMap.put("statementClosed_tDBOutput_12", true);
				if (rowsToCommitCount_tDBOutput_12 != 0) {

				}
				conn_tDBOutput_12.commit();
				if (rowsToCommitCount_tDBOutput_12 != 0) {

					rowsToCommitCount_tDBOutput_12 = 0;
				}
				commitCounter_tDBOutput_12 = 0;
				conn_tDBOutput_12.close();
				resourceMap.put("finish_tDBOutput_12", true);

				nb_line_deleted_tDBOutput_12 = nb_line_deleted_tDBOutput_12 + deletedCount_tDBOutput_12;
				nb_line_update_tDBOutput_12 = nb_line_update_tDBOutput_12 + updatedCount_tDBOutput_12;
				nb_line_inserted_tDBOutput_12 = nb_line_inserted_tDBOutput_12 + insertedCount_tDBOutput_12;
				nb_line_rejected_tDBOutput_12 = nb_line_rejected_tDBOutput_12 + rejectedCount_tDBOutput_12;

				globalMap.put("tDBOutput_12_NB_LINE", nb_line_tDBOutput_12);
				globalMap.put("tDBOutput_12_NB_LINE_UPDATED", nb_line_update_tDBOutput_12);
				globalMap.put("tDBOutput_12_NB_LINE_INSERTED", nb_line_inserted_tDBOutput_12);
				globalMap.put("tDBOutput_12_NB_LINE_DELETED", nb_line_deleted_tDBOutput_12);
				globalMap.put("tDBOutput_12_NB_LINE_REJECTED", nb_line_rejected_tDBOutput_12);

				if (execStat) {
					runStat.updateStat(resourceMap, iterateId, 2, 0, "row57");
				}

				ok_Hash.put("tDBOutput_12", true);
				end_Hash.put("tDBOutput_12", System.currentTimeMillis());

				/**
				 * [tDBOutput_12 end ] stop
				 */

			} // end the resume

		} catch (java.lang.Exception e) {

			TalendException te = new TalendException(e, currentComponent, globalMap);

			throw te;
		} catch (java.lang.Error error) {

			runStat.stopThreadStat();

			throw error;
		} finally {

			// free memory for "tMap_42"
			globalMap.remove("tHash_Lookup_row56");

			try {

				/**
				 * [tFileInputExcel_36 finally ] start
				 */

				currentComponent = "tFileInputExcel_36";

				/**
				 * [tFileInputExcel_36 finally ] stop
				 */

				/**
				 * [tMap_36 finally ] start
				 */

				currentComponent = "tMap_36";

				/**
				 * [tMap_36 finally ] stop
				 */

				/**
				 * [tFileInputExcel_33 finally ] start
				 */

				currentComponent = "tFileInputExcel_33";

				/**
				 * [tFileInputExcel_33 finally ] stop
				 */

				/**
				 * [tMap_37 finally ] start
				 */

				currentComponent = "tMap_37";

				/**
				 * [tMap_37 finally ] stop
				 */

				/**
				 * [tUnite_10 finally ] start
				 */

				currentComponent = "tUnite_10";

				/**
				 * [tUnite_10 finally ] stop
				 */

				/**
				 * [tMap_42 finally ] start
				 */

				currentComponent = "tMap_42";

				/**
				 * [tMap_42 finally ] stop
				 */

				/**
				 * [tUniqRow_11 finally ] start
				 */

				currentComponent = "tUniqRow_11";

				/**
				 * [tUniqRow_11 finally ] stop
				 */

				/**
				 * [tDBOutput_12 finally ] start
				 */

				currentComponent = "tDBOutput_12";

				try {
					if (resourceMap.get("statementClosed_tDBOutput_12") == null) {
						java.sql.PreparedStatement pstmtToClose_tDBOutput_12 = null;
						if ((pstmtToClose_tDBOutput_12 = (java.sql.PreparedStatement) resourceMap
								.remove("pstmt_tDBOutput_12")) != null) {
							pstmtToClose_tDBOutput_12.close();
						}
					}
				} finally {
					if (resourceMap.get("finish_tDBOutput_12") == null) {
						java.sql.Connection ctn_tDBOutput_12 = null;
						if ((ctn_tDBOutput_12 = (java.sql.Connection) resourceMap.get("conn_tDBOutput_12")) != null) {
							try {
								ctn_tDBOutput_12.close();
							} catch (java.sql.SQLException sqlEx_tDBOutput_12) {
								String errorMessage_tDBOutput_12 = "failed to close the connection in tDBOutput_12 :"
										+ sqlEx_tDBOutput_12.getMessage();
								System.err.println(errorMessage_tDBOutput_12);
							}
						}
					}
				}

				/**
				 * [tDBOutput_12 finally ] stop
				 */

			} catch (java.lang.Exception e) {
				// ignore
			} catch (java.lang.Error error) {
				// ignore
			}
			resourceMap = null;
		}

		globalMap.put("tFileInputExcel_36_SUBPROCESS_STATE", 1);
	}

	public String resuming_logs_dir_path = null;
	public String resuming_checkpoint_path = null;
	public String parent_part_launcher = null;
	private String resumeEntryMethodName = null;
	private boolean globalResumeTicket = false;

	public boolean watch = false;
	// portStats is null, it means don't execute the statistics
	public Integer portStats = null;
	public int portTraces = 4334;
	public String clientHost;
	public String defaultClientHost = "localhost";
	public String contextStr = "Default";
	public boolean isDefaultContext = true;
	public String pid = "0";
	public String rootPid = null;
	public String fatherPid = null;
	public String fatherNode = null;
	public long startTime = 0;
	public boolean isChildJob = false;
	public String log4jLevel = "";

	private boolean enableLogStash;

	private boolean execStat = true;

	private ThreadLocal<java.util.Map<String, String>> threadLocal = new ThreadLocal<java.util.Map<String, String>>() {
		protected java.util.Map<String, String> initialValue() {
			java.util.Map<String, String> threadRunResultMap = new java.util.HashMap<String, String>();
			threadRunResultMap.put("errorCode", null);
			threadRunResultMap.put("status", "");
			return threadRunResultMap;
		};
	};

	protected PropertiesWithType context_param = new PropertiesWithType();
	public java.util.Map<String, Object> parentContextMap = new java.util.HashMap<String, Object>();

	public String status = "";

	public static void main(String[] args) {
		final Commun CommunClass = new Commun();

		int exitCode = CommunClass.runJobInTOS(args);

		System.exit(exitCode);
	}

	public String[][] runJob(String[] args) {

		int exitCode = runJobInTOS(args);
		String[][] bufferValue = new String[][] { { Integer.toString(exitCode) } };

		return bufferValue;
	}

	public boolean hastBufferOutputComponent() {
		boolean hastBufferOutput = false;

		return hastBufferOutput;
	}

	public int runJobInTOS(String[] args) {
		// reset status
		status = "";

		String lastStr = "";
		for (String arg : args) {
			if (arg.equalsIgnoreCase("--context_param")) {
				lastStr = arg;
			} else if (lastStr.equals("")) {
				evalParam(arg);
			} else {
				evalParam(lastStr + " " + arg);
				lastStr = "";
			}
		}
		enableLogStash = "true".equalsIgnoreCase(System.getProperty("audit.enabled"));

		if (clientHost == null) {
			clientHost = defaultClientHost;
		}

		if (pid == null || "0".equals(pid)) {
			pid = TalendString.getAsciiRandomString(6);
		}

		if (rootPid == null) {
			rootPid = pid;
		}
		if (fatherPid == null) {
			fatherPid = pid;
		} else {
			isChildJob = true;
		}

		if (portStats != null) {
			// portStats = -1; //for testing
			if (portStats < 0 || portStats > 65535) {
				// issue:10869, the portStats is invalid, so this client socket can't open
				System.err.println("The statistics socket port " + portStats + " is invalid.");
				execStat = false;
			}
		} else {
			execStat = false;
		}
		boolean inOSGi = routines.system.BundleUtils.inOSGi();

		if (inOSGi) {
			java.util.Dictionary<String, Object> jobProperties = routines.system.BundleUtils.getJobProperties(jobName);

			if (jobProperties != null && jobProperties.get("context") != null) {
				contextStr = (String) jobProperties.get("context");
			}
		}

		try {
			// call job/subjob with an existing context, like: --context=production. if
			// without this parameter, there will use the default context instead.
			java.io.InputStream inContext = Commun.class.getClassLoader()
					.getResourceAsStream("orange/commun_0_1/contexts/" + contextStr + ".properties");
			if (inContext == null) {
				inContext = Commun.class.getClassLoader()
						.getResourceAsStream("config/contexts/" + contextStr + ".properties");
			}
			if (inContext != null) {
				try {
					// defaultProps is in order to keep the original context value
					if (context != null && context.isEmpty()) {
						defaultProps.load(inContext);
						context = new ContextProperties(defaultProps);
					}
				} finally {
					inContext.close();
				}
			} else if (!isDefaultContext) {
				// print info and job continue to run, for case: context_param is not empty.
				System.err.println("Could not find the context " + contextStr);
			}

			if (!context_param.isEmpty()) {
				context.putAll(context_param);
				// set types for params from parentJobs
				for (Object key : context_param.keySet()) {
					String context_key = key.toString();
					String context_type = context_param.getContextType(context_key);
					context.setContextType(context_key, context_type);

				}
			}
			class ContextProcessing {
				private void processContext_0() {
				}

				public void processAllContext() {
					processContext_0();
				}
			}

			new ContextProcessing().processAllContext();
		} catch (java.io.IOException ie) {
			System.err.println("Could not load context " + contextStr);
			ie.printStackTrace();
		}

		// get context value from parent directly
		if (parentContextMap != null && !parentContextMap.isEmpty()) {
		}

		// Resume: init the resumeUtil
		resumeEntryMethodName = ResumeUtil.getResumeEntryMethodName(resuming_checkpoint_path);
		resumeUtil = new ResumeUtil(resuming_logs_dir_path, isChildJob, rootPid);
		resumeUtil.initCommonInfo(pid, rootPid, fatherPid, projectName, jobName, contextStr, jobVersion);

		List<String> parametersToEncrypt = new java.util.ArrayList<String>();
		// Resume: jobStart
		resumeUtil.addLog("JOB_STARTED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "",
				"", "", "", "", resumeUtil.convertToJsonText(context, parametersToEncrypt));

		if (execStat) {
			try {
				runStat.openSocket(!isChildJob);
				runStat.setAllPID(rootPid, fatherPid, pid, jobName);
				runStat.startThreadStat(clientHost, portStats);
				runStat.updateStatOnJob(RunStat.JOBSTART, fatherNode);
			} catch (java.io.IOException ioException) {
				ioException.printStackTrace();
			}
		}

		java.util.concurrent.ConcurrentHashMap<Object, Object> concurrentHashMap = new java.util.concurrent.ConcurrentHashMap<Object, Object>();
		globalMap.put("concurrentHashMap", concurrentHashMap);

		long startUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
		long endUsedMemory = 0;
		long end = 0;

		startTime = System.currentTimeMillis();

		this.globalResumeTicket = true;// to run tPreJob

		this.globalResumeTicket = false;// to run others jobs

		try {
			errorCode = null;
			tFileInputExcel_1Process(globalMap);
			if (!"failure".equals(status)) {
				status = "end";
			}
		} catch (TalendException e_tFileInputExcel_1) {
			globalMap.put("tFileInputExcel_1_SUBPROCESS_STATE", -1);

			e_tFileInputExcel_1.printStackTrace();

		}
		try {
			errorCode = null;
			tFileInputExcel_6Process(globalMap);
			if (!"failure".equals(status)) {
				status = "end";
			}
		} catch (TalendException e_tFileInputExcel_6) {
			globalMap.put("tFileInputExcel_6_SUBPROCESS_STATE", -1);

			e_tFileInputExcel_6.printStackTrace();

		}
		try {
			errorCode = null;
			tFileInputExcel_8Process(globalMap);
			if (!"failure".equals(status)) {
				status = "end";
			}
		} catch (TalendException e_tFileInputExcel_8) {
			globalMap.put("tFileInputExcel_8_SUBPROCESS_STATE", -1);

			e_tFileInputExcel_8.printStackTrace();

		}
		try {
			errorCode = null;
			tFileInputExcel_9Process(globalMap);
			if (!"failure".equals(status)) {
				status = "end";
			}
		} catch (TalendException e_tFileInputExcel_9) {
			globalMap.put("tFileInputExcel_9_SUBPROCESS_STATE", -1);

			e_tFileInputExcel_9.printStackTrace();

		}
		try {
			errorCode = null;
			tFileInputExcel_10Process(globalMap);
			if (!"failure".equals(status)) {
				status = "end";
			}
		} catch (TalendException e_tFileInputExcel_10) {
			globalMap.put("tFileInputExcel_10_SUBPROCESS_STATE", -1);

			e_tFileInputExcel_10.printStackTrace();

		}
		try {
			errorCode = null;
			tFileInputExcel_12Process(globalMap);
			if (!"failure".equals(status)) {
				status = "end";
			}
		} catch (TalendException e_tFileInputExcel_12) {
			globalMap.put("tFileInputExcel_12_SUBPROCESS_STATE", -1);

			e_tFileInputExcel_12.printStackTrace();

		}
		try {
			errorCode = null;
			tFileInputExcel_13Process(globalMap);
			if (!"failure".equals(status)) {
				status = "end";
			}
		} catch (TalendException e_tFileInputExcel_13) {
			globalMap.put("tFileInputExcel_13_SUBPROCESS_STATE", -1);

			e_tFileInputExcel_13.printStackTrace();

		}
		try {
			errorCode = null;
			tFileInputExcel_14Process(globalMap);
			if (!"failure".equals(status)) {
				status = "end";
			}
		} catch (TalendException e_tFileInputExcel_14) {
			globalMap.put("tFileInputExcel_14_SUBPROCESS_STATE", -1);

			e_tFileInputExcel_14.printStackTrace();

		}
		try {
			errorCode = null;
			tFileInputExcel_15Process(globalMap);
			if (!"failure".equals(status)) {
				status = "end";
			}
		} catch (TalendException e_tFileInputExcel_15) {
			globalMap.put("tFileInputExcel_15_SUBPROCESS_STATE", -1);

			e_tFileInputExcel_15.printStackTrace();

		}
		try {
			errorCode = null;
			tFileInputExcel_17Process(globalMap);
			if (!"failure".equals(status)) {
				status = "end";
			}
		} catch (TalendException e_tFileInputExcel_17) {
			globalMap.put("tFileInputExcel_17_SUBPROCESS_STATE", -1);

			e_tFileInputExcel_17.printStackTrace();

		}
		try {
			errorCode = null;
			tFileInputExcel_20Process(globalMap);
			if (!"failure".equals(status)) {
				status = "end";
			}
		} catch (TalendException e_tFileInputExcel_20) {
			globalMap.put("tFileInputExcel_20_SUBPROCESS_STATE", -1);

			e_tFileInputExcel_20.printStackTrace();

		}
		try {
			errorCode = null;
			tFileInputExcel_21Process(globalMap);
			if (!"failure".equals(status)) {
				status = "end";
			}
		} catch (TalendException e_tFileInputExcel_21) {
			globalMap.put("tFileInputExcel_21_SUBPROCESS_STATE", -1);

			e_tFileInputExcel_21.printStackTrace();

		}
		try {
			errorCode = null;
			tFileInputExcel_23Process(globalMap);
			if (!"failure".equals(status)) {
				status = "end";
			}
		} catch (TalendException e_tFileInputExcel_23) {
			globalMap.put("tFileInputExcel_23_SUBPROCESS_STATE", -1);

			e_tFileInputExcel_23.printStackTrace();

		}
		try {
			errorCode = null;
			tFileInputExcel_25Process(globalMap);
			if (!"failure".equals(status)) {
				status = "end";
			}
		} catch (TalendException e_tFileInputExcel_25) {
			globalMap.put("tFileInputExcel_25_SUBPROCESS_STATE", -1);

			e_tFileInputExcel_25.printStackTrace();

		}
		try {
			errorCode = null;
			tFileInputExcel_36Process(globalMap);
			if (!"failure".equals(status)) {
				status = "end";
			}
		} catch (TalendException e_tFileInputExcel_36) {
			globalMap.put("tFileInputExcel_36_SUBPROCESS_STATE", -1);

			e_tFileInputExcel_36.printStackTrace();

		}

		this.globalResumeTicket = true;// to run tPostJob

		end = System.currentTimeMillis();

		if (watch) {
			System.out.println((end - startTime) + " milliseconds");
		}

		endUsedMemory = Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory();
		if (false) {
			System.out.println((endUsedMemory - startUsedMemory) + " bytes memory increase when running : Commun");
		}

		if (execStat) {
			runStat.updateStatOnJob(RunStat.JOBEND, fatherNode);
			runStat.stopThreadStat();
		}
		int returnCode = 0;

		if (errorCode == null) {
			returnCode = status != null && status.equals("failure") ? 1 : 0;
		} else {
			returnCode = errorCode.intValue();
		}
		resumeUtil.addLog("JOB_ENDED", "JOB:" + jobName, parent_part_launcher, Thread.currentThread().getId() + "", "",
				"" + returnCode, "", "", "");

		return returnCode;

	}

	// only for OSGi env
	public void destroy() {

	}

	private java.util.Map<String, Object> getSharedConnections4REST() {
		java.util.Map<String, Object> connections = new java.util.HashMap<String, Object>();

		return connections;
	}

	private void evalParam(String arg) {
		if (arg.startsWith("--resuming_logs_dir_path")) {
			resuming_logs_dir_path = arg.substring(25);
		} else if (arg.startsWith("--resuming_checkpoint_path")) {
			resuming_checkpoint_path = arg.substring(27);
		} else if (arg.startsWith("--parent_part_launcher")) {
			parent_part_launcher = arg.substring(23);
		} else if (arg.startsWith("--watch")) {
			watch = true;
		} else if (arg.startsWith("--stat_port=")) {
			String portStatsStr = arg.substring(12);
			if (portStatsStr != null && !portStatsStr.equals("null")) {
				portStats = Integer.parseInt(portStatsStr);
			}
		} else if (arg.startsWith("--trace_port=")) {
			portTraces = Integer.parseInt(arg.substring(13));
		} else if (arg.startsWith("--client_host=")) {
			clientHost = arg.substring(14);
		} else if (arg.startsWith("--context=")) {
			contextStr = arg.substring(10);
			isDefaultContext = false;
		} else if (arg.startsWith("--father_pid=")) {
			fatherPid = arg.substring(13);
		} else if (arg.startsWith("--root_pid=")) {
			rootPid = arg.substring(11);
		} else if (arg.startsWith("--father_node=")) {
			fatherNode = arg.substring(14);
		} else if (arg.startsWith("--pid=")) {
			pid = arg.substring(6);
		} else if (arg.startsWith("--context_type")) {
			String keyValue = arg.substring(15);
			int index = -1;
			if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
				if (fatherPid == null) {
					context_param.setContextType(keyValue.substring(0, index),
							replaceEscapeChars(keyValue.substring(index + 1)));
				} else { // the subjob won't escape the especial chars
					context_param.setContextType(keyValue.substring(0, index), keyValue.substring(index + 1));
				}

			}

		} else if (arg.startsWith("--context_param")) {
			String keyValue = arg.substring(16);
			int index = -1;
			if (keyValue != null && (index = keyValue.indexOf('=')) > -1) {
				if (fatherPid == null) {
					context_param.put(keyValue.substring(0, index), replaceEscapeChars(keyValue.substring(index + 1)));
				} else { // the subjob won't escape the especial chars
					context_param.put(keyValue.substring(0, index), keyValue.substring(index + 1));
				}
			}
		} else if (arg.startsWith("--log4jLevel=")) {
			log4jLevel = arg.substring(13);
		} else if (arg.startsWith("--audit.enabled") && arg.contains("=")) {// for trunjob call
			final int equal = arg.indexOf('=');
			final String key = arg.substring("--".length(), equal);
			System.setProperty(key, arg.substring(equal + 1));
		}
	}

	private static final String NULL_VALUE_EXPRESSION_IN_COMMAND_STRING_FOR_CHILD_JOB_ONLY = "<TALEND_NULL>";

	private final String[][] escapeChars = { { "\\\\", "\\" }, { "\\n", "\n" }, { "\\'", "\'" }, { "\\r", "\r" },
			{ "\\f", "\f" }, { "\\b", "\b" }, { "\\t", "\t" } };

	private String replaceEscapeChars(String keyValue) {

		if (keyValue == null || ("").equals(keyValue.trim())) {
			return keyValue;
		}

		StringBuilder result = new StringBuilder();
		int currIndex = 0;
		while (currIndex < keyValue.length()) {
			int index = -1;
			// judege if the left string includes escape chars
			for (String[] strArray : escapeChars) {
				index = keyValue.indexOf(strArray[0], currIndex);
				if (index >= 0) {

					result.append(keyValue.substring(currIndex, index + strArray[0].length()).replace(strArray[0],
							strArray[1]));
					currIndex = index + strArray[0].length();
					break;
				}
			}
			// if the left string doesn't include escape chars, append the left into the
			// result
			if (index < 0) {
				result.append(keyValue.substring(currIndex));
				currIndex = currIndex + keyValue.length();
			}
		}

		return result.toString();
	}

	public Integer getErrorCode() {
		return errorCode;
	}

	public String getStatus() {
		return status;
	}

	ResumeUtil resumeUtil = null;
}
/************************************************************************************************
 * 3229315 characters generated by Talend Open Studio for Data Integration on
 * the 13 mai 2022 à 22:17:03 CEST
 ************************************************************************************************/